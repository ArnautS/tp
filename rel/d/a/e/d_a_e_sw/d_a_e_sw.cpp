// 
// Generated By: dol2asm
// Translation Unit: d_a_e_sw
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_sw/d_a_e_sw.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct csXyz {
	/* 802673F4 */ // False False
//  s16 False
//  s16 False
//  s16 False
csXyz(s16, s16, s16);
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
};

struct fopEn_enemy_c {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
};

struct fopAcM_gc_c {
	/* 8001DCBC */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void gndCheck(cXyz const*);
};

struct daE_SW_c {
	/* 807A7460 */ // True False
//  int False
//  f32 False
//  u8 False
//  f32 False
void bckSet(int, f32, u8, f32);
	/* 807A7504 */ // True False
void draw();
	/* 807A76E4 */ // True False
void setBeforeJumpEffect();
	/* 807A77CC */ // True False
void setJumpEffect();
	/* 807A78B4 */ // True False
void setSmokeEffect();
	/* 807A7A08 */ // True False
void setDiveEffect();
	/* 807A7AC0 */ // True False
void setHideEffect();
	/* 807A7B64 */ // True False
//  s16 False
//  s16 False
void setActionMode(s16, s16);
	/* 807A7C50 */ // True False
void search_bomb();
	/* 807A7CD0 */ // True False
void bomb_check();
	/* 807A7D48 */ // True False
void setModeBack();
	/* 807A7DAC */ // True False
void checkFall();
	/* 807A7EFC */ // True False
void checkBeforeWall();
	/* 807A7F88 */ // True False
void executeWait();
	/* 807A8290 */ // True False
void checkRunChase();
	/* 807A831C */ // True False
void executeChaseSlow();
	/* 807A8B98 */ // True False
void executeChaseFast();
	/* 807A9580 */ // True False
void executeBomb();
	/* 807A9768 */ // True False
void executeAttack();
	/* 807A9E58 */ // True False
void executeHook();
	/* 807AA050 */ // True False
void executeMoveOut();
	/* 807AA44C */ // True False
void executeChance();
	/* 807AA784 */ // True False
void executeDive();
	/* 807AA91C */ // True False
void executeDamage();
	/* 807AAB7C */ // True False
void executeDie();
	/* 807AADCC */ // True False
void executeMaster();
	/* 807AAF70 */ // True False
//  int False
void checkSuddenAttack(int);
	/* 807AB310 */ // True False
void executeSuddenAttack();
	/* 807AB5C4 */ // True False
void executeFall();
	/* 807AB6C4 */ // True False
void action();
	/* 807AB884 */ // True False
void mtx_set();
	/* 807AB930 */ // True False
void cc_set();
	/* 807ABAB0 */ // True False
void damage_check();
	/* 807ABD28 */ // True False
void checkGroundSand();
	/* 807ABE50 */ // True False
void execute();
	/* 807AC170 */ // True False
void _delete();
	/* 807AC204 */ // True False
void CreateHeap();
	/* 807AC31C */ // True False
void create();
	/* 807ACA40 */ // True False
//  void (daE_SW_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daE_SW_c False
void d_setAction(void (daE_SW_c::*)());
	/* 807ACAE4 */ // True False
void d_checkFall();
	/* 807ACCB0 */ // True False
void d_damage_check();
	/* 807ACFF8 */ // True False
void d_action();
	/* 807AD10C */ // True False
void d_bomb_check();
	/* 807AD17C */ // True False
void d_bm_chase();
	/* 807AD4A8 */ // True False
void d_wait();
	/* 807AD7C0 */ // True False
void d_chaseCheck();
	/* 807ADA08 */ // True False
void d_chase();
	/* 807ADE50 */ // True False
void d_attk();
	/* 807AE4B4 */ // True False
void d_chance();
	/* 807AE7F4 */ // True False
void d_chance2();
	/* 807AE968 */ // True False
void d_dive();
	/* 807AEB08 */ // True False
void d_damage();
	/* 807AEE44 */ // True False
void d_die();
	/* 807AF01C */ // True False
void d_hook();
	/* 807AF4B4 */ // True False
void d_fall();
	/* 807AF57C */ // True False
void d_execute();
};

struct daE_SW_HIO_c {
	/* 807A740C */ // True False
daE_SW_HIO_c();
	/* 807AF870 */ // True False
~daE_SW_HIO_c();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct dPa_control_c {
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 807AC8E4 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 807AC940 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 807AC9B0 */ // True False
~dBgS_AcchCir();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dBgS {
	/* 80074E50 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAtt0(cBgS_PolyInfo const&);
	/* 80074EF0 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetGroundCode(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dAttention_c {
	/* 8007353C */ // False False
//  s32 False
void LockonTarget(s32);
	/* 800737E4 */ // False False
void LockonTruth();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 807AC854 */ // True False
~cM3dGSph();
};

struct cM3dGPla {
	/* 807AF46C */ // True False
~cM3dGPla();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 807AC89C */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 807AF828 */ // True False
~cCcD_GStts();
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D28 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void SetPos(cXyz const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
	/* 80074744 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
void GetTriPla(cBgS_PolyInfo const&, cM3dGPla*) const;
};

struct _GXTexObj {
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct J3DModel {
};

struct J3DFrameCtrl {
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
};

// 
// Forward References:
// 

// True False
//  daE_SW_c* False
// 	 daE_SW_c False
static void daE_SW_Draw(daE_SW_c*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_b_sub(void*, void*);
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
static void s_child_sub(void*, void*);
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
static void daE_SW_Execute(daE_SW_c*);
// True False
//  bool False
//  daE_SW_c* False
// 	 daE_SW_c False
static bool daE_SW_IsDelete(daE_SW_c*);
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
static void daE_SW_Delete(daE_SW_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
static void daE_SW_Create(daE_SW_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);

// True False
extern "C" void __ct__12daE_SW_HIO_cFv();
// True False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" void bckSet__8daE_SW_cFifUcf();
// True False
extern "C" void draw__8daE_SW_cFv();
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
extern "C" static void daE_SW_Draw__FP8daE_SW_c();
// True False
extern "C" void setBeforeJumpEffect__8daE_SW_cFv();
// True False
extern "C" void setJumpEffect__8daE_SW_cFv();
// True False
extern "C" void setSmokeEffect__8daE_SW_cFv();
// True False
extern "C" void setDiveEffect__8daE_SW_cFv();
// True False
extern "C" void setHideEffect__8daE_SW_cFv();
// True False
//  s16 False
//  s16 False
extern "C" void setActionMode__8daE_SW_cFss();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_b_sub__FPvPv();
// True False
extern "C" void search_bomb__8daE_SW_cFv();
// True False
extern "C" void bomb_check__8daE_SW_cFv();
// True False
extern "C" void setModeBack__8daE_SW_cFv();
// True False
extern "C" void checkFall__8daE_SW_cFv();
// True False
extern "C" void checkBeforeWall__8daE_SW_cFv();
// True False
extern "C" void executeWait__8daE_SW_cFv();
// True False
extern "C" void checkRunChase__8daE_SW_cFv();
// True False
extern "C" void executeChaseSlow__8daE_SW_cFv();
// True False
extern "C" void executeChaseFast__8daE_SW_cFv();
// True False
extern "C" void executeBomb__8daE_SW_cFv();
// True False
extern "C" void executeAttack__8daE_SW_cFv();
// True False
extern "C" void executeHook__8daE_SW_cFv();
// True False
extern "C" void executeMoveOut__8daE_SW_cFv();
// True False
extern "C" void executeChance__8daE_SW_cFv();
// True False
extern "C" void executeDive__8daE_SW_cFv();
// True False
extern "C" void executeDamage__8daE_SW_cFv();
// True False
extern "C" void executeDie__8daE_SW_cFv();
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
extern "C" static void s_child_sub__FPvPv();
// True False
extern "C" void executeMaster__8daE_SW_cFv();
// True False
//  int False
extern "C" void checkSuddenAttack__8daE_SW_cFi();
// True False
extern "C" void executeSuddenAttack__8daE_SW_cFv();
// True False
extern "C" void executeFall__8daE_SW_cFv();
// True False
extern "C" void action__8daE_SW_cFv();
// True False
extern "C" void mtx_set__8daE_SW_cFv();
// True False
extern "C" void cc_set__8daE_SW_cFv();
// True False
extern "C" void damage_check__8daE_SW_cFv();
// True False
extern "C" void checkGroundSand__8daE_SW_cFv();
// True False
extern "C" void execute__8daE_SW_cFv();
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
extern "C" static void daE_SW_Execute__FP8daE_SW_c();
// True False
//  bool False
//  daE_SW_c* False
// 	 daE_SW_c False
extern "C" static bool daE_SW_IsDelete__FP8daE_SW_c();
// True False
extern "C" void _delete__8daE_SW_cFv();
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
extern "C" static void daE_SW_Delete__FP8daE_SW_c();
// True False
extern "C" void CreateHeap__8daE_SW_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void create__8daE_SW_cFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
extern "C" static void daE_SW_Create__FP8daE_SW_c();
// True False
//  void (daE_SW_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daE_SW_c False
extern "C" void d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v();
// True False
extern "C" void d_checkFall__8daE_SW_cFv();
// True False
extern "C" void d_damage_check__8daE_SW_cFv();
// True False
extern "C" void d_action__8daE_SW_cFv();
// True False
extern "C" void d_bomb_check__8daE_SW_cFv();
// True False
extern "C" void d_bm_chase__8daE_SW_cFv();
// True False
extern "C" void d_wait__8daE_SW_cFv();
// True False
extern "C" void d_chaseCheck__8daE_SW_cFv();
// True False
extern "C" void d_chase__8daE_SW_cFv();
// True False
extern "C" void d_attk__8daE_SW_cFv();
// True False
extern "C" void d_chance__8daE_SW_cFv();
// True False
extern "C" void d_chance2__8daE_SW_cFv();
// True False
extern "C" void d_dive__8daE_SW_cFv();
// True False
extern "C" void d_damage__8daE_SW_cFv();
// True False
extern "C" void d_die__8daE_SW_cFv();
// True False
extern "C" void d_hook__8daE_SW_cFv();
// True False
extern "C" void __dt__8cM3dGPlaFv();
// True False
extern "C" void d_fall__8daE_SW_cFv();
// True False
extern "C" void d_execute__8daE_SW_cFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_SW_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_sw_cpp();
// True False
extern "C" static void func_807AF8F4();
// True False
extern "C" static void func_807AF8FC();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
extern "C" extern u8 const lit_3912[8];
extern "C" extern u8 const lit_3913[8];
extern "C" extern u8 const lit_3914[8];
extern "C" extern u32 const lit_3915;
extern "C" extern u32 const lit_3930;
extern "C" extern u32 const lit_3931;
extern "C" extern u32 const lit_3932;
extern "C" extern u32 const lit_3933;
extern "C" extern u32 const lit_3986;
extern "C" extern u32 const lit_4187;
extern "C" extern u32 const lit_4271;
extern "C" extern u32 const lit_4272;
extern "C" extern u32 const lit_4273;
extern "C" extern u32 const lit_4274;
extern "C" extern u32 const lit_4275;
extern "C" extern u32 const lit_4276;
extern "C" extern u32 const lit_4497;
extern "C" extern u32 const lit_4498;
extern "C" extern u32 const lit_4499;
extern "C" extern u32 const lit_4500;
extern "C" extern u32 const lit_4501;
extern "C" extern u32 const lit_4502;
extern "C" extern u32 const lit_4503;
extern "C" extern u32 const lit_4504;
extern "C" extern u32 const lit_4505;
extern "C" extern u32 const lit_4506;
extern "C" extern u32 const lit_4872;
extern "C" extern u32 const lit_4873;
extern "C" extern u8 const lit_4874[8];
extern "C" extern u32 const lit_4875;
extern "C" extern u32 const lit_4876;
extern "C" extern u32 const lit_4877;
extern "C" extern u32 const lit_4878;
extern "C" extern u32 const lit_4879;
extern "C" extern u32 const lit_4913;
extern "C" extern u32 const lit_5057;
extern "C" extern u32 const lit_5058;
extern "C" extern u32 const lit_5059;
extern "C" extern u32 const lit_5060;
extern "C" extern u32 const lit_5061;
extern "C" extern u32 const lit_5062;
extern "C" extern u32 const lit_5063;
extern "C" extern u32 const lit_5064;
extern "C" extern u32 const lit_5065;
extern "C" extern u32 const lit_5104;
extern "C" extern u32 const lit_5105;
extern "C" extern u32 const lit_5206;
extern "C" extern u8 const lit_5208[8];
extern "C" extern u32 const lit_5264;
extern "C" extern u32 const lit_5265;
extern "C" extern u32 const lit_5266;
extern "C" extern u32 const lit_5267;
extern "C" extern u32 const lit_5268;
extern "C" extern u32 const lit_5269;
extern "C" extern u32 const lit_5300;
extern "C" extern u32 const lit_5327;
extern "C" extern u32 const lit_5328;
extern "C" extern u32 const lit_5329;
extern "C" extern u32 const lit_5365;
extern "C" extern u32 const lit_5428;
extern "C" extern u32 const lit_5895;
extern "C" extern u32 const lit_5896;
extern "C" extern u32 const lit_6115;
extern "C" extern u32 const lit_6116;
extern "C" extern u8 const lit_6118[8];
extern "C" extern u32 const lit_6540;
extern "C" extern u32 const lit_6541;
extern "C" extern u32 const lit_6852;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_807AFE9C[8];
extern "C" extern u8 data_807AFEA4[8];
extern "C" extern u8 data_807AFEAC[6 + 2 /* padding */];
extern "C" extern void* g_profile_E_SW[12];
extern "C" extern void* lit_6217[3];
extern "C" extern void* lit_6219[3];
extern "C" extern void* lit_6221[3];
extern "C" extern void* lit_6237[3];
extern "C" extern void* lit_6260[3];
extern "C" extern void* lit_6262[3];
extern "C" extern void* lit_6271[3];
extern "C" extern void* lit_6297[3];
extern "C" extern void* lit_6303[3];
extern "C" extern void* lit_6307[3];
extern "C" extern void* lit_6313[3];
extern "C" extern void* lit_6317[3];
extern "C" extern void* lit_6319[3];
extern "C" extern void* lit_6613[3];
extern "C" extern void* lit_6617[3];
extern "C" extern void* lit_6621[3];
extern "C" extern void* lit_6726[3];
extern "C" extern void* lit_6739[3];
extern "C" extern void* lit_6753[3];
extern "C" extern void* lit_6758[3];
extern "C" extern void* __vt__8cM3dGPla[3];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12daE_SW_HIO_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_1009[1 + 3 /* padding */];
extern "C" extern u8 data_807B0234[4];
extern "C" extern u8 data_807B0238[4];
extern "C" extern u8 data_807B023C[4];
extern "C" extern u8 data_807B0240[4];
extern "C" extern u8 data_807B0244[4];
extern "C" extern u8 data_807B0248[4];
extern "C" extern u8 data_807B024C[4];
extern "C" extern u8 data_807B0250[4];
extern "C" extern u8 data_807B0254[4];
extern "C" extern u8 data_807B0258[4];
extern "C" extern u8 data_807B025C[4];
extern "C" extern u8 data_807B0260[4];
extern "C" extern u8 data_807B0264[4];
extern "C" extern u8 data_807B0268[4];
extern "C" extern u8 data_807B026C[4];
extern "C" extern u8 data_807B0270[4];
extern "C" extern u8 data_807B0274[4];
extern "C" extern u8 data_807B0278[4];
extern "C" extern u8 data_807B027C[4];
extern "C" extern u8 data_807B0280[4];
extern "C" extern u8 data_807B0284[4];
extern "C" extern u8 data_807B0288[4];
extern "C" extern u8 data_807B028C[4];
extern "C" extern u8 data_807B0290[4];
extern "C" extern u8 data_807B0294[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  void* False
// 	 void False
void fopAc_IsActor(void*);
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByID(unsigned int, fopAc_ac_c**);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*));
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void fpcEx_Search(void* (*)(void*, void*), void*);
// False False
//  unsigned int False
void fpcM_IsCreating(unsigned int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
void cM_rnd();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
void cLib_chaseAngleS(s16*, s16, s16);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void cLib_offsetPos(cXyz*, cXyz const*, s16, cXyz const*);
// False False
//  s16 False
//  s16 False
void cLib_distanceAngleS(s16, s16);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  void* False
// 	 void False
extern "C" void fopAc_IsActor__FPv();
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByID__FUiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void gndCheck__11fopAcM_gc_cFPC4cXyz();
// False False
//  void* (*)(void*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void fpcEx_Search__FPFPvPv_PvPv();
// False False
//  unsigned int False
extern "C" void fpcM_IsCreating__FUi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  s32 False
extern "C" void LockonTarget__12dAttention_cFl();
// False False
extern "C" void LockonTruth__12dAttention_cFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
//  cM3dGPla* False
// 	 cM3dGPla False
extern "C" void GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetGroundCode__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  s16 False
//  s16 False
//  s16 False
extern "C" void __ct__5csXyzFsss();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void cM_rnd__Fv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetPos__11cBgS_GndChkFPC4cXyz();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
extern "C" void cLib_chaseAngleS__FPsss();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz();
// False False
//  s16 False
//  s16 False
extern "C" void cLib_distanceAngleS__Fss();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __ptmf_test();
// False False
extern "C" void __ptmf_cmpr();
// False False
extern "C" void __ptmf_scall();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mGndCheck__11fopAcM_gc_c[84];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mGroundY__11fopAcM_gc_c;
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 807AFD2C-807AFD30 0004+00 s=38 e=0 z=0  None .rodata    @3909                                                        */
SECTION_RODATA static u32 const lit_3909 = 0x42C80000;

/* 807AFE7C-807AFE88 000C+00 s=5 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807AFE88-807AFE9C 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 807AFE9C-807AFEA4 0008+00 s=0 e=0 z=0  None .data      e_prim$3788                                                  */
SECTION_DATA u8 data_807AFE9C[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 807AFEA4-807AFEAC 0008+00 s=0 e=0 z=0  None .data      e_env$3789                                                   */
SECTION_DATA u8 data_807AFEA4[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 807AFEAC-807AFEB4 0006+02 s=0 e=0 z=0  None .data      eff_id$3797                                                  */
SECTION_DATA u8 data_807AFEAC[6 + 2 /* padding */] = {
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* padding */
	0x00, 0x00,
};

/* 807AFEB4-807AFEF4 0040+00 s=1 e=0 z=0  None .data      cc_sph_src__22@unnamed@d_a_e_sw_cpp@                         */
SECTION_DATA static u8 data_807AFEB4[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x75, 0x0C, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 807AFEF4-807AFEFC 0008+00 s=1 e=0 z=0  None .data      l_SW_DIVE_EFFECT_ID$4064                                     */
SECTION_DATA static u8 l_SW_DIVE_EFFECT_ID[8] = {
	0x83, 0x6F, 0x83, 0x70, 0x83, 0x71, 0x83, 0x72,
};

/* 807AFEFC-807AFF04 0006+02 s=1 e=0 z=0  None .data      l_SW_HIDE_EFFECT_ID$4083                                     */
SECTION_DATA static u8 l_SW_HIDE_EFFECT_ID[6 + 2 /* padding */] = {
	0x83, 0x7C, 0x83, 0x7D, 0x83, 0x7E,
	/* padding */
	0x00, 0x00,
};

/* 807AFF04-807AFF30 002C+00 s=1 e=0 z=0  None .data      @5270                                                        */
SECTION_DATA static void* lit_5270[11] = {
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x54),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0xB4),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0xF4),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x318),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x318),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x2B8),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x304),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x318),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x318),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x318),
	(void*)(((char*)executeChance__8daE_SW_cFv)+0x4C),
};

/* 807AFF30-807AFF68 0038+00 s=1 e=0 z=0  None .data      @5661                                                        */
SECTION_DATA static void* lit_5661[14] = {
	(void*)(((char*)action__8daE_SW_cFv)+0xC0),
	(void*)(((char*)action__8daE_SW_cFv)+0xCC),
	(void*)(((char*)action__8daE_SW_cFv)+0xDC),
	(void*)(((char*)action__8daE_SW_cFv)+0xEC),
	(void*)(((char*)action__8daE_SW_cFv)+0xFC),
	(void*)(((char*)action__8daE_SW_cFv)+0x108),
	(void*)(((char*)action__8daE_SW_cFv)+0x114),
	(void*)(((char*)action__8daE_SW_cFv)+0x120),
	(void*)(((char*)action__8daE_SW_cFv)+0x130),
	(void*)(((char*)action__8daE_SW_cFv)+0x13C),
	(void*)(((char*)action__8daE_SW_cFv)+0x148),
	(void*)(((char*)action__8daE_SW_cFv)+0x154),
	(void*)(((char*)action__8daE_SW_cFv)+0x160),
	(void*)(((char*)action__8daE_SW_cFv)+0x16C),
};

/* 807AFF68-807AFF74 000C+00 s=1 e=0 z=0  None .data      @5983                                                        */
SECTION_DATA static void* lit_5983[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_wait__8daE_SW_cFv,
};

/* 807AFF74-807AFF94 0020+00 s=1 e=0 z=0  None .data      l_daE_SW_Method                                              */
SECTION_DATA static void* l_daE_SW_Method[8] = {
	(void*)daE_SW_Create__FP8daE_SW_c,
	(void*)daE_SW_Delete__FP8daE_SW_c,
	(void*)daE_SW_Execute__FP8daE_SW_c,
	(void*)daE_SW_IsDelete__FP8daE_SW_c,
	(void*)daE_SW_Draw__FP8daE_SW_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 807AFF94-807AFFC4 0030+00 s=0 e=0 z=1  None .data      g_profile_E_SW                                               */
SECTION_DATA void* g_profile_E_SW[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01F10000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000B18,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00BF0000,
	(void*)&l_daE_SW_Method,
	(void*)0x000C0100,
	(void*)0x020E0000,
};

/* 807AFFC4-807AFFD0 000C+00 s=0 e=0 z=0  None .data      @6217                                                        */
SECTION_DATA void* lit_6217[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_hook__8daE_SW_cFv,
};

/* 807AFFD0-807AFFDC 000C+00 s=0 e=0 z=0  None .data      @6219                                                        */
SECTION_DATA void* lit_6219[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_fall__8daE_SW_cFv,
};

/* 807AFFDC-807AFFE8 000C+00 s=0 e=0 z=0  None .data      @6221                                                        */
SECTION_DATA void* lit_6221[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_attk__8daE_SW_cFv,
};

/* 807AFFE8-807AFFF4 000C+00 s=0 e=0 z=0  None .data      @6237                                                        */
SECTION_DATA void* lit_6237[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_fall__8daE_SW_cFv,
};

/* 807AFFF4-807B0000 000C+00 s=0 e=0 z=0  None .data      @6260                                                        */
SECTION_DATA void* lit_6260[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_damage__8daE_SW_cFv,
};

/* 807B0000-807B000C 000C+00 s=0 e=0 z=0  None .data      @6262                                                        */
SECTION_DATA void* lit_6262[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_die__8daE_SW_cFv,
};

/* 807B000C-807B0018 000C+00 s=0 e=0 z=0  None .data      @6271                                                        */
SECTION_DATA void* lit_6271[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chance__8daE_SW_cFv,
};

/* 807B0018-807B0024 000C+00 s=0 e=0 z=0  None .data      @6297                                                        */
SECTION_DATA void* lit_6297[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_damage__8daE_SW_cFv,
};

/* 807B0024-807B0030 000C+00 s=0 e=0 z=0  None .data      @6303                                                        */
SECTION_DATA void* lit_6303[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_damage__8daE_SW_cFv,
};

/* 807B0030-807B003C 000C+00 s=0 e=0 z=0  None .data      @6307                                                        */
SECTION_DATA void* lit_6307[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_hook__8daE_SW_cFv,
};

/* 807B003C-807B0048 000C+00 s=0 e=0 z=0  None .data      @6313                                                        */
SECTION_DATA void* lit_6313[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chance2__8daE_SW_cFv,
};

/* 807B0048-807B0054 000C+00 s=0 e=0 z=0  None .data      @6317                                                        */
SECTION_DATA void* lit_6317[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chance2__8daE_SW_cFv,
};

/* 807B0054-807B0060 000C+00 s=0 e=0 z=0  None .data      @6319                                                        */
SECTION_DATA void* lit_6319[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_damage__8daE_SW_cFv,
};

/* 807B0060-807B006C 000C+00 s=1 e=0 z=0  None .data      @6411                                                        */
SECTION_DATA static void* lit_6411[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_wait__8daE_SW_cFv,
};

/* 807B006C-807B0078 000C+00 s=1 e=0 z=0  None .data      @6426                                                        */
SECTION_DATA static void* lit_6426[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_attk__8daE_SW_cFv,
};

/* 807B0078-807B0084 000C+00 s=1 e=0 z=0  None .data      @6521                                                        */
SECTION_DATA static void* lit_6521[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_bm_chase__8daE_SW_cFv,
};

/* 807B0084-807B0090 000C+00 s=1 e=0 z=0  None .data      @6527                                                        */
SECTION_DATA static void* lit_6527[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chase__8daE_SW_cFv,
};

/* 807B0090-807B009C 000C+00 s=0 e=0 z=0  None .data      @6613                                                        */
SECTION_DATA void* lit_6613[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_wait__8daE_SW_cFv,
};

/* 807B009C-807B00A8 000C+00 s=0 e=0 z=0  None .data      @6617                                                        */
SECTION_DATA void* lit_6617[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_wait__8daE_SW_cFv,
};

/* 807B00A8-807B00B4 000C+00 s=0 e=0 z=0  None .data      @6621                                                        */
SECTION_DATA void* lit_6621[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_attk__8daE_SW_cFv,
};

/* 807B00B4-807B00C0 000C+00 s=0 e=0 z=0  None .data      @6726                                                        */
SECTION_DATA void* lit_6726[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_bm_chase__8daE_SW_cFv,
};

/* 807B00C0-807B00CC 000C+00 s=0 e=0 z=0  None .data      @6739                                                        */
SECTION_DATA void* lit_6739[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chance__8daE_SW_cFv,
};

/* 807B00CC-807B00D8 000C+00 s=0 e=0 z=0  None .data      @6753                                                        */
SECTION_DATA void* lit_6753[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_wait__8daE_SW_cFv,
};

/* 807B00D8-807B00E4 000C+00 s=0 e=0 z=0  None .data      @6758                                                        */
SECTION_DATA void* lit_6758[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_wait__8daE_SW_cFv,
};

/* 807B00E4-807B00F0 000C+00 s=1 e=0 z=0  None .data      @6858                                                        */
SECTION_DATA static void* lit_6858[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_hook__8daE_SW_cFv,
};

/* 807B00F0-807B00FC 000C+00 s=1 e=0 z=0  None .data      @6887                                                        */
SECTION_DATA static void* lit_6887[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_dive__8daE_SW_cFv,
};

/* 807B00FC-807B0108 000C+00 s=1 e=0 z=0  None .data      @6929                                                        */
SECTION_DATA static void* lit_6929[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chance__8daE_SW_cFv,
};

/* 807B0108-807B0114 000C+00 s=1 e=0 z=0  None .data      @6959                                                        */
SECTION_DATA static void* lit_6959[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_wait__8daE_SW_cFv,
};

/* 807B0114-807B0120 000C+00 s=1 e=0 z=0  None .data      @6993                                                        */
SECTION_DATA static void* lit_6993[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_die__8daE_SW_cFv,
};

/* 807B0120-807B012C 000C+00 s=1 e=0 z=0  None .data      @6996                                                        */
SECTION_DATA static void* lit_6996[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chance__8daE_SW_cFv,
};

/* 807B012C-807B0138 000C+00 s=1 e=0 z=0  None .data      @7081                                                        */
SECTION_DATA static void* lit_7081[3] = {
	(void*)NULL,
	(void*)0xFFFFFFFF,
	(void*)d_chance__8daE_SW_cFv,
};

/* 807B0138-807B0144 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGPla                                              */
SECTION_DATA void* __vt__8cM3dGPla[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGPlaFv,
};

/* 807B0144-807B0150 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 807B0150-807B015C 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 807B015C-807B0168 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 807B0168-807B0174 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 807B0174-807B0180 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 807B0180-807B01A4 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807AF8FC,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807AF8F4,
};

/* 807B01A4-807B01B0 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_SW_HIO_c                                         */
SECTION_DATA void* __vt__12daE_SW_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_SW_HIO_cFv,
};

/* 807A740C-807A7460 0054+00 s=1 e=0 z=0  None .text      __ct__12daE_SW_HIO_cFv                                       */
//	807A740C: 807AFD2C (lit_3909)
//	807A7410: 807AFD2C (lit_3909)
//	807A7414: 807B01A4 (__vt__12daE_SW_HIO_c)
//	807A7418: 807B01A4 (__vt__12daE_SW_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_SW_HIO_c::daE_SW_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__ct__12daE_SW_HIO_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 807AFD30-807AFD34 0004+00 s=1 e=0 z=0  None .rodata    @3910                                                        */
SECTION_RODATA static u8 const lit_3910[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 807AFD34-807AFD3C 0004+04 s=7 e=0 z=0  None .rodata    @3911                                                        */
SECTION_RODATA static u32 const lit_3911[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 807AFD3C-807AFD44 0008+00 s=0 e=0 z=0  None .rodata    @3912                                                        */
SECTION_RODATA u8 const lit_3912[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807AFD44-807AFD4C 0008+00 s=0 e=0 z=0  None .rodata    @3913                                                        */
SECTION_RODATA u8 const lit_3913[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807AFD4C-807AFD54 0008+00 s=0 e=0 z=0  None .rodata    @3914                                                        */
SECTION_RODATA u8 const lit_3914[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807AFD54-807AFD58 0004+00 s=0 e=0 z=0  None .rodata    @3915                                                        */
SECTION_RODATA u32 const lit_3915 = 0x3C23D70A;

/* 807AFD58-807AFD5C 0004+00 s=0 e=0 z=0  None .rodata    @3930                                                        */
SECTION_RODATA u32 const lit_3930 = 0x44BB8000;

/* 807AFD5C-807AFD60 0004+00 s=0 e=0 z=0  None .rodata    @3931                                                        */
SECTION_RODATA u32 const lit_3931 = 0x44480000;

/* 807AFD60-807AFD64 0004+00 s=0 e=0 z=0  None .rodata    @3932                                                        */
SECTION_RODATA u32 const lit_3932 = 0x43C80000;

/* 807AFD64-807AFD68 0004+00 s=0 e=0 z=0  None .rodata    @3933                                                        */
SECTION_RODATA u32 const lit_3933 = 0x447A0000;

/* 807AFD68-807AFD6C 0004+00 s=1 e=0 z=0  None .rodata    @3947                                                        */
SECTION_RODATA static u32 const lit_3947 = 0xBF800000;

/* 807AFD6C-807AFD70 0004+00 s=0 e=0 z=0  None .rodata    @3986                                                        */
SECTION_RODATA u32 const lit_3986 = 0x442F0000;

/* 807AFD70-807AFD74 0004+00 s=0 e=0 z=0  None .rodata    @4187                                                        */
SECTION_RODATA u32 const lit_4187 = 0xCE6E6B28;

/* 807AFD74-807AFD78 0004+00 s=0 e=0 z=0  None .rodata    @4271                                                        */
SECTION_RODATA u32 const lit_4271 = 0x40000000;

/* 807AFD78-807AFD7C 0004+00 s=0 e=0 z=0  None .rodata    @4272                                                        */
SECTION_RODATA u32 const lit_4272 = 0x41200000;

/* 807AFD7C-807AFD80 0004+00 s=0 e=0 z=0  None .rodata    @4273                                                        */
SECTION_RODATA u32 const lit_4273 = 0x44160000;

/* 807AFD80-807AFD84 0004+00 s=0 e=0 z=0  None .rodata    @4274                                                        */
SECTION_RODATA u32 const lit_4274 = 0x476A6000;

/* 807AFD84-807AFD88 0004+00 s=0 e=0 z=0  None .rodata    @4275                                                        */
SECTION_RODATA u32 const lit_4275 = 0x3E4CCCCD;

/* 807AFD88-807AFD8C 0004+00 s=0 e=0 z=0  None .rodata    @4276                                                        */
SECTION_RODATA u32 const lit_4276 = 0x41A00000;

/* 807AFD8C-807AFD90 0004+00 s=1 e=0 z=0  None .rodata    @4293                                                        */
SECTION_RODATA static u32 const lit_4293 = 0x41980000;

/* 807AFD90-807AFD94 0004+00 s=1 e=0 z=0  None .rodata    @4294                                                        */
SECTION_RODATA static u32 const lit_4294 = 0x41F00000;

/* 807AFD94-807AFD98 0004+00 s=0 e=0 z=0  None .rodata    @4497                                                        */
SECTION_RODATA u32 const lit_4497 = 0x40A00000;

/* 807AFD98-807AFD9C 0004+00 s=0 e=0 z=0  None .rodata    @4498                                                        */
SECTION_RODATA u32 const lit_4498 = 0x41700000;

/* 807AFD9C-807AFDA0 0004+00 s=0 e=0 z=0  None .rodata    @4499                                                        */
SECTION_RODATA u32 const lit_4499 = 0x428C0000;

/* 807AFDA0-807AFDA4 0004+00 s=0 e=0 z=0  None .rodata    @4500                                                        */
SECTION_RODATA u32 const lit_4500 = 0x3F000000;

/* 807AFDA4-807AFDA8 0004+00 s=0 e=0 z=0  None .rodata    @4501                                                        */
SECTION_RODATA u32 const lit_4501 = 0x42480000;

/* 807AFDA8-807AFDAC 0004+00 s=0 e=0 z=0  None .rodata    @4502                                                        */
SECTION_RODATA u32 const lit_4502 = 0x43160000;

/* 807AFDAC-807AFDB0 0004+00 s=0 e=0 z=0  None .rodata    @4503                                                        */
SECTION_RODATA u32 const lit_4503 = 0x43480000;

/* 807AFDB0-807AFDB4 0004+00 s=0 e=0 z=0  None .rodata    @4504                                                        */
SECTION_RODATA u32 const lit_4504 = 0x3E99999A;

/* 807AFDB4-807AFDB8 0004+00 s=0 e=0 z=0  None .rodata    @4505                                                        */
SECTION_RODATA u32 const lit_4505 = 0x43960000;

/* 807AFDB8-807AFDBC 0004+00 s=0 e=0 z=0  None .rodata    @4506                                                        */
SECTION_RODATA u32 const lit_4506 = 0x43020000;

/* 807AFDBC-807AFDC0 0004+00 s=0 e=0 z=0  None .rodata    @4872                                                        */
SECTION_RODATA u32 const lit_4872 = 0x46400000;

/* 807AFDC0-807AFDC4 0004+00 s=0 e=0 z=0  None .rodata    @4873                                                        */
SECTION_RODATA u32 const lit_4873 = 0xC3480000;

/* 807AFDC4-807AFDCC 0008+00 s=0 e=0 z=0  None .rodata    @4874                                                        */
SECTION_RODATA u8 const lit_4874[8] = {
	0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807AFDCC-807AFDD0 0004+00 s=0 e=0 z=0  None .rodata    @4875                                                        */
SECTION_RODATA u32 const lit_4875 = 0x43AF0000;

/* 807AFDD0-807AFDD4 0004+00 s=0 e=0 z=0  None .rodata    @4876                                                        */
SECTION_RODATA u32 const lit_4876 = 0xC0400000;

/* 807AFDD4-807AFDD8 0004+00 s=0 e=0 z=0  None .rodata    @4877                                                        */
SECTION_RODATA u32 const lit_4877 = 0x437A0000;

/* 807AFDD8-807AFDDC 0004+00 s=0 e=0 z=0  None .rodata    @4878                                                        */
SECTION_RODATA u32 const lit_4878 = 0x43FA0000;

/* 807AFDDC-807AFDE0 0004+00 s=0 e=0 z=0  None .rodata    @4879                                                        */
SECTION_RODATA u32 const lit_4879 = 0x40400000;

/* 807AFDE0-807AFDE4 0004+00 s=0 e=0 z=0  None .rodata    @4913                                                        */
SECTION_RODATA u32 const lit_4913 = 0x3DCCCCCD;

/* 807AFDE4-807AFDE8 0004+00 s=0 e=0 z=0  None .rodata    @5057                                                        */
SECTION_RODATA u32 const lit_5057 = 0xC0800000;

/* 807AFDE8-807AFDEC 0004+00 s=0 e=0 z=0  None .rodata    @5058                                                        */
SECTION_RODATA u32 const lit_5058 = 0x42700000;

/* 807AFDEC-807AFDF0 0004+00 s=0 e=0 z=0  None .rodata    @5059                                                        */
SECTION_RODATA u32 const lit_5059 = 0x41C80000;

/* 807AFDF0-807AFDF4 0004+00 s=0 e=0 z=0  None .rodata    @5060                                                        */
SECTION_RODATA u32 const lit_5060 = 0x41C00000;

/* 807AFDF4-807AFDF8 0004+00 s=0 e=0 z=0  None .rodata    @5061                                                        */
SECTION_RODATA u32 const lit_5061 = 0x41B80000;

/* 807AFDF8-807AFDFC 0004+00 s=0 e=0 z=0  None .rodata    @5062                                                        */
SECTION_RODATA u32 const lit_5062 = 0x42F00000;

/* 807AFDFC-807AFE00 0004+00 s=0 e=0 z=0  None .rodata    @5063                                                        */
SECTION_RODATA u32 const lit_5063 = 0xC0A00000;

/* 807AFE00-807AFE04 0004+00 s=0 e=0 z=0  None .rodata    @5064                                                        */
SECTION_RODATA u32 const lit_5064 = 0xC2700000;

/* 807AFE04-807AFE08 0004+00 s=0 e=0 z=0  None .rodata    @5065                                                        */
SECTION_RODATA u32 const lit_5065 = 0xC2F00000;

/* 807AFE08-807AFE0C 0004+00 s=0 e=0 z=0  None .rodata    @5104                                                        */
SECTION_RODATA u32 const lit_5104 = 0x42200000;

/* 807AFE0C-807AFE10 0004+00 s=0 e=0 z=0  None .rodata    @5105                                                        */
SECTION_RODATA u32 const lit_5105 = 0xC2200000;

/* 807AFE10-807AFE14 0004+00 s=0 e=0 z=0  None .rodata    @5206                                                        */
SECTION_RODATA u32 const lit_5206 = 0x45800000;

/* 807AFE14-807AFE1C 0008+00 s=0 e=0 z=0  None .rodata    @5208                                                        */
SECTION_RODATA u8 const lit_5208[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 807AFE1C-807AFE20 0004+00 s=0 e=0 z=0  None .rodata    @5264                                                        */
SECTION_RODATA u32 const lit_5264 = 0x42100000;

/* 807AFE20-807AFE24 0004+00 s=0 e=0 z=0  None .rodata    @5265                                                        */
SECTION_RODATA u32 const lit_5265 = 0x40E00000;

/* 807AFE24-807AFE28 0004+00 s=0 e=0 z=0  None .rodata    @5266                                                        */
SECTION_RODATA u32 const lit_5266 = 0x46FA0000;

/* 807AFE28-807AFE2C 0004+00 s=0 e=0 z=0  None .rodata    @5267                                                        */
SECTION_RODATA u32 const lit_5267 = 0x45FA0000;

/* 807AFE2C-807AFE30 0004+00 s=0 e=0 z=0  None .rodata    @5268                                                        */
SECTION_RODATA u32 const lit_5268 = 0x41400000;

/* 807AFE30-807AFE34 0004+00 s=0 e=0 z=0  None .rodata    @5269                                                        */
SECTION_RODATA u32 const lit_5269 = 0x420C0000;

/* 807AFE34-807AFE38 0004+00 s=0 e=0 z=0  None .rodata    @5300                                                        */
SECTION_RODATA u32 const lit_5300 = 0x41600000;

/* 807AFE38-807AFE3C 0004+00 s=0 e=0 z=0  None .rodata    @5327                                                        */
SECTION_RODATA u32 const lit_5327 = 0x42400000;

/* 807AFE3C-807AFE40 0004+00 s=0 e=0 z=0  None .rodata    @5328                                                        */
SECTION_RODATA u32 const lit_5328 = 0x41E00000;

/* 807AFE40-807AFE44 0004+00 s=0 e=0 z=0  None .rodata    @5329                                                        */
SECTION_RODATA u32 const lit_5329 = 0x41000000;

/* 807AFE44-807AFE48 0004+00 s=0 e=0 z=0  None .rodata    @5365                                                        */
SECTION_RODATA u32 const lit_5365 = 0xC2480000;

/* 807AFE48-807AFE4C 0004+00 s=0 e=0 z=0  None .rodata    @5428                                                        */
SECTION_RODATA u32 const lit_5428 = 0x461C4000;

/* 807AFE4C-807AFE50 0004+00 s=0 e=0 z=0  None .rodata    @5895                                                        */
SECTION_RODATA u32 const lit_5895 = 0x459C4000;

/* 807AFE50-807AFE54 0004+00 s=0 e=0 z=0  None .rodata    @5896                                                        */
SECTION_RODATA u32 const lit_5896 = 0x3FC00000;

/* 807AFE54-807AFE58 0004+00 s=0 e=0 z=0  None .rodata    @6115                                                        */
SECTION_RODATA u32 const lit_6115 = 0x4E6E6B28;

/* 807AFE58-807AFE5C 0004+00 s=0 e=0 z=0  None .rodata    @6116                                                        */
SECTION_RODATA u32 const lit_6116 = 0xC1200000;

/* 807AFE5C-807AFE64 0008+00 s=0 e=0 z=0  None .rodata    @6118                                                        */
SECTION_RODATA u8 const lit_6118[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807AFE64-807AFE68 0004+00 s=0 e=0 z=0  None .rodata    @6540                                                        */
SECTION_RODATA u32 const lit_6540 = 0x47000000;

/* 807AFE68-807AFE6C 0004+00 s=0 e=0 z=0  None .rodata    @6541                                                        */
SECTION_RODATA u32 const lit_6541 = 0x46EA6000;

/* 807AFE6C-807AFE70 0004+00 s=0 e=0 z=0  None .rodata    @6852                                                        */
SECTION_RODATA u32 const lit_6852 = 0x42820000;

/* 807AFE70-807AFE7A 000A+00 s=4 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_807AFE70 = "E_SW";
SECTION_DEAD char const* const stringBase_807AFE75 = "E_sw";
#pragma pop

/* 807A7460-807A7504 00A4+00 s=22 e=0 z=0  None .text      bckSet__8daE_SW_cFifUcf                                      */
//	807A7494: 807AFE70 (stringBase0)
//	807A7498: 807AFE70 (stringBase0)
//	807A749C: 804061C0 (g_dComIfG_gameInfo)
//	807A74A0: 804061C0 (g_dComIfG_gameInfo)
//	807A74B0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807A74C8: 807AFD30 (lit_3910)
//	807A74CC: 807AFD30 (lit_3910)
//	807A74D0: 807AFD68 (lit_3947)
//	807A74D4: 807AFD68 (lit_3947)
//	807A74D8: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm void daE_SW_c::bckSet(int param_0, f32 param_1, u8 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/bckSet__8daE_SW_cFifUcf.s"
}
#pragma pop


/* 807A7504-807A76C4 01C0+00 s=1 e=0 z=0  None .text      draw__8daE_SW_cFv                                            */
//	807A7514: 803621D0 (_savegpr_26)
//	807A751C: 807AFD2C (lit_3909)
//	807A7520: 807AFD2C (lit_3909)
//	807A7540: 8042CA54 (g_env_light)
//	807A7544: 8042CA54 (g_env_light)
//	807A7554: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	807A7558: 8042CA54 (g_env_light)
//	807A755C: 8042CA54 (g_env_light)
//	807A7568: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	807A763C: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	807A7698: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	807A769C: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	807A76A0: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	807A76B0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::draw() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/draw__8daE_SW_cFv.s"
}
#pragma pop


/* 807A76C4-807A76E4 0020+00 s=1 e=0 z=0  None .text      daE_SW_Draw__FP8daE_SW_c                                     */
//	807A76D0: 807A7504 (draw__8daE_SW_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
asm static void daE_SW_Draw(daE_SW_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/daE_SW_Draw__FP8daE_SW_c.s"
}
#pragma pop


/* 807A76E4-807A77CC 00E8+00 s=5 e=0 z=0  None .text      setBeforeJumpEffect__8daE_SW_cFv                             */
//	807A76FC: 804061C0 (g_dComIfG_gameInfo)
//	807A7700: 804061C0 (g_dComIfG_gameInfo)
//	807A774C: 807AFD34 (lit_3911)
//	807A7750: 807AFD34 (lit_3911)
//	807A7754: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807A77A4: 807AFD34 (lit_3911)
//	807A77A8: 807AFD34 (lit_3911)
//	807A77AC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::setBeforeJumpEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setBeforeJumpEffect__8daE_SW_cFv.s"
}
#pragma pop


/* 807A77CC-807A78B4 00E8+00 s=2 e=0 z=0  None .text      setJumpEffect__8daE_SW_cFv                                   */
//	807A77E4: 804061C0 (g_dComIfG_gameInfo)
//	807A77E8: 804061C0 (g_dComIfG_gameInfo)
//	807A7834: 807AFD34 (lit_3911)
//	807A7838: 807AFD34 (lit_3911)
//	807A783C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807A788C: 807AFD34 (lit_3911)
//	807A7890: 807AFD34 (lit_3911)
//	807A7894: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::setJumpEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setJumpEffect__8daE_SW_cFv.s"
}
#pragma pop


/* 807A78B4-807A7A08 0154+00 s=9 e=0 z=0  None .text      setSmokeEffect__8daE_SW_cFv                                  */
//	807A78C4: 803621DC (_savegpr_29)
//	807A78CC: 807AFD2C (lit_3909)
//	807A78D0: 807AFD2C (lit_3909)
//	807A7914: 804061C0 (g_dComIfG_gameInfo)
//	807A7918: 804061C0 (g_dComIfG_gameInfo)
//	807A7968: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807A79BC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807A79F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::setSmokeEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setSmokeEffect__8daE_SW_cFv.s"
}
#pragma pop


/* 807A7A08-807A7AC0 00B8+00 s=2 e=0 z=0  None .text      setDiveEffect__8daE_SW_cFv                                   */
//	807A7A18: 803621D0 (_savegpr_26)
//	807A7A30: 802673F4 (__ct__5csXyzFsss)
//	807A7A3C: 804061C0 (g_dComIfG_gameInfo)
//	807A7A40: 804061C0 (g_dComIfG_gameInfo)
//	807A7A44: 807AFEF4 (l_SW_DIVE_EFFECT_ID)
//	807A7A48: 807AFEF4 (l_SW_DIVE_EFFECT_ID)
//	807A7A4C: 807AFD34 (lit_3911)
//	807A7A50: 807AFD34 (lit_3911)
//	807A7A94: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807A7AAC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::setDiveEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setDiveEffect__8daE_SW_cFv.s"
}
#pragma pop


/* 807A7AC0-807A7B64 00A4+00 s=2 e=0 z=0  None .text      setHideEffect__8daE_SW_cFv                                   */
//	807A7AD0: 803621D0 (_savegpr_26)
//	807A7AE0: 804061C0 (g_dComIfG_gameInfo)
//	807A7AE4: 804061C0 (g_dComIfG_gameInfo)
//	807A7AE8: 807AFEFC (l_SW_HIDE_EFFECT_ID)
//	807A7AEC: 807AFEFC (l_SW_HIDE_EFFECT_ID)
//	807A7AF0: 807AFD34 (lit_3911)
//	807A7AF4: 807AFD34 (lit_3911)
//	807A7B38: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807A7B50: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::setHideEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setHideEffect__8daE_SW_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 807B01B8-807B01BC 0001+03 s=1 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 807B01BC-807B01C0 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 807B01C0-807B01C4 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 807B01C4-807B01C8 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 807B01C8-807B01CC 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 807B01CC-807B01D0 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 807B01D0-807B01D4 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 807B01D4-807B01D8 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 807B01D8-807B01DC 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 807B01DC-807B01E0 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 807B01E0-807B01E4 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 807B01E4-807B01E8 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 807B01E8-807B01EC 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 807B01EC-807B01F0 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 807B01F0-807B01F4 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 807B01F4-807B01F8 0001+03 s=0 e=0 z=0  None .bss       @1009                                                        */
u8 lit_1009[1 + 3 /* padding */];

/* 807B01F8-807B01FC 0004+00 s=1 e=0 z=0  None .bss       target_info__22@unnamed@d_a_e_sw_cpp@                        */
static u8 data_807B01F8[4];

/* 807B01FC-807B0200 0004+00 s=1 e=0 z=0  None .bss       target_dist__22@unnamed@d_a_e_sw_cpp@                        */
static u8 data_807B01FC[4];

/* 807B0200-807B0204 0004+00 s=10 e=0 z=0  None .bss       None                                                         */
static u8 struct_807B0200[4];

/* 807A7B64-807A7B9C 0038+00 s=17 e=0 z=0  None .text      setActionMode__8daE_SW_cFss                                  */
//	807A7B74: 807B0200 (struct_807B0200)
//	807A7B78: 807B0200 (struct_807B0200)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16 False
//  s16 False
asm void daE_SW_c::setActionMode(s16 param_0, s16 param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setActionMode__8daE_SW_cFss.s"
}
#pragma pop


/* 807A7B9C-807A7C50 00B4+00 s=1 e=0 z=0  None .text      s_b_sub__FPvPv                                               */
//	807A7BC8: 80022138 (fpcM_IsCreating__FUi)
//	807A7BD8: 80018CE0 (fopAc_IsActor__FPv)
//	807A7C10: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807A7C14: 807B01FC (data_807B01FC)
//	807A7C18: 807B01FC (data_807B01FC)
//	807A7C28: 807B01F8 (data_807B01F8)
//	807A7C2C: 807B01F8 (data_807B01F8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_b_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/s_b_sub__FPvPv.s"
}
#pragma pop


/* 807A7C50-807A7CD0 0080+00 s=2 e=0 z=0  None .text      search_bomb__8daE_SW_cFv                                     */
//	807A7C68: 807B01B8 (lit_1109)
//	807A7C6C: 807B01B8 (lit_1109)
//	807A7C84: 807A7B9C (s_b_sub__FPvPv)
//	807A7C88: 807A7B9C (s_b_sub__FPvPv)
//	807A7C90: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::search_bomb() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/search_bomb__8daE_SW_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 807B0204-807B0210 000C+00 s=1 e=0 z=0  None .bss       @3925                                                        */
static u8 lit_3925[12];

/* 807B0210-807B0234 0024+00 s=12 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[36];

/* 807A7CD0-807A7D48 0078+00 s=4 e=0 z=0  None .text      bomb_check__8daE_SW_cFv                                      */
//	807A7CF0: 807A7C50 (search_bomb__8daE_SW_cFv)
//	807A7D00: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807A7D04: 807B0210 (l_HIO)
//	807A7D08: 807B0210 (l_HIO)
//	807A7D24: 807A7B64 (setActionMode__8daE_SW_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::bomb_check() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/bomb_check__8daE_SW_cFv.s"
}
#pragma pop


/* 807A7D48-807A7DAC 0064+00 s=2 e=0 z=0  None .text      setModeBack__8daE_SW_cFv                                     */
//	807A7D70: 807A7B64 (setActionMode__8daE_SW_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::setModeBack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setModeBack__8daE_SW_cFv.s"
}
#pragma pop


/* 807A7DAC-807A7EFC 0150+00 s=1 e=0 z=0  None .text      checkFall__8daE_SW_cFv                                       */
//	807A7DBC: 803621DC (_savegpr_29)
//	807A7DC4: 807AFD2C (lit_3909)
//	807A7DC8: 807AFD2C (lit_3909)
//	807A7E04: 8007757C (__ct__11dBgS_GndChkFv)
//	807A7E34: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	807A7E38: 804061C0 (g_dComIfG_gameInfo)
//	807A7E3C: 804061C0 (g_dComIfG_gameInfo)
//	807A7E4C: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	807A7E94: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	807A7EA8: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	807A7EBC: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	807A7ED4: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A7EE0: 800775F0 (__dt__11dBgS_GndChkFv)
//	807A7EE8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::checkFall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/checkFall__8daE_SW_cFv.s"
}
#pragma pop


/* 807A7EFC-807A7F88 008C+00 s=1 e=0 z=0  None .text      checkBeforeWall__8daE_SW_cFv                                 */
//	807A7F2C: 803650D0 (abs)
//	807A7F5C: 803650D0 (abs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::checkBeforeWall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/checkBeforeWall__8daE_SW_cFv.s"
}
#pragma pop


/* 807A7F88-807A8290 0308+00 s=1 e=0 z=0  None .text      executeWait__8daE_SW_cFv                                     */
//	807A7FA0: 807AFD2C (lit_3909)
//	807A7FA4: 807AFD2C (lit_3909)
//	807A7FB8: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807A8004: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807A8068: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A8078: 8026798C (cM_rndFX__Ff)
//	807A809C: 8026FA3C (cLib_addCalc2__FPffff)
//	807A80B4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A80F0: 80270740 (cLib_chaseF__FPfff)
//	807A8104: 80270740 (cLib_chaseF__FPfff)
//	807A8114: 807A7CD0 (bomb_check__8daE_SW_cFv)
//	807A8120: 804061C0 (g_dComIfG_gameInfo)
//	807A8124: 804061C0 (g_dComIfG_gameInfo)
//	807A8160: 8034739C (PSVECSquareDistance)
//	807A81D0: 80450AE0 (__float_nan)
//	807A81D4: 80450AE0 (__float_nan)
//	807A8240: 80450AE0 (__float_nan)
//	807A8244: 80450AE0 (__float_nan)
//	807A825C: 807AAF70 (checkSuddenAttack__8daE_SW_cFi)
//	807A8274: 807A7B64 (setActionMode__8daE_SW_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeWait() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeWait__8daE_SW_cFv.s"
}
#pragma pop


/* 807A8290-807A831C 008C+00 s=2 e=0 z=0  None .text      checkRunChase__8daE_SW_cFv                                   */
//	807A82AC: 804061C0 (g_dComIfG_gameInfo)
//	807A82B0: 804061C0 (g_dComIfG_gameInfo)
//	807A82D4: 807AFD8C (lit_4293)
//	807A82D8: 807AFD8C (lit_4293)
//	807A82E0: 807AFD90 (lit_4294)
//	807A82E4: 807AFD90 (lit_4294)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::checkRunChase() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/checkRunChase__8daE_SW_cFv.s"
}
#pragma pop


/* 807A831C-807A8B98 087C+00 s=1 e=0 z=0  None .text      executeChaseSlow__8daE_SW_cFv                                */
//	807A8334: 803621D8 (_savegpr_28)
//	807A833C: 807AFD2C (lit_3909)
//	807A8340: 807AFD2C (lit_3909)
//	807A8344: 804061C0 (g_dComIfG_gameInfo)
//	807A8348: 804061C0 (g_dComIfG_gameInfo)
//	807A8398: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807A83A0: 807A7CD0 (bomb_check__8daE_SW_cFv)
//	807A83B4: 807AAF70 (checkSuddenAttack__8daE_SW_cFi)
//	807A83D8: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A83E4: 807A8290 (checkRunChase__8daE_SW_cFv)
//	807A8428: 8034739C (PSVECSquareDistance)
//	807A8498: 80450AE0 (__float_nan)
//	807A849C: 80450AE0 (__float_nan)
//	807A8508: 80450AE0 (__float_nan)
//	807A850C: 80450AE0 (__float_nan)
//	807A8528: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A8564: 8034739C (PSVECSquareDistance)
//	807A85D4: 80450AE0 (__float_nan)
//	807A85D8: 80450AE0 (__float_nan)
//	807A8644: 80450AE0 (__float_nan)
//	807A8648: 80450AE0 (__float_nan)
//	807A8664: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A86A8: 80267954 (cM_rndF__Ff)
//	807A86CC: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807A86D0: 8026786C (cM_rnd__Fv)
//	807A8708: 8026798C (cM_rndFX__Ff)
//	807A8728: 8026798C (cM_rndFX__Ff)
//	807A8780: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807A878C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A87A8: 803650D0 (abs)
//	807A87D0: 80270740 (cLib_chaseF__FPfff)
//	807A87DC: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A87F0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A87F8: 807A7EFC (checkBeforeWall__8daE_SW_cFv)
//	807A8840: 804061C0 (g_dComIfG_gameInfo)
//	807A8844: 804061C0 (g_dComIfG_gameInfo)
//	807A8850: 800737E4 (LockonTruth__12dAttention_cFv)
//	807A8864: 8007353C (LockonTarget__12dAttention_cFl)
//	807A8874: 804061C0 (g_dComIfG_gameInfo)
//	807A8878: 804061C0 (g_dComIfG_gameInfo)
//	807A8898: 80270E24 (cLib_distanceAngleS__Fss)
//	807A88B0: 807B0200 (struct_807B0200)
//	807A88B4: 807B0200 (struct_807B0200)
//	807A88E4: 80267954 (cM_rndF__Ff)
//	807A8958: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807A8964: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A8980: 803650D0 (abs)
//	807A89AC: 80270740 (cLib_chaseF__FPfff)
//	807A89B8: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A89CC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A89E0: 80267954 (cM_rndF__Ff)
//	807A89F4: 8026798C (cM_rndFX__Ff)
//	807A8A14: 8026798C (cM_rndFX__Ff)
//	807A8A40: 807A76E4 (setBeforeJumpEffect__8daE_SW_cFv)
//	807A8A70: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807A8A7C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A8A98: 803650D0 (abs)
//	807A8AC4: 80270740 (cLib_chaseF__FPfff)
//	807A8AD0: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A8AE4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A8B10: 80270740 (cLib_chaseF__FPfff)
//	807A8B24: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A8B2C: 807B0210 (l_HIO)
//	807A8B30: 807B0210 (l_HIO)
//	807A8B4C: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A8B64: 807B0200 (struct_807B0200)
//	807A8B68: 807B0200 (struct_807B0200)
//	807A8B84: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeChaseSlow() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeChaseSlow__8daE_SW_cFv.s"
}
#pragma pop


/* 807A8B98-807A9580 09E8+00 s=1 e=0 z=0  None .text      executeChaseFast__8daE_SW_cFv                                */
//	807A8BA8: 803621DC (_savegpr_29)
//	807A8BB0: 807AFD2C (lit_3909)
//	807A8BB4: 807AFD2C (lit_3909)
//	807A8BB8: 804061C0 (g_dComIfG_gameInfo)
//	807A8BBC: 804061C0 (g_dComIfG_gameInfo)
//	807A8BDC: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807A8BF0: 807A76E4 (setBeforeJumpEffect__8daE_SW_cFv)
//	807A8BF8: 807A7CD0 (bomb_check__8daE_SW_cFv)
//	807A8C0C: 807AAF70 (checkSuddenAttack__8daE_SW_cFi)
//	807A8C30: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A8C3C: 807A8290 (checkRunChase__8daE_SW_cFv)
//	807A8C60: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A8C9C: 8034739C (PSVECSquareDistance)
//	807A8D0C: 80450AE0 (__float_nan)
//	807A8D10: 80450AE0 (__float_nan)
//	807A8D7C: 80450AE0 (__float_nan)
//	807A8D80: 80450AE0 (__float_nan)
//	807A8D9C: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A8DD8: 8026798C (cM_rndFX__Ff)
//	807A8E00: 80267954 (cM_rndF__Ff)
//	807A8E30: 807B0200 (struct_807B0200)
//	807A8E34: 807B0200 (struct_807B0200)
//	807A8E48: 807B0210 (l_HIO)
//	807A8E4C: 807B0210 (l_HIO)
//	807A8E80: 80267954 (cM_rndF__Ff)
//	807A8EC0: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A8EDC: 807B0200 (struct_807B0200)
//	807A8EE0: 807B0200 (struct_807B0200)
//	807A8F1C: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807A8F6C: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807A8F80: 803650D0 (abs)
//	807A8FCC: 8034739C (PSVECSquareDistance)
//	807A903C: 80450AE0 (__float_nan)
//	807A9040: 80450AE0 (__float_nan)
//	807A90AC: 80450AE0 (__float_nan)
//	807A90B0: 80450AE0 (__float_nan)
//	807A90FC: 8034739C (PSVECSquareDistance)
//	807A916C: 80450AE0 (__float_nan)
//	807A9170: 80450AE0 (__float_nan)
//	807A91DC: 80450AE0 (__float_nan)
//	807A91E0: 80450AE0 (__float_nan)
//	807A922C: 8034739C (PSVECSquareDistance)
//	807A929C: 80450AE0 (__float_nan)
//	807A92A0: 80450AE0 (__float_nan)
//	807A930C: 80450AE0 (__float_nan)
//	807A9310: 80450AE0 (__float_nan)
//	807A933C: 80270740 (cLib_chaseF__FPfff)
//	807A9350: 80270740 (cLib_chaseF__FPfff)
//	807A935C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A9370: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A9390: 80439A20 (sincosTable___5JMath)
//	807A9394: 80439A20 (sincosTable___5JMath)
//	807A9454: 8034739C (PSVECSquareDistance)
//	807A94C4: 80450AE0 (__float_nan)
//	807A94C8: 80450AE0 (__float_nan)
//	807A9534: 80450AE0 (__float_nan)
//	807A9538: 80450AE0 (__float_nan)
//	807A9558: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A956C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeChaseFast() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeChaseFast__8daE_SW_cFv.s"
}
#pragma pop


/* 807A9580-807A9768 01E8+00 s=1 e=0 z=0  None .text      executeBomb__8daE_SW_cFv                                     */
//	807A9590: 803621DC (_savegpr_29)
//	807A9598: 807AFD2C (lit_3909)
//	807A959C: 807AFD2C (lit_3909)
//	807A95A0: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807A95B4: 807A76E4 (setBeforeJumpEffect__8daE_SW_cFv)
//	807A95C8: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	807A95F0: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A95FC: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807A9608: 807A7D48 (setModeBack__8daE_SW_cFv)
//	807A9654: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807A9678: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807A967C: 807B0210 (l_HIO)
//	807A9680: 807B0210 (l_HIO)
//	807A969C: 80267954 (cM_rndF__Ff)
//	807A9710: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A9730: 8026FA3C (cLib_addCalc2__FPffff)
//	807A9744: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A9754: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeBomb() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeBomb__8daE_SW_cFv.s"
}
#pragma pop


/* 807A9768-807A9E58 06F0+00 s=1 e=0 z=0  None .text      executeAttack__8daE_SW_cFv                                   */
//	807A9778: 803621DC (_savegpr_29)
//	807A9780: 807AFD2C (lit_3909)
//	807A9784: 807AFD2C (lit_3909)
//	807A9788: 804061C0 (g_dComIfG_gameInfo)
//	807A978C: 804061C0 (g_dComIfG_gameInfo)
//	807A97DC: 807A7A08 (setDiveEffect__8daE_SW_cFv)
//	807A9828: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807A9848: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807A98A0: 8034739C (PSVECSquareDistance)
//	807A9910: 80450AE0 (__float_nan)
//	807A9914: 80450AE0 (__float_nan)
//	807A9980: 80450AE0 (__float_nan)
//	807A9984: 80450AE0 (__float_nan)
//	807A9A44: 80439A20 (sincosTable___5JMath)
//	807A9A48: 80439A20 (sincosTable___5JMath)
//	807A9A9C: 80267674 (cM_atan2s__Fff)
//	807A9AC0: 80347138 (PSVECSquareMag)
//	807A9B30: 80450AE0 (__float_nan)
//	807A9B34: 80450AE0 (__float_nan)
//	807A9BA0: 80450AE0 (__float_nan)
//	807A9BA4: 80450AE0 (__float_nan)
//	807A9BD0: 807A77CC (setJumpEffect__8daE_SW_cFv)
//	807A9BE0: 80270B90 (cLib_chaseAngleS__FPsss)
//	807A9C1C: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807A9C34: 807A77CC (setJumpEffect__8daE_SW_cFv)
//	807A9C44: 80270B90 (cLib_chaseAngleS__FPsss)
//	807A9C54: 80270740 (cLib_chaseF__FPfff)
//	807A9C8C: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A9CA0: 807A7A08 (setDiveEffect__8daE_SW_cFv)
//	807A9CF8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807A9D18: 80270740 (cLib_chaseF__FPfff)
//	807A9D28: 80270740 (cLib_chaseF__FPfff)
//	807A9D94: 807A7D48 (setModeBack__8daE_SW_cFv)
//	807A9DB8: 80270740 (cLib_chaseF__FPfff)
//	807A9DCC: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807A9E00: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	807A9E10: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807A9E18: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807A9E1C: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807A9E34: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807A9E44: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeAttack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeAttack__8daE_SW_cFv.s"
}
#pragma pop


/* 807A9E58-807AA050 01F8+00 s=2 e=0 z=0  None .text      executeHook__8daE_SW_cFv                                     */
//	807A9E70: 807AFD2C (lit_3909)
//	807A9E74: 807AFD2C (lit_3909)
//	807A9EE0: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807A9F44: 803DD470 (now__14mDoMtx_stack_c)
//	807A9F48: 803DD470 (now__14mDoMtx_stack_c)
//	807A9F50: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807A9F6C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807A9F80: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807A9F84: 803DD470 (now__14mDoMtx_stack_c)
//	807A9F88: 803DD470 (now__14mDoMtx_stack_c)
//	807A9FBC: 804061C0 (g_dComIfG_gameInfo)
//	807A9FC0: 804061C0 (g_dComIfG_gameInfo)
//	807AA010: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807AA034: 807A7B64 (setActionMode__8daE_SW_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeHook() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeHook__8daE_SW_cFv.s"
}
#pragma pop


/* 807AA050-807AA44C 03FC+00 s=1 e=0 z=0  None .text      executeMoveOut__8daE_SW_cFv                                  */
//	807AA070: 807AFD2C (lit_3909)
//	807AA074: 807AFD2C (lit_3909)
//	807AA078: 804061C0 (g_dComIfG_gameInfo)
//	807AA07C: 804061C0 (g_dComIfG_gameInfo)
//	807AA09C: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807AA0DC: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AA0E4: 8026798C (cM_rndFX__Ff)
//	807AA0F4: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807AA150: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807AA170: 80270740 (cLib_chaseF__FPfff)
//	807AA17C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807AA190: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AA1E4: 8034739C (PSVECSquareDistance)
//	807AA254: 80450AE0 (__float_nan)
//	807AA258: 80450AE0 (__float_nan)
//	807AA2C4: 80450AE0 (__float_nan)
//	807AA2C8: 80450AE0 (__float_nan)
//	807AA2EC: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AA328: 8034739C (PSVECSquareDistance)
//	807AA398: 80450AE0 (__float_nan)
//	807AA39C: 80450AE0 (__float_nan)
//	807AA408: 80450AE0 (__float_nan)
//	807AA40C: 80450AE0 (__float_nan)
//	807AA428: 807A7B64 (setActionMode__8daE_SW_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeMoveOut() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeMoveOut__8daE_SW_cFv.s"
}
#pragma pop


/* 807AA44C-807AA784 0338+00 s=2 e=0 z=0  None .text      executeChance__8daE_SW_cFv                                   */
//	807AA46C: 807AFD2C (lit_3909)
//	807AA470: 807AFD2C (lit_3909)
//	807AA480: 807AFF04 (lit_5270)
//	807AA484: 807AFF04 (lit_5270)
//	807AA4D0: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AA558: 804061C0 (g_dComIfG_gameInfo)
//	807AA55C: 804061C0 (g_dComIfG_gameInfo)
//	807AA5AC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807AA5C0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AA5D8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AA61C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AA634: 8026798C (cM_rndFX__Ff)
//	807AA65C: 8026798C (cM_rndFX__Ff)
//	807AA66C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807AA6B8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AA6FC: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AA720: 807A7460 (bckSet__8daE_SW_cFifUcf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeChance() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeChance__8daE_SW_cFv.s"
}
#pragma pop


/* 807AA784-807AA91C 0198+00 s=1 e=0 z=0  None .text      executeDive__8daE_SW_cFv                                     */
//	807AA79C: 803621DC (_savegpr_29)
//	807AA7A4: 807AFD2C (lit_3909)
//	807AA7A8: 807AFD2C (lit_3909)
//	807AA7EC: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AA7FC: 807A7AC0 (setHideEffect__8daE_SW_cFv)
//	807AA810: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AA854: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AA8AC: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AA8D0: 8026FA3C (cLib_addCalc2__FPffff)
//	807AA8E4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AA8F8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AA908: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeDive() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeDive__8daE_SW_cFv.s"
}
#pragma pop


/* 807AA91C-807AAB7C 0260+00 s=1 e=0 z=0  None .text      executeDamage__8daE_SW_cFv                                   */
//	807AA934: 807AFD2C (lit_3909)
//	807AA938: 807AFD2C (lit_3909)
//	807AA9CC: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AA9D4: 80267954 (cM_rndF__Ff)
//	807AA9E8: 80267954 (cM_rndF__Ff)
//	807AAA48: 80267954 (cM_rndF__Ff)
//	807AAA5C: 80267954 (cM_rndF__Ff)
//	807AAAB0: 804061C0 (g_dComIfG_gameInfo)
//	807AAAB4: 804061C0 (g_dComIfG_gameInfo)
//	807AAB04: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807AAB20: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807AAB48: 807A7B64 (setActionMode__8daE_SW_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeDamage() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeDamage__8daE_SW_cFv.s"
}
#pragma pop


/* 807AAB7C-807AAD28 01AC+00 s=1 e=0 z=0  None .text      executeDie__8daE_SW_cFv                                      */
//	807AAB94: 807AFD2C (lit_3909)
//	807AAB98: 807AFD2C (lit_3909)
//	807AABDC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AAC14: 8026FA3C (cLib_addCalc2__FPffff)
//	807AAC40: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AAC88: 8026FA3C (cLib_addCalc2__FPffff)
//	807AACC8: 807B0202 (struct_807B0200)
//	807AACCC: 807B0202 (struct_807B0200)
//	807AAD04: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	807AAD0C: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeDie() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeDie__8daE_SW_cFv.s"
}
#pragma pop


/* 807AAD28-807AADCC 00A4+00 s=1 e=0 z=0  None .text      s_child_sub__FPvPv                                           */
//	807AAD54: 80022138 (fpcM_IsCreating__FUi)
//	807AAD64: 80018CE0 (fopAc_IsActor__FPv)
//	807AAD9C: 807B0201 (struct_807B0200)
//	807AADA0: 807B0201 (struct_807B0200)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  void* False
// 	 void False
asm static void s_child_sub(void* param_0, void* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/s_child_sub__FPvPv.s"
}
#pragma pop


/* 807AADCC-807AAF70 01A4+00 s=1 e=0 z=0  None .text      executeMaster__8daE_SW_cFv                                   */
//	807AADDC: 803621DC (_savegpr_29)
//	807AADE4: 807AFD2C (lit_3909)
//	807AADE8: 807AFD2C (lit_3909)
//	807AADEC: 804061C0 (g_dComIfG_gameInfo)
//	807AADF0: 804061C0 (g_dComIfG_gameInfo)
//	807AAE78: 804061C0 (g_dComIfG_gameInfo)
//	807AAE7C: 804061C0 (g_dComIfG_gameInfo)
//	807AAE84: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807AAE9C: 803650D0 (abs)
//	807AAEAC: 807B0201 (struct_807B0200)
//	807AAEB0: 807B0201 (struct_807B0200)
//	807AAEB4: 807AAD28 (s_child_sub__FPvPv)
//	807AAEB8: 807AAD28 (s_child_sub__FPvPv)
//	807AAEC0: 80021338 (fpcEx_Search__FPFPvPv_PvPv)
//	807AAEC4: 807B0201 (struct_807B0200)
//	807AAEC8: 807B0201 (struct_807B0200)
//	807AAEE0: 807B0202 (struct_807B0200)
//	807AAEE4: 807B0202 (struct_807B0200)
//	807AAEF0: 8026786C (cM_rnd__Fv)
//	807AAF54: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	807AAF5C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeMaster() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeMaster__8daE_SW_cFv.s"
}
#pragma pop


/* 807AAF70-807AB310 03A0+00 s=3 e=0 z=0  None .text      checkSuddenAttack__8daE_SW_cFi                               */
//	807AAF88: 803621D8 (_savegpr_28)
//	807AAF94: 807AFD2C (lit_3909)
//	807AAF98: 807AFD2C (lit_3909)
//	807AAF9C: 804061C0 (g_dComIfG_gameInfo)
//	807AAFA0: 804061C0 (g_dComIfG_gameInfo)
//	807AAFDC: 8034739C (PSVECSquareDistance)
//	807AB04C: 80450AE0 (__float_nan)
//	807AB050: 80450AE0 (__float_nan)
//	807AB0BC: 80450AE0 (__float_nan)
//	807AB0C0: 80450AE0 (__float_nan)
//	807AB120: 803650D0 (abs)
//	807AB138: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AB178: 8034739C (PSVECSquareDistance)
//	807AB1E8: 80450AE0 (__float_nan)
//	807AB1EC: 80450AE0 (__float_nan)
//	807AB258: 80450AE0 (__float_nan)
//	807AB25C: 80450AE0 (__float_nan)
//	807AB2C8: 803650D0 (abs)
//	807AB2E0: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AB2FC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_SW_c::checkSuddenAttack(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/checkSuddenAttack__8daE_SW_cFi.s"
}
#pragma pop


/* 807AB310-807AB5C4 02B4+00 s=1 e=0 z=0  None .text      executeSuddenAttack__8daE_SW_cFv                             */
//	807AB320: 803621DC (_savegpr_29)
//	807AB328: 807AFD2C (lit_3909)
//	807AB32C: 807AFD2C (lit_3909)
//	807AB330: 804061C0 (g_dComIfG_gameInfo)
//	807AB334: 804061C0 (g_dComIfG_gameInfo)
//	807AB354: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807AB35C: 807A76E4 (setBeforeJumpEffect__8daE_SW_cFv)
//	807AB364: 807A7CD0 (bomb_check__8daE_SW_cFv)
//	807AB3A4: 8034739C (PSVECSquareDistance)
//	807AB414: 80450AE0 (__float_nan)
//	807AB418: 80450AE0 (__float_nan)
//	807AB484: 80450AE0 (__float_nan)
//	807AB488: 80450AE0 (__float_nan)
//	807AB4A4: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AB4B8: 803650D0 (abs)
//	807AB4D0: 803650D0 (abs)
//	807AB4E8: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AB524: 807B0200 (struct_807B0200)
//	807AB528: 807B0200 (struct_807B0200)
//	807AB53C: 80270740 (cLib_chaseF__FPfff)
//	807AB550: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AB558: 8026798C (cM_rndFX__Ff)
//	807AB57C: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AB598: 807B0200 (struct_807B0200)
//	807AB59C: 807B0200 (struct_807B0200)
//	807AB5B0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeSuddenAttack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeSuddenAttack__8daE_SW_cFv.s"
}
#pragma pop


/* 807AB5C4-807AB6C4 0100+00 s=1 e=0 z=0  None .text      executeFall__8daE_SW_cFv                                     */
//	807AB5DC: 807AFD2C (lit_3909)
//	807AB5E0: 807AFD2C (lit_3909)
//	807AB668: 80270740 (cLib_chaseF__FPfff)
//	807AB68C: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AB694: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807AB6A0: 80267674 (cM_atan2s__Fff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::executeFall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/executeFall__8daE_SW_cFv.s"
}
#pragma pop


/* 807AB6C4-807AB884 01C0+00 s=2 e=0 z=0  None .text      action__8daE_SW_cFv                                          */
//	807AB6E8: 807ABAB0 (damage_check__8daE_SW_cFv)
//	807AB708: 803DD470 (now__14mDoMtx_stack_c)
//	807AB70C: 803DD470 (now__14mDoMtx_stack_c)
//	807AB710: 803464B0 (PSMTXCopy)
//	807AB714: 803DD470 (now__14mDoMtx_stack_c)
//	807AB718: 803DD470 (now__14mDoMtx_stack_c)
//	807AB73C: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	807AB744: 804061C0 (g_dComIfG_gameInfo)
//	807AB748: 804061C0 (g_dComIfG_gameInfo)
//	807AB750: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	807AB758: 807A7DAC (checkFall__8daE_SW_cFv)
//	807AB76C: 807AFF30 (lit_5661)
//	807AB770: 807AFF30 (lit_5661)
//	807AB788: 807A7F88 (executeWait__8daE_SW_cFv)
//	807AB798: 807A831C (executeChaseSlow__8daE_SW_cFv)
//	807AB7A8: 807A8B98 (executeChaseFast__8daE_SW_cFv)
//	807AB7B8: 807A9768 (executeAttack__8daE_SW_cFv)
//	807AB7C4: 807A9580 (executeBomb__8daE_SW_cFv)
//	807AB7D0: 807A9E58 (executeHook__8daE_SW_cFv)
//	807AB7DC: 807AA050 (executeMoveOut__8daE_SW_cFv)
//	807AB7EC: 807AA44C (executeChance__8daE_SW_cFv)
//	807AB7F8: 807AA784 (executeDive__8daE_SW_cFv)
//	807AB804: 807AA91C (executeDamage__8daE_SW_cFv)
//	807AB810: 807AAB7C (executeDie__8daE_SW_cFv)
//	807AB81C: 807AADCC (executeMaster__8daE_SW_cFv)
//	807AB828: 807AB310 (executeSuddenAttack__8daE_SW_cFv)
//	807AB834: 807AB5C4 (executeFall__8daE_SW_cFv)
//	807AB840: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	807AB858: 8002D06C (dComIfGp_getReverb__Fi)
//	807AB868: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::action() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/action__8daE_SW_cFv.s"
}
#pragma pop


/* 807AB884-807AB930 00AC+00 s=2 e=0 z=0  None .text      mtx_set__8daE_SW_cFv                                         */
//	807AB8A4: 803DD470 (now__14mDoMtx_stack_c)
//	807AB8A8: 803DD470 (now__14mDoMtx_stack_c)
//	807AB8C0: 803468E8 (PSMTXTrans)
//	807AB8C8: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	807AB8D0: 807AFD34 (lit_3911)
//	807AB8D4: 807AFD34 (lit_3911)
//	807AB8D8: 807B0210 (l_HIO)
//	807AB8DC: 807B0210 (l_HIO)
//	807AB8F8: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	807AB904: 803DD470 (now__14mDoMtx_stack_c)
//	807AB908: 803DD470 (now__14mDoMtx_stack_c)
//	807AB910: 803464B0 (PSMTXCopy)
//	807AB918: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::mtx_set() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/mtx_set__8daE_SW_cFv.s"
}
#pragma pop


/* 807AB930-807ABAB0 0180+00 s=2 e=0 z=0  None .text      cc_set__8daE_SW_cFv                                          */
//	807AB950: 807AFD2C (lit_3909)
//	807AB954: 807AFD2C (lit_3909)
//	807AB980: 803DD470 (now__14mDoMtx_stack_c)
//	807AB984: 803DD470 (now__14mDoMtx_stack_c)
//	807AB988: 803464B0 (PSMTXCopy)
//	807AB98C: 803DD470 (now__14mDoMtx_stack_c)
//	807AB990: 803DD470 (now__14mDoMtx_stack_c)
//	807AB9D0: 807B0210 (l_HIO)
//	807AB9D4: 807B0210 (l_HIO)
//	807ABA20: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	807ABA2C: 8026F708 (SetR__8cM3dGSphFf)
//	807ABA30: 804061C0 (g_dComIfG_gameInfo)
//	807ABA34: 804061C0 (g_dComIfG_gameInfo)
//	807ABA40: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::cc_set() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/cc_set__8daE_SW_cFv.s"
}
#pragma pop


/* 807ABAB0-807ABD28 0278+00 s=1 e=0 z=0  None .text      damage_check__8daE_SW_cFv                                    */
//	807ABAC8: 80083830 (Move__10dCcD_GSttsFv)
//	807ABB08: 804061C0 (g_dComIfG_gameInfo)
//	807ABB0C: 804061C0 (g_dComIfG_gameInfo)
//	807ABB38: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807ABB44: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	807ABB50: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	807ABB60: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	807ABBA0: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	807ABBC0: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807ABBC8: 807A9E58 (executeHook__8daE_SW_cFv)
//	807ABBF4: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807ABC2C: 804061C0 (g_dComIfG_gameInfo)
//	807ABC30: 804061C0 (g_dComIfG_gameInfo)
//	807ABCE4: 807A7B64 (setActionMode__8daE_SW_cFss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::damage_check() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/damage_check__8daE_SW_cFv.s"
}
#pragma pop


/* 807ABD28-807ABE50 0128+00 s=2 e=0 z=0  None .text      checkGroundSand__8daE_SW_cFv                                 */
//	807ABD40: 807AFD2C (lit_3909)
//	807ABD44: 807AFD2C (lit_3909)
//	807ABD74: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807ABD7C: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	807ABD88: 804061C0 (g_dComIfG_gameInfo)
//	807ABD8C: 804061C0 (g_dComIfG_gameInfo)
//	807ABD94: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	807ABD98: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	807ABDA0: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	807ABDD0: 80270DC0 (cLib_offsetPos__FP4cXyzPC4cXyzsPC4cXyz)
//	807ABDD8: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	807ABDE4: 804061C0 (g_dComIfG_gameInfo)
//	807ABDE8: 804061C0 (g_dComIfG_gameInfo)
//	807ABDF0: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	807ABDF4: 803F1CC4 (mGndCheck__11fopAcM_gc_c)
//	807ABDFC: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::checkGroundSand() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/checkGroundSand__8daE_SW_cFv.s"
}
#pragma pop


/* 807ABE50-807AC148 02F8+00 s=1 e=0 z=0  None .text      execute__8daE_SW_cFv                                         */
//	807ABE60: 803621DC (_savegpr_29)
//	807ABE68: 807AFD2C (lit_3909)
//	807ABE6C: 807AFD2C (lit_3909)
//	807ABE7C: 807AF57C (d_execute__8daE_SW_cFv)
//	807ABE84: 804061C0 (g_dComIfG_gameInfo)
//	807ABE88: 804061C0 (g_dComIfG_gameInfo)
//	807ABE90: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807ABEC4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807ABED4: 8034739C (PSVECSquareDistance)
//	807ABF44: 80450AE0 (__float_nan)
//	807ABF48: 80450AE0 (__float_nan)
//	807ABFB4: 80450AE0 (__float_nan)
//	807ABFB8: 80450AE0 (__float_nan)
//	807AC03C: 807ABD28 (checkGroundSand__8daE_SW_cFv)
//	807AC044: 807AB6C4 (action__8daE_SW_cFv)
//	807AC04C: 807AB884 (mtx_set__8daE_SW_cFv)
//	807AC054: 807AB930 (cc_set__8daE_SW_cFv)
//	807AC0D8: 803DD470 (now__14mDoMtx_stack_c)
//	807AC0DC: 803DD470 (now__14mDoMtx_stack_c)
//	807AC0E0: 803464B0 (PSMTXCopy)
//	807AC0E4: 803DD470 (now__14mDoMtx_stack_c)
//	807AC0E8: 803DD470 (now__14mDoMtx_stack_c)
//	807AC128: 807AF904 (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	807AC134: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::execute() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/execute__8daE_SW_cFv.s"
}
#pragma pop


/* 807AC148-807AC168 0020+00 s=2 e=0 z=0  None .text      daE_SW_Execute__FP8daE_SW_c                                  */
//	807AC154: 807ABE50 (execute__8daE_SW_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
asm static void daE_SW_Execute(daE_SW_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/daE_SW_Execute__FP8daE_SW_c.s"
}
#pragma pop


/* 807AC168-807AC170 0008+00 s=1 e=0 z=0  None .text      daE_SW_IsDelete__FP8daE_SW_c                                 */
// True False
//  bool False
//  daE_SW_c* False
// 	 daE_SW_c False
static bool daE_SW_IsDelete(daE_SW_c* param_0) {
	return true;
}


/* 807AC170-807AC1E4 0074+00 s=1 e=0 z=0  None .text      _delete__8daE_SW_cFv                                         */
//	807AC188: 807AFE70 (stringBase0)
//	807AC18C: 807AFE70 (stringBase0)
//	807AC190: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	807AC1A4: 807B0203 (struct_807B0200)
//	807AC1A8: 807B0203 (struct_807B0200)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::_delete() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/_delete__8daE_SW_cFv.s"
}
#pragma pop


/* 807AC1E4-807AC204 0020+00 s=1 e=0 z=0  None .text      daE_SW_Delete__FP8daE_SW_c                                   */
//	807AC1F0: 807AC170 (_delete__8daE_SW_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
asm static void daE_SW_Delete(daE_SW_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/daE_SW_Delete__FP8daE_SW_c.s"
}
#pragma pop


/* 807AC204-807AC2FC 00F8+00 s=1 e=0 z=0  None .text      CreateHeap__8daE_SW_cFv                                      */
//	807AC214: 803621D8 (_savegpr_28)
//	807AC220: 802CEC4C (__nw__FUl)
//	807AC22C: 807AFE70 (stringBase0)
//	807AC230: 807AFE70 (stringBase0)
//	807AC238: 804061C0 (g_dComIfG_gameInfo)
//	807AC23C: 804061C0 (g_dComIfG_gameInfo)
//	807AC250: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807AC258: 807AFE70 (stringBase0)
//	807AC25C: 807AFE70 (stringBase0)
//	807AC26C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807AC2A4: 807AFD34 (lit_3911)
//	807AC2A8: 807AFD34 (lit_3911)
//	807AC2B4: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	807AC2E8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/CreateHeap__8daE_SW_cFv.s"
}
#pragma pop


/* 807AC2FC-807AC31C 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	807AC308: 807AC204 (CreateHeap__8daE_SW_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 807AC31C-807AC854 0538+00 s=1 e=0 z=0  None .text      create__8daE_SW_cFv                                          */
//	807AC32C: 803621D8 (_savegpr_28)
//	807AC334: 807AFD2C (lit_3909)
//	807AC338: 807AFD2C (lit_3909)
//	807AC354: 80018B64 (__ct__10fopAc_ac_cFv)
//	807AC35C: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	807AC364: 80075EAC (__ct__12dBgS_AcchCirFv)
//	807AC368: 80075EAC (__ct__12dBgS_AcchCirFv)
//	807AC36C: 807AC9B0 (__dt__12dBgS_AcchCirFv)
//	807AC370: 807AC9B0 (__dt__12dBgS_AcchCirFv)
//	807AC37C: 80361D60 (__construct_array)
//	807AC388: 800760A0 (__ct__9dBgS_AcchFv)
//	807AC38C: 807B0180 (__vt__12dBgS_ObjAcch)
//	807AC390: 807B0180 (__vt__12dBgS_ObjAcch)
//	807AC3AC: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	807AC3B0: 803C3728 (__vt__9cCcD_Stts)
//	807AC3B4: 803C3728 (__vt__9cCcD_Stts)
//	807AC3C0: 80083760 (__ct__10dCcD_GSttsFv)
//	807AC3C4: 803AC2E4 (__vt__9dCcD_Stts)
//	807AC3C8: 803AC2E4 (__vt__9dCcD_Stts)
//	807AC3E0: 80083A28 (__ct__12dCcD_GObjInfFv)
//	807AC3E4: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807AC3E8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807AC3F0: 807B0174 (__vt__8cM3dGAab)
//	807AC3F4: 807B0174 (__vt__8cM3dGAab)
//	807AC3FC: 807B0168 (__vt__8cM3dGSph)
//	807AC400: 807B0168 (__vt__8cM3dGSph)
//	807AC408: 803C3540 (__vt__12cCcD_SphAttr)
//	807AC40C: 803C3540 (__vt__12cCcD_SphAttr)
//	807AC41C: 803ABFC0 (__vt__8dCcD_Sph)
//	807AC420: 803ABFC0 (__vt__8dCcD_Sph)
//	807AC52C: 804061C0 (g_dComIfG_gameInfo)
//	807AC530: 804061C0 (g_dComIfG_gameInfo)
//	807AC53C: 80035360 (isSwitch__10dSv_info_cCFii)
//	807AC55C: 807AFE70 (stringBase0)
//	807AC560: 807AFE70 (stringBase0)
//	807AC564: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	807AC590: 807AC2FC (useHeapInit__FP10fopAc_ac_c)
//	807AC594: 807AC2FC (useHeapInit__FP10fopAc_ac_c)
//	807AC59C: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	807AC5B0: 807B0203 (struct_807B0200)
//	807AC5B4: 807B0203 (struct_807B0200)
//	807AC5D0: 807B0210 (l_HIO)
//	807AC5D4: 807B0210 (l_HIO)
//	807AC60C: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	807AC620: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	807AC64C: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	807AC65C: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	807AC66C: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	807AC68C: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	807AC694: 807AFEB4 (data_807AFEB4)
//	807AC698: 807AFEB4 (data_807AFEB4)
//	807AC69C: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	807AC6C4: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	807AC6CC: 807AFE70 (stringBase0)
//	807AC6D0: 807AFE70 (stringBase0)
//	807AC6D8: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	807AC7B0: 807AFF68 (lit_5983)
//	807AC7B4: 807AFF68 (lit_5983)
//	807AC7D8: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AC824: 807A7B64 (setActionMode__8daE_SW_cFss)
//	807AC82C: 807AC148 (daE_SW_Execute__FP8daE_SW_c)
//	807AC840: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::create() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/create__8daE_SW_cFv.s"
}
#pragma pop


/* 807AC854-807AC89C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	807AC86C: 807B0168 (__vt__8cM3dGSph)
//	807AC870: 807B0168 (__vt__8cM3dGSph)
//	807AC880: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 807AC89C-807AC8E4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	807AC8B4: 807B0174 (__vt__8cM3dGAab)
//	807AC8B8: 807B0174 (__vt__8cM3dGAab)
//	807AC8C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 807AC8E4-807AC940 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	807AC8FC: 807B015C (__vt__10dCcD_GStts)
//	807AC900: 807B015C (__vt__10dCcD_GStts)
//	807AC90C: 807B0150 (__vt__10cCcD_GStts)
//	807AC910: 807B0150 (__vt__10cCcD_GStts)
//	807AC924: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 807AC940-807AC9B0 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	807AC960: 807B0180 (__vt__12dBgS_ObjAcch)
//	807AC964: 807B0180 (__vt__12dBgS_ObjAcch)
//	807AC980: 80075F94 (__dt__9dBgS_AcchFv)
//	807AC990: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 807AC9B0-807ACA20 0070+00 s=2 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	807AC9D0: 807B0144 (__vt__12dBgS_AcchCir)
//	807AC9D4: 807B0144 (__vt__12dBgS_AcchCir)
//	807AC9E4: 8026EF18 (__dt__8cM3dGCirFv)
//	807AC9F0: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	807ACA00: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 807ACA20-807ACA40 0020+00 s=1 e=0 z=0  None .text      daE_SW_Create__FP8daE_SW_c                                   */
//	807ACA2C: 807AC31C (create__8daE_SW_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_SW_c* False
// 	 daE_SW_c False
asm static void daE_SW_Create(daE_SW_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/daE_SW_Create__FP8daE_SW_c.s"
}
#pragma pop


/* 807ACA40-807ACAE4 00A4+00 s=12 e=0 z=0  None .text      d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v                    */
//	807ACA60: 80362018 (__ptmf_test)
//	807ACA7C: 80362084 (__ptmf_scall)
//	807ACAC4: 80362084 (__ptmf_scall)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void (daE_SW_c::*)() False
// 	 * False
// 		  False
// 	 void False
// 	 daE_SW_c False
asm void daE_SW_c::d_setAction(void (daE_SW_c::*)()) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v.s"
}
#pragma pop


/* 807ACAE4-807ACCB0 01CC+00 s=1 e=0 z=0  None .text      d_checkFall__8daE_SW_cFv                                     */
//	807ACAF4: 803621D8 (_savegpr_28)
//	807ACAFC: 807AFE7C (cNullVec__6Z2Calc)
//	807ACB00: 807AFE7C (cNullVec__6Z2Calc)
//	807ACB04: 807AFD2C (lit_3909)
//	807ACB08: 807AFD2C (lit_3909)
//	807ACB2C: 80362048 (__ptmf_cmpr)
//	807ACB58: 80362048 (__ptmf_cmpr)
//	807ACB84: 80362048 (__ptmf_cmpr)
//	807ACBA4: 8007757C (__ct__11dBgS_GndChkFv)
//	807ACBD4: 80267D28 (SetPos__11cBgS_GndChkFPC4cXyz)
//	807ACBD8: 804061C0 (g_dComIfG_gameInfo)
//	807ACBDC: 804061C0 (g_dComIfG_gameInfo)
//	807ACBEC: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	807ACC34: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	807ACC48: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	807ACC5C: 80074EF0 (GetGroundCode__4dBgSFRC13cBgS_PolyInfo)
//	807ACC88: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ACC94: 800775F0 (__dt__11dBgS_GndChkFv)
//	807ACC9C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_checkFall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_checkFall__8daE_SW_cFv.s"
}
#pragma pop


/* 807ACCB0-807ACFF8 0348+00 s=1 e=0 z=0  None .text      d_damage_check__8daE_SW_cFv                                  */
//	807ACCC0: 803621DC (_savegpr_29)
//	807ACCC8: 807AFE7C (cNullVec__6Z2Calc)
//	807ACCCC: 807AFE7C (cNullVec__6Z2Calc)
//	807ACCD0: 804061C0 (g_dComIfG_gameInfo)
//	807ACCD4: 804061C0 (g_dComIfG_gameInfo)
//	807ACCE0: 80083830 (Move__10dCcD_GSttsFv)
//	807ACD10: 80362048 (__ptmf_cmpr)
//	807ACD3C: 80362048 (__ptmf_cmpr)
//	807ACDA0: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ACDAC: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	807ACDBC: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	807ACE08: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	807ACEC0: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ACF0C: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ACF3C: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ACF7C: 80362048 (__ptmf_cmpr)
//	807ACFA8: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ACFDC: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ACFE4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_damage_check() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_damage_check__8daE_SW_cFv.s"
}
#pragma pop


/* 807ACFF8-807AD10C 0114+00 s=1 e=0 z=0  None .text      d_action__8daE_SW_cFv                                        */
//	807AD018: 807ACCB0 (d_damage_check__8daE_SW_cFv)
//	807AD020: 807AFD34 (lit_3911)
//	807AD024: 807AFD34 (lit_3911)
//	807AD04C: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	807AD054: 804061C0 (g_dComIfG_gameInfo)
//	807AD058: 804061C0 (g_dComIfG_gameInfo)
//	807AD060: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	807AD068: 807ACAE4 (d_checkFall__8daE_SW_cFv)
//	807AD070: 807ABD28 (checkGroundSand__8daE_SW_cFv)
//	807AD07C: 80362084 (__ptmf_scall)
//	807AD08C: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	807AD0A4: 8002D06C (dComIfGp_getReverb__Fi)
//	807AD0B4: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	807AD0CC: 803DD470 (now__14mDoMtx_stack_c)
//	807AD0D0: 803DD470 (now__14mDoMtx_stack_c)
//	807AD0D4: 803464B0 (PSMTXCopy)
//	807AD0D8: 803DD470 (now__14mDoMtx_stack_c)
//	807AD0DC: 803DD470 (now__14mDoMtx_stack_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_action() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_action__8daE_SW_cFv.s"
}
#pragma pop


/* 807AD10C-807AD17C 0070+00 s=1 e=0 z=0  None .text      d_bomb_check__8daE_SW_cFv                                    */
//	807AD134: 807A7C50 (search_bomb__8daE_SW_cFv)
//	807AD144: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807AD148: 807B0210 (l_HIO)
//	807AD14C: 807B0210 (l_HIO)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_bomb_check() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_bomb_check__8daE_SW_cFv.s"
}
#pragma pop


/* 807AD17C-807AD4A8 032C+00 s=2 e=0 z=0  None .text      d_bm_chase__8daE_SW_cFv                                      */
//	807AD18C: 803621DC (_savegpr_29)
//	807AD194: 807AFD2C (lit_3909)
//	807AD198: 807AFD2C (lit_3909)
//	807AD1B8: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	807AD1D4: 807B0060 (lit_6411)
//	807AD1D8: 807B0060 (lit_6411)
//	807AD1FC: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AD244: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AD29C: 8034739C (PSVECSquareDistance)
//	807AD30C: 80450AE0 (__float_nan)
//	807AD310: 80450AE0 (__float_nan)
//	807AD37C: 80450AE0 (__float_nan)
//	807AD380: 80450AE0 (__float_nan)
//	807AD384: 807B0210 (l_HIO)
//	807AD388: 807B0210 (l_HIO)
//	807AD39C: 80267954 (cM_rndF__Ff)
//	807AD408: 807B006C (lit_6426)
//	807AD40C: 807B006C (lit_6426)
//	807AD430: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AD440: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807AD454: 8026FA3C (cLib_addCalc2__FPffff)
//	807AD46C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807AD484: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AD494: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_bm_chase() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_bm_chase__8daE_SW_cFv.s"
}
#pragma pop


/* 807AD4A8-807AD7C0 0318+00 s=7 e=0 z=0  None .text      d_wait__8daE_SW_cFv                                          */
//	807AD4C0: 807AFD2C (lit_3909)
//	807AD4C4: 807AFD2C (lit_3909)
//	807AD518: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AD528: 80267954 (cM_rndF__Ff)
//	807AD578: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807AD588: 8026798C (cM_rndFX__Ff)
//	807AD5A4: 8026798C (cM_rndFX__Ff)
//	807AD618: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AD648: 80270740 (cLib_chaseF__FPfff)
//	807AD6E0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AD6F4: 8026FA3C (cLib_addCalc2__FPffff)
//	807AD714: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807AD724: 807AD10C (d_bomb_check__8daE_SW_cFv)
//	807AD730: 807B0078 (lit_6521)
//	807AD734: 807B0078 (lit_6521)
//	807AD758: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AD770: 807AD7C0 (d_chaseCheck__8daE_SW_cFv)
//	807AD77C: 807B0084 (lit_6527)
//	807AD780: 807B0084 (lit_6527)
//	807AD7A4: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_wait() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_wait__8daE_SW_cFv.s"
}
#pragma pop


/* 807AD7C0-807ADA08 0248+00 s=1 e=0 z=0  None .text      d_chaseCheck__8daE_SW_cFv                                    */
//	807AD7D8: 803621DC (_savegpr_29)
//	807AD7E0: 807AFD2C (lit_3909)
//	807AD7E4: 807AFD2C (lit_3909)
//	807AD7E8: 804061C0 (g_dComIfG_gameInfo)
//	807AD7EC: 804061C0 (g_dComIfG_gameInfo)
//	807AD828: 8034739C (PSVECSquareDistance)
//	807AD898: 80450AE0 (__float_nan)
//	807AD89C: 80450AE0 (__float_nan)
//	807AD908: 80450AE0 (__float_nan)
//	807AD90C: 80450AE0 (__float_nan)
//	807AD91C: 807B0210 (l_HIO)
//	807AD920: 807B0210 (l_HIO)
//	807AD93C: 804061C0 (g_dComIfG_gameInfo)
//	807AD940: 804061C0 (g_dComIfG_gameInfo)
//	807AD94C: 800737E4 (LockonTruth__12dAttention_cFv)
//	807AD960: 8007353C (LockonTarget__12dAttention_cFl)
//	807AD970: 804061C0 (g_dComIfG_gameInfo)
//	807AD974: 804061C0 (g_dComIfG_gameInfo)
//	807AD994: 80270E24 (cLib_distanceAngleS__Fss)
//	807AD9BC: 803650D0 (abs)
//	807AD9C8: 807B0210 (l_HIO)
//	807AD9CC: 807B0210 (l_HIO)
//	807AD9F4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_chaseCheck() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_chaseCheck__8daE_SW_cFv.s"
}
#pragma pop


/* 807ADA08-807ADE50 0448+00 s=1 e=0 z=0  None .text      d_chase__8daE_SW_cFv                                         */
//	807ADA18: 803621D4 (_savegpr_27)
//	807ADA20: 807AFE7C (cNullVec__6Z2Calc)
//	807ADA24: 807AFE7C (cNullVec__6Z2Calc)
//	807ADA28: 807AFD2C (lit_3909)
//	807ADA2C: 807AFD2C (lit_3909)
//	807ADA30: 804061C0 (g_dComIfG_gameInfo)
//	807ADA34: 804061C0 (g_dComIfG_gameInfo)
//	807ADA68: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807ADA94: 807A78B4 (setSmokeEffect__8daE_SW_cFv)
//	807ADAC4: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ADB00: 8034739C (PSVECSquareDistance)
//	807ADB70: 80450AE0 (__float_nan)
//	807ADB74: 80450AE0 (__float_nan)
//	807ADBE0: 80450AE0 (__float_nan)
//	807ADBE4: 80450AE0 (__float_nan)
//	807ADBE8: 807B0210 (l_HIO)
//	807ADBEC: 807B0210 (l_HIO)
//	807ADC20: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ADC5C: 8034739C (PSVECSquareDistance)
//	807ADCCC: 80450AE0 (__float_nan)
//	807ADCD0: 80450AE0 (__float_nan)
//	807ADD3C: 80450AE0 (__float_nan)
//	807ADD40: 80450AE0 (__float_nan)
//	807ADD44: 807B0210 (l_HIO)
//	807ADD48: 807B0210 (l_HIO)
//	807ADD78: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807ADDCC: 803650D0 (abs)
//	807ADE00: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807ADE10: 80270740 (cLib_chaseF__FPfff)
//	807ADE34: 807A76E4 (setBeforeJumpEffect__8daE_SW_cFv)
//	807ADE3C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_chase() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_chase__8daE_SW_cFv.s"
}
#pragma pop


/* 807ADE50-807AE4B4 0664+00 s=3 e=0 z=0  None .text      d_attk__8daE_SW_cFv                                          */
//	807ADE60: 803621D8 (_savegpr_28)
//	807ADE68: 807AFE7C (cNullVec__6Z2Calc)
//	807ADE6C: 807AFE7C (cNullVec__6Z2Calc)
//	807ADE70: 807AFD2C (lit_3909)
//	807ADE74: 807AFD2C (lit_3909)
//	807ADE78: 804061C0 (g_dComIfG_gameInfo)
//	807ADE7C: 804061C0 (g_dComIfG_gameInfo)
//	807ADECC: 807A7A08 (setDiveEffect__8daE_SW_cFv)
//	807ADF10: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807ADF58: 80362048 (__ptmf_cmpr)
//	807ADF6C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807ADF7C: 8034739C (PSVECSquareDistance)
//	807ADFEC: 80450AE0 (__float_nan)
//	807ADFF0: 80450AE0 (__float_nan)
//	807AE05C: 80450AE0 (__float_nan)
//	807AE060: 80450AE0 (__float_nan)
//	807AE0B0: 8034739C (PSVECSquareDistance)
//	807AE120: 80450AE0 (__float_nan)
//	807AE124: 80450AE0 (__float_nan)
//	807AE190: 80450AE0 (__float_nan)
//	807AE194: 80450AE0 (__float_nan)
//	807AE1C4: 807A77CC (setJumpEffect__8daE_SW_cFv)
//	807AE1D4: 80270B90 (cLib_chaseAngleS__FPsss)
//	807AE214: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AE230: 807A77CC (setJumpEffect__8daE_SW_cFv)
//	807AE240: 80270B90 (cLib_chaseAngleS__FPsss)
//	807AE250: 80270740 (cLib_chaseF__FPfff)
//	807AE29C: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AE2B0: 807A7A08 (setDiveEffect__8daE_SW_cFv)
//	807AE308: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807AE328: 80270740 (cLib_chaseF__FPfff)
//	807AE338: 80270740 (cLib_chaseF__FPfff)
//	807AE3C8: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AE400: 80270740 (cLib_chaseF__FPfff)
//	807AE424: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AE458: 8001DCBC (gndCheck__11fopAcM_gc_cFPC4cXyz)
//	807AE468: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807AE470: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807AE474: 80450CD0 (mGroundY__11fopAcM_gc_c)
//	807AE490: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AE4A0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_attk() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_attk__8daE_SW_cFv.s"
}
#pragma pop


/* 807AE4B4-807AE7F4 0340+00 s=5 e=0 z=0  None .text      d_chance__8daE_SW_cFv                                        */
//	807AE4D4: 807AFD2C (lit_3909)
//	807AE4D8: 807AFD2C (lit_3909)
//	807AE550: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AE55C: 807B00E4 (lit_6858)
//	807AE560: 807B00E4 (lit_6858)
//	807AE584: 80362048 (__ptmf_cmpr)
//	807AE618: 804061C0 (g_dComIfG_gameInfo)
//	807AE61C: 804061C0 (g_dComIfG_gameInfo)
//	807AE66C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807AE680: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AE698: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AE6DC: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AE6F4: 8026798C (cM_rndFX__Ff)
//	807AE714: 8026798C (cM_rndFX__Ff)
//	807AE724: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807AE770: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AE7A8: 807B00F0 (lit_6887)
//	807AE7AC: 807B00F0 (lit_6887)
//	807AE7D0: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_chance() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_chance__8daE_SW_cFv.s"
}
#pragma pop


/* 807AE7F4-807AE968 0174+00 s=2 e=0 z=0  None .text      d_chance2__8daE_SW_cFv                                       */
//	807AE80C: 807AFD2C (lit_3909)
//	807AE810: 807AFD2C (lit_3909)
//	807AE84C: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AE864: 804061C0 (g_dComIfG_gameInfo)
//	807AE868: 804061C0 (g_dComIfG_gameInfo)
//	807AE870: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807AE89C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AE8B4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AE924: 807B00FC (lit_6929)
//	807AE928: 807B00FC (lit_6929)
//	807AE94C: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_chance2() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_chance2__8daE_SW_cFv.s"
}
#pragma pop


/* 807AE968-807AEB08 01A0+00 s=1 e=0 z=0  None .text      d_dive__8daE_SW_cFv                                          */
//	807AE980: 807AFD2C (lit_3909)
//	807AE984: 807AFD2C (lit_3909)
//	807AE9C0: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AE9C8: 807A7AC0 (setHideEffect__8daE_SW_cFv)
//	807AE9E8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AEA2C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AEA80: 807B0108 (lit_6959)
//	807AEA84: 807B0108 (lit_6959)
//	807AEAA8: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AEAC4: 8026FA3C (cLib_addCalc2__FPffff)
//	807AEAD8: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807AEAEC: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_dive() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_dive__8daE_SW_cFv.s"
}
#pragma pop


/* 807AEB08-807AEE44 033C+00 s=4 e=0 z=0  None .text      d_damage__8daE_SW_cFv                                        */
//	807AEB20: 807AFD2C (lit_3909)
//	807AEB24: 807AFD2C (lit_3909)
//	807AEB98: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AEBA0: 80267954 (cM_rndF__Ff)
//	807AEBB4: 80267954 (cM_rndF__Ff)
//	807AEC7C: 80267954 (cM_rndF__Ff)
//	807AEC90: 80267954 (cM_rndF__Ff)
//	807AECE8: 804061C0 (g_dComIfG_gameInfo)
//	807AECEC: 804061C0 (g_dComIfG_gameInfo)
//	807AED3C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807AED58: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807AED94: 807B0114 (lit_6993)
//	807AED98: 807B0114 (lit_6993)
//	807AEDBC: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AEDC4: 807B0120 (lit_6996)
//	807AEDC8: 807B0120 (lit_6996)
//	807AEDEC: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_damage() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_damage__8daE_SW_cFv.s"
}
#pragma pop


/* 807AEE44-807AF01C 01D8+00 s=2 e=0 z=0  None .text      d_die__8daE_SW_cFv                                           */
//	807AEE5C: 807AFD2C (lit_3909)
//	807AEE60: 807AFD2C (lit_3909)
//	807AEEA4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807AEEE0: 8026FA3C (cLib_addCalc2__FPffff)
//	807AEF04: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AEF58: 8026FA3C (cLib_addCalc2__FPffff)
//	807AEF98: 807B0202 (struct_807B0200)
//	807AEF9C: 807B0202 (struct_807B0200)
//	807AEFCC: 804061C0 (g_dComIfG_gameInfo)
//	807AEFD0: 804061C0 (g_dComIfG_gameInfo)
//	807AEFE0: 80035200 (onSwitch__10dSv_info_cFii)
//	807AEFF8: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	807AF000: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_die() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_die__8daE_SW_cFv.s"
}
#pragma pop


/* 807AF01C-807AF46C 0450+00 s=3 e=0 z=0  None .text      d_hook__8daE_SW_cFv                                          */
//	807AF02C: 803621DC (_savegpr_29)
//	807AF034: 807AFD2C (lit_3909)
//	807AF038: 807AFD2C (lit_3909)
//	807AF084: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AF12C: 803DD470 (now__14mDoMtx_stack_c)
//	807AF130: 803DD470 (now__14mDoMtx_stack_c)
//	807AF138: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807AF154: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807AF168: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807AF16C: 803DD470 (now__14mDoMtx_stack_c)
//	807AF170: 803DD470 (now__14mDoMtx_stack_c)
//	807AF1A4: 804061C0 (g_dComIfG_gameInfo)
//	807AF1A8: 804061C0 (g_dComIfG_gameInfo)
//	807AF1FC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807AF234: 807B012C (lit_7081)
//	807AF238: 807B012C (lit_7081)
//	807AF25C: 807ACA40 (d_setAction__8daE_SW_cFM8daE_SW_cFPCvPv_v)
//	807AF298: 8034739C (PSVECSquareDistance)
//	807AF308: 80450AE0 (__float_nan)
//	807AF30C: 80450AE0 (__float_nan)
//	807AF378: 80450AE0 (__float_nan)
//	807AF37C: 80450AE0 (__float_nan)
//	807AF390: 80077C68 (__ct__11dBgS_LinChkFv)
//	807AF3A4: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	807AF3A8: 804061C0 (g_dComIfG_gameInfo)
//	807AF3AC: 804061C0 (g_dComIfG_gameInfo)
//	807AF3BC: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	807AF3C8: 807B0138 (__vt__8cM3dGPla)
//	807AF3CC: 807B0138 (__vt__8cM3dGPla)
//	807AF3E0: 80074744 (GetTriPla__4cBgSCFRC13cBgS_PolyInfoP8cM3dGPla)
//	807AF43C: 807B0138 (__vt__8cM3dGPla)
//	807AF440: 807B0138 (__vt__8cM3dGPla)
//	807AF450: 80077CDC (__dt__11dBgS_LinChkFv)
//	807AF458: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_hook() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_hook__8daE_SW_cFv.s"
}
#pragma pop


/* 807AF46C-807AF4B4 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGPlaFv                                            */
//	807AF484: 807B0138 (__vt__8cM3dGPla)
//	807AF488: 807B0138 (__vt__8cM3dGPla)
//	807AF498: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGPla::~cM3dGPla() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__8cM3dGPlaFv.s"
}
#pragma pop


/* 807AF4B4-807AF57C 00C8+00 s=2 e=0 z=0  None .text      d_fall__8daE_SW_cFv                                          */
//	807AF4CC: 807AFD2C (lit_3909)
//	807AF4D0: 807AFD2C (lit_3909)
//	807AF534: 80270740 (cLib_chaseF__FPfff)
//	807AF558: 807A7460 (bckSet__8daE_SW_cFifUcf)
//	807AF560: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_fall() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_fall__8daE_SW_cFv.s"
}
#pragma pop


/* 807AF57C-807AF828 02AC+00 s=1 e=0 z=0  None .text      d_execute__8daE_SW_cFv                                       */
//	807AF58C: 803621DC (_savegpr_29)
//	807AF594: 807AFD2C (lit_3909)
//	807AF598: 807AFD2C (lit_3909)
//	807AF618: 804061C0 (g_dComIfG_gameInfo)
//	807AF61C: 804061C0 (g_dComIfG_gameInfo)
//	807AF624: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807AF634: 8034739C (PSVECSquareDistance)
//	807AF6A4: 80450AE0 (__float_nan)
//	807AF6A8: 80450AE0 (__float_nan)
//	807AF714: 80450AE0 (__float_nan)
//	807AF718: 80450AE0 (__float_nan)
//	807AF724: 807ACFF8 (d_action__8daE_SW_cFv)
//	807AF72C: 807AB884 (mtx_set__8daE_SW_cFv)
//	807AF734: 807AB930 (cc_set__8daE_SW_cFv)
//	807AF7B8: 803DD470 (now__14mDoMtx_stack_c)
//	807AF7BC: 803DD470 (now__14mDoMtx_stack_c)
//	807AF7C0: 803464B0 (PSMTXCopy)
//	807AF7C4: 803DD470 (now__14mDoMtx_stack_c)
//	807AF7C8: 803DD470 (now__14mDoMtx_stack_c)
//	807AF808: 807AF904 (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	807AF814: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_SW_c::d_execute() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/d_execute__8daE_SW_cFv.s"
}
#pragma pop


/* 807AF828-807AF870 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	807AF840: 807B0150 (__vt__10cCcD_GStts)
//	807AF844: 807B0150 (__vt__10cCcD_GStts)
//	807AF854: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 807AF870-807AF8B8 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_SW_HIO_cFv                                       */
//	807AF888: 807B01A4 (__vt__12daE_SW_HIO_c)
//	807AF88C: 807B01A4 (__vt__12daE_SW_HIO_c)
//	807AF89C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_SW_HIO_c::~daE_SW_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__dt__12daE_SW_HIO_cFv.s"
}
#pragma pop


/* 807AF8B8-807AF8F4 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_sw_cpp                                         */
//	807AF8C4: 807B0210 (l_HIO)
//	807AF8C8: 807B0210 (l_HIO)
//	807AF8CC: 807A740C (__ct__12daE_SW_HIO_cFv)
//	807AF8D0: 807AF870 (__dt__12daE_SW_HIO_cFv)
//	807AF8D4: 807AF870 (__dt__12daE_SW_HIO_cFv)
//	807AF8D8: 807B0204 (lit_3925)
//	807AF8DC: 807B0204 (lit_3925)
//	807AF8E0: 807A7398 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_sw_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/__sinit_d_a_e_sw_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_807AF8B8 = (void*)__sinit_d_a_e_sw_cpp;
#pragma pop


/* 807AF8F4-807AF8FC 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	807AF8F8: 807AC940 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807AF8F4() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/func_807AF8F4.s"
}
#pragma pop


/* 807AF8FC-807AF904 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	807AF900: 807AC940 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807AF8FC() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/func_807AF8FC.s"
}
#pragma pop


/* 807AF904-807AFD18 0414+00 s=2 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	807AF914: 803621B4 (_savegpr_19)
//	807AF928: 807AFE7C (cNullVec__6Z2Calc)
//	807AF92C: 807AFE7C (cNullVec__6Z2Calc)
//	807AF930: 807AFD2C (lit_3909)
//	807AF934: 807AFD2C (lit_3909)
//	807AF938: 804061C0 (g_dComIfG_gameInfo)
//	807AF93C: 804061C0 (g_dComIfG_gameInfo)
//	807AF944: 80451018 (m_midnaActor__9daPy_py_c)
//	807AF948: 80451018 (m_midnaActor__9daPy_py_c)
//	807AF970: 801AC57C (dKy_darkworld_check__Fv)
//	807AF994: 80451018 (m_midnaActor__9daPy_py_c)
//	807AF998: 80451018 (m_midnaActor__9daPy_py_c)
//	807AF9B0: 803DD470 (now__14mDoMtx_stack_c)
//	807AF9B4: 803DD470 (now__14mDoMtx_stack_c)
//	807AF9B8: 803464B0 (PSMTXCopy)
//	807AF9D0: 803DD470 (now__14mDoMtx_stack_c)
//	807AF9D4: 803DD470 (now__14mDoMtx_stack_c)
//	807AF9E0: 80346D6C (PSMTXMultVec)
//	807AF9F0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807AFA0C: 80267674 (cM_atan2s__Fff)
//	807AFA40: 80267674 (cM_atan2s__Fff)
//	807AFA5C: 804061C0 (g_dComIfG_gameInfo)
//	807AFA60: 804061C0 (g_dComIfG_gameInfo)
//	807AFAB0: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807AFAC0: 80347138 (PSVECSquareMag)
//	807AFB30: 80450AE0 (__float_nan)
//	807AFB34: 80450AE0 (__float_nan)
//	807AFBA0: 80450AE0 (__float_nan)
//	807AFBA4: 80450AE0 (__float_nan)
//	807AFBF8: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807AFC34: 804061C0 (g_dComIfG_gameInfo)
//	807AFC38: 804061C0 (g_dComIfG_gameInfo)
//	807AFCA4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807AFD04: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_sw/d_a_e_sw/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


/* ############################################################################################## */
/* 807B0234-807B0238 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_807B0234[4];

/* 807B0238-807B023C 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_807B0238[4];

/* 807B023C-807B0240 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_807B023C[4];

/* 807B0240-807B0244 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_807B0240[4];

/* 807B0244-807B0248 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_807B0244[4];

/* 807B0248-807B024C 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_807B0248[4];

/* 807B024C-807B0250 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_807B024C[4];

/* 807B0250-807B0254 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_807B0250[4];

/* 807B0254-807B0258 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_807B0254[4];

/* 807B0258-807B025C 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_807B0258[4];

/* 807B025C-807B0260 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_807B025C[4];

/* 807B0260-807B0264 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_807B0260[4];

/* 807B0264-807B0268 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_807B0264[4];

/* 807B0268-807B026C 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_807B0268[4];

/* 807B026C-807B0270 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_807B026C[4];

/* 807B0270-807B0274 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_807B0270[4];

/* 807B0274-807B0278 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_807B0274[4];

/* 807B0278-807B027C 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_807B0278[4];

/* 807B027C-807B0280 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_807B027C[4];

/* 807B0280-807B0284 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_807B0280[4];

/* 807B0284-807B0288 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_807B0284[4];

/* 807B0288-807B028C 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_807B0288[4];

/* 807B028C-807B0290 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_807B028C[4];

/* 807B0290-807B0294 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_807B0290[4];

/* 807B0294-807B0298 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_807B0294[4];

