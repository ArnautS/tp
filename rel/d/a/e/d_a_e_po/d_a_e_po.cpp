// 
// Generated By: dol2asm
// Translation Unit: d_a_e_po
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_po/d_a_e_po.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
};

struct mDoExt_morf_c {
	/* 807573FC */ // True False
void getFrame();
	/* 80757404 */ // True False
void isStop();
};

struct Vec {
};

struct cXyz {
	/* 80266AE4 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+(Vec const&) const;
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 80266B84 */ // False False
//  f32 False
void operator*(f32) const;
	/* 80267128 */ // False False
void atan2sX_Z() const;
	/* 80267150 */ // False False
void atan2sY_XZ() const;
	/* 807572CC */ // True False
~cXyz();
	/* 80757348 */ // True False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator+=(Vec const&);
	/* 80757460 */ // True False
void abs() const;
	/* 807575AC */ // True False
//  f32 False
//  f32 False
//  f32 False
void set(f32, f32, f32);
	/* 80757590 */ // True False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void set(Vec const&);
	/* 80757604 */ // True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void operator=(cXyz const&);
	/* 8075768C */ // True False
//  f32 False
//  f32 False
//  f32 False
cXyz(f32, f32, f32);
	/* 80757670 */ // True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
cXyz(cXyz const&);
};

struct J3DModel {
};

struct mDoExt_invisibleModel {
	/* 8000E53C */ // False False
//  J3DModel* False
// 	 J3DModel False
//  u8 False
void create(J3DModel*, u8);
	/* 8000E7C0 */ // False False
//  cXyz* False
// 	 cXyz False
void entryDL(cXyz*);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
};

struct mDoExt_McaMorf {
	/* 8000FC4C */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
mDoExt_McaMorf(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, int, void*, u32, u32);
	/* 800105C8 */ // False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
void play(Vec*, u32, s8);
	/* 80010680 */ // False False
void entryDL();
	/* 800106AC */ // False False
void modelCalc();
};

struct dKy_tevstr_c {
};

struct fopEn_enemy_c {
	/* 80019404 */ // False False
void initBallModel();
	/* 800194FC */ // False False
void checkBallModelDraw();
	/* 80019520 */ // False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setBallModelEffect(dKy_tevstr_c*);
	/* 800196A0 */ // False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void drawBallModel(dKy_tevstr_c*);
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct e_po_class {
	/* 80756900 */ // True False
e_po_class();
};

struct daPy_py_c {
	/* 8015F424 */ // False False
void checkNowWolfEyeUp();
	/* 80757308 */ // True False
void cancelOriginalDemo();
	/* 80757574 */ // True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void changeDemoPos0(cXyz const*);
	/* 807575BC */ // True False
//  u32 False
//  int False
//  int False
//  s16 False
void changeDemoMode(u32, int, int, s16);
	/* 807575D0 */ // True False
void changeOriginalDemo();
};

struct daE_PO_HIO_c {
	/* 8074C54C */ // True False
daE_PO_HIO_c();
	/* 80756DE8 */ // True False
~daE_PO_HIO_c();
};

struct dVibration_c {
	/* 8006FB10 */ // False False
//  int False
//  int False
//  cXyz False
void StartQuake(int, int, cXyz);
	/* 8006FD94 */ // False False
//  int False
void StopQuake(int);
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 800352B0 */ // False False
//  int False
//  int False
void offSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dSv_event_c {
	/* 8003498C */ // False False
//  u16 False
void onEventBit(u16);
};

struct dSv_danBit_c {
	/* 80034B98 */ // False False
//  int False
void onSwitch(int);
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
	/* 80756B00 */ // True False
//  void False
void cleanup();
	/* 80756B04 */ // True False
~dPa_levelEcallBack();
};

struct dPa_hermiteEcallBack_c {
	/* 8004F6B8 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void setOldPosP(cXyz const*, cXyz const*);
};

struct csXyz {
	/* 80756D8C */ // True False
csXyz();
	/* 80757290 */ // True False
~csXyz();
};

struct _GXColor {
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004C218 */ // False False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
void setHitMark(u16, fopAc_ac_c*, cXyz const*, csXyz const*, cXyz const*, u32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
};

struct dEvt_info_c {
	/* 8075764C */ // True False
//  u16 False
void onCondition(u16);
	/* 8075765C */ // True False
void checkCommandDemoAccrpt();
};

struct dEvt_control_c {
	/* 80042468 */ // False False
void reset();
	/* 8004368C */ // False False
//  void* False
// 	 void False
void setPtT(void*);
	/* 800436EC */ // False False
//  unsigned int False
void setPtI_Id(unsigned int);
};

struct dEvent_manager_c {
	/* 80047758 */ // False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
void getEventIdx(fopAc_ac_c*, char const*, u8);
	/* 80047A78 */ // False False
//  s16 False
void endCheck(s16);
	/* 800483E8 */ // False False
void getRunEventName();
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_SrcCyl {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
	/* 80084A78 */ // False False
//  cXyz& False
// 	 cXyz False
void StartCAt(cXyz&);
	/* 80084AC4 */ // False False
//  cXyz& False
// 	 cXyz False
void MoveCAt(cXyz&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 80756C50 */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dCcD_Cyl {
	/* 800848B4 */ // False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
void Set(dCcD_SrcCyl const&);
};

struct dCamera_c {
	/* 801614AC */ // False False
void Start();
	/* 801614D0 */ // False False
void Stop();
	/* 8016300C */ // False False
//  s32 False
void SetTrimSize(s32);
	/* 80180AE0 */ // False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
void Set(cXyz, cXyz, f32, s16);
	/* 80180AA8 */ // False False
//  cXyz False
//  cXyz False
void Set(cXyz, cXyz);
	/* 80180C18 */ // False False
//  cXyz False
//  cXyz False
void Reset(cXyz, cXyz);
	/* 80181170 */ // False False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
void StartBlure(int, fopAc_ac_c*, f32, f32);
	/* 80181E64 */ // False False
void Eye();
	/* 80181E98 */ // False False
void Center();
	/* 807575F4 */ // True False
void Fovy();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjAcch {
	/* 80756CAC */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 80756D1C */ // True False
~dBgS_AcchCir();
};

struct dBgS {
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct dAttention_c {
	/* 80070844 */ // False False
//  s32 False
void GetLockonList(s32);
	/* 800737E4 */ // False False
void LockonTruth();
};

struct dAttList_c {
	/* 80073864 */ // False False
void getActor();
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 80756B78 */ // True False
~cM3dGSph();
};

struct cM3dGCyl {
	/* 8026F1DC */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 80756BC0 */ // True False
~cM3dGCyl();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 80756C08 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_ObjHitInf {
	/* 80754AC8 */ // True False
void OnCoSetBit();
};

struct cCcD_GStts {
	/* 80756D90 */ // True False
~cCcD_GStts();
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct cBgS_LinChk {
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
};

struct JAISoundID {
	/* 807573C0 */ // True False
//  u32 False
JAISoundID(u32);
};

struct Z2SeMgr {
	/* 802AB984 */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStart(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
	/* 802AC50C */ // False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
void seStartLevel(JAISoundID, Vec const*, u32, s8, f32, f32, f32, f32, u8);
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct JPABaseEmitter {
};

struct JPAEmitterCallBack {
	/* 8027E6A4 */ // False False
~JPAEmitterCallBack();
	/* 80756DD8 */ // True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void execute(JPABaseEmitter*);
	/* 80756DDC */ // True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void executeAfter(JPABaseEmitter*);
	/* 80756DE0 */ // True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void draw(JPABaseEmitter*);
	/* 80756DE4 */ // True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void drawAfter(JPABaseEmitter*);
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DJoint {
};

// 
// Forward References:
// 

// True False
//  e_po_class* False
// 	 e_po_class False
//  s16 False
static void mArg0Check(e_po_class*, s16);
// True False
//  e_po_class* False
// 	 e_po_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
static void anm_init(e_po_class*, int, f32, u8, f32);
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
static void nodeCallBack(J3DJoint*, int);
// True False
//  e_po_class* False
// 	 e_po_class False
static void daE_PO_Draw(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_opening(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_wait(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_avoid(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_search(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_attack(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void damage_check(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_damage(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_wolfbite(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_dead(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
//  s16 False
//  f32 False
//  f32 False
static void e_rollingMove(e_po_class*, s16, f32, f32);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_limbering(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_roll_move(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void e_po_holl_demo(e_po_class*);
// True False
//  u32 False
static void dComIfGp_particle_getEmitter(u32);
// True False
//  u32 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
static void dComIfGp_particle_set(u32, u16, cXyz const*, csXyz const*, cXyz const*);
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
static void fopAcM_isSwitch(fopAc_ac_c const*, int);
// True False
//  void const* False
// 	 void const False
// 		 void False
static void fopAcM_GetID(void const*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
static void fopAcM_SetGroup(fopAc_ac_c*, u8);
// True False
//  e_po_class* False
// 	 e_po_class False
static void action(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void daE_PO_Execute(e_po_class*);
// True False
//  void False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void mPo_tgHitCallback(fopAc_ac_c*, dCcD_GObjInf*, fopAc_ac_c*, dCcD_GObjInf*);
// True False
//  bool False
//  e_po_class* False
// 	 e_po_class False
static bool daE_PO_IsDelete(e_po_class*);
// True False
//  e_po_class* False
// 	 e_po_class False
static void daE_PO_Delete(e_po_class*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void daE_PO_Create(fopAc_ac_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);
// True False
static void dComIfGp_event_reset();
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
static void fopAcM_onSwitch(fopAc_ac_c const*, int);
// True False
static void dComIfGp_getVibration();
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
static void fopAcM_offSwitch(fopAc_ac_c const*, int);
// True False
//  s16 False
static void cM_scos(s16);
// True False
//  s16 False
static void cM_ssin(s16);
// True False
static void daPy_getPlayerActorClass();
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
static void fopAcM_searchPlayerAngleY(fopAc_ac_c const*);
// True False
//  int False
static void dComIfGp_getCamera(int);
// True False
//  int False
static void dComIfGp_getPlayerCameraID(int);
// True False
//  int False
static void dComIfGp_getPlayer(int);

// True False
extern "C" void __ct__12daE_PO_HIO_cFv();
// True False
//  e_po_class* False
// 	 e_po_class False
//  s16 False
extern "C" static void mArg0Check__FP10e_po_classs();
// True False
//  e_po_class* False
// 	 e_po_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
extern "C" static void anm_init__FP10e_po_classifUcf();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" static void nodeCallBack__FP8J3DJointi();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void daE_PO_Draw__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_opening__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_wait__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_avoid__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_search__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_attack__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void damage_check__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_damage__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_wolfbite__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_dead__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
//  s16 False
//  f32 False
//  f32 False
extern "C" static void e_rollingMove__FP10e_po_classsff();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_limbering__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_roll_move__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void e_po_holl_demo__FP10e_po_class();
// True False
//  u32 False
extern "C" static void dComIfGp_particle_getEmitter__FUl();
// True False
//  u32 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" static void dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz();
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
extern "C" static void fopAcM_isSwitch__FPC10fopAc_ac_ci();
// True False
//  void const* False
// 	 void const False
// 		 void False
extern "C" static void fopAcM_GetID__FPCv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
extern "C" static void fopAcM_SetGroup__FP10fopAc_ac_cUc();
// True False
extern "C" void OnCoSetBit__14cCcD_ObjHitInfFv();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void action__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void daE_PO_Execute__FP10e_po_class();
// True False
//  void False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
extern "C" static void mPo_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf();
// True False
//  bool False
//  e_po_class* False
// 	 e_po_class False
extern "C" static bool daE_PO_IsDelete__FP10e_po_class();
// True False
//  e_po_class* False
// 	 e_po_class False
extern "C" static void daE_PO_Delete__FP10e_po_class();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void daE_PO_Create__FP10fopAc_ac_c();
// True False
extern "C" void __ct__10e_po_classFv();
// True False
//  void False
extern "C" void cleanup__18dPa_levelEcallBackFv();
// True False
extern "C" void __dt__18dPa_levelEcallBackFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGCylFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __ct__5csXyzFv();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
extern "C" void execute__18JPAEmitterCallBackFP14JPABaseEmitter();
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
extern "C" void executeAfter__18JPAEmitterCallBackFP14JPABaseEmitter();
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
extern "C" void draw__18JPAEmitterCallBackFP14JPABaseEmitter();
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
extern "C" void drawAfter__18JPAEmitterCallBackFP14JPABaseEmitter();
// True False
extern "C" void __dt__12daE_PO_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_po_cpp();
// True False
extern "C" static void func_80756E6C();
// True False
extern "C" static void func_80756E74();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
// True False
extern "C" void __dt__5csXyzFv();
// True False
extern "C" void __dt__4cXyzFv();
// True False
extern "C" void cancelOriginalDemo__9daPy_py_cFv();
// True False
extern "C" static void dComIfGp_event_reset__Fv();
// True False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __apl__4cXyzFRC3Vec();
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
extern "C" static void fopAcM_onSwitch__FPC10fopAc_ac_ci();
// True False
extern "C" static void dComIfGp_getVibration__Fv();
// True False
//  u32 False
extern "C" void __ct__10JAISoundIDFUl();
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
extern "C" static void fopAcM_offSwitch__FPC10fopAc_ac_ci();
// True False
extern "C" void getFrame__13mDoExt_morf_cFv();
// True False
extern "C" void isStop__13mDoExt_morf_cFv();
// True False
//  s16 False
extern "C" static void cM_scos__Fs();
// True False
//  s16 False
extern "C" static void cM_ssin__Fs();
// True False
extern "C" void abs__4cXyzCFv();
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void changeDemoPos0__9daPy_py_cFPC4cXyz();
// True False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void set__4cXyzFRC3Vec();
// True False
//  f32 False
//  f32 False
//  f32 False
extern "C" void set__4cXyzFfff();
// True False
//  u32 False
//  int False
//  int False
//  s16 False
extern "C" void changeDemoMode__9daPy_py_cFUliis();
// True False
extern "C" void changeOriginalDemo__9daPy_py_cFv();
// True False
extern "C" static void daPy_getPlayerActorClass__Fv();
// True False
extern "C" void Fovy__9dCamera_cFv();
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void __as__4cXyzFRC4cXyz();
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" static void fopAcM_searchPlayerAngleY__FPC10fopAc_ac_c();
// True False
//  u16 False
extern "C" void onCondition__11dEvt_info_cFUs();
// True False
extern "C" void checkCommandDemoAccrpt__11dEvt_info_cFv();
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void __ct__4cXyzFRC4cXyz();
// True False
//  f32 False
//  f32 False
//  f32 False
extern "C" void __ct__4cXyzFfff();
// True False
//  int False
extern "C" static void dComIfGp_getCamera__Fi();
// True False
//  int False
extern "C" static void dComIfGp_getPlayerCameraID__Fi();
// True False
//  int False
extern "C" static void dComIfGp_getPlayer__Fi();
extern "C" extern u8 const lit_3920[8];
extern "C" extern u8 const lit_3921[8];
extern "C" extern u8 const lit_3922[8];
extern "C" extern u32 const lit_3923;
extern "C" extern u32 const lit_3938;
extern "C" extern u32 const lit_3939;
extern "C" extern u32 const lit_3940;
extern "C" extern u32 const lit_3941;
extern "C" extern u32 const lit_3942;
extern "C" extern u32 const lit_4111;
extern "C" extern u32 const lit_4112;
extern "C" extern u32 const lit_4113;
extern "C" extern u32 const lit_4262;
extern "C" extern u32 const lit_4263;
extern "C" extern u32 const lit_4264;
extern "C" extern u32 const lit_4265;
extern "C" extern u32 const lit_4266;
extern "C" extern u32 const lit_4297;
extern "C" extern u32 const lit_4298;
extern "C" extern u32 const lit_4328;
extern "C" extern u32 const lit_4521;
extern "C" extern u32 const lit_4522;
extern "C" extern u32 const lit_4523;
extern "C" extern u32 const lit_4524;
extern "C" extern u32 const lit_4525;
extern "C" extern u32 const lit_4526;
extern "C" extern u32 const lit_4632;
extern "C" extern u32 const lit_4633;
extern "C" extern u32 const lit_4720;
extern "C" extern u32 const lit_4756;
extern "C" extern u32 const lit_5627;
extern "C" extern u32 const lit_5628;
extern "C" extern u32 const lit_5629;
extern "C" extern u32 const lit_5630;
extern "C" extern u32 const lit_5631;
extern "C" extern u32 const lit_5632;
extern "C" extern u32 const lit_5633;
extern "C" extern u32 const lit_5634;
extern "C" extern u32 const lit_5899;
extern "C" extern u32 const lit_5900;
extern "C" extern u32 const lit_5901;
extern "C" extern u32 const lit_5902;
extern "C" extern u32 const lit_6814;
extern "C" extern u32 const lit_6815;
extern "C" extern u32 const lit_6816;
extern "C" extern u32 const lit_6817;
extern "C" extern u32 const lit_6818;
extern "C" extern u32 const lit_6819;
extern "C" extern u32 const lit_6820;
extern "C" extern u32 const lit_6821;
extern "C" extern u32 const lit_6822;
extern "C" extern u32 const lit_6823;
extern "C" extern u32 const lit_6824;
extern "C" extern u32 const lit_6825;
extern "C" extern u32 const lit_6826;
extern "C" extern u32 const lit_6827;
extern "C" extern u32 const lit_6828;
extern "C" extern u32 const lit_6829;
extern "C" extern u32 const lit_6830;
extern "C" extern u32 const lit_6831;
extern "C" extern u32 const lit_6832;
extern "C" extern u32 const lit_6833;
extern "C" extern u32 const lit_6834;
extern "C" extern u32 const lit_6835;
extern "C" extern u32 const lit_6836;
extern "C" extern u32 const lit_6837;
extern "C" extern u32 const lit_6838;
extern "C" extern u32 const lit_6839;
extern "C" extern u32 const lit_6840;
extern "C" extern u32 const lit_6841;
extern "C" extern u32 const lit_6842;
extern "C" extern u32 const lit_6843;
extern "C" extern u32 const lit_6844;
extern "C" extern u32 const lit_6845;
extern "C" extern u32 const lit_6846;
extern "C" extern u32 const lit_6847;
extern "C" extern u32 const lit_6848;
extern "C" extern u32 const lit_6849;
extern "C" extern u32 const lit_6850;
extern "C" extern u32 const lit_6851;
extern "C" extern u32 const lit_6852;
extern "C" extern u32 const lit_6853;
extern "C" extern u32 const lit_6854;
extern "C" extern u32 const lit_6855;
extern "C" extern u32 const lit_6856;
extern "C" extern u32 const lit_6857;
extern "C" extern u32 const lit_6858;
extern "C" extern u32 const lit_6859;
extern "C" extern u32 const lit_6860;
extern "C" extern u32 const lit_6861;
extern "C" extern u32 const lit_6862;
extern "C" extern u32 const lit_6863;
extern "C" extern u32 const lit_6864;
extern "C" extern u32 const lit_6865;
extern "C" extern u32 const lit_6866;
extern "C" extern u32 const lit_6867;
extern "C" extern u32 const lit_6868;
extern "C" extern u32 const lit_6869;
extern "C" extern u32 const lit_6870;
extern "C" extern u32 const lit_6871;
extern "C" extern u32 const lit_6872;
extern "C" extern u32 const lit_6873;
extern "C" extern u32 const lit_6874;
extern "C" extern u32 const lit_6875;
extern "C" extern u32 const lit_6876;
extern "C" extern u32 const lit_6877;
extern "C" extern u32 const lit_6878;
extern "C" extern u32 const lit_6879;
extern "C" extern u32 const lit_6880;
extern "C" extern u32 const lit_6881;
extern "C" extern u32 const lit_6882;
extern "C" extern u32 const lit_6883;
extern "C" extern u32 const lit_6884;
extern "C" extern u32 const lit_6885;
extern "C" extern u32 const lit_6886;
extern "C" extern u32 const lit_6887;
extern "C" extern u32 const lit_6888;
extern "C" extern u32 const lit_6889;
extern "C" extern u32 const lit_6890;
extern "C" extern u32 const lit_6891;
extern "C" extern u32 const lit_6892;
extern "C" extern u32 const lit_6893;
extern "C" extern u32 const lit_6894;
extern "C" extern u32 const lit_6895;
extern "C" extern u32 const lit_6896;
extern "C" extern u32 const lit_6897;
extern "C" extern u32 const lit_6898;
extern "C" extern u32 const lit_6899;
extern "C" extern u32 const lit_6900;
extern "C" extern u32 const lit_6901;
extern "C" extern u32 const lit_6902;
extern "C" extern u32 const lit_6903;
extern "C" extern u32 const lit_6904;
extern "C" extern u32 const lit_6905;
extern "C" extern u32 const lit_6906;
extern "C" extern u32 const lit_6907;
extern "C" extern u32 const lit_6908;
extern "C" extern u32 const lit_6909;
extern "C" extern u32 const lit_6910;
extern "C" extern u32 const lit_6911;
extern "C" extern u32 const lit_6912;
extern "C" extern u32 const lit_6913;
extern "C" extern u32 const lit_6914;
extern "C" extern u32 const lit_6915;
extern "C" extern u32 const lit_6916;
extern "C" extern u32 const lit_6917;
extern "C" extern u32 const lit_6918;
extern "C" extern u32 const lit_6919;
extern "C" extern u32 const lit_6920;
extern "C" extern u32 const lit_6921;
extern "C" extern u32 const lit_6922;
extern "C" extern u32 const lit_6923;
extern "C" extern u32 const lit_6924;
extern "C" extern u32 const lit_6925;
extern "C" extern u32 const lit_6926;
extern "C" extern u32 const lit_6927;
extern "C" extern u32 const lit_6928;
extern "C" extern u32 const lit_6929;
extern "C" extern u32 const lit_6930;
extern "C" extern u32 const lit_6931;
extern "C" extern u32 const lit_6932;
extern "C" extern u32 const lit_6933;
extern "C" extern u32 const lit_6934;
extern "C" extern u32 const lit_6935;
extern "C" extern u32 const lit_6936;
extern "C" extern u32 const lit_6937;
extern "C" extern u32 const lit_6938;
extern "C" extern u32 const lit_6939;
extern "C" extern u32 const lit_6940;
extern "C" extern u32 const lit_6941;
extern "C" extern u32 const lit_6942;
extern "C" extern u32 const lit_6943;
extern "C" extern u32 const lit_6944;
extern "C" extern u32 const lit_6945;
extern "C" extern u32 const lit_6946;
extern "C" extern u32 const lit_6947;
extern "C" extern u32 const lit_6948;
extern "C" extern u32 const lit_6949;
extern "C" extern u32 const lit_6950;
extern "C" extern u32 const lit_6951;
extern "C" extern u32 const lit_6952;
extern "C" extern u32 const lit_6953;
extern "C" extern u32 const lit_6954;
extern "C" extern u32 const lit_6955;
extern "C" extern u32 const lit_6956;
extern "C" extern u32 const lit_6957;
extern "C" extern u32 const lit_6958;
extern "C" extern u32 const lit_6959;
extern "C" extern u32 const lit_6960;
extern "C" extern u32 const lit_6961;
extern "C" extern u32 const lit_6962;
extern "C" extern u32 const lit_6963;
extern "C" extern u32 const lit_6964;
extern "C" extern u32 const lit_6965;
extern "C" extern u32 const lit_6966;
extern "C" extern u32 const lit_6967;
extern "C" extern u32 const lit_6968;
extern "C" extern u32 const lit_6969;
extern "C" extern u32 const lit_6970[1 + 1 /* padding */];
extern "C" extern u8 const lit_6972[8];
extern "C" extern u32 const lit_7231;
extern "C" extern u32 const lit_7232;
extern "C" extern u32 const lit_7523;
extern "C" extern u32 const lit_7524;
extern "C" extern u32 const lit_7525;
extern "C" extern u32 const lit_7526;
extern "C" extern u32 const lit_7527;
extern "C" extern u32 const lit_7528;
extern "C" extern u32 const lit_8006;
extern "C" extern u32 const lit_8007;
extern "C" extern u32 const lit_8008;
extern "C" extern u32 const lit_8009;
extern "C" extern u32 const lit_8010;
extern "C" extern u32 const lit_8011;
extern "C" extern u32 const lit_8012;
extern "C" extern u32 const lit_8013;
extern "C" extern u32 const lit_8014;
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_80757AC4[8];
extern "C" extern u8 data_80757ACC[8];
extern "C" extern u8 data_80757AE4[14 + 2 /* padding */];
extern "C" extern u8 data_80757AF4[8];
extern "C" extern u8 data_80757AFC[4];
extern "C" extern u8 data_80757B00[4];
extern "C" extern u8 data_80757B04[4];
extern "C" extern u8 data_80757C78[4];
extern "C" extern u8 data_80757C7C[68];
extern "C" extern u8 data_80757CC0[64];
extern "C" extern void* g_profile_E_PO[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__18dPa_levelEcallBack[9];
extern "C" extern void* __vt__18JPAEmitterCallBack[7];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGCyl[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__12daE_PO_HIO_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 struct_80757E98[4];
extern "C" extern u8 lit_6025[12 + 4 /* padding */];
extern "C" extern u8 lit_6028[12];
extern "C" extern u8 lit_6029[12];
extern "C" extern u8 lit_6030[12];
extern "C" extern u8 lit_6031[12];
extern "C" extern u8 lit_6032[12];
extern "C" extern u8 lit_6033[12];
extern "C" extern u8 lit_6034[12];
extern "C" extern u8 lit_6035[12];
extern "C" extern u8 lit_6036[12];
extern "C" extern u8 lit_6037[12];
extern "C" extern u8 lit_6038[12];
extern "C" extern u8 lit_6039[12];
extern "C" extern u8 lit_6040[12];
extern "C" extern u8 lit_6041[12];
extern "C" extern u8 lit_6042[12];
extern "C" extern u8 lit_6043[12];
extern "C" extern u8 lit_6044[12];
extern "C" extern u8 data_80757F7C[216];
extern "C" extern u8 lit_6046[12 + 4 /* padding */];
extern "C" extern u8 lit_6049[12];
extern "C" extern u8 lit_6050[12];
extern "C" extern u8 lit_6051[12];
extern "C" extern u8 lit_6052[12];
extern "C" extern u8 lit_6053[12];
extern "C" extern u8 lit_6054[12];
extern "C" extern u8 lit_6055[12];
extern "C" extern u8 lit_6056[12];
extern "C" extern u8 lit_6057[12];
extern "C" extern u8 lit_6058[12];
extern "C" extern u8 lit_6059[12];
extern "C" extern u8 lit_6060[12];
extern "C" extern u8 lit_6061[12];
extern "C" extern u8 lit_6062[12];
extern "C" extern u8 lit_6063[12];
extern "C" extern u8 lit_6064[12];
extern "C" extern u8 lit_6065[12];
extern "C" extern u8 data_80758130[216];
extern "C" extern u8 lit_6067[12 + 4 /* padding */];
extern "C" extern u8 lit_6070[12];
extern "C" extern u8 lit_6071[12];
extern "C" extern u8 lit_6072[12];
extern "C" extern u8 lit_6073[12];
extern "C" extern u8 lit_6074[12];
extern "C" extern u8 lit_6075[12];
extern "C" extern u8 lit_6076[12];
extern "C" extern u8 lit_6077[12];
extern "C" extern u8 lit_6078[12];
extern "C" extern u8 lit_6079[12];
extern "C" extern u8 lit_6080[12];
extern "C" extern u8 lit_6081[12];
extern "C" extern u8 lit_6082[12];
extern "C" extern u8 lit_6083[12];
extern "C" extern u8 lit_6084[12];
extern "C" extern u8 lit_6085[12];
extern "C" extern u8 lit_6086[12];
extern "C" extern u8 lit_6087[12];
extern "C" extern u8 lit_6088[12];
extern "C" extern u8 lit_6089[12];
extern "C" extern u8 lit_6090[12];
extern "C" extern u8 data_80758314[264];
extern "C" extern u8 data_8075841C[4];
extern "C" extern u8 data_80758420[4];
extern "C" extern u8 data_80758424[4];
extern "C" extern u8 data_80758428[4];
extern "C" extern u8 data_8075842C[4];
extern "C" extern u8 data_80758430[4];
extern "C" extern u8 data_80758434[4];
extern "C" extern u8 data_80758438[4];
extern "C" extern u8 data_8075843C[4];
extern "C" extern u8 data_80758440[4];
extern "C" extern u8 data_80758444[4];
extern "C" extern u8 data_80758448[4];
extern "C" extern u8 data_8075844C[4];
extern "C" extern u8 data_80758450[4];
extern "C" extern u8 data_80758454[4];
extern "C" extern u8 data_80758458[4];
extern "C" extern u8 data_8075845C[4];
extern "C" extern u8 data_80758460[4];
extern "C" extern u8 data_80758464[4];
extern "C" extern u8 data_80758468[4];
extern "C" extern u8 data_8075846C[4];
extern "C" extern u8 data_80758470[4];
extern "C" extern u8 data_80758474[4];
extern "C" extern u8 data_80758478[4];
extern "C" extern u8 data_8075847C[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_XrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_YrotM(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotS(f32 (* )[4], s16);
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  J3DModel* False
// 	 J3DModel False
void mDoExt_modelUpdateDL(J3DModel*);
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
void mDoExt_J3DModel__create(J3DModelData*, u32, u32);
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
void fopAcM_SearchByID(unsigned int, fopAc_ac_c**);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
void fopAcM_create(s16, u32, cXyz const*, int, csXyz const*, cXyz const*, s8);
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
void fopAcM_createChild(s16, unsigned int, u32, cXyz const*, int, csXyz const*, cXyz const*, s8, int (*)(void*));
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderOtherEventId(fopAc_ac_c*, s16, u8, u16, u16, u16);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
void fopAcM_orderPotentialEvent(fopAc_ac_c*, u16, u16, u16);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_getTalkEventPartner(fopAc_ac_c const*);
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_createItemForPresentDemo(cXyz const*, int, u8, int, int, csXyz const*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_otherBgCheck(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  unsigned int False
void fpcEx_IsExist(unsigned int);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dCam_getBody();
// False False
//  u8 False
void dKy_change_colpat(u8);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_addCalc0(f32*, f32, f32);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalcPos(cXyz*, cXyz const&, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS2(s16*, s16, s16, s16);
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
void MtxPosition(cXyz*, cXyz*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_XrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_YrotM__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotS__FPA4_fs();
// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  J3DModel* False
// 	 J3DModel False
extern "C" void mDoExt_modelUpdateDL__FP8J3DModel();
// False False
//  J3DModel* False
// 	 J3DModel False
//  u8 False
extern "C" void create__21mDoExt_invisibleModelFP8J3DModelUc();
// False False
//  cXyz* False
// 	 cXyz False
extern "C" void entryDL__21mDoExt_invisibleModelFP4cXyz();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  int False
//  void* False
// 	 void False
//  u32 False
//  u32 False
extern "C" void __ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl();
// False False
//  Vec* False
// 	 Vec False
//  u32 False
//  s8 False
extern "C" void play__14mDoExt_McaMorfFP3VecUlSc();
// False False
extern "C" void entryDL__14mDoExt_McaMorfFv();
// False False
extern "C" void modelCalc__14mDoExt_McaMorfFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  u32 False
//  u32 False
extern "C" void mDoExt_J3DModel__create__FP12J3DModelDataUlUl();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
extern "C" void initBallModel__13fopEn_enemy_cFv();
// False False
extern "C" void checkBallModelDraw__13fopEn_enemy_cFv();
// False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setBallModelEffect__13fopEn_enemy_cFP12dKy_tevstr_c();
// False False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void drawBallModel__13fopEn_enemy_cFP12dKy_tevstr_c();
// False False
//  unsigned int False
//  fopAc_ac_c** False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
extern "C" void fopAcM_SearchByID__FUiPP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  s16 False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
extern "C" void fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc();
// False False
//  s16 False
//  unsigned int False
//  u32 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  s8 False
//  int (*)(void*) False
// 	 * False
// 		  False
// 	 int False
// 	 void* False
// 		 void False
extern "C" void fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  s16 False
//  u8 False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u16 False
//  u16 False
//  u16 False
extern "C" void fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_getTalkEventPartner__FPC10fopAc_ac_c();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  u8 False
//  int False
//  int False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  unsigned int False
extern "C" void fpcEx_IsExist__FUi();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u16 False
extern "C" void onEventBit__11dSv_event_cFUs();
// False False
//  int False
extern "C" void onSwitch__12dSv_danBit_cFi();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void offSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
extern "C" void reset__14dEvt_control_cFv();
// False False
//  void* False
// 	 void False
extern "C" void setPtT__14dEvt_control_cFPv();
// False False
//  unsigned int False
extern "C" void setPtI_Id__14dEvt_control_cFUi();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  char const* False
// 	 char const False
// 		 char False
//  u8 False
extern "C" void getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc();
// False False
//  s16 False
extern "C" void endCheck__16dEvent_manager_cFs();
// False False
extern "C" void getRunEventName__16dEvent_manager_cFv();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u16 False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u32 False
extern "C" void setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void setOldPosP__22dPa_hermiteEcallBack_cFPC4cXyzPC4cXyz();
// False False
//  int False
//  int False
//  cXyz False
extern "C" void StartQuake__12dVibration_cFii4cXyz();
// False False
//  int False
extern "C" void StopQuake__12dVibration_cFi();
// False False
//  s32 False
extern "C" void GetLockonList__12dAttention_cFl();
// False False
extern "C" void LockonTruth__12dAttention_cFv();
// False False
extern "C" void getActor__10dAttList_cFv();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcCyl const& False
// 	 dCcD_SrcCyl const False
// 		 dCcD_SrcCyl False
extern "C" void Set__8dCcD_CylFRC11dCcD_SrcCyl();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void StartCAt__8dCcD_SphFR4cXyz();
// False False
//  cXyz& False
// 	 cXyz False
extern "C" void MoveCAt__8dCcD_SphFR4cXyz();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
extern "C" void checkNowWolfEyeUp__9daPy_py_cFv();
// False False
extern "C" void Start__9dCamera_cFv();
// False False
extern "C" void Stop__9dCamera_cFv();
// False False
//  s32 False
extern "C" void SetTrimSize__9dCamera_cFl();
// False False
//  cXyz False
//  cXyz False
extern "C" void Set__9dCamera_cF4cXyz4cXyz();
// False False
//  cXyz False
//  cXyz False
//  f32 False
//  s16 False
extern "C" void Set__9dCamera_cF4cXyz4cXyzfs();
// False False
//  cXyz False
//  cXyz False
extern "C" void Reset__9dCamera_cF4cXyz4cXyz();
// False False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
extern "C" void StartBlure__9dCamera_cFiP10fopAc_ac_cff();
// False False
extern "C" void dCam_getBody__Fv();
// False False
extern "C" void Eye__9dCamera_cFv();
// False False
extern "C" void Center__9dCamera_cFv();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
//  u8 False
extern "C" void dKy_change_colpat__FUc();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __pl__4cXyzCFRC3Vec();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
extern "C" void __ml__4cXyzCFf();
// False False
extern "C" void atan2sX_Z__4cXyzCFv();
// False False
extern "C" void atan2sY_XZ__4cXyzCFv();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGCylFRC4cXyz();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc0__FPfff();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalcPos__FP4cXyzRC4cXyzfff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS2__FPssss();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" void MtxPosition__FP4cXyzP4cXyz();
// False False
extern "C" void __dt__18JPAEmitterCallBackFv();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_802807E0();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
//  JAISoundID False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  u32 False
//  s8 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u8 False
extern "C" void seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECScale();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_20();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_20();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
// False False
extern "C" void strcmp();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern void* __vt__22dPa_hermiteEcallBack_c[9];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__8dCcD_Cyl[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__12cCcD_CylAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern void* calc_mtx[1 + 1 /* padding */];
extern "C" extern u32 __float_nan;
extern "C" extern u8 mParticleTracePCB__13dPa_control_c[4 + 4 /* padding */];
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
extern "C" extern u8 struct_80451124[4];
extern "C" extern u8 mAudioMgrPtr__10Z2AudioMgr[4 + 4 /* padding */];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 807576FC-80757700 0004+00 s=20 e=0 z=0  None .rodata    @3917                                                        */
SECTION_RODATA static u32 const lit_3917 = 0x42C80000;

/* 80757AA4-80757AB0 000C+00 s=4 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80757AB0-80757AC4 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 80757AC4-80757ACC 0008+00 s=0 e=0 z=0  None .data      e_prim$3796                                                  */
SECTION_DATA u8 data_80757AC4[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 80757ACC-80757AD4 0008+00 s=0 e=0 z=0  None .data      e_env$3797                                                   */
SECTION_DATA u8 data_80757ACC[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 80757AD4-80757ADC 0008+00 s=6 e=0 z=0  None .data      None                                                         */
SECTION_DATA static u8 struct_80757AD4[8] = {
	/* 80757AD4 0006 data_80757AD4 eff_id$3805 */
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* 80757ADA 0002 data_80757ADA mAttackNo */
	0x00, 0x03,
};

/* 80757ADC-80757AE0 0004+00 s=1 e=0 z=0  None .data      mHaba                                                        */
SECTION_DATA static u32 mHaba = 0x43C80000;

/* 80757AE0-80757AE4 0002+02 s=2 e=0 z=0  None .data      mRollHp                                                      */
SECTION_DATA static u16 mRollHp[1 + 1 /* padding */] = {
	0x005A,
	/* padding */
	0x0000,
};

/* 80757AE4-80757AF4 000E+02 s=0 e=0 z=0  None .data      particleNmaeDt$4835                                          */
SECTION_DATA u8 data_80757AE4[14 + 2 /* padding */] = {
	0x86, 0x8A, 0x86, 0x8B, 0x86, 0x8C, 0x86, 0x8D, 0x86, 0x8E, 0x86, 0x8F, 0x86, 0x98,
	/* padding */
	0x00, 0x00,
};

/* 80757AF4-80757AFC 0008+00 s=0 e=0 z=0  None .data      dead_eff_Dt1$4836                                            */
SECTION_DATA u8 data_80757AF4[8] = {
	0x86, 0x90, 0x86, 0x91, 0x86, 0x92, 0x86, 0x93,
};

/* 80757AFC-80757B00 0004+00 s=0 e=0 z=0  None .data      dead_eff_Dt2$4837                                            */
SECTION_DATA u8 data_80757AFC[4] = {
	0x86, 0x94, 0x86, 0x95,
};

/* 80757B00-80757B04 0004+00 s=0 e=0 z=0  None .data      dead_eff_Dt3$4838                                            */
SECTION_DATA u8 data_80757B00[4] = {
	0x86, 0x96, 0x86, 0x97,
};

/* 80757B04-80757B08 0004+00 s=0 e=0 z=0  None .data      dead_eff_Dt4$4839                                            */
SECTION_DATA u8 data_80757B04[4] = {
	0x86, 0x6D, 0x86, 0x9B,
};

/* 80757B08-80757BD8 00D0+00 s=1 e=0 z=0  None .data      @5635                                                        */
SECTION_DATA static void* lit_5635[52] = {
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x15C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x300),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x448),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x5F4),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x6C8),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0xAD8),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x97C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0xF38),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x127C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x12DC),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x130C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0xCC),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x162C),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x1414),
	(void*)(((char*)e_po_dead__FP10e_po_class)+0x1440),
};

/* 80757BD8-80757C18 0040+00 s=1 e=0 z=0  None .data      @5903                                                        */
SECTION_DATA static void* lit_5903[16] = {
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x4C0),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x4F8),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x6C8),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x804),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x9BC),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x9BC),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x9BC),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x9BC),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x9BC),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x9BC),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x70),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x2C8),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x418),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x6A4),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x88C),
	(void*)(((char*)e_po_limbering__FP10e_po_class)+0x8FC),
};

/* 80757C18-80757C1C 0004+00 s=1 e=0 z=0  None .data      holl_demo_eff_Dt$6023                                        */
SECTION_DATA static u8 holl_demo_eff_Dt[4] = {
	0x86, 0x70, 0x86, 0x71,
};

/* 80757C1C-80757C24 0008+00 s=1 e=0 z=0  None .data      mKAngInit_dt$6091                                            */
SECTION_DATA static u8 mKAngInit_dt[8] = {
	0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80757C24-80757C78 0054+00 s=1 e=0 z=0  None .data      @7233                                                        */
SECTION_DATA static void* lit_7233[21] = {
	(void*)(((char*)action__FP10e_po_class)+0x2D4),
	(void*)(((char*)action__FP10e_po_class)+0x2E0),
	(void*)(((char*)action__FP10e_po_class)+0x2EC),
	(void*)(((char*)action__FP10e_po_class)+0x2F8),
	(void*)(((char*)action__FP10e_po_class)+0x310),
	(void*)(((char*)action__FP10e_po_class)+0x34C),
	(void*)(((char*)action__FP10e_po_class)+0x358),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x328),
	(void*)(((char*)action__FP10e_po_class)+0x334),
	(void*)(((char*)action__FP10e_po_class)+0x340),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x36C),
	(void*)(((char*)action__FP10e_po_class)+0x364),
};

/* 80757C78-80757C7C 0004+00 s=0 e=0 z=0  None .data      po_bottleIn_dt$7646                                          */
SECTION_DATA u8 data_80757C78[4] = {
	0xEF, 0xF0, 0xF1, 0xF2,
};

/* 80757C7C-80757CC0 0044+00 s=0 e=0 z=0  None .data      cc_cyl_src$7667                                              */
SECTION_DATA u8 data_80757C7C[68] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xD8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x48, 0x00, 0x00,
	0x43, 0x96, 0x00, 0x00,
};

/* 80757CC0-80757D00 0040+00 s=0 e=0 z=0  None .data      at_sph_src$7668                                              */
SECTION_DATA u8 data_80757CC0[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x15, 0x09, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF0, 0x00, 0x00,
};

/* 80757D00-80757D20 0020+00 s=1 e=0 z=0  None .data      l_daE_PO_Method                                              */
SECTION_DATA static void* l_daE_PO_Method[8] = {
	(void*)daE_PO_Create__FP10fopAc_ac_c,
	(void*)daE_PO_Delete__FP10e_po_class,
	(void*)daE_PO_Execute__FP10e_po_class,
	(void*)daE_PO_IsDelete__FP10e_po_class,
	(void*)daE_PO_Draw__FP10e_po_class,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 80757D20-80757D50 0030+00 s=0 e=0 z=1  None .data      g_profile_E_PO                                               */
SECTION_DATA void* g_profile_E_PO[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x01DA0000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000EE0,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00A20000,
	(void*)&l_daE_PO_Method,
	(void*)0x00044100,
	(void*)0x020E0000,
};

/* 80757D50-80757D5C 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 80757D5C-80757D68 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 80757D68-80757D74 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 80757D74-80757D98 0024+00 s=2 e=0 z=0  None .data      __vt__18dPa_levelEcallBack                                   */
SECTION_DATA void* __vt__18dPa_levelEcallBack[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__18dPa_levelEcallBackFv,
	(void*)execute__18JPAEmitterCallBackFP14JPABaseEmitter,
	(void*)executeAfter__18JPAEmitterCallBackFP14JPABaseEmitter,
	(void*)draw__18JPAEmitterCallBackFP14JPABaseEmitter,
	(void*)drawAfter__18JPAEmitterCallBackFP14JPABaseEmitter,
	(void*)NULL,
	(void*)cleanup__18dPa_levelEcallBackFv,
};

/* 80757D98-80757DB4 001C+00 s=1 e=0 z=0  None .data      __vt__18JPAEmitterCallBack                                   */
SECTION_DATA void* __vt__18JPAEmitterCallBack[7] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)NULL,
	(void*)execute__18JPAEmitterCallBackFP14JPABaseEmitter,
	(void*)executeAfter__18JPAEmitterCallBackFP14JPABaseEmitter,
	(void*)draw__18JPAEmitterCallBackFP14JPABaseEmitter,
	(void*)drawAfter__18JPAEmitterCallBackFP14JPABaseEmitter,
};

/* 80757DB4-80757DC0 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 80757DC0-80757DCC 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGCyl                                              */
SECTION_DATA void* __vt__8cM3dGCyl[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCylFv,
};

/* 80757DCC-80757DD8 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 80757DD8-80757DFC 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80756E74,
	(void*)NULL,
	(void*)NULL,
	(void*)func_80756E6C,
};

/* 80757DFC-80757E08 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_PO_HIO_c                                         */
SECTION_DATA void* __vt__12daE_PO_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_PO_HIO_cFv,
};

/* 8074C54C-8074C5EC 00A0+00 s=1 e=0 z=0  None .text      __ct__12daE_PO_HIO_cFv                                       */
//	8074C54C: 807576FC (lit_3917)
//	8074C550: 807576FC (lit_3917)
//	8074C554: 80757DFC (__vt__12daE_PO_HIO_c)
//	8074C558: 80757DFC (__vt__12daE_PO_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_PO_HIO_c::daE_PO_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__ct__12daE_PO_HIO_cFv.s"
}
#pragma pop


/* 8074C5EC-8074C660 0074+00 s=13 e=0 z=0  None .text      mArg0Check__FP10e_po_classs                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
//  s16 False
asm static void mArg0Check(e_po_class* param_0, s16 param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/mArg0Check__FP10e_po_classs.s"
}
#pragma pop


/* ############################################################################################## */
/* 80757700-80757704 0004+00 s=2 e=0 z=0  None .rodata    @3918                                                        */
SECTION_RODATA static u8 const lit_3918[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80757704-8075770C 0004+04 s=2 e=0 z=0  None .rodata    @3919                                                        */
SECTION_RODATA static u32 const lit_3919[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 8075770C-80757714 0008+00 s=0 e=0 z=0  None .rodata    @3920                                                        */
SECTION_RODATA u8 const lit_3920[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80757714-8075771C 0008+00 s=0 e=0 z=0  None .rodata    @3921                                                        */
SECTION_RODATA u8 const lit_3921[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8075771C-80757724 0008+00 s=0 e=0 z=0  None .rodata    @3922                                                        */
SECTION_RODATA u8 const lit_3922[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80757724-80757728 0004+00 s=0 e=0 z=0  None .rodata    @3923                                                        */
SECTION_RODATA u32 const lit_3923 = 0x3C23D70A;

/* 80757728-8075772C 0004+00 s=0 e=0 z=0  None .rodata    @3938                                                        */
SECTION_RODATA u32 const lit_3938 = 0x3F99999A;

/* 8075772C-80757730 0004+00 s=0 e=0 z=0  None .rodata    @3939                                                        */
SECTION_RODATA u32 const lit_3939 = 0x447A0000;

/* 80757730-80757734 0004+00 s=0 e=0 z=0  None .rodata    @3940                                                        */
SECTION_RODATA u32 const lit_3940 = 0x43960000;

/* 80757734-80757738 0004+00 s=0 e=0 z=0  None .rodata    @3941                                                        */
SECTION_RODATA u32 const lit_3941 = 0x41700000;

/* 80757738-8075773C 0004+00 s=0 e=0 z=0  None .rodata    @3942                                                        */
SECTION_RODATA u32 const lit_3942 = 0x442F0000;

/* 8075773C-80757740 0004+00 s=1 e=0 z=0  None .rodata    @3974                                                        */
SECTION_RODATA static u32 const lit_3974 = 0xBF800000;

/* 80757740-80757744 0004+00 s=0 e=0 z=0  None .rodata    @4111                                                        */
SECTION_RODATA u32 const lit_4111 = 0x42340000;

/* 80757744-80757748 0004+00 s=0 e=0 z=0  None .rodata    @4112                                                        */
SECTION_RODATA u32 const lit_4112 = 0x3F333333;

/* 80757748-8075774C 0004+00 s=0 e=0 z=0  None .rodata    @4113                                                        */
SECTION_RODATA u32 const lit_4113 = 0x40800000;

/* 8075774C-80757750 0004+00 s=0 e=0 z=0  None .rodata    @4262                                                        */
SECTION_RODATA u32 const lit_4262 = 0x41200000;

/* 80757750-80757754 0004+00 s=0 e=0 z=0  None .rodata    @4263                                                        */
SECTION_RODATA u32 const lit_4263 = 0x3F000000;

/* 80757754-80757758 0004+00 s=0 e=0 z=0  None .rodata    @4264                                                        */
SECTION_RODATA u32 const lit_4264 = 0x3FC00000;

/* 80757758-8075775C 0004+00 s=0 e=0 z=0  None .rodata    @4265                                                        */
SECTION_RODATA u32 const lit_4265 = 0x437A0000;

/* 8075775C-80757760 0004+00 s=0 e=0 z=0  None .rodata    @4266                                                        */
SECTION_RODATA u32 const lit_4266 = 0x43480000;

/* 80757760-80757764 0004+00 s=0 e=0 z=0  None .rodata    @4297                                                        */
SECTION_RODATA u32 const lit_4297 = 0x40400000;

/* 80757764-80757768 0004+00 s=0 e=0 z=0  None .rodata    @4298                                                        */
SECTION_RODATA u32 const lit_4298 = 0x42480000;

/* 80757768-8075776C 0004+00 s=0 e=0 z=0  None .rodata    @4328                                                        */
SECTION_RODATA u32 const lit_4328 = 0x41000000;

/* 8075776C-80757770 0004+00 s=0 e=0 z=0  None .rodata    @4521                                                        */
SECTION_RODATA u32 const lit_4521 = 0x45DAC000;

/* 80757770-80757774 0004+00 s=0 e=0 z=0  None .rodata    @4522                                                        */
SECTION_RODATA u32 const lit_4522 = 0x41A00000;

/* 80757774-80757778 0004+00 s=0 e=0 z=0  None .rodata    @4523                                                        */
SECTION_RODATA u32 const lit_4523 = 0x41F00000;

/* 80757778-8075777C 0004+00 s=0 e=0 z=0  None .rodata    @4524                                                        */
SECTION_RODATA u32 const lit_4524 = 0x40A00000;

/* 8075777C-80757780 0004+00 s=0 e=0 z=0  None .rodata    @4525                                                        */
SECTION_RODATA u32 const lit_4525 = 0xC0A00000;

/* 80757780-80757784 0004+00 s=0 e=0 z=0  None .rodata    @4526                                                        */
SECTION_RODATA u32 const lit_4526 = 0x3D4CCCCD;

/* 80757784-80757788 0004+00 s=0 e=0 z=0  None .rodata    @4632                                                        */
SECTION_RODATA u32 const lit_4632 = 0x47800000;

/* 80757788-8075778C 0004+00 s=0 e=0 z=0  None .rodata    @4633                                                        */
SECTION_RODATA u32 const lit_4633 = 0x3F4CCCCD;

/* 8075778C-80757790 0004+00 s=0 e=0 z=0  None .rodata    @4720                                                        */
SECTION_RODATA u32 const lit_4720 = 0xC1A00000;

/* 80757790-80757794 0004+00 s=0 e=0 z=0  None .rodata    @4756                                                        */
SECTION_RODATA u32 const lit_4756 = 0x40000000;

/* 80757794-80757798 0004+00 s=0 e=0 z=0  None .rodata    @5627                                                        */
SECTION_RODATA u32 const lit_5627 = 0xCE6E6B28;

/* 80757798-8075779C 0004+00 s=0 e=0 z=0  None .rodata    @5628                                                        */
SECTION_RODATA u32 const lit_5628 = 0x428C0000;

/* 8075779C-807577A0 0004+00 s=0 e=0 z=0  None .rodata    @5629                                                        */
SECTION_RODATA u32 const lit_5629 = 0x42700000;

/* 807577A0-807577A4 0004+00 s=0 e=0 z=0  None .rodata    @5630                                                        */
SECTION_RODATA u32 const lit_5630 = 0xC3F50000;

/* 807577A4-807577A8 0004+00 s=0 e=0 z=0  None .rodata    @5631                                                        */
SECTION_RODATA u32 const lit_5631 = 0x44BEC000;

/* 807577A8-807577AC 0004+00 s=0 e=0 z=0  None .rodata    @5632                                                        */
SECTION_RODATA u32 const lit_5632 = 0xC4C6C000;

/* 807577AC-807577B0 0004+00 s=0 e=0 z=0  None .rodata    @5633                                                        */
SECTION_RODATA u32 const lit_5633 = 0x40C00000;

/* 807577B0-807577B4 0004+00 s=0 e=0 z=0  None .rodata    @5634                                                        */
SECTION_RODATA u32 const lit_5634 = 0x44480000;

/* 807577B4-807577B8 0004+00 s=0 e=0 z=0  None .rodata    @5899                                                        */
SECTION_RODATA u32 const lit_5899 = 0xC5898000;

/* 807577B8-807577BC 0004+00 s=0 e=0 z=0  None .rodata    @5900                                                        */
SECTION_RODATA u32 const lit_5900 = 0x457A0000;

/* 807577BC-807577C0 0004+00 s=0 e=0 z=0  None .rodata    @5901                                                        */
SECTION_RODATA u32 const lit_5901 = 0x43C80000;

/* 807577C0-807577C4 0004+00 s=0 e=0 z=0  None .rodata    @5902                                                        */
SECTION_RODATA u32 const lit_5902 = 0x44160000;

/* 807577C4-807577C8 0004+00 s=0 e=0 z=0  None .rodata    @6814                                                        */
SECTION_RODATA u32 const lit_6814 = 0xC1500000;

/* 807577C8-807577CC 0004+00 s=0 e=0 z=0  None .rodata    @6815                                                        */
SECTION_RODATA u32 const lit_6815 = 0x430F0000;

/* 807577CC-807577D0 0004+00 s=0 e=0 z=0  None .rodata    @6816                                                        */
SECTION_RODATA u32 const lit_6816 = 0x43AC0000;

/* 807577D0-807577D4 0004+00 s=0 e=0 z=0  None .rodata    @6817                                                        */
SECTION_RODATA u32 const lit_6817 = 0x42400000;

/* 807577D4-807577D8 0004+00 s=0 e=0 z=0  None .rodata    @6818                                                        */
SECTION_RODATA u32 const lit_6818 = 0x441DC000;

/* 807577D8-807577DC 0004+00 s=0 e=0 z=0  None .rodata    @6819                                                        */
SECTION_RODATA u32 const lit_6819 = 0xC50FC000;

/* 807577DC-807577E0 0004+00 s=0 e=0 z=0  None .rodata    @6820                                                        */
SECTION_RODATA u32 const lit_6820 = 0xC42E4000;

/* 807577E0-807577E4 0004+00 s=0 e=0 z=0  None .rodata    @6821                                                        */
SECTION_RODATA u32 const lit_6821 = 0x4400C000;

/* 807577E4-807577E8 0004+00 s=0 e=0 z=0  None .rodata    @6822                                                        */
SECTION_RODATA u32 const lit_6822 = 0xC4CD0000;

/* 807577E8-807577EC 0004+00 s=0 e=0 z=0  None .rodata    @6823                                                        */
SECTION_RODATA u32 const lit_6823 = 0xC4214000;

/* 807577EC-807577F0 0004+00 s=0 e=0 z=0  None .rodata    @6824                                                        */
SECTION_RODATA u32 const lit_6824 = 0x44200000;

/* 807577F0-807577F4 0004+00 s=0 e=0 z=0  None .rodata    @6825                                                        */
SECTION_RODATA u32 const lit_6825 = 0xC4ED8000;

/* 807577F4-807577F8 0004+00 s=0 e=0 z=0  None .rodata    @6826                                                        */
SECTION_RODATA u32 const lit_6826 = 0x44428000;

/* 807577F8-807577FC 0004+00 s=0 e=0 z=0  None .rodata    @6827                                                        */
SECTION_RODATA u32 const lit_6827 = 0x43F80000;

/* 807577FC-80757800 0004+00 s=0 e=0 z=0  None .rodata    @6828                                                        */
SECTION_RODATA u32 const lit_6828 = 0xC4CA6000;

/* 80757800-80757804 0004+00 s=0 e=0 z=0  None .rodata    @6829                                                        */
SECTION_RODATA u32 const lit_6829 = 0xC20C0000;

/* 80757804-80757808 0004+00 s=0 e=0 z=0  None .rodata    @6830                                                        */
SECTION_RODATA u32 const lit_6830 = 0x43710000;

/* 80757808-8075780C 0004+00 s=0 e=0 z=0  None .rodata    @6831                                                        */
SECTION_RODATA u32 const lit_6831 = 0xC498E000;

/* 8075780C-80757810 0004+00 s=0 e=0 z=0  None .rodata    @6832                                                        */
SECTION_RODATA u32 const lit_6832 = 0x441EC000;

/* 80757810-80757814 0004+00 s=0 e=0 z=0  None .rodata    @6833                                                        */
SECTION_RODATA u32 const lit_6833 = 0xC5138000;

/* 80757814-80757818 0004+00 s=0 e=0 z=0  None .rodata    @6834                                                        */
SECTION_RODATA u32 const lit_6834 = 0xC2000000;

/* 80757818-8075781C 0004+00 s=0 e=0 z=0  None .rodata    @6835                                                        */
SECTION_RODATA u32 const lit_6835 = 0x43310000;

/* 8075781C-80757820 0004+00 s=0 e=0 z=0  None .rodata    @6836                                                        */
SECTION_RODATA u32 const lit_6836 = 0xC4538000;

/* 80757820-80757824 0004+00 s=0 e=0 z=0  None .rodata    @6837                                                        */
SECTION_RODATA u32 const lit_6837 = 0x42200000;

/* 80757824-80757828 0004+00 s=0 e=0 z=0  None .rodata    @6838                                                        */
SECTION_RODATA u32 const lit_6838 = 0x44390000;

/* 80757828-8075782C 0004+00 s=0 e=0 z=0  None .rodata    @6839                                                        */
SECTION_RODATA u32 const lit_6839 = 0xC5322000;

/* 8075782C-80757830 0004+00 s=0 e=0 z=0  None .rodata    @6840                                                        */
SECTION_RODATA u32 const lit_6840 = 0x421C0000;

/* 80757830-80757834 0004+00 s=0 e=0 z=0  None .rodata    @6841                                                        */
SECTION_RODATA u32 const lit_6841 = 0xC4104000;

/* 80757834-80757838 0004+00 s=0 e=0 z=0  None .rodata    @6842                                                        */
SECTION_RODATA u32 const lit_6842 = 0xC2340000;

/* 80757838-8075783C 0004+00 s=0 e=0 z=0  None .rodata    @6843                                                        */
SECTION_RODATA u32 const lit_6843 = 0x43450000;

/* 8075783C-80757840 0004+00 s=0 e=0 z=0  None .rodata    @6844                                                        */
SECTION_RODATA u32 const lit_6844 = 0x44CA8000;

/* 80757840-80757844 0004+00 s=0 e=0 z=0  None .rodata    @6845                                                        */
SECTION_RODATA u32 const lit_6845 = 0x44CBC000;

/* 80757844-80757848 0004+00 s=0 e=0 z=0  None .rodata    @6846                                                        */
SECTION_RODATA u32 const lit_6846 = 0x43E10000;

/* 80757848-8075784C 0004+00 s=0 e=0 z=0  None .rodata    @6847                                                        */
SECTION_RODATA u32 const lit_6847 = 0x44C4E000;

/* 8075784C-80757850 0004+00 s=0 e=0 z=0  None .rodata    @6848                                                        */
SECTION_RODATA u32 const lit_6848 = 0x43200000;

/* 80757850-80757854 0004+00 s=0 e=0 z=0  None .rodata    @6849                                                        */
SECTION_RODATA u32 const lit_6849 = 0xC3D20000;

/* 80757854-80757858 0004+00 s=0 e=0 z=0  None .rodata    @6850                                                        */
SECTION_RODATA u32 const lit_6850 = 0xC432C000;

/* 80757858-8075785C 0004+00 s=0 e=0 z=0  None .rodata    @6851                                                        */
SECTION_RODATA u32 const lit_6851 = 0x44A8C000;

/* 8075785C-80757860 0004+00 s=0 e=0 z=0  None .rodata    @6852                                                        */
SECTION_RODATA u32 const lit_6852 = 0x42B40000;

/* 80757860-80757864 0004+00 s=0 e=0 z=0  None .rodata    @6853                                                        */
SECTION_RODATA u32 const lit_6853 = 0xC3F00000;

/* 80757864-80757868 0004+00 s=0 e=0 z=0  None .rodata    @6854                                                        */
SECTION_RODATA u32 const lit_6854 = 0xC1F00000;

/* 80757868-8075786C 0004+00 s=0 e=0 z=0  None .rodata    @6855                                                        */
SECTION_RODATA u32 const lit_6855 = 0x44F64000;

/* 8075786C-80757870 0004+00 s=0 e=0 z=0  None .rodata    @6856                                                        */
SECTION_RODATA u32 const lit_6856 = 0xC4884000;

/* 80757870-80757874 0004+00 s=0 e=0 z=0  None .rodata    @6857                                                        */
SECTION_RODATA u32 const lit_6857 = 0xC2940000;

/* 80757874-80757878 0004+00 s=0 e=0 z=0  None .rodata    @6858                                                        */
SECTION_RODATA u32 const lit_6858 = 0x442B0000;

/* 80757878-8075787C 0004+00 s=0 e=0 z=0  None .rodata    @6859                                                        */
SECTION_RODATA u32 const lit_6859 = 0xC488E000;

/* 8075787C-80757880 0004+00 s=0 e=0 z=0  None .rodata    @6860                                                        */
SECTION_RODATA u32 const lit_6860 = 0xC1F80000;

/* 80757880-80757884 0004+00 s=0 e=0 z=0  None .rodata    @6861                                                        */
SECTION_RODATA u32 const lit_6861 = 0x44538000;

/* 80757884-80757888 0004+00 s=0 e=0 z=0  None .rodata    @6862                                                        */
SECTION_RODATA u32 const lit_6862 = 0xC4FDA000;

/* 80757888-8075788C 0004+00 s=0 e=0 z=0  None .rodata    @6863                                                        */
SECTION_RODATA u32 const lit_6863 = 0xC1200000;

/* 8075788C-80757890 0004+00 s=0 e=0 z=0  None .rodata    @6864                                                        */
SECTION_RODATA u32 const lit_6864 = 0x43250000;

/* 80757890-80757894 0004+00 s=0 e=0 z=0  None .rodata    @6865                                                        */
SECTION_RODATA u32 const lit_6865 = 0x442C8000;

/* 80757894-80757898 0004+00 s=0 e=0 z=0  None .rodata    @6866                                                        */
SECTION_RODATA u32 const lit_6866 = 0x42540000;

/* 80757898-8075789C 0004+00 s=0 e=0 z=0  None .rodata    @6867                                                        */
SECTION_RODATA u32 const lit_6867 = 0x440CC000;

/* 8075789C-807578A0 0004+00 s=0 e=0 z=0  None .rodata    @6868                                                        */
SECTION_RODATA u32 const lit_6868 = 0xC4F66000;

/* 807578A0-807578A4 0004+00 s=0 e=0 z=0  None .rodata    @6869                                                        */
SECTION_RODATA u32 const lit_6869 = 0xC46B8000;

/* 807578A4-807578A8 0004+00 s=0 e=0 z=0  None .rodata    @6870                                                        */
SECTION_RODATA u32 const lit_6870 = 0x43D88000;

/* 807578A8-807578AC 0004+00 s=0 e=0 z=0  None .rodata    @6871                                                        */
SECTION_RODATA u32 const lit_6871 = 0xC4AF6000;

/* 807578AC-807578B0 0004+00 s=0 e=0 z=0  None .rodata    @6872                                                        */
SECTION_RODATA u32 const lit_6872 = 0xC4138000;

/* 807578B0-807578B4 0004+00 s=0 e=0 z=0  None .rodata    @6873                                                        */
SECTION_RODATA u32 const lit_6873 = 0x4432C000;

/* 807578B4-807578B8 0004+00 s=0 e=0 z=0  None .rodata    @6874                                                        */
SECTION_RODATA u32 const lit_6874 = 0xC4C30000;

/* 807578B8-807578BC 0004+00 s=0 e=0 z=0  None .rodata    @6875                                                        */
SECTION_RODATA u32 const lit_6875 = 0x4480C000;

/* 807578BC-807578C0 0004+00 s=0 e=0 z=0  None .rodata    @6876                                                        */
SECTION_RODATA u32 const lit_6876 = 0x43CD0000;

/* 807578C0-807578C4 0004+00 s=0 e=0 z=0  None .rodata    @6877                                                        */
SECTION_RODATA u32 const lit_6877 = 0xC4AF0000;

/* 807578C4-807578C8 0004+00 s=0 e=0 z=0  None .rodata    @6878                                                        */
SECTION_RODATA u32 const lit_6878 = 0x42A80000;

/* 807578C8-807578CC 0004+00 s=0 e=0 z=0  None .rodata    @6879                                                        */
SECTION_RODATA u32 const lit_6879 = 0xC454C000;

/* 807578CC-807578D0 0004+00 s=0 e=0 z=0  None .rodata    @6880                                                        */
SECTION_RODATA u32 const lit_6880 = 0x44020000;

/* 807578D0-807578D4 0004+00 s=0 e=0 z=0  None .rodata    @6881                                                        */
SECTION_RODATA u32 const lit_6881 = 0xC4F8C000;

/* 807578D4-807578D8 0004+00 s=0 e=0 z=0  None .rodata    @6882                                                        */
SECTION_RODATA u32 const lit_6882 = 0xC31B0000;

/* 807578D8-807578DC 0004+00 s=0 e=0 z=0  None .rodata    @6883                                                        */
SECTION_RODATA u32 const lit_6883 = 0x42D20000;

/* 807578DC-807578E0 0004+00 s=0 e=0 z=0  None .rodata    @6884                                                        */
SECTION_RODATA u32 const lit_6884 = 0xC3830000;

/* 807578E0-807578E4 0004+00 s=0 e=0 z=0  None .rodata    @6885                                                        */
SECTION_RODATA u32 const lit_6885 = 0x44278000;

/* 807578E4-807578E8 0004+00 s=0 e=0 z=0  None .rodata    @6886                                                        */
SECTION_RODATA u32 const lit_6886 = 0xC51D8000;

/* 807578E8-807578EC 0004+00 s=0 e=0 z=0  None .rodata    @6887                                                        */
SECTION_RODATA u32 const lit_6887 = 0xC1880000;

/* 807578EC-807578F0 0004+00 s=0 e=0 z=0  None .rodata    @6888                                                        */
SECTION_RODATA u32 const lit_6888 = 0x43800000;

/* 807578F0-807578F4 0004+00 s=0 e=0 z=0  None .rodata    @6889                                                        */
SECTION_RODATA u32 const lit_6889 = 0xC36C0000;

/* 807578F4-807578F8 0004+00 s=0 e=0 z=0  None .rodata    @6890                                                        */
SECTION_RODATA u32 const lit_6890 = 0xC37F0000;

/* 807578F8-807578FC 0004+00 s=0 e=0 z=0  None .rodata    @6891                                                        */
SECTION_RODATA u32 const lit_6891 = 0x42680000;

/* 807578FC-80757900 0004+00 s=0 e=0 z=0  None .rodata    @6892                                                        */
SECTION_RODATA u32 const lit_6892 = 0x44ACC000;

/* 80757900-80757904 0004+00 s=0 e=0 z=0  None .rodata    @6893                                                        */
SECTION_RODATA u32 const lit_6893 = 0x44AAA000;

/* 80757904-80757908 0004+00 s=0 e=0 z=0  None .rodata    @6894                                                        */
SECTION_RODATA u32 const lit_6894 = 0x44264000;

/* 80757908-8075790C 0004+00 s=0 e=0 z=0  None .rodata    @6895                                                        */
SECTION_RODATA u32 const lit_6895 = 0x44B40000;

/* 8075790C-80757910 0004+00 s=0 e=0 z=0  None .rodata    @6896                                                        */
SECTION_RODATA u32 const lit_6896 = 0x432F0000;

/* 80757910-80757914 0004+00 s=0 e=0 z=0  None .rodata    @6897                                                        */
SECTION_RODATA u32 const lit_6897 = 0xC2BE0000;

/* 80757914-80757918 0004+00 s=0 e=0 z=0  None .rodata    @6898                                                        */
SECTION_RODATA u32 const lit_6898 = 0xC3ED8000;

/* 80757918-8075791C 0004+00 s=0 e=0 z=0  None .rodata    @6899                                                        */
SECTION_RODATA u32 const lit_6899 = 0x44B0E000;

/* 8075791C-80757920 0004+00 s=0 e=0 z=0  None .rodata    @6900                                                        */
SECTION_RODATA u32 const lit_6900 = 0x43AF0000;

/* 80757920-80757924 0004+00 s=0 e=0 z=0  None .rodata    @6901                                                        */
SECTION_RODATA u32 const lit_6901 = 0xC43B8000;

/* 80757924-80757928 0004+00 s=0 e=0 z=0  None .rodata    @6902                                                        */
SECTION_RODATA u32 const lit_6902 = 0x450D4000;

/* 80757928-8075792C 0004+00 s=0 e=0 z=0  None .rodata    @6903                                                        */
SECTION_RODATA u32 const lit_6903 = 0xC45E8000;

/* 8075792C-80757930 0004+00 s=0 e=0 z=0  None .rodata    @6904                                                        */
SECTION_RODATA u32 const lit_6904 = 0xC2BC0000;

/* 80757930-80757934 0004+00 s=0 e=0 z=0  None .rodata    @6905                                                        */
SECTION_RODATA u32 const lit_6905 = 0x442D4000;

/* 80757934-80757938 0004+00 s=0 e=0 z=0  None .rodata    @6906                                                        */
SECTION_RODATA u32 const lit_6906 = 0xC438C000;

/* 80757938-8075793C 0004+00 s=0 e=0 z=0  None .rodata    @6907                                                        */
SECTION_RODATA u32 const lit_6907 = 0xC2240000;

/* 8075793C-80757940 0004+00 s=0 e=0 z=0  None .rodata    @6908                                                        */
SECTION_RODATA u32 const lit_6908 = 0xC4D18000;

/* 80757940-80757944 0004+00 s=0 e=0 z=0  None .rodata    @6909                                                        */
SECTION_RODATA u32 const lit_6909 = 0x42DC0000;

/* 80757944-80757948 0004+00 s=0 e=0 z=0  None .rodata    @6910                                                        */
SECTION_RODATA u32 const lit_6910 = 0xC5516000;

/* 80757948-8075794C 0004+00 s=0 e=0 z=0  None .rodata    @6911                                                        */
SECTION_RODATA u32 const lit_6911 = 0x44098000;

/* 8075794C-80757950 0004+00 s=0 e=0 z=0  None .rodata    @6912                                                        */
SECTION_RODATA u32 const lit_6912 = 0xC5075000;

/* 80757950-80757954 0004+00 s=0 e=0 z=0  None .rodata    @6913                                                        */
SECTION_RODATA u32 const lit_6913 = 0xC4358000;

/* 80757954-80757958 0004+00 s=0 e=0 z=0  None .rodata    @6914                                                        */
SECTION_RODATA u32 const lit_6914 = 0x44070000;

/* 80757958-8075795C 0004+00 s=0 e=0 z=0  None .rodata    @6915                                                        */
SECTION_RODATA u32 const lit_6915 = 0xC5029000;

/* 8075795C-80757960 0004+00 s=0 e=0 z=0  None .rodata    @6916                                                        */
SECTION_RODATA u32 const lit_6916 = 0x44234000;

/* 80757960-80757964 0004+00 s=0 e=0 z=0  None .rodata    @6917                                                        */
SECTION_RODATA u32 const lit_6917 = 0x44408000;

/* 80757964-80757968 0004+00 s=0 e=0 z=0  None .rodata    @6918                                                        */
SECTION_RODATA u32 const lit_6918 = 0xC50B7000;

/* 80757968-8075796C 0004+00 s=0 e=0 z=0  None .rodata    @6919                                                        */
SECTION_RODATA u32 const lit_6919 = 0x44354000;

/* 8075796C-80757970 0004+00 s=0 e=0 z=0  None .rodata    @6920                                                        */
SECTION_RODATA u32 const lit_6920 = 0xC4CBA000;

/* 80757970-80757974 0004+00 s=0 e=0 z=0  None .rodata    @6921                                                        */
SECTION_RODATA u32 const lit_6921 = 0xC4184000;

/* 80757974-80757978 0004+00 s=0 e=0 z=0  None .rodata    @6922                                                        */
SECTION_RODATA u32 const lit_6922 = 0xC524A000;

/* 80757978-8075797C 0004+00 s=0 e=0 z=0  None .rodata    @6923                                                        */
SECTION_RODATA u32 const lit_6923 = 0xC404C000;

/* 8075797C-80757980 0004+00 s=0 e=0 z=0  None .rodata    @6924                                                        */
SECTION_RODATA u32 const lit_6924 = 0xC4E54000;

/* 80757980-80757984 0004+00 s=0 e=0 z=0  None .rodata    @6925                                                        */
SECTION_RODATA u32 const lit_6925 = 0x43E50000;

/* 80757984-80757988 0004+00 s=0 e=0 z=0  None .rodata    @6926                                                        */
SECTION_RODATA u32 const lit_6926 = 0x44728000;

/* 80757988-8075798C 0004+00 s=0 e=0 z=0  None .rodata    @6927                                                        */
SECTION_RODATA u32 const lit_6927 = 0xC518E000;

/* 8075798C-80757990 0004+00 s=0 e=0 z=0  None .rodata    @6928                                                        */
SECTION_RODATA u32 const lit_6928 = 0x44048000;

/* 80757990-80757994 0004+00 s=0 e=0 z=0  None .rodata    @6929                                                        */
SECTION_RODATA u32 const lit_6929 = 0xC4E68000;

/* 80757994-80757998 0004+00 s=0 e=0 z=0  None .rodata    @6930                                                        */
SECTION_RODATA u32 const lit_6930 = 0xC3EA8000;

/* 80757998-8075799C 0004+00 s=0 e=0 z=0  None .rodata    @6931                                                        */
SECTION_RODATA u32 const lit_6931 = 0xC5169000;

/* 8075799C-807579A0 0004+00 s=0 e=0 z=0  None .rodata    @6932                                                        */
SECTION_RODATA u32 const lit_6932 = 0x44BB8000;

/* 807579A0-807579A4 0004+00 s=0 e=0 z=0  None .rodata    @6933                                                        */
SECTION_RODATA u32 const lit_6933 = 0x44CDA000;

/* 807579A4-807579A8 0004+00 s=0 e=0 z=0  None .rodata    @6934                                                        */
SECTION_RODATA u32 const lit_6934 = 0x43D70000;

/* 807579A8-807579AC 0004+00 s=0 e=0 z=0  None .rodata    @6935                                                        */
SECTION_RODATA u32 const lit_6935 = 0x44C58000;

/* 807579AC-807579B0 0004+00 s=0 e=0 z=0  None .rodata    @6936                                                        */
SECTION_RODATA u32 const lit_6936 = 0x43160000;

/* 807579B0-807579B4 0004+00 s=0 e=0 z=0  None .rodata    @6937                                                        */
SECTION_RODATA u32 const lit_6937 = 0xC4188000;

/* 807579B4-807579B8 0004+00 s=0 e=0 z=0  None .rodata    @6938                                                        */
SECTION_RODATA u32 const lit_6938 = 0xC4C1C000;

/* 807579B8-807579BC 0004+00 s=0 e=0 z=0  None .rodata    @6939                                                        */
SECTION_RODATA u32 const lit_6939 = 0x44960000;

/* 807579BC-807579C0 0004+00 s=0 e=0 z=0  None .rodata    @6940                                                        */
SECTION_RODATA u32 const lit_6940 = 0xC4174000;

/* 807579C0-807579C4 0004+00 s=0 e=0 z=0  None .rodata    @6941                                                        */
SECTION_RODATA u32 const lit_6941 = 0x42A00000;

/* 807579C4-807579C8 0004+00 s=0 e=0 z=0  None .rodata    @6942                                                        */
SECTION_RODATA u32 const lit_6942 = 0x45034000;

/* 807579C8-807579CC 0004+00 s=0 e=0 z=0  None .rodata    @6943                                                        */
SECTION_RODATA u32 const lit_6943 = 0xC3480000;

/* 807579CC-807579D0 0004+00 s=0 e=0 z=0  None .rodata    @6944                                                        */
SECTION_RODATA u32 const lit_6944 = 0x44E24000;

/* 807579D0-807579D4 0004+00 s=0 e=0 z=0  None .rodata    @6945                                                        */
SECTION_RODATA u32 const lit_6945 = 0xC4E10000;

/* 807579D4-807579D8 0004+00 s=0 e=0 z=0  None .rodata    @6946                                                        */
SECTION_RODATA u32 const lit_6946 = 0xC41C8000;

/* 807579D8-807579DC 0004+00 s=0 e=0 z=0  None .rodata    @6947                                                        */
SECTION_RODATA u32 const lit_6947 = 0x44250000;

/* 807579DC-807579E0 0004+00 s=0 e=0 z=0  None .rodata    @6948                                                        */
SECTION_RODATA u32 const lit_6948 = 0xC4E5E000;

/* 807579E0-807579E4 0004+00 s=0 e=0 z=0  None .rodata    @6949                                                        */
SECTION_RODATA u32 const lit_6949 = 0x440A4000;

/* 807579E4-807579E8 0004+00 s=0 e=0 z=0  None .rodata    @6950                                                        */
SECTION_RODATA u32 const lit_6950 = 0x44598000;

/* 807579E8-807579EC 0004+00 s=0 e=0 z=0  None .rodata    @6951                                                        */
SECTION_RODATA u32 const lit_6951 = 0xC517A000;

/* 807579EC-807579F0 0004+00 s=0 e=0 z=0  None .rodata    @6952                                                        */
SECTION_RODATA u32 const lit_6952 = 0x441C4000;

/* 807579F0-807579F4 0004+00 s=0 e=0 z=0  None .rodata    @6953                                                        */
SECTION_RODATA u32 const lit_6953 = 0xC4E72000;

/* 807579F4-807579F8 0004+00 s=0 e=0 z=0  None .rodata    @6954                                                        */
SECTION_RODATA u32 const lit_6954 = 0xC4094000;

/* 807579F8-807579FC 0004+00 s=0 e=0 z=0  None .rodata    @6955                                                        */
SECTION_RODATA u32 const lit_6955 = 0xC5178000;

/* 807579FC-80757A00 0004+00 s=0 e=0 z=0  None .rodata    @6956                                                        */
SECTION_RODATA u32 const lit_6956 = 0x440AC000;

/* 80757A00-80757A04 0004+00 s=0 e=0 z=0  None .rodata    @6957                                                        */
SECTION_RODATA u32 const lit_6957 = 0x3DCCCCCD;

/* 80757A04-80757A08 0004+00 s=0 e=0 z=0  None .rodata    @6958                                                        */
SECTION_RODATA u32 const lit_6958 = 0x3E99999A;

/* 80757A08-80757A0C 0004+00 s=0 e=0 z=0  None .rodata    @6959                                                        */
SECTION_RODATA u32 const lit_6959 = 0x3E4CCCCD;

/* 80757A0C-80757A10 0004+00 s=0 e=0 z=0  None .rodata    @6960                                                        */
SECTION_RODATA u32 const lit_6960 = 0x43FA0000;

/* 80757A10-80757A14 0004+00 s=0 e=0 z=0  None .rodata    @6961                                                        */
SECTION_RODATA u32 const lit_6961 = 0xC3C80000;

/* 80757A14-80757A18 0004+00 s=0 e=0 z=0  None .rodata    @6962                                                        */
SECTION_RODATA u32 const lit_6962 = 0xC4160000;

/* 80757A18-80757A1C 0004+00 s=0 e=0 z=0  None .rodata    @6963                                                        */
SECTION_RODATA u32 const lit_6963 = 0xC3EB0000;

/* 80757A1C-80757A20 0004+00 s=0 e=0 z=0  None .rodata    @6964                                                        */
SECTION_RODATA u32 const lit_6964 = 0x43A00000;

/* 80757A20-80757A24 0004+00 s=0 e=0 z=0  None .rodata    @6965                                                        */
SECTION_RODATA u32 const lit_6965 = 0xC3000000;

/* 80757A24-80757A28 0004+00 s=0 e=0 z=0  None .rodata    @6966                                                        */
SECTION_RODATA u32 const lit_6966 = 0x425C0000;

/* 80757A28-80757A2C 0004+00 s=0 e=0 z=0  None .rodata    @6967                                                        */
SECTION_RODATA u32 const lit_6967 = 0xC4164000;

/* 80757A2C-80757A30 0004+00 s=0 e=0 z=0  None .rodata    @6968                                                        */
SECTION_RODATA u32 const lit_6968 = 0x43080000;

/* 80757A30-80757A34 0004+00 s=0 e=0 z=0  None .rodata    @6969                                                        */
SECTION_RODATA u32 const lit_6969 = 0xC3B10000;

/* 80757A34-80757A3C 0004+04 s=0 e=0 z=0  None .rodata    @6970                                                        */
SECTION_RODATA u32 const lit_6970[1 + 1 /* padding */] = {
	0x444E8000,
	/* padding */
	0x00000000,
};

/* 80757A3C-80757A44 0008+00 s=0 e=0 z=0  None .rodata    @6972                                                        */
SECTION_RODATA u8 const lit_6972[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 80757A44-80757A48 0004+00 s=0 e=0 z=0  None .rodata    @7231                                                        */
SECTION_RODATA u32 const lit_7231 = 0x43660000;

/* 80757A48-80757A4C 0004+00 s=0 e=0 z=0  None .rodata    @7232                                                        */
SECTION_RODATA u32 const lit_7232 = 0x437F0000;

/* 80757A4C-80757A50 0004+00 s=0 e=0 z=0  None .rodata    @7523                                                        */
SECTION_RODATA u32 const lit_7523 = 0xC1B00000;

/* 80757A50-80757A54 0004+00 s=0 e=0 z=0  None .rodata    @7524                                                        */
SECTION_RODATA u32 const lit_7524 = 0x41C00000;

/* 80757A54-80757A58 0004+00 s=0 e=0 z=0  None .rodata    @7525                                                        */
SECTION_RODATA u32 const lit_7525 = 0xC1066666;

/* 80757A58-80757A5C 0004+00 s=0 e=0 z=0  None .rodata    @7526                                                        */
SECTION_RODATA u32 const lit_7526 = 0xC1C80000;

/* 80757A5C-80757A60 0004+00 s=0 e=0 z=0  None .rodata    @7527                                                        */
SECTION_RODATA u32 const lit_7527 = 0x45BB8000;

/* 80757A60-80757A64 0004+00 s=0 e=0 z=0  None .rodata    @7528                                                        */
SECTION_RODATA u32 const lit_7528 = 0xC1700000;

/* 80757A64-80757A68 0004+00 s=0 e=0 z=0  None .rodata    @8006                                                        */
SECTION_RODATA u32 const lit_8006 = 0xC3FA0000;

/* 80757A68-80757A6C 0004+00 s=0 e=0 z=0  None .rodata    @8007                                                        */
SECTION_RODATA u32 const lit_8007 = 0x42BE0000;

/* 80757A6C-80757A70 0004+00 s=0 e=0 z=0  None .rodata    @8008                                                        */
SECTION_RODATA u32 const lit_8008 = 0x45825000;

/* 80757A70-80757A74 0004+00 s=0 e=0 z=0  None .rodata    @8009                                                        */
SECTION_RODATA u32 const lit_8009 = 0xC5A1E000;

/* 80757A74-80757A78 0004+00 s=0 e=0 z=0  None .rodata    @8010                                                        */
SECTION_RODATA u32 const lit_8010 = 0x45AFF000;

/* 80757A78-80757A7C 0004+00 s=0 e=0 z=0  None .rodata    @8011                                                        */
SECTION_RODATA u32 const lit_8011 = 0x44834000;

/* 80757A7C-80757A80 0004+00 s=0 e=0 z=0  None .rodata    @8012                                                        */
SECTION_RODATA u32 const lit_8012 = 0x458E8000;

/* 80757A80-80757A84 0004+00 s=0 e=0 z=0  None .rodata    @8013                                                        */
SECTION_RODATA u32 const lit_8013 = 0xC58E3000;

/* 80757A84-80757A88 0004+00 s=0 e=0 z=0  None .rodata    @8014                                                        */
SECTION_RODATA u32 const lit_8014 = 0x4483E000;

/* 80757A88-80757AA2 001A+00 s=5 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_80757A88 = "E_PO";
SECTION_DEAD char const* const stringBase_80757A8D = "DEFAULT_GETITEM";
SECTION_DEAD char const* const stringBase_80757A9D = "E_po";
#pragma pop

/* 8074C660-8074C70C 00AC+00 s=12 e=0 z=0  None .text      anm_init__FP10e_po_classifUcf                                */
//	8074C680: 803621DC (_savegpr_29)
//	8074C698: 80757A88 (stringBase0)
//	8074C69C: 80757A88 (stringBase0)
//	8074C6A0: 804061C0 (g_dComIfG_gameInfo)
//	8074C6A4: 804061C0 (g_dComIfG_gameInfo)
//	8074C6B4: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8074C6CC: 80757700 (lit_3918)
//	8074C6D0: 80757700 (lit_3918)
//	8074C6D4: 8075773C (lit_3974)
//	8074C6D8: 8075773C (lit_3974)
//	8074C6DC: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	8074C6F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
//  int False
//  f32 False
//  u8 False
//  f32 False
asm static void anm_init(e_po_class* param_0, int param_1, f32 param_2, u8 param_3, f32 param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/anm_init__FP10e_po_classifUcf.s"
}
#pragma pop


/* 8074C70C-8074C858 014C+00 s=1 e=0 z=0  None .text      nodeCallBack__FP8J3DJointi                                   */
//	8074C71C: 803621D8 (_savegpr_28)
//	8074C72C: 80434AC8 (j3dSys)
//	8074C730: 80434AC8 (j3dSys)
//	8074C754: 80450768 (calc_mtx)
//	8074C758: 80450768 (calc_mtx)
//	8074C760: 803464B0 (PSMTXCopy)
//	8074C77C: 80450768 (calc_mtx)
//	8074C780: 80450768 (calc_mtx)
//	8074C794: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8074C798: 80450768 (calc_mtx)
//	8074C79C: 80450768 (calc_mtx)
//	8074C7AC: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8074C7B4: 80450768 (calc_mtx)
//	8074C7B8: 80450768 (calc_mtx)
//	8074C7CC: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	8074C7D0: 80450768 (calc_mtx)
//	8074C7D4: 80450768 (calc_mtx)
//	8074C7E4: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	8074C7E8: 80450768 (calc_mtx)
//	8074C7EC: 80450768 (calc_mtx)
//	8074C800: 803464B0 (PSMTXCopy)
//	8074C810: 80450768 (calc_mtx)
//	8074C814: 80450768 (calc_mtx)
//	8074C820: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8074C824: 80450768 (calc_mtx)
//	8074C828: 80450768 (calc_mtx)
//	8074C830: 80434BE4 (mCurrentMtx__6J3DSys)
//	8074C834: 80434BE4 (mCurrentMtx__6J3DSys)
//	8074C838: 803464B0 (PSMTXCopy)
//	8074C844: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm static void nodeCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/nodeCallBack__FP8J3DJointi.s"
}
#pragma pop


/* ############################################################################################## */
/* 80757E10-80757E14 0001+03 s=3 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 80757E14-80757E18 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 80757E18-80757E1C 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 80757E1C-80757E20 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 80757E20-80757E24 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 80757E24-80757E28 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 80757E28-80757E2C 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 80757E2C-80757E30 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 80757E30-80757E34 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 80757E34-80757E38 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 80757E38-80757E3C 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 80757E3C-80757E40 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 80757E40-80757E44 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 80757E44-80757E48 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 80757E48-80757E4C 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 80757E4C-80757E50 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 struct_80757E4C[4];

/* 80757E50-80757E5C 000C+00 s=1 e=0 z=0  None .bss       @3933                                                        */
static u8 lit_3933[12];

/* 80757E5C-80757E98 003C+00 s=9 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[60];

/* 80757E98-80757E9C 0004+00 s=0 e=0 z=0  None .bss       None                                                         */
u8 struct_80757E98[4];

/* 80757E9C-80757EA0 0004+00 s=1 e=0 z=0  None .bss       None                                                         */
static u8 struct_80757E9C[4];

/* 8074C858-8074CCCC 0474+00 s=1 e=0 z=0  None .text      daE_PO_Draw__FP10e_po_class                                  */
//	8074C868: 803621D0 (_savegpr_26)
//	8074C870: 807576FC (lit_3917)
//	8074C874: 807576FC (lit_3917)
//	8074C87C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074C888: 80757E9E (struct_80757E9C)
//	8074C88C: 80757E9E (struct_80757E9C)
//	8074C8B4: 8042CA54 (g_env_light)
//	8074C8B8: 8042CA54 (g_env_light)
//	8074C8C8: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	8074C8D8: 8042CA54 (g_env_light)
//	8074C8DC: 8042CA54 (g_env_light)
//	8074C8EC: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8074C8F4: 8000DCC4 (mDoExt_modelUpdateDL__FP8J3DModel)
//	8074C93C: 80757E5C (l_HIO)
//	8074C940: 80757E5C (l_HIO)
//	8074C964: 80757E5C (l_HIO)
//	8074C968: 80757E5C (l_HIO)
//	8074C98C: 80757E5C (l_HIO)
//	8074C990: 80757E5C (l_HIO)
//	8074C9F4: 80757E5C (l_HIO)
//	8074C9F8: 80757E5C (l_HIO)
//	8074CA1C: 80757E5C (l_HIO)
//	8074CA20: 80757E5C (l_HIO)
//	8074CA44: 80757E5C (l_HIO)
//	8074CA48: 80757E5C (l_HIO)
//	8074CA58: 80010680 (entryDL__14mDoExt_McaMorfFv)
//	8074CA68: 8042CA54 (g_env_light)
//	8074CA6C: 8042CA54 (g_env_light)
//	8074CA7C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8074CA84: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	8074CAAC: 804061C0 (g_dComIfG_gameInfo)
//	8074CAB0: 804061C0 (g_dComIfG_gameInfo)
//	8074CAC0: 80451018 (m_midnaActor__9daPy_py_c)
//	8074CAC4: 80451018 (m_midnaActor__9daPy_py_c)
//	8074CACC: 8001BB14 (fopAcM_getTalkEventPartner__FPC10fopAc_ac_c)
//	8074CAE0: 8042CA54 (g_env_light)
//	8074CAE4: 8042CA54 (g_env_light)
//	8074CAF0: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	8074CB50: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074CB60: 80757ADA (struct_80757AD4)
//	8074CB64: 80757ADA (struct_80757AD4)
//	8074CB6C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074CC14: 8000E7C0 (entryDL__21mDoExt_invisibleModelFP4cXyz)
//	8074CC30: 804061C0 (g_dComIfG_gameInfo)
//	8074CC34: 804061C0 (g_dComIfG_gameInfo)
//	8074CC64: 8026FA3C (cLib_addCalc2__FPffff)
//	8074CC68: 804061C0 (g_dComIfG_gameInfo)
//	8074CC6C: 804061C0 (g_dComIfG_gameInfo)
//	8074CCAC: 800196A0 (drawBallModel__13fopEn_enemy_cFP12dKy_tevstr_c)
//	8074CCB8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void daE_PO_Draw(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/daE_PO_Draw__FP10e_po_class.s"
}
#pragma pop


/* 8074CCCC-8074D16C 04A0+00 s=3 e=0 z=0  None .text      e_po_opening__FP10e_po_class                                 */
//	8074CCDC: 803621D4 (_savegpr_27)
//	8074CCE4: 807576FC (lit_3917)
//	8074CCE8: 807576FC (lit_3917)
//	8074CCEC: 804061C0 (g_dComIfG_gameInfo)
//	8074CCF0: 804061C0 (g_dComIfG_gameInfo)
//	8074CD44: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	8074CD50: 804061C0 (g_dComIfG_gameInfo)
//	8074CD54: 804061C0 (g_dComIfG_gameInfo)
//	8074CD64: 80070844 (GetLockonList__12dAttention_cFl)
//	8074CD74: 800737E4 (LockonTruth__12dAttention_cFv)
//	8074CD88: 80070844 (GetLockonList__12dAttention_cFl)
//	8074CD8C: 80073864 (getActor__10dAttList_cFv)
//	8074CDE8: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	8074CE28: 804061C0 (g_dComIfG_gameInfo)
//	8074CE2C: 804061C0 (g_dComIfG_gameInfo)
//	8074CE38: 80034B98 (onSwitch__12dSv_danBit_cFi)
//	8074CE50: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074CE5C: 801614D0 (Stop__9dCamera_cFv)
//	8074CE68: 8016300C (SetTrimSize__9dCamera_cFl)
//	8074CE70: 804061C0 (g_dComIfG_gameInfo)
//	8074CE74: 804061C0 (g_dComIfG_gameInfo)
//	8074CE7C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074CEBC: 80181640 (dCam_getBody__Fv)
//	8074CED0: 80181170 (StartBlure__9dCamera_cFiP10fopAc_ac_cff)
//	8074CEDC: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074CEF0: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8074CF04: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074CF14: 803650D0 (abs)
//	8074CF34: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074CF88: 80181640 (dCam_getBody__Fv)
//	8074CF9C: 80181170 (StartBlure__9dCamera_cFiP10fopAc_ac_cff)
//	8074CFF4: 801614AC (Start__9dCamera_cFv)
//	8074D000: 8016300C (SetTrimSize__9dCamera_cFl)
//	8074D004: 804061C0 (g_dComIfG_gameInfo)
//	8074D008: 804061C0 (g_dComIfG_gameInfo)
//	8074D010: 80042468 (reset__14dEvt_control_cFv)
//	8074D014: 804061C0 (g_dComIfG_gameInfo)
//	8074D018: 804061C0 (g_dComIfG_gameInfo)
//	8074D058: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D0A8: 804061C0 (g_dComIfG_gameInfo)
//	8074D0AC: 804061C0 (g_dComIfG_gameInfo)
//	8074D0B4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074D0BC: 80450768 (calc_mtx)
//	8074D0C0: 80450768 (calc_mtx)
//	8074D0C8: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8074D0E8: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8074D110: 80347090 (PSVECAdd)
//	8074D150: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	8074D158: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_opening(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_opening__FP10e_po_class.s"
}
#pragma pop


/* 8074D16C-8074D338 01CC+00 s=1 e=0 z=0  None .text      e_po_wait__FP10e_po_class                                    */
//	8074D184: 807576FC (lit_3917)
//	8074D188: 807576FC (lit_3917)
//	8074D1B8: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D1C0: 80267954 (cM_rndF__Ff)
//	8074D1F8: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	8074D204: 804061C0 (g_dComIfG_gameInfo)
//	8074D208: 804061C0 (g_dComIfG_gameInfo)
//	8074D218: 80070844 (GetLockonList__12dAttention_cFl)
//	8074D228: 800737E4 (LockonTruth__12dAttention_cFv)
//	8074D23C: 80070844 (GetLockonList__12dAttention_cFl)
//	8074D240: 80073864 (getActor__10dAttList_cFv)
//	8074D294: 804061C0 (g_dComIfG_gameInfo)
//	8074D298: 804061C0 (g_dComIfG_gameInfo)
//	8074D2A0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074D2B8: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074D2F0: 8074CCCC (e_po_opening__FP10e_po_class)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_wait(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_wait__FP10e_po_class.s"
}
#pragma pop


/* 8074D338-8074D500 01C8+00 s=1 e=0 z=0  None .text      e_po_avoid__FP10e_po_class                                   */
//	8074D350: 807576FC (lit_3917)
//	8074D354: 807576FC (lit_3917)
//	8074D384: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D3B4: 804061C0 (g_dComIfG_gameInfo)
//	8074D3B8: 804061C0 (g_dComIfG_gameInfo)
//	8074D3C0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074D3D8: 80267954 (cM_rndF__Ff)
//	8074D498: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D4B4: 8026FA3C (cLib_addCalc2__FPffff)
//	8074D4BC: 804061C0 (g_dComIfG_gameInfo)
//	8074D4C0: 804061C0 (g_dComIfG_gameInfo)
//	8074D4C8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074D4DC: 80270608 (cLib_addCalcAngleS2__FPssss)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_avoid(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_avoid__FP10e_po_class.s"
}
#pragma pop


/* 8074D500-8074DC40 0740+00 s=1 e=0 z=0  None .text      e_po_search__FP10e_po_class                                  */
//	8074D518: 803621D0 (_savegpr_26)
//	8074D520: 807576FC (lit_3917)
//	8074D524: 807576FC (lit_3917)
//	8074D528: 804061C0 (g_dComIfG_gameInfo)
//	8074D52C: 804061C0 (g_dComIfG_gameInfo)
//	8074D560: 80439A20 (sincosTable___5JMath)
//	8074D564: 80439A20 (sincosTable___5JMath)
//	8074D5C0: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D63C: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D64C: 80757E5C (l_HIO)
//	8074D650: 80757E5C (l_HIO)
//	8074D688: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D690: 80267954 (cM_rndF__Ff)
//	8074D6B4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074D6D4: 80757E5C (l_HIO)
//	8074D6D8: 80757E5C (l_HIO)
//	8074D730: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D750: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8074D770: 80267128 (atan2sX_Z__4cXyzCFv)
//	8074D77C: 80347138 (PSVECSquareMag)
//	8074D7EC: 80450AE0 (__float_nan)
//	8074D7F0: 80450AE0 (__float_nan)
//	8074D85C: 80450AE0 (__float_nan)
//	8074D860: 80450AE0 (__float_nan)
//	8074D894: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074D8A0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074D8B8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8074D8D8: 80347138 (PSVECSquareMag)
//	8074D948: 80450AE0 (__float_nan)
//	8074D94C: 80450AE0 (__float_nan)
//	8074D9B8: 80450AE0 (__float_nan)
//	8074D9BC: 80450AE0 (__float_nan)
//	8074D9C0: 80757E5C (l_HIO)
//	8074D9C4: 80757E5C (l_HIO)
//	8074D9E8: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074DA04: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8074DA18: 8026FA3C (cLib_addCalc2__FPffff)
//	8074DA34: 80757E5C (l_HIO)
//	8074DA38: 80757E5C (l_HIO)
//	8074DA40: 8026FA3C (cLib_addCalc2__FPffff)
//	8074DA54: 80757E5C (l_HIO)
//	8074DA58: 80757E5C (l_HIO)
//	8074DA60: 8026FA3C (cLib_addCalc2__FPffff)
//	8074DA68: 80757E5C (l_HIO)
//	8074DA6C: 80757E5C (l_HIO)
//	8074DA7C: 8026FA3C (cLib_addCalc2__FPffff)
//	8074DA88: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074DAA0: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8074DAC0: 80347138 (PSVECSquareMag)
//	8074DB30: 80450AE0 (__float_nan)
//	8074DB34: 80450AE0 (__float_nan)
//	8074DBA0: 80450AE0 (__float_nan)
//	8074DBA4: 80450AE0 (__float_nan)
//	8074DBA8: 80757E5C (l_HIO)
//	8074DBAC: 80757E5C (l_HIO)
//	8074DBE4: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074DC00: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074DC1C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8074DC2C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_search(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_search__FP10e_po_class.s"
}
#pragma pop


/* 8074DC40-8074E168 0528+00 s=1 e=0 z=0  None .text      e_po_attack__FP10e_po_class                                  */
//	8074DC58: 803621D4 (_savegpr_27)
//	8074DC60: 807576FC (lit_3917)
//	8074DC64: 807576FC (lit_3917)
//	8074DC68: 804061C0 (g_dComIfG_gameInfo)
//	8074DC6C: 804061C0 (g_dComIfG_gameInfo)
//	8074DC90: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074DCD4: 8074CCCC (e_po_opening__FP10e_po_class)
//	8074DD28: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074DD2C: 80757E5C (l_HIO)
//	8074DD30: 80757E5C (l_HIO)
//	8074DD6C: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074DDB4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074DE88: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074DE94: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074DEA8: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074DEEC: 80267954 (cM_rndF__Ff)
//	8074DF28: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074DF48: 804061C0 (g_dComIfG_gameInfo)
//	8074DF4C: 804061C0 (g_dComIfG_gameInfo)
//	8074DF58: 80035200 (onSwitch__10dSv_info_cFii)
//	8074DF68: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074DF74: 80757ADA (struct_80757AD4)
//	8074DF78: 80757ADA (struct_80757AD4)
//	8074DF90: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	8074DFA0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074DFB8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8074DFD8: 80347138 (PSVECSquareMag)
//	8074E048: 80450AE0 (__float_nan)
//	8074E04C: 80450AE0 (__float_nan)
//	8074E0B8: 80450AE0 (__float_nan)
//	8074E0BC: 80450AE0 (__float_nan)
//	8074E0C0: 80757E5C (l_HIO)
//	8074E0C4: 80757E5C (l_HIO)
//	8074E0F4: 8026FA3C (cLib_addCalc2__FPffff)
//	8074E100: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074E114: 80270608 (cLib_addCalcAngleS2__FPssss)
//	8074E128: 8026FA3C (cLib_addCalc2__FPffff)
//	8074E130: 80757E5C (l_HIO)
//	8074E134: 80757E5C (l_HIO)
//	8074E144: 8026FA3C (cLib_addCalc2__FPffff)
//	8074E154: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_attack(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_attack__FP10e_po_class.s"
}
#pragma pop


/* 8074E168-8074E4EC 0384+00 s=1 e=0 z=0  None .text      damage_check__FP10e_po_class                                 */
//	8074E178: 803621DC (_savegpr_29)
//	8074E180: 807576FC (lit_3917)
//	8074E184: 807576FC (lit_3917)
//	8074E188: 804061C0 (g_dComIfG_gameInfo)
//	8074E18C: 804061C0 (g_dComIfG_gameInfo)
//	8074E1F8: 803DD470 (now__14mDoMtx_stack_c)
//	8074E1FC: 803DD470 (now__14mDoMtx_stack_c)
//	8074E200: 803464B0 (PSMTXCopy)
//	8074E204: 803DD470 (now__14mDoMtx_stack_c)
//	8074E208: 803DD470 (now__14mDoMtx_stack_c)
//	8074E224: 80757E5C (l_HIO)
//	8074E228: 80757E5C (l_HIO)
//	8074E24C: 80756E7C (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
//	8074E258: 804061C0 (g_dComIfG_gameInfo)
//	8074E25C: 804061C0 (g_dComIfG_gameInfo)
//	8074E2B0: 80083830 (Move__10dCcD_GSttsFv)
//	8074E2B8: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	8074E314: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	8074E32C: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	8074E338: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E348: 80757AE0 (mRollHp)
//	8074E34C: 80757AE0 (mRollHp)
//	8074E3C0: 80451125 (struct_80451124)
//	8074E3C4: 80451125 (struct_80451124)
//	8074E3CC: 804061C0 (g_dComIfG_gameInfo)
//	8074E3D0: 804061C0 (g_dComIfG_gameInfo)
//	8074E3EC: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	8074E40C: 804061C0 (g_dComIfG_gameInfo)
//	8074E410: 804061C0 (g_dComIfG_gameInfo)
//	8074E430: 8004C218 (setHitMark__13dPa_control_cFUsP10fopAc_ac_cPC4cXyzPC5csXyzPC4cXyzUl)
//	8074E454: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E464: 80757AE0 (mRollHp)
//	8074E468: 80757AE0 (mRollHp)
//	8074E480: 80451125 (struct_80451124)
//	8074E484: 80451125 (struct_80451124)
//	8074E4D8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void damage_check(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/damage_check__FP10e_po_class.s"
}
#pragma pop


/* 8074E4EC-8074E694 01A8+00 s=1 e=0 z=0  None .text      e_po_damage__FP10e_po_class                                  */
//	8074E504: 807576FC (lit_3917)
//	8074E508: 807576FC (lit_3917)
//	8074E534: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E544: 80757ADA (struct_80757AD4)
//	8074E548: 80757ADA (struct_80757AD4)
//	8074E558: 804061C0 (g_dComIfG_gameInfo)
//	8074E55C: 804061C0 (g_dComIfG_gameInfo)
//	8074E568: 800352B0 (offSwitch__10dSv_info_cFii)
//	8074E588: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074E5D4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E5FC: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074E614: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E624: 80267954 (cM_rndF__Ff)
//	8074E640: 80757ADA (struct_80757AD4)
//	8074E644: 80757ADA (struct_80757AD4)
//	8074E678: 8026FA80 (cLib_addCalc0__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_damage(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_damage__FP10e_po_class.s"
}
#pragma pop


/* 8074E694-8074EA6C 03D8+00 s=1 e=0 z=0  None .text      e_po_wolfbite__FP10e_po_class                                */
//	8074E6A4: 803621DC (_savegpr_29)
//	8074E6AC: 807576FC (lit_3917)
//	8074E6B0: 807576FC (lit_3917)
//	8074E6B4: 804061C0 (g_dComIfG_gameInfo)
//	8074E6B8: 804061C0 (g_dComIfG_gameInfo)
//	8074E6FC: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E70C: 80757ADA (struct_80757AD4)
//	8074E710: 80757ADA (struct_80757AD4)
//	8074E730: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074E7CC: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074E808: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E818: 80757AE0 (mRollHp)
//	8074E81C: 80757AE0 (mRollHp)
//	8074E854: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E864: 80757AE0 (mRollHp)
//	8074E868: 80757AE0 (mRollHp)
//	8074E878: 80451125 (struct_80451124)
//	8074E87C: 80451125 (struct_80451124)
//	8074E900: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074E960: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074E9B8: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074E9E0: 80267954 (cM_rndF__Ff)
//	8074EA00: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074EA10: 80267954 (cM_rndF__Ff)
//	8074EA2C: 80757ADA (struct_80757AD4)
//	8074EA30: 80757ADA (struct_80757AD4)
//	8074EA58: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_wolfbite(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_wolfbite__FP10e_po_class.s"
}
#pragma pop


/* 8074EA6C-807501B0 1744+00 s=2 e=0 z=0  None .text      e_po_dead__FP10e_po_class                                    */
//	8074EA7C: 803621B8 (_savegpr_20)
//	8074EA84: 80757AA4 (cNullVec__6Z2Calc)
//	8074EA88: 80757AA4 (cNullVec__6Z2Calc)
//	8074EA8C: 807576FC (lit_3917)
//	8074EA90: 807576FC (lit_3917)
//	8074EA94: 804061C0 (g_dComIfG_gameInfo)
//	8074EA98: 804061C0 (g_dComIfG_gameInfo)
//	8074EABC: 80077C68 (__ct__11dBgS_LinChkFv)
//	8074EAD4: 8007757C (__ct__11dBgS_GndChkFv)
//	8074EAEC: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8074EB20: 80757B08 (lit_5635)
//	8074EB24: 80757B08 (lit_5635)
//	8074EB58: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	8074EBA0: 801614D0 (Stop__9dCamera_cFv)
//	8074EBAC: 8016300C (SetTrimSize__9dCamera_cFl)
//	8074EBD0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074EBF8: 804061C0 (g_dComIfG_gameInfo)
//	8074EBFC: 804061C0 (g_dComIfG_gameInfo)
//	8074EC08: 800352B0 (offSwitch__10dSv_info_cFii)
//	8074EC74: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074ECA0: 80450768 (calc_mtx)
//	8074ECA4: 80450768 (calc_mtx)
//	8074ECBC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8074ECE0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8074ED08: 80347090 (PSVECAdd)
//	8074ED1C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	8074ED2C: 804061C0 (g_dComIfG_gameInfo)
//	8074ED30: 804061C0 (g_dComIfG_gameInfo)
//	8074ED3C: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	8074EDA0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074EDA4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074EDD0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074EE34: 80757E5C (l_HIO)
//	8074EE38: 80757E5C (l_HIO)
//	8074EE48: 80757E5C (l_HIO)
//	8074EE4C: 80757E5C (l_HIO)
//	8074EE5C: 80757E5C (l_HIO)
//	8074EE60: 80757E5C (l_HIO)
//	8074EE70: 80757E5C (l_HIO)
//	8074EE74: 80757E5C (l_HIO)
//	8074EE9C: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074EEE4: 804061C0 (g_dComIfG_gameInfo)
//	8074EEE8: 804061C0 (g_dComIfG_gameInfo)
//	8074EF30: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074EF6C: 800775F0 (__dt__11dBgS_GndChkFv)
//	8074EF78: 80077CDC (__dt__11dBgS_LinChkFv)
//	8074F018: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8074F040: 80451125 (struct_80451124)
//	8074F044: 80451125 (struct_80451124)
//	8074F0BC: 80757A88 (stringBase0)
//	8074F0C0: 80757A88 (stringBase0)
//	8074F0C8: 804061C0 (g_dComIfG_gameInfo)
//	8074F0CC: 804061C0 (g_dComIfG_gameInfo)
//	8074F0DC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	8074F0FC: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
//	8074F148: 804061C0 (g_dComIfG_gameInfo)
//	8074F14C: 804061C0 (g_dComIfG_gameInfo)
//	8074F1A0: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8074F1B4: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	8074F1D4: 802807E0 (func_802807E0)
//	8074F220: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8074F234: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	8074F254: 802807E0 (func_802807E0)
//	8074F2CC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8074F2E0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	8074F300: 802807E0 (func_802807E0)
//	8074F34C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8074F360: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	8074F380: 802807E0 (func_802807E0)
//	8074F400: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8074F420: 80267128 (atan2sX_Z__4cXyzCFv)
//	8074F430: 80450768 (calc_mtx)
//	8074F434: 80450768 (calc_mtx)
//	8074F43C: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8074F45C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8074F46C: 80347090 (PSVECAdd)
//	8074F4A4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8074F4B4: 80347090 (PSVECAdd)
//	8074F50C: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	8074F51C: 804061C0 (g_dComIfG_gameInfo)
//	8074F520: 804061C0 (g_dComIfG_gameInfo)
//	8074F52C: 80035200 (onSwitch__10dSv_info_cFii)
//	8074F550: 8026FA80 (cLib_addCalc0__FPfff)
//	8074F598: 80450768 (calc_mtx)
//	8074F59C: 80450768 (calc_mtx)
//	8074F5A4: 803464B0 (PSMTXCopy)
//	8074F5C4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8074F61C: 804061C0 (g_dComIfG_gameInfo)
//	8074F620: 804061C0 (g_dComIfG_gameInfo)
//	8074F668: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8074F690: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F694: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F6C0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074F6FC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F700: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F72C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074F74C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F750: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F77C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074F7AC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F7B0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F7DC: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074F7F4: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F7F8: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074F824: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074F870: 803470D8 (PSVECScale)
//	8074F880: 804061C0 (g_dComIfG_gameInfo)
//	8074F884: 804061C0 (g_dComIfG_gameInfo)
//	8074F8DC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8074F8F0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	8074F8FC: 80450EC8 (mParticleTracePCB__13dPa_control_c)
//	8074F900: 80450EC8 (mParticleTracePCB__13dPa_control_c)
//	8074F988: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	8074F9F4: 80180C18 (Reset__9dCamera_cF4cXyz4cXyz)
//	8074F9FC: 801614AC (Start__9dCamera_cFv)
//	8074FA08: 8016300C (SetTrimSize__9dCamera_cFl)
//	8074FA0C: 804061C0 (g_dComIfG_gameInfo)
//	8074FA10: 804061C0 (g_dComIfG_gameInfo)
//	8074FA18: 80042468 (reset__14dEvt_control_cFv)
//	8074FA1C: 804061C0 (g_dComIfG_gameInfo)
//	8074FA20: 804061C0 (g_dComIfG_gameInfo)
//	8074FA44: 804061C0 (g_dComIfG_gameInfo)
//	8074FA48: 804061C0 (g_dComIfG_gameInfo)
//	8074FA50: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	8074FA54: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	8074FA5C: 8003498C (onEventBit__11dSv_event_cFUs)
//	8074FA80: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074FA8C: 804061C0 (g_dComIfG_gameInfo)
//	8074FA90: 804061C0 (g_dComIfG_gameInfo)
//	8074FAA0: 80035360 (isSwitch__10dSv_info_cCFii)
//	8074FAB4: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	8074FB14: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074FB18: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074FB48: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074FB90: 80180AE0 (Set__9dCamera_cF4cXyz4cXyzfs)
//	8074FBA8: 804061C0 (g_dComIfG_gameInfo)
//	8074FBAC: 804061C0 (g_dComIfG_gameInfo)
//	8074FBBC: 80035200 (onSwitch__10dSv_info_cFii)
//	8074FBC8: 801A87E4 (dKy_change_colpat__FUc)
//	8074FBD8: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	8074FBFC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074FC00: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8074FC2C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8074FC48: 80450768 (calc_mtx)
//	8074FC4C: 80450768 (calc_mtx)
//	8074FC58: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8074FC78: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8074FC88: 80347090 (PSVECAdd)
//	8074FCE0: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	8074FCFC: 800775F0 (__dt__11dBgS_GndChkFv)
//	8074FD08: 80077CDC (__dt__11dBgS_LinChkFv)
//	8074FD3C: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	8074FD50: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	8074FDA4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074FDBC: 80267954 (cM_rndF__Ff)
//	8074FE00: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074FE28: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8074FE38: 80267954 (cM_rndF__Ff)
//	8074FE9C: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	8074FEAC: 804061C0 (g_dComIfG_gameInfo)
//	8074FEB0: 804061C0 (g_dComIfG_gameInfo)
//	8074FED8: 80047A78 (endCheck__16dEvent_manager_cFs)
//	8074FEE8: 80042468 (reset__14dEvt_control_cFv)
//	8074FEF4: 800483E8 (getRunEventName__16dEvent_manager_cFv)
//	8074FEF8: 80757A88 (stringBase0)
//	8074FEFC: 80757A88 (stringBase0)
//	8074FF04: 80368994 (strcmp)
//	8074FF2C: 8004368C (setPtT__14dEvt_control_cFPv)
//	8074FF38: 800436EC (setPtI_Id__14dEvt_control_cFUi)
//	8074FF9C: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	8074FFEC: 801614D0 (Stop__9dCamera_cFv)
//	8074FFF8: 8016300C (SetTrimSize__9dCamera_cFl)
//	80750040: 8001BBE8 (fopAcM_createItemForPresentDemo__FPC4cXyziUciiPC5csXyzPC4cXyz)
//	8075004C: 8002139C (fpcEx_IsExist__FUi)
//	80750060: 80757A88 (stringBase0)
//	80750064: 80757A88 (stringBase0)
//	80750070: 80047758 (getEventIdx__16dEvent_manager_cFP10fopAc_ac_cPCcUc)
//	80750094: 8001B67C (fopAcM_orderOtherEventId__FP10fopAc_ac_csUcUsUsUs)
//	807500C4: 80450768 (calc_mtx)
//	807500C8: 80450768 (calc_mtx)
//	807500D4: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	807500F4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80750104: 80347090 (PSVECAdd)
//	8075015C: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	8075017C: 8026FA3C (cLib_addCalc2__FPffff)
//	80750188: 800775F0 (__dt__11dBgS_GndChkFv)
//	80750194: 80077CDC (__dt__11dBgS_LinChkFv)
//	8075019C: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_dead(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_dead__FP10e_po_class.s"
}
#pragma pop


/* 807501B0-8075030C 015C+00 s=2 e=0 z=0  None .text      e_rollingMove__FP10e_po_classsff                             */
//	807501D0: 803621DC (_savegpr_29)
//	807501E0: 807576FC (lit_3917)
//	807501E4: 807576FC (lit_3917)
//	807501E8: 804061C0 (g_dComIfG_gameInfo)
//	807501EC: 804061C0 (g_dComIfG_gameInfo)
//	807501F4: 80450768 (calc_mtx)
//	807501F8: 80450768 (calc_mtx)
//	80750200: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	8075021C: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80750244: 8026FA3C (cLib_addCalc2__FPffff)
//	80750258: 8026FA3C (cLib_addCalc2__FPffff)
//	8075027C: 80347090 (PSVECAdd)
//	807502A4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807502C4: 80267128 (atan2sX_Z__4cXyzCFv)
//	807502E0: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	807502F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
//  s16 False
//  f32 False
//  f32 False
asm static void e_rollingMove(e_po_class* param_0, s16 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_rollingMove__FP10e_po_classsff.s"
}
#pragma pop


/* 8075030C-80750E88 0B7C+00 s=2 e=0 z=0  None .text      e_po_limbering__FP10e_po_class                               */
//	8075031C: 803621C8 (_savegpr_24)
//	80750324: 80757E10 (lit_1109)
//	80750328: 80757E10 (lit_1109)
//	8075032C: 807576FC (lit_3917)
//	80750330: 807576FC (lit_3917)
//	80750334: 804061C0 (g_dComIfG_gameInfo)
//	80750338: 804061C0 (g_dComIfG_gameInfo)
//	80750364: 80757BD8 (lit_5903)
//	80750368: 80757BD8 (lit_5903)
//	80750380: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	8075039C: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	807503A8: 804061C0 (g_dComIfG_gameInfo)
//	807503AC: 804061C0 (g_dComIfG_gameInfo)
//	807503BC: 80070844 (GetLockonList__12dAttention_cFl)
//	807503CC: 800737E4 (LockonTruth__12dAttention_cFv)
//	807503E0: 80070844 (GetLockonList__12dAttention_cFl)
//	807503E4: 80073864 (getActor__10dAttList_cFv)
//	80750440: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	80750488: 801614D0 (Stop__9dCamera_cFv)
//	80750494: 8016300C (SetTrimSize__9dCamera_cFl)
//	807504B8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807504FC: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80750508: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80750510: 80450768 (calc_mtx)
//	80750514: 80450768 (calc_mtx)
//	80750528: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80750548: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80750574: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80750600: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80750608: 80450768 (calc_mtx)
//	8075060C: 80450768 (calc_mtx)
//	80750614: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80750634: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8075065C: 80347090 (PSVECAdd)
//	8075069C: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	807506A8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807506BC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807506D0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807506E0: 803650D0 (abs)
//	80750700: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80750740: 8026FA3C (cLib_addCalc2__FPffff)
//	80750764: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80750770: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807507B0: 80757ADC (mHaba)
//	807507B4: 80757ADC (mHaba)
//	807507E4: 8074C660 (anm_init__FP10e_po_classifUcf)
//	807507E8: 80757ADC (mHaba)
//	807507EC: 80757ADC (mHaba)
//	8075083C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80750864: 80347138 (PSVECSquareMag)
//	807508D4: 80450AE0 (__float_nan)
//	807508D8: 80450AE0 (__float_nan)
//	80750944: 80450AE0 (__float_nan)
//	80750948: 80450AE0 (__float_nan)
//	8075098C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807509CC: 8026FA3C (cLib_addCalc2__FPffff)
//	80750A0C: 80267954 (cM_rndF__Ff)
//	80750A28: 80757ADA (struct_80757AD4)
//	80750A2C: 80757ADA (struct_80757AD4)
//	80750A68: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80750AFC: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	80750B64: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	80750B9C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80750BC4: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80750C24: 80181640 (dCam_getBody__Fv)
//	80750C38: 80181170 (StartBlure__9dCamera_cFiP10fopAc_ac_cff)
//	80750C70: 801614AC (Start__9dCamera_cFv)
//	80750C7C: 8016300C (SetTrimSize__9dCamera_cFl)
//	80750C80: 804061C0 (g_dComIfG_gameInfo)
//	80750C84: 804061C0 (g_dComIfG_gameInfo)
//	80750C8C: 80042468 (reset__14dEvt_control_cFv)
//	80750D0C: 807501B0 (e_rollingMove__FP10e_po_classsff)
//	80750D20: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80750D70: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80750D7C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80750D84: 80450768 (calc_mtx)
//	80750D88: 80450768 (calc_mtx)
//	80750D90: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80750DB4: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80750DC4: 80347090 (PSVECAdd)
//	80750DDC: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80750E1C: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80750E40: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80750E74: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_limbering(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_limbering__FP10e_po_class.s"
}
#pragma pop


/* 80750E88-80751408 0580+00 s=1 e=0 z=0  None .text      e_po_roll_move__FP10e_po_class                               */
//	80750EA0: 803621D0 (_savegpr_26)
//	80750EA8: 80757E10 (lit_1109)
//	80750EAC: 80757E10 (lit_1109)
//	80750EB0: 80757AA4 (cNullVec__6Z2Calc)
//	80750EB4: 80757AA4 (cNullVec__6Z2Calc)
//	80750EB8: 807576FC (lit_3917)
//	80750EBC: 807576FC (lit_3917)
//	80750EC0: 804061C0 (g_dComIfG_gameInfo)
//	80750EC4: 804061C0 (g_dComIfG_gameInfo)
//	80750ED0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80750EF4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80750F04: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80750F10: 804061C0 (g_dComIfG_gameInfo)
//	80750F14: 804061C0 (g_dComIfG_gameInfo)
//	80750F24: 80035200 (onSwitch__10dSv_info_cFii)
//	80750F70: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80750FA0: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8075102C: 8074C660 (anm_init__FP10e_po_classifUcf)
//	8075103C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8075109C: 8074C660 (anm_init__FP10e_po_classifUcf)
//	807510F4: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80751164: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807511B0: 8074C660 (anm_init__FP10e_po_classifUcf)
//	807511C8: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807511EC: 8026FA3C (cLib_addCalc2__FPffff)
//	80751218: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80751260: 8026FA3C (cLib_addCalc2__FPffff)
//	80751298: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807512C0: 80267954 (cM_rndF__Ff)
//	80751328: 80267954 (cM_rndF__Ff)
//	8075135C: 807501B0 (e_rollingMove__FP10e_po_classsff)
//	80751368: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807513B4: 8026FA3C (cLib_addCalc2__FPffff)
//	807513C0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807513E4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807513F4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_roll_move(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_roll_move__FP10e_po_class.s"
}
#pragma pop


/* 80751408-807549C0 35B8+00 s=1 e=0 z=0  None .text      e_po_holl_demo__FP10e_po_class                               */
//	80751418: 803621C8 (_savegpr_24)
//	80751420: 80757E10 (lit_1109)
//	80751424: 80757E10 (lit_1109)
//	80751428: 807576FC (lit_3917)
//	8075142C: 807576FC (lit_3917)
//	80751434: 807576D0 (dComIfGp_getPlayer__Fi)
//	80751440: 807576B4 (dComIfGp_getPlayerCameraID__Fi)
//	80751444: 8075769C (dComIfGp_getCamera__Fi)
//	80751450: 8075769C (dComIfGp_getCamera__Fi)
//	80751464: 8075768C (__ct__4cXyzFfff)
//	80751484: 8075768C (__ct__4cXyzFfff)
//	80751490: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751494: 807572CC (__dt__4cXyzFv)
//	80751498: 807572CC (__dt__4cXyzFv)
//	807514A0: 8074C4D8 (__register_global_object)
//	807514AC: 807572CC (__dt__4cXyzFv)
//	807514C0: 8075768C (__ct__4cXyzFfff)
//	807514D0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807514D4: 807572CC (__dt__4cXyzFv)
//	807514D8: 807572CC (__dt__4cXyzFv)
//	807514E0: 8074C4D8 (__register_global_object)
//	807514EC: 807572CC (__dt__4cXyzFv)
//	80751500: 8075768C (__ct__4cXyzFfff)
//	80751510: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751514: 807572CC (__dt__4cXyzFv)
//	80751518: 807572CC (__dt__4cXyzFv)
//	80751520: 8074C4D8 (__register_global_object)
//	8075152C: 807572CC (__dt__4cXyzFv)
//	80751540: 8075768C (__ct__4cXyzFfff)
//	80751550: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751554: 807572CC (__dt__4cXyzFv)
//	80751558: 807572CC (__dt__4cXyzFv)
//	80751560: 8074C4D8 (__register_global_object)
//	8075156C: 807572CC (__dt__4cXyzFv)
//	80751580: 8075768C (__ct__4cXyzFfff)
//	80751590: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751594: 807572CC (__dt__4cXyzFv)
//	80751598: 807572CC (__dt__4cXyzFv)
//	807515A0: 8074C4D8 (__register_global_object)
//	807515AC: 807572CC (__dt__4cXyzFv)
//	807515C0: 8075768C (__ct__4cXyzFfff)
//	807515D0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807515D4: 807572CC (__dt__4cXyzFv)
//	807515D8: 807572CC (__dt__4cXyzFv)
//	807515E0: 8074C4D8 (__register_global_object)
//	807515EC: 807572CC (__dt__4cXyzFv)
//	80751600: 8075768C (__ct__4cXyzFfff)
//	80751610: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751614: 807572CC (__dt__4cXyzFv)
//	80751618: 807572CC (__dt__4cXyzFv)
//	80751620: 8074C4D8 (__register_global_object)
//	8075162C: 807572CC (__dt__4cXyzFv)
//	80751640: 8075768C (__ct__4cXyzFfff)
//	80751650: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751654: 807572CC (__dt__4cXyzFv)
//	80751658: 807572CC (__dt__4cXyzFv)
//	80751660: 8074C4D8 (__register_global_object)
//	8075166C: 807572CC (__dt__4cXyzFv)
//	80751680: 8075768C (__ct__4cXyzFfff)
//	80751690: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751694: 807572CC (__dt__4cXyzFv)
//	80751698: 807572CC (__dt__4cXyzFv)
//	807516A0: 8074C4D8 (__register_global_object)
//	807516AC: 807572CC (__dt__4cXyzFv)
//	807516C0: 8075768C (__ct__4cXyzFfff)
//	807516D0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807516D4: 807572CC (__dt__4cXyzFv)
//	807516D8: 807572CC (__dt__4cXyzFv)
//	807516E0: 8074C4D8 (__register_global_object)
//	807516EC: 807572CC (__dt__4cXyzFv)
//	80751700: 8075768C (__ct__4cXyzFfff)
//	80751710: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751714: 807572CC (__dt__4cXyzFv)
//	80751718: 807572CC (__dt__4cXyzFv)
//	80751720: 8074C4D8 (__register_global_object)
//	8075172C: 807572CC (__dt__4cXyzFv)
//	80751740: 8075768C (__ct__4cXyzFfff)
//	80751750: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751754: 807572CC (__dt__4cXyzFv)
//	80751758: 807572CC (__dt__4cXyzFv)
//	80751760: 8074C4D8 (__register_global_object)
//	8075176C: 807572CC (__dt__4cXyzFv)
//	80751780: 8075768C (__ct__4cXyzFfff)
//	80751790: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751794: 807572CC (__dt__4cXyzFv)
//	80751798: 807572CC (__dt__4cXyzFv)
//	807517A0: 8074C4D8 (__register_global_object)
//	807517AC: 807572CC (__dt__4cXyzFv)
//	807517C0: 8075768C (__ct__4cXyzFfff)
//	807517D0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807517D4: 807572CC (__dt__4cXyzFv)
//	807517D8: 807572CC (__dt__4cXyzFv)
//	807517E0: 8074C4D8 (__register_global_object)
//	807517EC: 807572CC (__dt__4cXyzFv)
//	80751800: 8075768C (__ct__4cXyzFfff)
//	80751810: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751814: 807572CC (__dt__4cXyzFv)
//	80751818: 807572CC (__dt__4cXyzFv)
//	80751820: 8074C4D8 (__register_global_object)
//	8075182C: 807572CC (__dt__4cXyzFv)
//	80751840: 8075768C (__ct__4cXyzFfff)
//	80751850: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751854: 807572CC (__dt__4cXyzFv)
//	80751858: 807572CC (__dt__4cXyzFv)
//	80751860: 8074C4D8 (__register_global_object)
//	8075186C: 807572CC (__dt__4cXyzFv)
//	80751880: 8075768C (__ct__4cXyzFfff)
//	80751890: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751894: 807572CC (__dt__4cXyzFv)
//	80751898: 807572CC (__dt__4cXyzFv)
//	807518A0: 8074C4D8 (__register_global_object)
//	807518AC: 807572CC (__dt__4cXyzFv)
//	807518C0: 8075768C (__ct__4cXyzFfff)
//	807518D0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807518D4: 807572CC (__dt__4cXyzFv)
//	807518D8: 807572CC (__dt__4cXyzFv)
//	807518E0: 8074C4D8 (__register_global_object)
//	807518EC: 807572CC (__dt__4cXyzFv)
//	80751914: 8075768C (__ct__4cXyzFfff)
//	80751920: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751924: 807572CC (__dt__4cXyzFv)
//	80751928: 807572CC (__dt__4cXyzFv)
//	80751930: 8074C4D8 (__register_global_object)
//	8075193C: 807572CC (__dt__4cXyzFv)
//	80751950: 8075768C (__ct__4cXyzFfff)
//	80751960: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751964: 807572CC (__dt__4cXyzFv)
//	80751968: 807572CC (__dt__4cXyzFv)
//	80751970: 8074C4D8 (__register_global_object)
//	8075197C: 807572CC (__dt__4cXyzFv)
//	80751990: 8075768C (__ct__4cXyzFfff)
//	807519A0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807519A4: 807572CC (__dt__4cXyzFv)
//	807519A8: 807572CC (__dt__4cXyzFv)
//	807519B0: 8074C4D8 (__register_global_object)
//	807519BC: 807572CC (__dt__4cXyzFv)
//	807519D0: 8075768C (__ct__4cXyzFfff)
//	807519E0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807519E4: 807572CC (__dt__4cXyzFv)
//	807519E8: 807572CC (__dt__4cXyzFv)
//	807519F0: 8074C4D8 (__register_global_object)
//	807519FC: 807572CC (__dt__4cXyzFv)
//	80751A10: 8075768C (__ct__4cXyzFfff)
//	80751A20: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751A24: 807572CC (__dt__4cXyzFv)
//	80751A28: 807572CC (__dt__4cXyzFv)
//	80751A30: 8074C4D8 (__register_global_object)
//	80751A3C: 807572CC (__dt__4cXyzFv)
//	80751A50: 8075768C (__ct__4cXyzFfff)
//	80751A60: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751A64: 807572CC (__dt__4cXyzFv)
//	80751A68: 807572CC (__dt__4cXyzFv)
//	80751A70: 8074C4D8 (__register_global_object)
//	80751A7C: 807572CC (__dt__4cXyzFv)
//	80751A90: 8075768C (__ct__4cXyzFfff)
//	80751AA0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751AA4: 807572CC (__dt__4cXyzFv)
//	80751AA8: 807572CC (__dt__4cXyzFv)
//	80751AB0: 8074C4D8 (__register_global_object)
//	80751ABC: 807572CC (__dt__4cXyzFv)
//	80751AD0: 8075768C (__ct__4cXyzFfff)
//	80751AE0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751AE4: 807572CC (__dt__4cXyzFv)
//	80751AE8: 807572CC (__dt__4cXyzFv)
//	80751AF0: 8074C4D8 (__register_global_object)
//	80751AFC: 807572CC (__dt__4cXyzFv)
//	80751B10: 8075768C (__ct__4cXyzFfff)
//	80751B20: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751B24: 807572CC (__dt__4cXyzFv)
//	80751B28: 807572CC (__dt__4cXyzFv)
//	80751B30: 8074C4D8 (__register_global_object)
//	80751B3C: 807572CC (__dt__4cXyzFv)
//	80751B50: 8075768C (__ct__4cXyzFfff)
//	80751B60: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751B64: 807572CC (__dt__4cXyzFv)
//	80751B68: 807572CC (__dt__4cXyzFv)
//	80751B70: 8074C4D8 (__register_global_object)
//	80751B7C: 807572CC (__dt__4cXyzFv)
//	80751B90: 8075768C (__ct__4cXyzFfff)
//	80751BA0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751BA4: 807572CC (__dt__4cXyzFv)
//	80751BA8: 807572CC (__dt__4cXyzFv)
//	80751BB0: 8074C4D8 (__register_global_object)
//	80751BBC: 807572CC (__dt__4cXyzFv)
//	80751BD0: 8075768C (__ct__4cXyzFfff)
//	80751BE0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751BE4: 807572CC (__dt__4cXyzFv)
//	80751BE8: 807572CC (__dt__4cXyzFv)
//	80751BF0: 8074C4D8 (__register_global_object)
//	80751BFC: 807572CC (__dt__4cXyzFv)
//	80751C10: 8075768C (__ct__4cXyzFfff)
//	80751C20: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751C24: 807572CC (__dt__4cXyzFv)
//	80751C28: 807572CC (__dt__4cXyzFv)
//	80751C30: 8074C4D8 (__register_global_object)
//	80751C3C: 807572CC (__dt__4cXyzFv)
//	80751C50: 8075768C (__ct__4cXyzFfff)
//	80751C60: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751C64: 807572CC (__dt__4cXyzFv)
//	80751C68: 807572CC (__dt__4cXyzFv)
//	80751C70: 8074C4D8 (__register_global_object)
//	80751C7C: 807572CC (__dt__4cXyzFv)
//	80751C90: 8075768C (__ct__4cXyzFfff)
//	80751CA0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751CA4: 807572CC (__dt__4cXyzFv)
//	80751CA8: 807572CC (__dt__4cXyzFv)
//	80751CB0: 8074C4D8 (__register_global_object)
//	80751CBC: 807572CC (__dt__4cXyzFv)
//	80751CD0: 8075768C (__ct__4cXyzFfff)
//	80751CE0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751CE4: 807572CC (__dt__4cXyzFv)
//	80751CE8: 807572CC (__dt__4cXyzFv)
//	80751CF0: 8074C4D8 (__register_global_object)
//	80751CFC: 807572CC (__dt__4cXyzFv)
//	80751D10: 8075768C (__ct__4cXyzFfff)
//	80751D20: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751D24: 807572CC (__dt__4cXyzFv)
//	80751D28: 807572CC (__dt__4cXyzFv)
//	80751D30: 8074C4D8 (__register_global_object)
//	80751D3C: 807572CC (__dt__4cXyzFv)
//	80751D50: 8075768C (__ct__4cXyzFfff)
//	80751D60: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751D64: 807572CC (__dt__4cXyzFv)
//	80751D68: 807572CC (__dt__4cXyzFv)
//	80751D70: 8074C4D8 (__register_global_object)
//	80751D7C: 807572CC (__dt__4cXyzFv)
//	80751DA4: 8075768C (__ct__4cXyzFfff)
//	80751DB0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751DB4: 807572CC (__dt__4cXyzFv)
//	80751DB8: 807572CC (__dt__4cXyzFv)
//	80751DC0: 8074C4D8 (__register_global_object)
//	80751DCC: 807572CC (__dt__4cXyzFv)
//	80751DE0: 8075768C (__ct__4cXyzFfff)
//	80751DF0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751DF4: 807572CC (__dt__4cXyzFv)
//	80751DF8: 807572CC (__dt__4cXyzFv)
//	80751E00: 8074C4D8 (__register_global_object)
//	80751E0C: 807572CC (__dt__4cXyzFv)
//	80751E20: 8075768C (__ct__4cXyzFfff)
//	80751E30: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751E34: 807572CC (__dt__4cXyzFv)
//	80751E38: 807572CC (__dt__4cXyzFv)
//	80751E40: 8074C4D8 (__register_global_object)
//	80751E4C: 807572CC (__dt__4cXyzFv)
//	80751E60: 8075768C (__ct__4cXyzFfff)
//	80751E70: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751E74: 807572CC (__dt__4cXyzFv)
//	80751E78: 807572CC (__dt__4cXyzFv)
//	80751E80: 8074C4D8 (__register_global_object)
//	80751E8C: 807572CC (__dt__4cXyzFv)
//	80751EA0: 8075768C (__ct__4cXyzFfff)
//	80751EB0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751EB4: 807572CC (__dt__4cXyzFv)
//	80751EB8: 807572CC (__dt__4cXyzFv)
//	80751EC0: 8074C4D8 (__register_global_object)
//	80751ECC: 807572CC (__dt__4cXyzFv)
//	80751EE0: 8075768C (__ct__4cXyzFfff)
//	80751EF0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751EF4: 807572CC (__dt__4cXyzFv)
//	80751EF8: 807572CC (__dt__4cXyzFv)
//	80751F00: 8074C4D8 (__register_global_object)
//	80751F0C: 807572CC (__dt__4cXyzFv)
//	80751F20: 8075768C (__ct__4cXyzFfff)
//	80751F30: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751F34: 807572CC (__dt__4cXyzFv)
//	80751F38: 807572CC (__dt__4cXyzFv)
//	80751F40: 8074C4D8 (__register_global_object)
//	80751F4C: 807572CC (__dt__4cXyzFv)
//	80751F60: 8075768C (__ct__4cXyzFfff)
//	80751F70: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751F74: 807572CC (__dt__4cXyzFv)
//	80751F78: 807572CC (__dt__4cXyzFv)
//	80751F80: 8074C4D8 (__register_global_object)
//	80751F8C: 807572CC (__dt__4cXyzFv)
//	80751FA0: 8075768C (__ct__4cXyzFfff)
//	80751FB0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751FB4: 807572CC (__dt__4cXyzFv)
//	80751FB8: 807572CC (__dt__4cXyzFv)
//	80751FC0: 8074C4D8 (__register_global_object)
//	80751FCC: 807572CC (__dt__4cXyzFv)
//	80751FE0: 8075768C (__ct__4cXyzFfff)
//	80751FF0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80751FF4: 807572CC (__dt__4cXyzFv)
//	80751FF8: 807572CC (__dt__4cXyzFv)
//	80752000: 8074C4D8 (__register_global_object)
//	8075200C: 807572CC (__dt__4cXyzFv)
//	80752020: 8075768C (__ct__4cXyzFfff)
//	80752030: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752034: 807572CC (__dt__4cXyzFv)
//	80752038: 807572CC (__dt__4cXyzFv)
//	80752040: 8074C4D8 (__register_global_object)
//	8075204C: 807572CC (__dt__4cXyzFv)
//	80752060: 8075768C (__ct__4cXyzFfff)
//	80752070: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752074: 807572CC (__dt__4cXyzFv)
//	80752078: 807572CC (__dt__4cXyzFv)
//	80752080: 8074C4D8 (__register_global_object)
//	8075208C: 807572CC (__dt__4cXyzFv)
//	807520A0: 8075768C (__ct__4cXyzFfff)
//	807520B0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807520B4: 807572CC (__dt__4cXyzFv)
//	807520B8: 807572CC (__dt__4cXyzFv)
//	807520C0: 8074C4D8 (__register_global_object)
//	807520CC: 807572CC (__dt__4cXyzFv)
//	807520E0: 8075768C (__ct__4cXyzFfff)
//	807520F0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807520F4: 807572CC (__dt__4cXyzFv)
//	807520F8: 807572CC (__dt__4cXyzFv)
//	80752100: 8074C4D8 (__register_global_object)
//	8075210C: 807572CC (__dt__4cXyzFv)
//	80752120: 8075768C (__ct__4cXyzFfff)
//	80752130: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752134: 807572CC (__dt__4cXyzFv)
//	80752138: 807572CC (__dt__4cXyzFv)
//	80752140: 8074C4D8 (__register_global_object)
//	8075214C: 807572CC (__dt__4cXyzFv)
//	80752160: 8075768C (__ct__4cXyzFfff)
//	80752170: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752174: 807572CC (__dt__4cXyzFv)
//	80752178: 807572CC (__dt__4cXyzFv)
//	80752180: 8074C4D8 (__register_global_object)
//	8075218C: 807572CC (__dt__4cXyzFv)
//	807521A0: 8075768C (__ct__4cXyzFfff)
//	807521B0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807521B4: 807572CC (__dt__4cXyzFv)
//	807521B8: 807572CC (__dt__4cXyzFv)
//	807521C0: 8074C4D8 (__register_global_object)
//	807521CC: 807572CC (__dt__4cXyzFv)
//	807521E0: 8075768C (__ct__4cXyzFfff)
//	807521F0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807521F4: 807572CC (__dt__4cXyzFv)
//	807521F8: 807572CC (__dt__4cXyzFv)
//	80752200: 8074C4D8 (__register_global_object)
//	8075220C: 807572CC (__dt__4cXyzFv)
//	80752220: 8075768C (__ct__4cXyzFfff)
//	80752230: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752234: 807572CC (__dt__4cXyzFv)
//	80752238: 807572CC (__dt__4cXyzFv)
//	80752240: 8074C4D8 (__register_global_object)
//	8075224C: 807572CC (__dt__4cXyzFv)
//	80752260: 8075768C (__ct__4cXyzFfff)
//	80752270: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752274: 807572CC (__dt__4cXyzFv)
//	80752278: 807572CC (__dt__4cXyzFv)
//	80752280: 8074C4D8 (__register_global_object)
//	8075228C: 807572CC (__dt__4cXyzFv)
//	807522A0: 8075768C (__ct__4cXyzFfff)
//	807522B0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807522B4: 807572CC (__dt__4cXyzFv)
//	807522B8: 807572CC (__dt__4cXyzFv)
//	807522C0: 8074C4D8 (__register_global_object)
//	807522CC: 807572CC (__dt__4cXyzFv)
//	807522E0: 8075768C (__ct__4cXyzFfff)
//	807522F0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807522F4: 807572CC (__dt__4cXyzFv)
//	807522F8: 807572CC (__dt__4cXyzFv)
//	80752300: 8074C4D8 (__register_global_object)
//	8075230C: 807572CC (__dt__4cXyzFv)
//	80752434: 8075765C (checkCommandDemoAccrpt__11dEvt_info_cFv)
//	80752454: 8001B908 (fopAcM_orderPotentialEvent__FP10fopAc_ac_cUsUsUs)
//	80752460: 8075764C (onCondition__11dEvt_info_cFUs)
//	80752468: 80757620 (fopAcM_searchPlayerAngleY__FPC10fopAc_ac_c)
//	80752478: 80181640 (dCam_getBody__Fv)
//	80752484: 80181E98 (Center__9dCamera_cFv)
//	80752490: 80757604 (__as__4cXyzFRC4cXyz)
//	8075249C: 807572CC (__dt__4cXyzFv)
//	807524A0: 80181640 (dCam_getBody__Fv)
//	807524AC: 80181E64 (Eye__9dCamera_cFv)
//	807524B8: 80757604 (__as__4cXyzFRC4cXyz)
//	807524C4: 807572CC (__dt__4cXyzFv)
//	807524C8: 80181640 (dCam_getBody__Fv)
//	807524CC: 807575F4 (Fovy__9dCamera_cFv)
//	807524DC: 801614D0 (Stop__9dCamera_cFv)
//	807524E8: 8016300C (SetTrimSize__9dCamera_cFl)
//	807524EC: 807575E4 (daPy_getPlayerActorClass__Fv)
//	807524F0: 807575D0 (changeOriginalDemo__9daPy_py_cFv)
//	80752500: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80752514: 807575BC (changeDemoMode__9daPy_py_cFUliis)
//	80752558: 807575AC (set__4cXyzFfff)
//	8075255C: 807575E4 (daPy_getPlayerActorClass__Fv)
//	8075257C: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80752590: 807575BC (changeDemoMode__9daPy_py_cFUliis)
//	807525A0: 80757590 (set__4cXyzFRC3Vec)
//	807525AC: 80757590 (set__4cXyzFRC3Vec)
//	807525B8: 80757670 (__ct__4cXyzFRC4cXyz)
//	807525C4: 80757670 (__ct__4cXyzFRC4cXyz)
//	807525D4: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	807525E0: 807572CC (__dt__4cXyzFv)
//	807525EC: 807572CC (__dt__4cXyzFv)
//	80752610: 807575AC (set__4cXyzFfff)
//	80752614: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80752634: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80752648: 807575BC (changeDemoMode__9daPy_py_cFUliis)
//	80752660: 807575AC (set__4cXyzFfff)
//	8075266C: 80757574 (changeDemoPos0__9daPy_py_cFPC4cXyz)
//	807526B4: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	807526D4: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	807526E0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807526EC: 80757670 (__ct__4cXyzFRC4cXyz)
//	807526FC: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80752708: 807572CC (__dt__4cXyzFv)
//	80752714: 807572CC (__dt__4cXyzFv)
//	80752724: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80752730: 80757604 (__as__4cXyzFRC4cXyz)
//	8075273C: 807572CC (__dt__4cXyzFv)
//	8075274C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80752758: 80757604 (__as__4cXyzFRC4cXyz)
//	80752764: 807572CC (__dt__4cXyzFv)
//	8075276C: 80757460 (abs__4cXyzCFv)
//	80752780: 80757460 (abs__4cXyzCFv)
//	807527B4: 80757590 (set__4cXyzFRC3Vec)
//	807527E0: 80019D98 (fopAcM_create__FsUlPC4cXyziPC5csXyzPC4cXyzSc)
//	80752818: 80757590 (set__4cXyzFRC3Vec)
//	80752824: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80752868: 80757590 (set__4cXyzFRC3Vec)
//	80752878: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80752884: 80757604 (__as__4cXyzFRC4cXyz)
//	80752890: 807572CC (__dt__4cXyzFv)
//	80752898: 80267128 (atan2sX_Z__4cXyzCFv)
//	807528A4: 80267150 (atan2sY_XZ__4cXyzCFv)
//	807528BC: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807528E0: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	807528FC: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80752908: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752914: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752924: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80752930: 807572CC (__dt__4cXyzFv)
//	8075293C: 807572CC (__dt__4cXyzFv)
//	80752950: 8026FA3C (cLib_addCalc2__FPffff)
//	8075298C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807529CC: 8075744C (cM_ssin__Fs)
//	80752A24: 80757434 (cM_scos__Fs)
//	80752A7C: 80757434 (cM_scos__Fs)
//	80752AB0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80752AF0: 8075744C (cM_ssin__Fs)
//	80752B48: 80757434 (cM_scos__Fs)
//	80752BA0: 80757434 (cM_scos__Fs)
//	80752BD4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80752C14: 8075744C (cM_ssin__Fs)
//	80752C6C: 80757434 (cM_scos__Fs)
//	80752CC0: 80757434 (cM_scos__Fs)
//	80752D20: 8075744C (cM_ssin__Fs)
//	80752D78: 80757434 (cM_scos__Fs)
//	80752DD0: 80757434 (cM_scos__Fs)
//	80752E0C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80752E24: 80757590 (set__4cXyzFRC3Vec)
//	80752E34: 80757590 (set__4cXyzFRC3Vec)
//	80752E40: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752E4C: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752E5C: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80752E68: 807572CC (__dt__4cXyzFv)
//	80752E74: 807572CC (__dt__4cXyzFv)
//	80752E8C: 80757590 (set__4cXyzFRC3Vec)
//	80752E94: 80267954 (cM_rndF__Ff)
//	80752EC0: 80757590 (set__4cXyzFRC3Vec)
//	80752EF8: 80757590 (set__4cXyzFRC3Vec)
//	80752EFC: 80757C1C (mKAngInit_dt)
//	80752F00: 80757C1C (mKAngInit_dt)
//	80752F2C: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80752F54: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80752F98: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80752FB8: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80752FC4: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752FD0: 80757670 (__ct__4cXyzFRC4cXyz)
//	80752FE0: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80752FEC: 807572CC (__dt__4cXyzFv)
//	80752FF8: 807572CC (__dt__4cXyzFv)
//	80753008: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80753014: 80757604 (__as__4cXyzFRC4cXyz)
//	80753020: 807572CC (__dt__4cXyzFv)
//	80753030: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8075303C: 80757604 (__as__4cXyzFRC4cXyz)
//	80753048: 807572CC (__dt__4cXyzFv)
//	80753050: 80757460 (abs__4cXyzCFv)
//	80753064: 80757460 (abs__4cXyzCFv)
//	807530AC: 8074C660 (anm_init__FP10e_po_classifUcf)
//	807530C0: 80757404 (isStop__13mDoExt_morf_cFv)
//	807530D4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807530E4: 807573FC (getFrame__13mDoExt_morf_cFv)
//	80753110: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753120: 807573FC (getFrame__13mDoExt_morf_cFv)
//	80753148: 807573FC (getFrame__13mDoExt_morf_cFv)
//	8075316C: 807573C8 (fopAcM_offSwitch__FPC10fopAc_ac_ci)
//	80753170: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753174: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753184: 807573C0 (__ct__10JAISoundIDFUl)
//	807531B0: 802AB984 (seStart__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	807531B8: 807573FC (getFrame__13mDoExt_morf_cFv)
//	8075320C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753224: 80757590 (set__4cXyzFRC3Vec)
//	80753234: 80757590 (set__4cXyzFRC3Vec)
//	80753240: 80757670 (__ct__4cXyzFRC4cXyz)
//	8075324C: 80757670 (__ct__4cXyzFRC4cXyz)
//	8075325C: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80753268: 807572CC (__dt__4cXyzFv)
//	80753274: 807572CC (__dt__4cXyzFv)
//	80753280: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753294: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807532CC: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807532E4: 80757590 (set__4cXyzFRC3Vec)
//	807532F4: 80757590 (set__4cXyzFRC3Vec)
//	80753300: 80757670 (__ct__4cXyzFRC4cXyz)
//	8075330C: 80757670 (__ct__4cXyzFRC4cXyz)
//	8075331C: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80753328: 807572CC (__dt__4cXyzFv)
//	80753334: 807572CC (__dt__4cXyzFv)
//	80753350: 80757590 (set__4cXyzFRC3Vec)
//	80753368: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80753378: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80753384: 80757604 (__as__4cXyzFRC4cXyz)
//	80753390: 807572CC (__dt__4cXyzFv)
//	80753398: 80757460 (abs__4cXyzCFv)
//	807533B0: 80757590 (set__4cXyzFRC3Vec)
//	807533BC: 80757590 (set__4cXyzFRC3Vec)
//	8075342C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753438: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8075343C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	8075344C: 807573C0 (__ct__10JAISoundIDFUl)
//	80753478: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80753498: 8075768C (__ct__4cXyzFfff)
//	8075349C: 807573B0 (dComIfGp_getVibration__Fv)
//	807534AC: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	807534B8: 807572CC (__dt__4cXyzFv)
//	807534C8: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753504: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753508: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753518: 807573C0 (__ct__10JAISoundIDFUl)
//	80753544: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80753564: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753568: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753578: 807573C0 (__ct__10JAISoundIDFUl)
//	807535A4: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	807535C4: 80757590 (set__4cXyzFRC3Vec)
//	807535CC: 801A87E4 (dKy_change_colpat__FUc)
//	807535DC: 80757590 (set__4cXyzFRC3Vec)
//	807535EC: 80757590 (set__4cXyzFRC3Vec)
//	807535F8: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753604: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753614: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80753620: 807572CC (__dt__4cXyzFv)
//	8075362C: 807572CC (__dt__4cXyzFv)
//	80753640: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753644: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80753654: 807573C0 (__ct__10JAISoundIDFUl)
//	80753680: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80753698: 8075737C (fopAcM_onSwitch__FPC10fopAc_ac_ci)
//	807536AC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	807536B0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	807536C0: 807573C0 (__ct__10JAISoundIDFUl)
//	807536EC: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80753704: 807573B0 (dComIfGp_getVibration__Fv)
//	8075370C: 8006FD94 (StopQuake__12dVibration_cFi)
//	8075372C: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80753740: 807575AC (set__4cXyzFfff)
//	80753744: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80753790: 8074C660 (anm_init__FP10e_po_classifUcf)
//	807537A8: 80757590 (set__4cXyzFRC3Vec)
//	807537D0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807537F4: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80753810: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	8075381C: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753828: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753838: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80753844: 807572CC (__dt__4cXyzFv)
//	80753850: 807572CC (__dt__4cXyzFv)
//	80753864: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80753870: 80757604 (__as__4cXyzFRC4cXyz)
//	8075387C: 807572CC (__dt__4cXyzFv)
//	80753884: 80757460 (abs__4cXyzCFv)
//	8075389C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807538A8: 807575E4 (daPy_getPlayerActorClass__Fv)
//	807538BC: 807575BC (changeDemoMode__9daPy_py_cFUliis)
//	807538DC: 80450768 (calc_mtx)
//	807538E0: 80450768 (calc_mtx)
//	807538EC: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80753910: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8075391C: 80757348 (__apl__4cXyzFRC3Vec)
//	8075392C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80753938: 80757604 (__as__4cXyzFRC4cXyz)
//	80753944: 807572CC (__dt__4cXyzFv)
//	8075394C: 80757460 (abs__4cXyzCFv)
//	80753978: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80753988: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80753994: 80757604 (__as__4cXyzFRC4cXyz)
//	807539A0: 807572CC (__dt__4cXyzFv)
//	807539A8: 80757620 (fopAcM_searchPlayerAngleY__FPC10fopAc_ac_c)
//	807539BC: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807539C4: 80757460 (abs__4cXyzCFv)
//	807539DC: 80757590 (set__4cXyzFRC3Vec)
//	807539E8: 80757590 (set__4cXyzFRC3Vec)
//	80753A3C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753A4C: 801A87E4 (dKy_change_colpat__FUc)
//	80753A50: 80450768 (calc_mtx)
//	80753A54: 80450768 (calc_mtx)
//	80753A60: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80753A84: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80753A94: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	80753AA0: 80757604 (__as__4cXyzFRC4cXyz)
//	80753AAC: 807572CC (__dt__4cXyzFv)
//	80753ABC: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80753AC8: 80757604 (__as__4cXyzFRC4cXyz)
//	80753AD4: 807572CC (__dt__4cXyzFv)
//	80753ADC: 80267128 (atan2sX_Z__4cXyzCFv)
//	80753AF8: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80753B00: 80757620 (fopAcM_searchPlayerAngleY__FPC10fopAc_ac_c)
//	80753B0C: 80757460 (abs__4cXyzCFv)
//	80753B30: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753BA4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753BDC: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80753C0C: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80753C18: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753C24: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753C34: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80753C40: 807572CC (__dt__4cXyzFv)
//	80753C4C: 807572CC (__dt__4cXyzFv)
//	80753C60: 80757620 (fopAcM_searchPlayerAngleY__FPC10fopAc_ac_c)
//	80753C80: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80753C98: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753CAC: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753CC0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753CD8: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80753CE4: 807572CC (__dt__4cXyzFv)
//	80753CF0: 807572CC (__dt__4cXyzFv)
//	80753CFC: 807572CC (__dt__4cXyzFv)
//	80753D0C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80753D28: 807575AC (set__4cXyzFfff)
//	80753D3C: 807575AC (set__4cXyzFfff)
//	80753D50: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753D5C: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753D6C: 80180C18 (Reset__9dCamera_cF4cXyz4cXyz)
//	80753D78: 807572CC (__dt__4cXyzFv)
//	80753D84: 807572CC (__dt__4cXyzFv)
//	80753D8C: 801614AC (Start__9dCamera_cFv)
//	80753D98: 8016300C (SetTrimSize__9dCamera_cFl)
//	80753D9C: 8075731C (dComIfGp_event_reset__Fv)
//	80753DA0: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80753DA4: 80757308 (cancelOriginalDemo__9daPy_py_cFv)
//	80753DB0: 8075737C (fopAcM_onSwitch__FPC10fopAc_ac_ci)
//	80753DEC: 80754AC8 (OnCoSetBit__14cCcD_ObjHitInfFv)
//	80753E10: 80754AC0 (fopAcM_SetGroup__FP10fopAc_ac_cUc)
//	80753E1C: 80757590 (set__4cXyzFRC3Vec)
//	80753E24: 80267954 (cM_rndF__Ff)
//	80753EBC: 80757590 (set__4cXyzFRC3Vec)
//	80753ECC: 80757590 (set__4cXyzFRC3Vec)
//	80753EEC: 80754AA8 (fopAcM_GetID__FPCv)
//	80753F28: 80019EF0 (fopAcM_createChild__FsUiUlPC4cXyziPC5csXyzPC4cXyzScPFPv_i)
//	80753F54: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753F60: 80757670 (__ct__4cXyzFRC4cXyz)
//	80753F70: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80753F7C: 807572CC (__dt__4cXyzFv)
//	80753F88: 807572CC (__dt__4cXyzFv)
//	80753FAC: 80754A74 (fopAcM_isSwitch__FPC10fopAc_ac_ci)
//	80753FC0: 80754A74 (fopAcM_isSwitch__FPC10fopAc_ac_ci)
//	8075403C: 801614AC (Start__9dCamera_cFv)
//	80754048: 8016300C (SetTrimSize__9dCamera_cFl)
//	8075404C: 8075731C (dComIfGp_event_reset__Fv)
//	80754050: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80754054: 80757308 (cancelOriginalDemo__9daPy_py_cFv)
//	80754068: 807572CC (__dt__4cXyzFv)
//	80754074: 807572CC (__dt__4cXyzFv)
//	80754080: 807572CC (__dt__4cXyzFv)
//	807540A0: 80754A74 (fopAcM_isSwitch__FPC10fopAc_ac_ci)
//	807540B4: 80754A74 (fopAcM_isSwitch__FPC10fopAc_ac_ci)
//	807540C8: 80754A74 (fopAcM_isSwitch__FPC10fopAc_ac_ci)
//	807540F0: 80757590 (set__4cXyzFRC3Vec)
//	80754100: 80757590 (set__4cXyzFRC3Vec)
//	8075410C: 80757670 (__ct__4cXyzFRC4cXyz)
//	80754118: 80757670 (__ct__4cXyzFRC4cXyz)
//	80754128: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80754134: 807572CC (__dt__4cXyzFv)
//	80754140: 807572CC (__dt__4cXyzFv)
//	8075414C: 801614AC (Start__9dCamera_cFv)
//	80754158: 8016300C (SetTrimSize__9dCamera_cFl)
//	8075415C: 8075731C (dComIfGp_event_reset__Fv)
//	80754160: 807575E4 (daPy_getPlayerActorClass__Fv)
//	80754164: 80757308 (cancelOriginalDemo__9daPy_py_cFv)
//	80754178: 807572CC (__dt__4cXyzFv)
//	80754184: 807572CC (__dt__4cXyzFv)
//	80754190: 807572CC (__dt__4cXyzFv)
//	807541A4: 80757590 (set__4cXyzFRC3Vec)
//	807541B4: 80757590 (set__4cXyzFRC3Vec)
//	807541C0: 80757670 (__ct__4cXyzFRC4cXyz)
//	807541CC: 80757670 (__ct__4cXyzFRC4cXyz)
//	807541DC: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	807541E8: 807572CC (__dt__4cXyzFv)
//	807541F4: 807572CC (__dt__4cXyzFv)
//	80754214: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	80754230: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	8075423C: 80757670 (__ct__4cXyzFRC4cXyz)
//	80754248: 80757670 (__ct__4cXyzFRC4cXyz)
//	80754258: 80180AA8 (Set__9dCamera_cF4cXyz4cXyz)
//	80754264: 807572CC (__dt__4cXyzFv)
//	80754270: 807572CC (__dt__4cXyzFv)
//	80754290: 8075768C (__ct__4cXyzFfff)
//	80754294: 807573B0 (dComIfGp_getVibration__Fv)
//	807542A4: 8006FB10 (StartQuake__12dVibration_cFii4cXyz)
//	807542B0: 807572CC (__dt__4cXyzFv)
//	807542BC: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	807542C0: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	807542D0: 807573C0 (__ct__10JAISoundIDFUl)
//	807542FC: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	80754308: 807573C8 (fopAcM_offSwitch__FPC10fopAc_ac_ci)
//	8075432C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80754330: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80754340: 807573C0 (__ct__10JAISoundIDFUl)
//	8075436C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8075437C: 807573B0 (dComIfGp_getVibration__Fv)
//	80754384: 8006FD94 (StopQuake__12dVibration_cFi)
//	80754390: 801614AC (Start__9dCamera_cFv)
//	8075439C: 8016300C (SetTrimSize__9dCamera_cFl)
//	807543A0: 8075731C (dComIfGp_event_reset__Fv)
//	807543A4: 807575E4 (daPy_getPlayerActorClass__Fv)
//	807543A8: 80757308 (cancelOriginalDemo__9daPy_py_cFv)
//	807543B4: 8075737C (fopAcM_onSwitch__FPC10fopAc_ac_ci)
//	807543C4: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807543D4: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807543F0: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	80754410: 80757590 (set__4cXyzFRC3Vec)
//	8075442C: 80757590 (set__4cXyzFRC3Vec)
//	80754430: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80754434: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80754444: 807573C0 (__ct__10JAISoundIDFUl)
//	80754470: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8075447C: 80757590 (set__4cXyzFRC3Vec)
//	80754494: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	807544B4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807544C0: 80757604 (__as__4cXyzFRC4cXyz)
//	807544CC: 807572CC (__dt__4cXyzFv)
//	807544D4: 80757460 (abs__4cXyzCFv)
//	80754500: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80754528: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80754540: 80757590 (set__4cXyzFRC3Vec)
//	80754558: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	8075456C: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	8075458C: 80757590 (set__4cXyzFRC3Vec)
//	80754598: 80757590 (set__4cXyzFRC3Vec)
//	807545A8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807545B4: 80757604 (__as__4cXyzFRC4cXyz)
//	807545C0: 807572CC (__dt__4cXyzFv)
//	807545C8: 80757460 (abs__4cXyzCFv)
//	807545F0: 8075737C (fopAcM_onSwitch__FPC10fopAc_ac_ci)
//	80754610: 80757590 (set__4cXyzFRC3Vec)
//	80754628: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	8075462C: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80754630: 80451368 (mAudioMgrPtr__10Z2AudioMgr)
//	80754640: 807573C0 (__ct__10JAISoundIDFUl)
//	8075466C: 802AC50C (seStartLevel__7Z2SeMgrF10JAISoundIDPC3VecUlScffffUc)
//	8075467C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80754688: 80757604 (__as__4cXyzFRC4cXyz)
//	80754694: 807572CC (__dt__4cXyzFv)
//	8075469C: 80757460 (abs__4cXyzCFv)
//	807546C8: 8075737C (fopAcM_onSwitch__FPC10fopAc_ac_ci)
//	807546E0: 800199BC (fopAcM_SearchByID__FUiPP10fopAc_ac_c)
//	80754700: 80757590 (set__4cXyzFRC3Vec)
//	8075470C: 80757590 (set__4cXyzFRC3Vec)
//	80754728: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80754754: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	80754788: 80757C18 (holl_demo_eff_Dt)
//	8075478C: 80757C18 (holl_demo_eff_Dt)
//	807547A8: 807549F4 (dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz)
//	807547B4: 807549C0 (dComIfGp_particle_getEmitter__FUl)
//	8075482C: 8075744C (cM_ssin__Fs)
//	80754880: 8026FA3C (cLib_addCalc2__FPffff)
//	80754910: 80450768 (calc_mtx)
//	80754914: 80450768 (calc_mtx)
//	80754920: 8000C474 (mDoMtx_ZrotS__FPA4_fs)
//	80754940: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80754950: 80266AE4 (__pl__4cXyzCFRC3Vec)
//	8075495C: 80757604 (__as__4cXyzFRC4cXyz)
//	80754968: 807572CC (__dt__4cXyzFv)
//	80754980: 8026FAB8 (cLib_addCalcPos__FP4cXyzRC4cXyzfff)
//	8075498C: 807572CC (__dt__4cXyzFv)
//	80754998: 807572CC (__dt__4cXyzFv)
//	807549A4: 807572CC (__dt__4cXyzFv)
//	807549AC: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void e_po_holl_demo(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/e_po_holl_demo__FP10e_po_class.s"
}
#pragma pop


/* 807549C0-807549F4 0034+00 s=1 e=0 z=0  None .text      dComIfGp_particle_getEmitter__FUl                            */
//	807549D0: 804061C0 (g_dComIfG_gameInfo)
//	807549D4: 804061C0 (g_dComIfG_gameInfo)
//	807549E0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm static void dComIfGp_particle_getEmitter(u32 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/dComIfGp_particle_getEmitter__FUl.s"
}
#pragma pop


/* 807549F4-80754A74 0080+00 s=1 e=0 z=0  None .text      dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz           */
//	80754A14: 804061C0 (g_dComIfG_gameInfo)
//	80754A18: 804061C0 (g_dComIfG_gameInfo)
//	80754A58: 80757704 (lit_3919)
//	80754A5C: 80757704 (lit_3919)
//	80754A60: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm static void dComIfGp_particle_set(u32 param_0, u16 param_1, cXyz const* param_2, csXyz const* param_3, cXyz const* param_4) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/dComIfGp_particle_set__FUlUsPC4cXyzPC5csXyzPC4cXyz.s"
}
#pragma pop


/* 80754A74-80754AA8 0034+00 s=1 e=0 z=0  None .text      fopAcM_isSwitch__FPC10fopAc_ac_ci                            */
//	80754A84: 804061C0 (g_dComIfG_gameInfo)
//	80754A88: 804061C0 (g_dComIfG_gameInfo)
//	80754A94: 80035360 (isSwitch__10dSv_info_cCFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
asm static void fopAcM_isSwitch(fopAc_ac_c const* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/fopAcM_isSwitch__FPC10fopAc_ac_ci.s"
}
#pragma pop


/* 80754AA8-80754AC0 0018+00 s=1 e=0 z=0  None .text      fopAcM_GetID__FPCv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void const* False
// 	 void const False
// 		 void False
asm static void fopAcM_GetID(void const* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/fopAcM_GetID__FPCv.s"
}
#pragma pop


/* 80754AC0-80754AC8 0008+00 s=1 e=0 z=0  None .text      fopAcM_SetGroup__FP10fopAc_ac_cUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  u8 False
asm static void fopAcM_SetGroup(fopAc_ac_c* param_0, u8 param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/fopAcM_SetGroup__FP10fopAc_ac_cUc.s"
}
#pragma pop


/* 80754AC8-80754AD8 0010+00 s=1 e=0 z=0  None .text      OnCoSetBit__14cCcD_ObjHitInfFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void cCcD_ObjHitInf::OnCoSetBit() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/OnCoSetBit__14cCcD_ObjHitInfFv.s"
}
#pragma pop


/* 80754AD8-807550EC 0614+00 s=2 e=0 z=0  None .text      action__FP10e_po_class                                       */
//	80754AF8: 803621D4 (_savegpr_27)
//	80754B00: 807576FC (lit_3917)
//	80754B04: 807576FC (lit_3917)
//	80754B08: 804061C0 (g_dComIfG_gameInfo)
//	80754B0C: 804061C0 (g_dComIfG_gameInfo)
//	80754B18: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80754B30: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80754B44: 8001CDFC (fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80754B70: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	80754BFC: 80757ADA (struct_80757AD4)
//	80754C00: 80757ADA (struct_80757AD4)
//	80754C08: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80754C44: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80754C54: 80757ADA (struct_80757AD4)
//	80754C58: 80757ADA (struct_80757AD4)
//	80754C60: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80754D78: 8026FA3C (cLib_addCalc2__FPffff)
//	80754D84: 8074E168 (damage_check__FP10e_po_class)
//	80754D94: 80757C24 (lit_7233)
//	80754D98: 80757C24 (lit_7233)
//	80754DB0: 8074D16C (e_po_wait__FP10e_po_class)
//	80754DBC: 8074D338 (e_po_avoid__FP10e_po_class)
//	80754DC8: 8074CCCC (e_po_opening__FP10e_po_class)
//	80754DD4: 8074D500 (e_po_search__FP10e_po_class)
//	80754DEC: 8074DC40 (e_po_attack__FP10e_po_class)
//	80754E04: 8074E4EC (e_po_damage__FP10e_po_class)
//	80754E10: 8074E694 (e_po_wolfbite__FP10e_po_class)
//	80754E1C: 8074EA6C (e_po_dead__FP10e_po_class)
//	80754E28: 8075030C (e_po_limbering__FP10e_po_class)
//	80754E34: 80750E88 (e_po_roll_move__FP10e_po_class)
//	80754E40: 80751408 (e_po_holl_demo__FP10e_po_class)
//	80754E6C: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	80754EC4: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	80754EE8: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	80754F08: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80754F28: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80754F3C: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80754F54: 80450768 (calc_mtx)
//	80754F58: 80450768 (calc_mtx)
//	80754F64: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80754F68: 80450768 (calc_mtx)
//	80754F6C: 80450768 (calc_mtx)
//	80754F78: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	80754F7C: 80450768 (calc_mtx)
//	80754F80: 80450768 (calc_mtx)
//	80754F8C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80754FAC: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80754FD0: 80757E5C (l_HIO)
//	80754FD4: 80757E5C (l_HIO)
//	80754FDC: 80266B84 (__ml__4cXyzCFf)
//	80754FEC: 80347090 (PSVECAdd)
//	8075500C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8075502C: 80267128 (atan2sX_Z__4cXyzCFv)
//	80755064: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80755090: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807550B4: 804061C0 (g_dComIfG_gameInfo)
//	807550B8: 804061C0 (g_dComIfG_gameInfo)
//	807550C0: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	807550D8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void action(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/action__FP10e_po_class.s"
}
#pragma pop


/* 807550EC-80755C00 0B14+00 s=2 e=0 z=0  None .text      daE_PO_Execute__FP10e_po_class                               */
//	807550FC: 803621D8 (_savegpr_28)
//	80755104: 807576FC (lit_3917)
//	80755108: 807576FC (lit_3917)
//	80755174: 80754AD8 (action__FP10e_po_class)
//	80755178: 803DD470 (now__14mDoMtx_stack_c)
//	8075517C: 803DD470 (now__14mDoMtx_stack_c)
//	8075518C: 803468E8 (PSMTXTrans)
//	80755190: 803DD470 (now__14mDoMtx_stack_c)
//	80755194: 803DD470 (now__14mDoMtx_stack_c)
//	8075519C: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	807551A0: 803DD470 (now__14mDoMtx_stack_c)
//	807551A4: 803DD470 (now__14mDoMtx_stack_c)
//	807551AC: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807551BC: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	807551D4: 803DD470 (now__14mDoMtx_stack_c)
//	807551D8: 803DD470 (now__14mDoMtx_stack_c)
//	807551E0: 803464B0 (PSMTXCopy)
//	807551E8: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	807551F4: 8002D06C (dComIfGp_getReverb__Fi)
//	80755204: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	80755214: 80450768 (calc_mtx)
//	80755218: 80450768 (calc_mtx)
//	80755220: 803464B0 (PSMTXCopy)
//	80755240: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	8075524C: 800194FC (checkBallModelDraw__13fopEn_enemy_cFv)
//	8075528C: 803DD470 (now__14mDoMtx_stack_c)
//	80755290: 803DD470 (now__14mDoMtx_stack_c)
//	80755298: 803464B0 (PSMTXCopy)
//	807552A4: 8002D06C (dComIfGp_getReverb__Fi)
//	807552B4: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	807552BC: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
//	807552E0: 8026F1DC (SetC__8cM3dGCylFRC4cXyz)
//	807552E4: 804061C0 (g_dComIfG_gameInfo)
//	807552E8: 804061C0 (g_dComIfG_gameInfo)
//	807552F8: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	80755308: 80450768 (calc_mtx)
//	8075530C: 80450768 (calc_mtx)
//	80755314: 803464B0 (PSMTXCopy)
//	80755330: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80755368: 80450768 (calc_mtx)
//	8075536C: 80450768 (calc_mtx)
//	80755374: 803464B0 (PSMTXCopy)
//	807553B0: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	807553B4: 803DD470 (now__14mDoMtx_stack_c)
//	807553B8: 803DD470 (now__14mDoMtx_stack_c)
//	807553C8: 803468E8 (PSMTXTrans)
//	807553CC: 803DD470 (now__14mDoMtx_stack_c)
//	807553D0: 803DD470 (now__14mDoMtx_stack_c)
//	807553D8: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	807553DC: 803DD470 (now__14mDoMtx_stack_c)
//	807553E0: 803DD470 (now__14mDoMtx_stack_c)
//	807553E8: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	807553EC: 803DD470 (now__14mDoMtx_stack_c)
//	807553F0: 803DD470 (now__14mDoMtx_stack_c)
//	807553F8: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	80755408: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	8075540C: 803DD470 (now__14mDoMtx_stack_c)
//	80755410: 803DD470 (now__14mDoMtx_stack_c)
//	8075541C: 803464B0 (PSMTXCopy)
//	8075542C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	80755430: 803DD470 (now__14mDoMtx_stack_c)
//	80755434: 803DD470 (now__14mDoMtx_stack_c)
//	80755438: 80450768 (calc_mtx)
//	8075543C: 80450768 (calc_mtx)
//	80755444: 803464B0 (PSMTXCopy)
//	80755450: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80755528: 80084A78 (StartCAt__8dCcD_SphFR4cXyz)
//	80755538: 80084AC4 (MoveCAt__8dCcD_SphFR4cXyz)
//	80755554: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	80755560: 8026F708 (SetR__8cM3dGSphFf)
//	8075556C: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	8075557C: 80266B34 (__mi__4cXyzCFRC3Vec)
//	8075559C: 80347138 (PSVECSquareMag)
//	8075560C: 80450AE0 (__float_nan)
//	80755610: 80450AE0 (__float_nan)
//	8075567C: 80450AE0 (__float_nan)
//	80755680: 80450AE0 (__float_nan)
//	807556B0: 8026FA3C (cLib_addCalc2__FPffff)
//	807556F8: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80755718: 80267128 (atan2sX_Z__4cXyzCFv)
//	80755748: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80755768: 80270608 (cLib_addCalcAngleS2__FPssss)
//	80755778: 80439A20 (sincosTable___5JMath)
//	8075577C: 80439A20 (sincosTable___5JMath)
//	807557A4: 80270608 (cLib_addCalcAngleS2__FPssss)
//	807557B4: 80439A20 (sincosTable___5JMath)
//	807557B8: 80439A20 (sincosTable___5JMath)
//	80755820: 803DD470 (now__14mDoMtx_stack_c)
//	80755824: 803DD470 (now__14mDoMtx_stack_c)
//	80755834: 803468E8 (PSMTXTrans)
//	8075583C: 804061C0 (g_dComIfG_gameInfo)
//	80755840: 804061C0 (g_dComIfG_gameInfo)
//	80755850: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80755870: 80267128 (atan2sX_Z__4cXyzCFv)
//	80755878: 803DD470 (now__14mDoMtx_stack_c)
//	8075587C: 803DD470 (now__14mDoMtx_stack_c)
//	80755880: 8000C434 (mDoMtx_YrotM__FPA4_fs)
//	80755888: 80267150 (atan2sY_XZ__4cXyzCFv)
//	80755890: 803DD470 (now__14mDoMtx_stack_c)
//	80755894: 803DD470 (now__14mDoMtx_stack_c)
//	80755898: 8000C39C (mDoMtx_XrotM__FPA4_fs)
//	8075589C: 80757E5C (l_HIO)
//	807558A0: 80757E5C (l_HIO)
//	807558B0: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	807558BC: 803DD470 (now__14mDoMtx_stack_c)
//	807558C0: 803DD470 (now__14mDoMtx_stack_c)
//	807558C8: 803464B0 (PSMTXCopy)
//	807558DC: 800105C8 (play__14mDoExt_McaMorfFP3VecUlSc)
//	807558E4: 800106AC (modelCalc__14mDoExt_McaMorfFv)
//	8075591C: 804061C0 (g_dComIfG_gameInfo)
//	80755920: 804061C0 (g_dComIfG_gameInfo)
//	8075596C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80755980: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807559F4: 8004F6B8 (setOldPosP__22dPa_hermiteEcallBack_cFPC4cXyzPC4cXyz)
//	80755A0C: 804061C0 (g_dComIfG_gameInfo)
//	80755A10: 804061C0 (g_dComIfG_gameInfo)
//	80755A20: 80035360 (isSwitch__10dSv_info_cCFii)
//	80755A38: 8015F424 (checkNowWolfEyeUp__9daPy_py_cFv)
//	80755A48: 801A87E4 (dKy_change_colpat__FUc)
//	80755A58: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80755A68: 801A87E4 (dKy_change_colpat__FUc)
//	80755A74: 801A87E4 (dKy_change_colpat__FUc)
//	80755A78: 804061C0 (g_dComIfG_gameInfo)
//	80755A7C: 804061C0 (g_dComIfG_gameInfo)
//	80755A98: 803DD470 (now__14mDoMtx_stack_c)
//	80755A9C: 803DD470 (now__14mDoMtx_stack_c)
//	80755AA0: 803464B0 (PSMTXCopy)
//	80755AA4: 803DD470 (now__14mDoMtx_stack_c)
//	80755AA8: 803DD470 (now__14mDoMtx_stack_c)
//	80755AE4: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80755B04: 80267128 (atan2sX_Z__4cXyzCFv)
//	80755B0C: 80450768 (calc_mtx)
//	80755B10: 80450768 (calc_mtx)
//	80755B18: 8000C3DC (mDoMtx_YrotS__FPA4_fs)
//	80755B60: 80270EEC (MtxPosition__FP4cXyzP4cXyz)
//	80755B70: 80347090 (PSVECAdd)
//	80755BE0: 80019520 (setBallModelEffect__13fopEn_enemy_cFP12dKy_tevstr_c)
//	80755BEC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void daE_PO_Execute(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/daE_PO_Execute__FP10e_po_class.s"
}
#pragma pop


/* 80755C00-80755C04 0004+00 s=1 e=0 z=0  None .text      mPo_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf */
// True False
//  void False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcD_GObjInf* False
// 	 dCcD_GObjInf False
static void mPo_tgHitCallback(fopAc_ac_c* param_0, dCcD_GObjInf* param_1, fopAc_ac_c* param_2, dCcD_GObjInf* param_3) {
	/* empty function */
}


/* 80755C04-80755C0C 0008+00 s=1 e=0 z=0  None .text      daE_PO_IsDelete__FP10e_po_class                              */
// True False
//  bool False
//  e_po_class* False
// 	 e_po_class False
static bool daE_PO_IsDelete(e_po_class* param_0) {
	return true;
}


/* 80755C0C-80755C94 0088+00 s=1 e=0 z=0  None .text      daE_PO_Delete__FP10e_po_class                                */
//	80755C24: 80757A88 (stringBase0)
//	80755C28: 80757A88 (stringBase0)
//	80755C2C: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	80755C40: 80757E4D (struct_80757E4C)
//	80755C44: 80757E4D (struct_80757E4C)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  e_po_class* False
// 	 e_po_class False
asm static void daE_PO_Delete(e_po_class* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/daE_PO_Delete__FP10e_po_class.s"
}
#pragma pop


/* 80755C94-80756020 038C+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	80755CA4: 803621D8 (_savegpr_28)
//	80755CB0: 802CEC4C (__nw__FUl)
//	80755CBC: 80757A88 (stringBase0)
//	80755CC0: 80757A88 (stringBase0)
//	80755CC8: 804061C0 (g_dComIfG_gameInfo)
//	80755CCC: 804061C0 (g_dComIfG_gameInfo)
//	80755CE0: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755CE8: 80757A88 (stringBase0)
//	80755CEC: 80757A88 (stringBase0)
//	80755CFC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755D34: 80757704 (lit_3919)
//	80755D38: 80757704 (lit_3919)
//	80755D44: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80755D78: 8000E53C (create__21mDoExt_invisibleModelFP8J3DModelUc)
//	80755D9C: 8074C70C (nodeCallBack__FP8J3DJointi)
//	80755DA0: 8074C70C (nodeCallBack__FP8J3DJointi)
//	80755DF8: 80757A88 (stringBase0)
//	80755DFC: 80757A88 (stringBase0)
//	80755E04: 804061C0 (g_dComIfG_gameInfo)
//	80755E08: 804061C0 (g_dComIfG_gameInfo)
//	80755E1C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755E2C: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80755E4C: 802CEC4C (__nw__FUl)
//	80755E58: 80757A88 (stringBase0)
//	80755E5C: 80757A88 (stringBase0)
//	80755E6C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755E74: 80757A88 (stringBase0)
//	80755E78: 80757A88 (stringBase0)
//	80755E88: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755EC0: 80757704 (lit_3919)
//	80755EC4: 80757704 (lit_3919)
//	80755ED0: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	80755EFC: 80757A88 (stringBase0)
//	80755F00: 80757A88 (stringBase0)
//	80755F10: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755F20: 80014C54 (mDoExt_J3DModel__create__FP12J3DModelDataUlUl)
//	80755F40: 802CEC4C (__nw__FUl)
//	80755F4C: 80757A88 (stringBase0)
//	80755F50: 80757A88 (stringBase0)
//	80755F60: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755F68: 80757A88 (stringBase0)
//	80755F6C: 80757A88 (stringBase0)
//	80755F7C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	80755FBC: 80757704 (lit_3919)
//	80755FC0: 80757704 (lit_3919)
//	80755FCC: 8000FC4C (__ct__14mDoExt_McaMorfFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiiPvUlUl)
//	80755FFC: 80019404 (initBallModel__13fopEn_enemy_cFv)
//	8075600C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80756020-80756900 08E0+00 s=1 e=0 z=0  None .text      daE_PO_Create__FP10fopAc_ac_c                                */
//	80756030: 803621D0 (_savegpr_26)
//	80756038: 80757AA4 (cNullVec__6Z2Calc)
//	8075603C: 80757AA4 (cNullVec__6Z2Calc)
//	80756040: 807576FC (lit_3917)
//	80756044: 807576FC (lit_3917)
//	8075605C: 80756900 (__ct__10e_po_classFv)
//	80756070: 80757A88 (stringBase0)
//	80756074: 80757A88 (stringBase0)
//	80756078: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	80756088: 804061C0 (g_dComIfG_gameInfo)
//	8075608C: 804061C0 (g_dComIfG_gameInfo)
//	8075609C: 80035360 (isSwitch__10dSv_info_cCFii)
//	807560E0: 80757E5C (l_HIO)
//	807560E4: 80757E5C (l_HIO)
//	8075611C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756130: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756148: 80755C94 (useHeapInit__FP10fopAc_ac_c)
//	8075614C: 80755C94 (useHeapInit__FP10fopAc_ac_c)
//	80756154: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	80756168: 80757E4D (struct_80757E4C)
//	8075616C: 80757E4D (struct_80757E4C)
//	80756188: 80757E5C (l_HIO)
//	8075618C: 80757E5C (l_HIO)
//	807561BC: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	807561CC: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	807561E0: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	807561EC: 800848B4 (Set__8dCcD_CylFRC11dCcD_SrcCyl)
//	807561F8: 80755C00 (mPo_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	807561FC: 80755C00 (mPo_tgHitCallback__FP10fopAc_ac_cP12dCcD_GObjInfP10fopAc_ac_cP12dCcD_GObjInf)
//	8075620C: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	80756234: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	80756248: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	80756254: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8075628C: 80757E5C (l_HIO)
//	80756290: 80757E5C (l_HIO)
//	807562CC: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	807562E4: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	807562EC: 80757A88 (stringBase0)
//	807562F0: 80757A88 (stringBase0)
//	807562F8: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	80756308: 80267954 (cM_rndF__Ff)
//	80756324: 8042CA54 (g_env_light)
//	80756328: 8042CA54 (g_env_light)
//	8075633C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756350: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756360: 804061C0 (g_dComIfG_gameInfo)
//	80756364: 804061C0 (g_dComIfG_gameInfo)
//	8075636C: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	807563AC: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807563C0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756408: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8075642C: 804061C0 (g_dComIfG_gameInfo)
//	80756430: 804061C0 (g_dComIfG_gameInfo)
//	80756444: 80035360 (isSwitch__10dSv_info_cCFii)
//	80756470: 804061C0 (g_dComIfG_gameInfo)
//	80756474: 804061C0 (g_dComIfG_gameInfo)
//	80756484: 80035360 (isSwitch__10dSv_info_cCFii)
//	80756494: 804061C0 (g_dComIfG_gameInfo)
//	80756498: 804061C0 (g_dComIfG_gameInfo)
//	807564AC: 80035200 (onSwitch__10dSv_info_cFii)
//	807564BC: 804061C0 (g_dComIfG_gameInfo)
//	807564C0: 804061C0 (g_dComIfG_gameInfo)
//	807564D0: 800352B0 (offSwitch__10dSv_info_cFii)
//	807564E4: 804061C0 (g_dComIfG_gameInfo)
//	807564E8: 804061C0 (g_dComIfG_gameInfo)
//	807564FC: 80035360 (isSwitch__10dSv_info_cCFii)
//	80756508: 804061C0 (g_dComIfG_gameInfo)
//	8075650C: 804061C0 (g_dComIfG_gameInfo)
//	8075651C: 80035360 (isSwitch__10dSv_info_cCFii)
//	807565A8: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807565C8: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756610: 8074C660 (anm_init__FP10e_po_classifUcf)
//	80756634: 8004F6B8 (setOldPosP__22dPa_hermiteEcallBack_cFPC4cXyzPC4cXyz)
//	80756654: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756668: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756680: 804061C0 (g_dComIfG_gameInfo)
//	80756684: 804061C0 (g_dComIfG_gameInfo)
//	80756690: 80035360 (isSwitch__10dSv_info_cCFii)
//	80756714: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756748: 801A87E4 (dKy_change_colpat__FUc)
//	80756758: 8074C5EC (mArg0Check__FP10e_po_classs)
//	80756794: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807567D0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8075685C: 8074C5EC (mArg0Check__FP10e_po_classs)
//	8075686C: 804061C0 (g_dComIfG_gameInfo)
//	80756870: 804061C0 (g_dComIfG_gameInfo)
//	80756878: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	807568A0: 8074C5EC (mArg0Check__FP10e_po_classs)
//	807568AC: 804061C0 (g_dComIfG_gameInfo)
//	807568B0: 804061C0 (g_dComIfG_gameInfo)
//	807568C0: 80035360 (isSwitch__10dSv_info_cCFii)
//	807568D8: 801A87E4 (dKy_change_colpat__FUc)
//	807568E0: 807550EC (daE_PO_Execute__FP10e_po_class)
//	807568EC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void daE_PO_Create(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/daE_PO_Create__FP10fopAc_ac_c.s"
}
#pragma pop


/* 80756900-80756B00 0200+00 s=1 e=0 z=0  None .text      __ct__10e_po_classFv                                         */
//	80756910: 803621D4 (_savegpr_27)
//	80756918: 80018B64 (__ct__10fopAc_ac_cFv)
//	80756920: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	80756928: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	80756930: 80756D8C (__ct__5csXyzFv)
//	80756934: 80756D8C (__ct__5csXyzFv)
//	80756938: 80757290 (__dt__5csXyzFv)
//	8075693C: 80757290 (__dt__5csXyzFv)
//	80756948: 80361D60 (__construct_array)
//	80756950: 80075EAC (__ct__12dBgS_AcchCirFv)
//	8075695C: 800760A0 (__ct__9dBgS_AcchFv)
//	80756960: 80757DD8 (__vt__12dBgS_ObjAcch)
//	80756964: 80757DD8 (__vt__12dBgS_ObjAcch)
//	80756980: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	80756984: 803C3728 (__vt__9cCcD_Stts)
//	80756988: 803C3728 (__vt__9cCcD_Stts)
//	80756994: 80083760 (__ct__10dCcD_GSttsFv)
//	80756998: 803AC2E4 (__vt__9dCcD_Stts)
//	8075699C: 803AC2E4 (__vt__9dCcD_Stts)
//	807569B4: 80083A28 (__ct__12dCcD_GObjInfFv)
//	807569B8: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807569BC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807569C4: 80757DCC (__vt__8cM3dGAab)
//	807569C8: 80757DCC (__vt__8cM3dGAab)
//	807569D0: 80757DC0 (__vt__8cM3dGCyl)
//	807569D4: 80757DC0 (__vt__8cM3dGCyl)
//	807569DC: 803C35A4 (__vt__12cCcD_CylAttr)
//	807569E0: 803C35A4 (__vt__12cCcD_CylAttr)
//	807569F0: 803AC050 (__vt__8dCcD_Cyl)
//	807569F4: 803AC050 (__vt__8dCcD_Cyl)
//	80756A14: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80756A18: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80756A1C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80756A24: 80757DCC (__vt__8cM3dGAab)
//	80756A28: 80757DCC (__vt__8cM3dGAab)
//	80756A30: 80757DB4 (__vt__8cM3dGSph)
//	80756A34: 80757DB4 (__vt__8cM3dGSph)
//	80756A3C: 803C3540 (__vt__12cCcD_SphAttr)
//	80756A40: 803C3540 (__vt__12cCcD_SphAttr)
//	80756A50: 803ABFC0 (__vt__8dCcD_Sph)
//	80756A54: 803ABFC0 (__vt__8dCcD_Sph)
//	80756A74: 80083A28 (__ct__12dCcD_GObjInfFv)
//	80756A78: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80756A7C: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	80756A84: 80757DCC (__vt__8cM3dGAab)
//	80756A88: 80757DCC (__vt__8cM3dGAab)
//	80756A90: 80757DB4 (__vt__8cM3dGSph)
//	80756A94: 80757DB4 (__vt__8cM3dGSph)
//	80756A9C: 803C3540 (__vt__12cCcD_SphAttr)
//	80756AA0: 803C3540 (__vt__12cCcD_SphAttr)
//	80756AAC: 803ABFC0 (__vt__8dCcD_Sph)
//	80756AB0: 803ABFC0 (__vt__8dCcD_Sph)
//	80756AC0: 80757D98 (__vt__18JPAEmitterCallBack)
//	80756AC4: 80757D98 (__vt__18JPAEmitterCallBack)
//	80756ACC: 80757D74 (__vt__18dPa_levelEcallBack)
//	80756AD0: 80757D74 (__vt__18dPa_levelEcallBack)
//	80756AD8: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	80756ADC: 803A83A0 (__vt__22dPa_hermiteEcallBack_c)
//	80756AEC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm e_po_class::e_po_class() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__ct__10e_po_classFv.s"
}
#pragma pop


/* 80756B00-80756B04 0004+00 s=1 e=0 z=0  None .text      cleanup__18dPa_levelEcallBackFv                              */
// True False
//  void False
void dPa_levelEcallBack::cleanup() {
	/* empty function */
}


/* 80756B04-80756B78 0074+00 s=1 e=0 z=0  None .text      __dt__18dPa_levelEcallBackFv                                 */
//	80756B24: 80757D74 (__vt__18dPa_levelEcallBack)
//	80756B28: 80757D74 (__vt__18dPa_levelEcallBack)
//	80756B48: 8027E6A4 (__dt__18JPAEmitterCallBackFv)
//	80756B58: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dPa_levelEcallBack::~dPa_levelEcallBack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__18dPa_levelEcallBackFv.s"
}
#pragma pop


/* 80756B78-80756BC0 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	80756B90: 80757DB4 (__vt__8cM3dGSph)
//	80756B94: 80757DB4 (__vt__8cM3dGSph)
//	80756BA4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 80756BC0-80756C08 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGCylFv                                            */
//	80756BD8: 80757DC0 (__vt__8cM3dGCyl)
//	80756BDC: 80757DC0 (__vt__8cM3dGCyl)
//	80756BEC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGCyl::~cM3dGCyl() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__8cM3dGCylFv.s"
}
#pragma pop


/* 80756C08-80756C50 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	80756C20: 80757DCC (__vt__8cM3dGAab)
//	80756C24: 80757DCC (__vt__8cM3dGAab)
//	80756C34: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 80756C50-80756CAC 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	80756C68: 80757D68 (__vt__10dCcD_GStts)
//	80756C6C: 80757D68 (__vt__10dCcD_GStts)
//	80756C78: 80757D5C (__vt__10cCcD_GStts)
//	80756C7C: 80757D5C (__vt__10cCcD_GStts)
//	80756C90: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 80756CAC-80756D1C 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	80756CCC: 80757DD8 (__vt__12dBgS_ObjAcch)
//	80756CD0: 80757DD8 (__vt__12dBgS_ObjAcch)
//	80756CEC: 80075F94 (__dt__9dBgS_AcchFv)
//	80756CFC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 80756D1C-80756D8C 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	80756D3C: 80757D50 (__vt__12dBgS_AcchCir)
//	80756D40: 80757D50 (__vt__12dBgS_AcchCir)
//	80756D50: 8026EF18 (__dt__8cM3dGCirFv)
//	80756D5C: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	80756D6C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 80756D8C-80756D90 0004+00 s=1 e=0 z=0  None .text      __ct__5csXyzFv                                               */
// True False
csXyz::csXyz() {
	/* empty function */
}


/* 80756D90-80756DD8 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	80756DA8: 80757D5C (__vt__10cCcD_GStts)
//	80756DAC: 80757D5C (__vt__10cCcD_GStts)
//	80756DBC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 80756DD8-80756DDC 0004+00 s=2 e=0 z=0  None .text      execute__18JPAEmitterCallBackFP14JPABaseEmitter              */
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void JPAEmitterCallBack::execute(JPABaseEmitter* param_0) {
	/* empty function */
}


/* 80756DDC-80756DE0 0004+00 s=2 e=0 z=0  None .text      executeAfter__18JPAEmitterCallBackFP14JPABaseEmitter         */
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void JPAEmitterCallBack::executeAfter(JPABaseEmitter* param_0) {
	/* empty function */
}


/* 80756DE0-80756DE4 0004+00 s=2 e=0 z=0  None .text      draw__18JPAEmitterCallBackFP14JPABaseEmitter                 */
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void JPAEmitterCallBack::draw(JPABaseEmitter* param_0) {
	/* empty function */
}


/* 80756DE4-80756DE8 0004+00 s=2 e=0 z=0  None .text      drawAfter__18JPAEmitterCallBackFP14JPABaseEmitter            */
// True False
//  void False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void JPAEmitterCallBack::drawAfter(JPABaseEmitter* param_0) {
	/* empty function */
}


/* 80756DE8-80756E30 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_PO_HIO_cFv                                       */
//	80756E00: 80757DFC (__vt__12daE_PO_HIO_c)
//	80756E04: 80757DFC (__vt__12daE_PO_HIO_c)
//	80756E14: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_PO_HIO_c::~daE_PO_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__12daE_PO_HIO_cFv.s"
}
#pragma pop


/* 80756E30-80756E6C 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_po_cpp                                         */
//	80756E3C: 80757E5C (l_HIO)
//	80756E40: 80757E5C (l_HIO)
//	80756E44: 8074C54C (__ct__12daE_PO_HIO_cFv)
//	80756E48: 80756DE8 (__dt__12daE_PO_HIO_cFv)
//	80756E4C: 80756DE8 (__dt__12daE_PO_HIO_cFv)
//	80756E50: 80757E50 (lit_3933)
//	80756E54: 80757E50 (lit_3933)
//	80756E58: 8074C4D8 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_po_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__sinit_d_a_e_po_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80756E30 = (void*)__sinit_d_a_e_po_cpp;
#pragma pop


/* 80756E6C-80756E74 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	80756E70: 80756CAC (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80756E6C() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/func_80756E6C.s"
}
#pragma pop


/* 80756E74-80756E7C 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	80756E78: 80756CAC (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_80756E74() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/func_80756E74.s"
}
#pragma pop


/* 80756E7C-80757290 0414+00 s=1 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	80756E8C: 803621B4 (_savegpr_19)
//	80756EA0: 80757AA4 (cNullVec__6Z2Calc)
//	80756EA4: 80757AA4 (cNullVec__6Z2Calc)
//	80756EA8: 807576FC (lit_3917)
//	80756EAC: 807576FC (lit_3917)
//	80756EB0: 804061C0 (g_dComIfG_gameInfo)
//	80756EB4: 804061C0 (g_dComIfG_gameInfo)
//	80756EBC: 80451018 (m_midnaActor__9daPy_py_c)
//	80756EC0: 80451018 (m_midnaActor__9daPy_py_c)
//	80756EE8: 801AC57C (dKy_darkworld_check__Fv)
//	80756F0C: 80451018 (m_midnaActor__9daPy_py_c)
//	80756F10: 80451018 (m_midnaActor__9daPy_py_c)
//	80756F28: 803DD470 (now__14mDoMtx_stack_c)
//	80756F2C: 803DD470 (now__14mDoMtx_stack_c)
//	80756F30: 803464B0 (PSMTXCopy)
//	80756F48: 803DD470 (now__14mDoMtx_stack_c)
//	80756F4C: 803DD470 (now__14mDoMtx_stack_c)
//	80756F58: 80346D6C (PSMTXMultVec)
//	80756F68: 80266B34 (__mi__4cXyzCFRC3Vec)
//	80756F84: 80267674 (cM_atan2s__Fff)
//	80756FB8: 80267674 (cM_atan2s__Fff)
//	80756FD4: 804061C0 (g_dComIfG_gameInfo)
//	80756FD8: 804061C0 (g_dComIfG_gameInfo)
//	80757028: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	80757038: 80347138 (PSVECSquareMag)
//	807570A8: 80450AE0 (__float_nan)
//	807570AC: 80450AE0 (__float_nan)
//	80757118: 80450AE0 (__float_nan)
//	8075711C: 80450AE0 (__float_nan)
//	80757170: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807571AC: 804061C0 (g_dComIfG_gameInfo)
//	807571B0: 804061C0 (g_dComIfG_gameInfo)
//	8075721C: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	8075727C: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


/* 80757290-807572CC 003C+00 s=1 e=0 z=0  None .text      __dt__5csXyzFv                                               */
//	807572B0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm csXyz::~csXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__5csXyzFv.s"
}
#pragma pop


/* 807572CC-80757308 003C+00 s=1 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	807572EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__dt__4cXyzFv.s"
}
#pragma pop


/* 80757308-8075731C 0014+00 s=1 e=0 z=0  None .text      cancelOriginalDemo__9daPy_py_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPy_py_c::cancelOriginalDemo() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/cancelOriginalDemo__9daPy_py_cFv.s"
}
#pragma pop


/* 8075731C-80757348 002C+00 s=1 e=0 z=0  None .text      dComIfGp_event_reset__Fv                                     */
//	80757328: 804061C0 (g_dComIfG_gameInfo)
//	8075732C: 804061C0 (g_dComIfG_gameInfo)
//	80757334: 80042468 (reset__14dEvt_control_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm static void dComIfGp_event_reset() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/dComIfGp_event_reset__Fv.s"
}
#pragma pop


/* 80757348-8075737C 0034+00 s=1 e=0 z=0  None .text      __apl__4cXyzFRC3Vec                                          */
//	80757360: 80347090 (PSVECAdd)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
asm void cXyz::operator+=(Vec const& param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__apl__4cXyzFRC3Vec.s"
}
#pragma pop


/* 8075737C-807573B0 0034+00 s=1 e=0 z=0  None .text      fopAcM_onSwitch__FPC10fopAc_ac_ci                            */
//	8075738C: 804061C0 (g_dComIfG_gameInfo)
//	80757390: 804061C0 (g_dComIfG_gameInfo)
//	8075739C: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
asm static void fopAcM_onSwitch(fopAc_ac_c const* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/fopAcM_onSwitch__FPC10fopAc_ac_ci.s"
}
#pragma pop


/* 807573B0-807573C0 0010+00 s=1 e=0 z=0  None .text      dComIfGp_getVibration__Fv                                    */
//	807573B0: 804061C0 (g_dComIfG_gameInfo)
//	807573B4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm static void dComIfGp_getVibration() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/dComIfGp_getVibration__Fv.s"
}
#pragma pop


/* 807573C0-807573C8 0008+00 s=1 e=0 z=0  None .text      __ct__10JAISoundIDFUl                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm JAISoundID::JAISoundID(u32 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__ct__10JAISoundIDFUl.s"
}
#pragma pop


/* 807573C8-807573FC 0034+00 s=1 e=0 z=0  None .text      fopAcM_offSwitch__FPC10fopAc_ac_ci                           */
//	807573D8: 804061C0 (g_dComIfG_gameInfo)
//	807573DC: 804061C0 (g_dComIfG_gameInfo)
//	807573E8: 800352B0 (offSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  int False
asm static void fopAcM_offSwitch(fopAc_ac_c const* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/fopAcM_offSwitch__FPC10fopAc_ac_ci.s"
}
#pragma pop


/* 807573FC-80757404 0008+00 s=1 e=0 z=0  None .text      getFrame__13mDoExt_morf_cFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void mDoExt_morf_c::getFrame() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/getFrame__13mDoExt_morf_cFv.s"
}
#pragma pop


/* 80757404-80757434 0030+00 s=1 e=0 z=0  None .text      isStop__13mDoExt_morf_cFv                                    */
//	80757414: 80757700 (lit_3918)
//	80757418: 80757700 (lit_3918)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void mDoExt_morf_c::isStop() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/isStop__13mDoExt_morf_cFv.s"
}
#pragma pop


/* 80757434-8075744C 0018+00 s=1 e=0 z=0  None .text      cM_scos__Fs                                                  */
//	80757434: 80439A20 (sincosTable___5JMath)
//	80757438: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16 False
asm static void cM_scos(s16 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/cM_scos__Fs.s"
}
#pragma pop


/* 8075744C-80757460 0014+00 s=1 e=0 z=0  None .text      cM_ssin__Fs                                                  */
//	80757450: 80439A20 (sincosTable___5JMath)
//	80757454: 80439A20 (sincosTable___5JMath)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s16 False
asm static void cM_ssin(s16 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/cM_ssin__Fs.s"
}
#pragma pop


/* 80757460-80757574 0114+00 s=1 e=0 z=0  None .text      abs__4cXyzCFv                                                */
//	80757470: 807576FC (lit_3917)
//	80757474: 807576FC (lit_3917)
//	80757478: 80347138 (PSVECSquareMag)
//	807574E8: 80450AE0 (__float_nan)
//	807574EC: 80450AE0 (__float_nan)
//	80757558: 80450AE0 (__float_nan)
//	8075755C: 80450AE0 (__float_nan)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void cXyz::abs() const {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/abs__4cXyzCFv.s"
}
#pragma pop


/* 80757574-80757590 001C+00 s=1 e=0 z=0  None .text      changeDemoPos0__9daPy_py_cFPC4cXyz                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
asm void daPy_py_c::changeDemoPos0(cXyz const* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/changeDemoPos0__9daPy_py_cFPC4cXyz.s"
}
#pragma pop


/* 80757590-807575AC 001C+00 s=1 e=0 z=0  None .text      set__4cXyzFRC3Vec                                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
asm void cXyz::set(Vec const& param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/set__4cXyzFRC3Vec.s"
}
#pragma pop


/* 807575AC-807575BC 0010+00 s=1 e=0 z=0  None .text      set__4cXyzFfff                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
asm void cXyz::set(f32 param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/set__4cXyzFfff.s"
}
#pragma pop


/* 807575BC-807575D0 0014+00 s=1 e=0 z=0  None .text      changeDemoMode__9daPy_py_cFUliis                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  int False
//  int False
//  s16 False
asm void daPy_py_c::changeDemoMode(u32 param_0, int param_1, int param_2, s16 param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/changeDemoMode__9daPy_py_cFUliis.s"
}
#pragma pop


/* 807575D0-807575E4 0014+00 s=1 e=0 z=0  None .text      changeOriginalDemo__9daPy_py_cFv                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daPy_py_c::changeOriginalDemo() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/changeOriginalDemo__9daPy_py_cFv.s"
}
#pragma pop


/* 807575E4-807575F4 0010+00 s=1 e=0 z=0  None .text      daPy_getPlayerActorClass__Fv                                 */
//	807575E4: 804061C0 (g_dComIfG_gameInfo)
//	807575E8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm static void daPy_getPlayerActorClass() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/daPy_getPlayerActorClass__Fv.s"
}
#pragma pop


/* 807575F4-80757604 0010+00 s=1 e=0 z=0  None .text      Fovy__9dCamera_cFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dCamera_c::Fovy() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/Fovy__9dCamera_cFv.s"
}
#pragma pop


/* 80757604-80757620 001C+00 s=1 e=0 z=0  None .text      __as__4cXyzFRC4cXyz                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
asm void cXyz::operator=(cXyz const& param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__as__4cXyzFRC4cXyz.s"
}
#pragma pop


/* 80757620-8075764C 002C+00 s=1 e=0 z=0  None .text      fopAcM_searchPlayerAngleY__FPC10fopAc_ac_c                   */
//	8075762C: 804061C0 (g_dComIfG_gameInfo)
//	80757630: 804061C0 (g_dComIfG_gameInfo)
//	80757638: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
asm static void fopAcM_searchPlayerAngleY(fopAc_ac_c const* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/fopAcM_searchPlayerAngleY__FPC10fopAc_ac_c.s"
}
#pragma pop


/* 8075764C-8075765C 0010+00 s=1 e=0 z=0  None .text      onCondition__11dEvt_info_cFUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void dEvt_info_c::onCondition(u16 param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/onCondition__11dEvt_info_cFUs.s"
}
#pragma pop


/* 8075765C-80757670 0014+00 s=1 e=0 z=0  None .text      checkCommandDemoAccrpt__11dEvt_info_cFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void dEvt_info_c::checkCommandDemoAccrpt() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/checkCommandDemoAccrpt__11dEvt_info_cFv.s"
}
#pragma pop


/* 80757670-8075768C 001C+00 s=1 e=0 z=0  None .text      __ct__4cXyzFRC4cXyz                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
asm cXyz::cXyz(cXyz const& param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__ct__4cXyzFRC4cXyz.s"
}
#pragma pop


/* 8075768C-8075769C 0010+00 s=1 e=0 z=0  None .text      __ct__4cXyzFfff                                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
asm cXyz::cXyz(f32 param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/__ct__4cXyzFfff.s"
}
#pragma pop


/* 8075769C-807576B4 0018+00 s=1 e=0 z=0  None .text      dComIfGp_getCamera__Fi                                       */
//	8075769C: 804061C0 (g_dComIfG_gameInfo)
//	807576A0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm static void dComIfGp_getCamera(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/dComIfGp_getCamera__Fi.s"
}
#pragma pop


/* 807576B4-807576D0 001C+00 s=1 e=0 z=0  None .text      dComIfGp_getPlayerCameraID__Fi                               */
//	807576B4: 804061C0 (g_dComIfG_gameInfo)
//	807576B8: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm static void dComIfGp_getPlayerCameraID(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/dComIfGp_getPlayerCameraID__Fi.s"
}
#pragma pop


/* 807576D0-807576E8 0018+00 s=1 e=0 z=0  None .text      dComIfGp_getPlayer__Fi                                       */
//	807576D0: 804061C0 (g_dComIfG_gameInfo)
//	807576D4: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm static void dComIfGp_getPlayer(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_po/d_a_e_po/dComIfGp_getPlayer__Fi.s"
}
#pragma pop


/* ############################################################################################## */
/* 80757EA0-80757EB0 000C+04 s=0 e=0 z=0  None .bss       @6025                                                        */
u8 lit_6025[12 + 4 /* padding */];

/* 80757EB0-80757EBC 000C+00 s=0 e=0 z=0  None .bss       @6028                                                        */
u8 lit_6028[12];

/* 80757EBC-80757EC8 000C+00 s=0 e=0 z=0  None .bss       @6029                                                        */
u8 lit_6029[12];

/* 80757EC8-80757ED4 000C+00 s=0 e=0 z=0  None .bss       @6030                                                        */
u8 lit_6030[12];

/* 80757ED4-80757EE0 000C+00 s=0 e=0 z=0  None .bss       @6031                                                        */
u8 lit_6031[12];

/* 80757EE0-80757EEC 000C+00 s=0 e=0 z=0  None .bss       @6032                                                        */
u8 lit_6032[12];

/* 80757EEC-80757EF8 000C+00 s=0 e=0 z=0  None .bss       @6033                                                        */
u8 lit_6033[12];

/* 80757EF8-80757F04 000C+00 s=0 e=0 z=0  None .bss       @6034                                                        */
u8 lit_6034[12];

/* 80757F04-80757F10 000C+00 s=0 e=0 z=0  None .bss       @6035                                                        */
u8 lit_6035[12];

/* 80757F10-80757F1C 000C+00 s=0 e=0 z=0  None .bss       @6036                                                        */
u8 lit_6036[12];

/* 80757F1C-80757F28 000C+00 s=0 e=0 z=0  None .bss       @6037                                                        */
u8 lit_6037[12];

/* 80757F28-80757F34 000C+00 s=0 e=0 z=0  None .bss       @6038                                                        */
u8 lit_6038[12];

/* 80757F34-80757F40 000C+00 s=0 e=0 z=0  None .bss       @6039                                                        */
u8 lit_6039[12];

/* 80757F40-80757F4C 000C+00 s=0 e=0 z=0  None .bss       @6040                                                        */
u8 lit_6040[12];

/* 80757F4C-80757F58 000C+00 s=0 e=0 z=0  None .bss       @6041                                                        */
u8 lit_6041[12];

/* 80757F58-80757F64 000C+00 s=0 e=0 z=0  None .bss       @6042                                                        */
u8 lit_6042[12];

/* 80757F64-80757F70 000C+00 s=0 e=0 z=0  None .bss       @6043                                                        */
u8 lit_6043[12];

/* 80757F70-80757F7C 000C+00 s=0 e=0 z=0  None .bss       @6044                                                        */
u8 lit_6044[12];

/* 80757F7C-80758054 00D8+00 s=0 e=0 z=0  None .bss       mKcenterInit_dt$6024                                         */
u8 data_80757F7C[216];

/* 80758054-80758064 000C+04 s=0 e=0 z=0  None .bss       @6046                                                        */
u8 lit_6046[12 + 4 /* padding */];

/* 80758064-80758070 000C+00 s=0 e=0 z=0  None .bss       @6049                                                        */
u8 lit_6049[12];

/* 80758070-8075807C 000C+00 s=0 e=0 z=0  None .bss       @6050                                                        */
u8 lit_6050[12];

/* 8075807C-80758088 000C+00 s=0 e=0 z=0  None .bss       @6051                                                        */
u8 lit_6051[12];

/* 80758088-80758094 000C+00 s=0 e=0 z=0  None .bss       @6052                                                        */
u8 lit_6052[12];

/* 80758094-807580A0 000C+00 s=0 e=0 z=0  None .bss       @6053                                                        */
u8 lit_6053[12];

/* 807580A0-807580AC 000C+00 s=0 e=0 z=0  None .bss       @6054                                                        */
u8 lit_6054[12];

/* 807580AC-807580B8 000C+00 s=0 e=0 z=0  None .bss       @6055                                                        */
u8 lit_6055[12];

/* 807580B8-807580C4 000C+00 s=0 e=0 z=0  None .bss       @6056                                                        */
u8 lit_6056[12];

/* 807580C4-807580D0 000C+00 s=0 e=0 z=0  None .bss       @6057                                                        */
u8 lit_6057[12];

/* 807580D0-807580DC 000C+00 s=0 e=0 z=0  None .bss       @6058                                                        */
u8 lit_6058[12];

/* 807580DC-807580E8 000C+00 s=0 e=0 z=0  None .bss       @6059                                                        */
u8 lit_6059[12];

/* 807580E8-807580F4 000C+00 s=0 e=0 z=0  None .bss       @6060                                                        */
u8 lit_6060[12];

/* 807580F4-80758100 000C+00 s=0 e=0 z=0  None .bss       @6061                                                        */
u8 lit_6061[12];

/* 80758100-8075810C 000C+00 s=0 e=0 z=0  None .bss       @6062                                                        */
u8 lit_6062[12];

/* 8075810C-80758118 000C+00 s=0 e=0 z=0  None .bss       @6063                                                        */
u8 lit_6063[12];

/* 80758118-80758124 000C+00 s=0 e=0 z=0  None .bss       @6064                                                        */
u8 lit_6064[12];

/* 80758124-80758130 000C+00 s=0 e=0 z=0  None .bss       @6065                                                        */
u8 lit_6065[12];

/* 80758130-80758208 00D8+00 s=0 e=0 z=0  None .bss       mKeyeInit_dt$6045                                            */
u8 data_80758130[216];

/* 80758208-80758218 000C+04 s=0 e=0 z=0  None .bss       @6067                                                        */
u8 lit_6067[12 + 4 /* padding */];

/* 80758218-80758224 000C+00 s=0 e=0 z=0  None .bss       @6070                                                        */
u8 lit_6070[12];

/* 80758224-80758230 000C+00 s=0 e=0 z=0  None .bss       @6071                                                        */
u8 lit_6071[12];

/* 80758230-8075823C 000C+00 s=0 e=0 z=0  None .bss       @6072                                                        */
u8 lit_6072[12];

/* 8075823C-80758248 000C+00 s=0 e=0 z=0  None .bss       @6073                                                        */
u8 lit_6073[12];

/* 80758248-80758254 000C+00 s=0 e=0 z=0  None .bss       @6074                                                        */
u8 lit_6074[12];

/* 80758254-80758260 000C+00 s=0 e=0 z=0  None .bss       @6075                                                        */
u8 lit_6075[12];

/* 80758260-8075826C 000C+00 s=0 e=0 z=0  None .bss       @6076                                                        */
u8 lit_6076[12];

/* 8075826C-80758278 000C+00 s=0 e=0 z=0  None .bss       @6077                                                        */
u8 lit_6077[12];

/* 80758278-80758284 000C+00 s=0 e=0 z=0  None .bss       @6078                                                        */
u8 lit_6078[12];

/* 80758284-80758290 000C+00 s=0 e=0 z=0  None .bss       @6079                                                        */
u8 lit_6079[12];

/* 80758290-8075829C 000C+00 s=0 e=0 z=0  None .bss       @6080                                                        */
u8 lit_6080[12];

/* 8075829C-807582A8 000C+00 s=0 e=0 z=0  None .bss       @6081                                                        */
u8 lit_6081[12];

/* 807582A8-807582B4 000C+00 s=0 e=0 z=0  None .bss       @6082                                                        */
u8 lit_6082[12];

/* 807582B4-807582C0 000C+00 s=0 e=0 z=0  None .bss       @6083                                                        */
u8 lit_6083[12];

/* 807582C0-807582CC 000C+00 s=0 e=0 z=0  None .bss       @6084                                                        */
u8 lit_6084[12];

/* 807582CC-807582D8 000C+00 s=0 e=0 z=0  None .bss       @6085                                                        */
u8 lit_6085[12];

/* 807582D8-807582E4 000C+00 s=0 e=0 z=0  None .bss       @6086                                                        */
u8 lit_6086[12];

/* 807582E4-807582F0 000C+00 s=0 e=0 z=0  None .bss       @6087                                                        */
u8 lit_6087[12];

/* 807582F0-807582FC 000C+00 s=0 e=0 z=0  None .bss       @6088                                                        */
u8 lit_6088[12];

/* 807582FC-80758308 000C+00 s=0 e=0 z=0  None .bss       @6089                                                        */
u8 lit_6089[12];

/* 80758308-80758314 000C+00 s=0 e=0 z=0  None .bss       @6090                                                        */
u8 lit_6090[12];

/* 80758314-8075841C 0108+00 s=0 e=0 z=0  None .bss       mKPosInit_dt$6066                                            */
u8 data_80758314[264];

/* 8075841C-80758420 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_8075841C[4];

/* 80758420-80758424 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_80758420[4];

/* 80758424-80758428 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_80758424[4];

/* 80758428-8075842C 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_80758428[4];

/* 8075842C-80758430 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_8075842C[4];

/* 80758430-80758434 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_80758430[4];

/* 80758434-80758438 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_80758434[4];

/* 80758438-8075843C 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_80758438[4];

/* 8075843C-80758440 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_8075843C[4];

/* 80758440-80758444 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_80758440[4];

/* 80758444-80758448 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_80758444[4];

/* 80758448-8075844C 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_80758448[4];

/* 8075844C-80758450 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_8075844C[4];

/* 80758450-80758454 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_80758450[4];

/* 80758454-80758458 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_80758454[4];

/* 80758458-8075845C 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_80758458[4];

/* 8075845C-80758460 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_8075845C[4];

/* 80758460-80758464 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_80758460[4];

/* 80758464-80758468 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_80758464[4];

/* 80758468-8075846C 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_80758468[4];

/* 8075846C-80758470 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_8075846C[4];

/* 80758470-80758474 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_80758470[4];

/* 80758474-80758478 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_80758474[4];

/* 80758478-8075847C 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_80758478[4];

/* 8075847C-80758480 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_8075847C[4];

