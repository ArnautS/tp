// 
// Generated By: dol2asm
// Translation Unit: d_a_e_tt
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "rel/d/a/e/d_a_e_tt/d_a_e_tt.h"

// 
// Types:
// 

struct request_of_phase_process_class {
};

struct csXyz {
};

struct mDoMtx_stack_c {
	/* 8000CD9C */ // False False
//  f32 False
//  f32 False
//  f32 False
void transM(f32, f32, f32);
	/* 8000CE38 */ // False False
//  f32 False
//  f32 False
//  f32 False
void scaleM(f32, f32, f32);
	/* 8000CF44 */ // False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
void ZXYrotM(csXyz const&);
};

struct mDoExt_McaMorfCallBack2_c {
};

struct Z2Creature {
};

struct J3DAnmTransform {
};

struct mDoExt_McaMorfCallBack1_c {
};

struct J3DModelData {
};

struct mDoExt_McaMorfSO {
	/* 800107D0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
mDoExt_McaMorfSO(J3DModelData*, mDoExt_McaMorfCallBack1_c*, mDoExt_McaMorfCallBack2_c*, J3DAnmTransform*, int, f32, int, int, Z2Creature*, u32, u32);
	/* 80010E70 */ // False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void setAnm(J3DAnmTransform*, int, f32, f32, f32, f32);
	/* 800110B0 */ // False False
//  u32 False
//  s8 False
void play(u32, s8);
	/* 800111C0 */ // False False
void entryDL();
	/* 800111EC */ // False False
void modelCalc();
};

struct fopEn_enemy_c {
};

struct fopAc_ac_c {
	/* 80018B64 */ // False False
fopAc_ac_c();
};

struct Vec {
};

struct cXyz {
	/* 80266B34 */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void operator-(Vec const&) const;
	/* 807C1F68 */ // True False
~cXyz();
};

struct fopAcM_wt_c {
	/* 8001DD84 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void waterCheck(cXyz const*);
};

struct J3DJoint {
};

struct J3DModel {
};

struct daE_TT_c {
	/* 807BD7EC */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
void ctrlJoint(J3DJoint*, J3DModel*);
	/* 807BD8E0 */ // True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
void JointCallBack(J3DJoint*, int);
	/* 807BD92C */ // True False
void draw();
	/* 807BDAE0 */ // True False
//  int False
//  u8 False
//  f32 False
//  f32 False
void setBck(int, u8, f32, f32);
	/* 807BDB84 */ // True False
void calcHitGroundSpeed();
	/* 807BDBE4 */ // True False
//  int False
//  int False
void setActionMode(int, int);
	/* 807BDC10 */ // True False
void getCutType();
	/* 807BDC50 */ // True False
void damage_check();
	/* 807BDE5C */ // True False
void checkWaterSurface();
	/* 807BDF60 */ // True False
void checkFootGround();
	/* 807BE2A8 */ // True False
void setBodyLandEffect();
	/* 807BE438 */ // True False
void setWaterEffect();
	/* 807BE708 */ // True False
void setDeathEyeEffect();
	/* 807BE99C */ // True False
void setDeathFootEffect();
	/* 807BEBAC */ // True False
void checkPlayerSearch();
	/* 807BED70 */ // True False
void executeWait();
	/* 807BF358 */ // True False
void executeChase();
	/* 807BF914 */ // True False
void executeAttack();
	/* 807BFD38 */ // True False
void setDamageInit();
	/* 807BFD60 */ // True False
void executeDamage();
	/* 807BFFF4 */ // True False
void executeDeath();
	/* 807C033C */ // True False
void executeOutRange();
	/* 807C0530 */ // True False
void executeFirstAttack();
	/* 807C0C28 */ // True False
void action();
	/* 807C0E10 */ // True False
//  int False
void mtx_set(int);
	/* 807C0EE8 */ // True False
void cc_set();
	/* 807C1024 */ // True False
void execute();
	/* 807C1164 */ // True False
void _delete();
	/* 807C121C */ // True False
void CreateHeap();
	/* 807C13B4 */ // True False
void create();
};

struct daE_TT_HIO_c {
	/* 807BD7AC */ // True False
daE_TT_HIO_c();
	/* 807C1AA8 */ // True False
~daE_TT_HIO_c();
};

struct dSv_info_c {
	/* 80035200 */ // False False
//  int False
//  int False
void onSwitch(int, int);
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dKy_tevstr_c {
};

struct dScnKy_env_light_c {
	/* 801A37C4 */ // False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void settingTevStruct(int, cXyz*, dKy_tevstr_c*);
	/* 801A4DA0 */ // False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
void setLightTevColorType_MAJI(J3DModelData*, dKy_tevstr_c*);
};

struct dRes_info_c {
};

struct dRes_control_c {
	/* 8003C2EC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
void getRes(char const*, s32, dRes_info_c*, int);
};

struct dPa_levelEcallBack {
};

struct _GXColor {
};

struct cBgS_PolyInfo {
	/* 802680B0 */ // False False
~cBgS_PolyInfo();
};

struct dPa_control_c {
	struct level_c {
		/* 8004B918 */ // False False
//  u32 False
void getEmitter(u32);
	};

	/* 8004CA90 */ // False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D4CC */ // False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void set(u32, u8, u16, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, u8, dPa_levelEcallBack*, s8, _GXColor const*, _GXColor const*, cXyz const*, f32);
	/* 8004D6A4 */ // False False
//  u32 False
//  u16 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void setPoly(u32, u16, cBgS_PolyInfo&, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, int, dPa_levelEcallBack*, s8, cXyz const*);
	/* 8004D068 */ // False False
//  u16 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void setPoly(u16, cBgS_PolyInfo&, cXyz const*, dKy_tevstr_c const*, csXyz const*, cXyz const*, int, dPa_levelEcallBack*, s8, cXyz const*);
};

struct dCcU_AtInfo {
};

struct dCcD_Stts {
	/* 80083860 */ // False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void Init(int, int, fopAc_ac_c*);
};

struct dCcD_SrcSph {
};

struct dCcD_Sph {
	/* 80084A34 */ // False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
void Set(dCcD_SrcSph const&);
};

struct dCcD_GStts {
	/* 80083760 */ // False False
dCcD_GStts();
	/* 80083830 */ // False False
void Move();
	/* 807C188C */ // True False
~dCcD_GStts();
};

struct dCcD_GObjInf {
	/* 80083A28 */ // False False
dCcD_GObjInf();
	/* 80084460 */ // False False
void ChkTgHit();
	/* 800844F8 */ // False False
void GetTgHitObj();
};

struct dBgS_PolyPassChk {
	/* 80078E68 */ // False False
void SetObj();
};

struct dBgS_ObjGndChk {
	/* 807C19C8 */ // True False
~dBgS_ObjGndChk();
};

struct dBgS_ObjAcch {
	/* 807C18E8 */ // True False
~dBgS_ObjAcch();
};

struct dBgS_LinChk {
	/* 80077C68 */ // False False
dBgS_LinChk();
	/* 80077CDC */ // False False
~dBgS_LinChk();
	/* 80077D64 */ // False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void Set(cXyz const*, cXyz const*, fopAc_ac_c const*);
};

struct dBgS_GndChk {
	/* 8007757C */ // False False
dBgS_GndChk();
	/* 800775F0 */ // False False
~dBgS_GndChk();
};

struct dBgS_CamLinChk_NorWtr {
	/* 80077E78 */ // False False
dBgS_CamLinChk_NorWtr();
	/* 80077EE4 */ // False False
~dBgS_CamLinChk_NorWtr();
};

struct dBgS_AcchCir {
	/* 80075EAC */ // False False
dBgS_AcchCir();
	/* 80075F58 */ // False False
//  f32 False
//  f32 False
void SetWall(f32, f32);
	/* 807C1958 */ // True False
~dBgS_AcchCir();
};

struct dBgS {
	/* 80074E50 */ // False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
void GetPolyAtt0(cBgS_PolyInfo const&);
};

struct dBgS_Acch {
	/* 80075F94 */ // False False
~dBgS_Acch();
	/* 800760A0 */ // False False
dBgS_Acch();
	/* 80076248 */ // False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
void Set(cXyz*, cXyz*, fopAc_ac_c*, int, dBgS_AcchCir*, cXyz*, csXyz*, csXyz*);
	/* 80076AAC */ // False False
//  dBgS& False
// 	 dBgS False
void CrrPos(dBgS&);
};

struct cM3dGSph {
	/* 8026F648 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetC(cXyz const&);
	/* 8026F708 */ // False False
//  f32 False
void SetR(f32);
	/* 807C17FC */ // True False
~cM3dGSph();
};

struct cM3dGCir {
	/* 8026EF18 */ // False False
~cM3dGCir();
};

struct cM3dGAab {
	/* 807C1844 */ // True False
~cM3dGAab();
};

struct cCcD_Obj {
};

struct cCcS {
	/* 80264BA8 */ // False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
void Set(cCcD_Obj*);
};

struct cCcD_GStts {
	/* 807C1A60 */ // True False
~cCcD_GStts();
};

struct cBgS_LinChk {
};

struct cBgS_GndChk {
	/* 80267D0C */ // False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void SetPos(Vec const*);
};

struct cBgS {
	/* 800743B4 */ // False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
void LineCross(cBgS_LinChk*);
	/* 800744A0 */ // False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
void GroundCross(cBgS_GndChk*);
};

struct _GXTexObj {
};

struct Z2CreatureEnemy {
	/* 802C0F64 */ // False False
Z2CreatureEnemy();
	/* 802C1094 */ // False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
void init(Vec*, Vec*, u8, u8);
	/* 802C1B7C */ // False False
//  bool False
void setLinkSearch(bool);
	/* 802C1B90 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void setEnemyName(char const*);
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

struct J3DFrameCtrl {
	/* 8032842C */ // False False
//  f32 False
void checkPass(f32);
};

// 
// Forward References:
// 

// True False
//  daE_TT_c* False
// 	 daE_TT_c False
static void daE_TT_Draw(daE_TT_c*);
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
static void daE_TT_Execute(daE_TT_c*);
// True False
//  bool False
//  daE_TT_c* False
// 	 daE_TT_c False
static bool daE_TT_IsDelete(daE_TT_c*);
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
static void daE_TT_Delete(daE_TT_c*);
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
static void useHeapInit(fopAc_ac_c*);
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
static void daE_TT_Create(daE_TT_c*);
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
static void setMidnaBindEffect(fopEn_enemy_c*, Z2CreatureEnemy*, cXyz*, cXyz*);

// True False
extern "C" void __ct__12daE_TT_HIO_cFv();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
extern "C" void ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel();
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
extern "C" void JointCallBack__8daE_TT_cFP8J3DJointi();
// True False
extern "C" void draw__8daE_TT_cFv();
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
extern "C" static void daE_TT_Draw__FP8daE_TT_c();
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
extern "C" void setBck__8daE_TT_cFiUcff();
// True False
extern "C" void calcHitGroundSpeed__8daE_TT_cFv();
// True False
//  int False
//  int False
extern "C" void setActionMode__8daE_TT_cFii();
// True False
extern "C" void getCutType__8daE_TT_cFv();
// True False
extern "C" void damage_check__8daE_TT_cFv();
// True False
extern "C" void checkWaterSurface__8daE_TT_cFv();
// True False
extern "C" void checkFootGround__8daE_TT_cFv();
// True False
extern "C" void setBodyLandEffect__8daE_TT_cFv();
// True False
extern "C" void setWaterEffect__8daE_TT_cFv();
// True False
extern "C" void setDeathEyeEffect__8daE_TT_cFv();
// True False
extern "C" void setDeathFootEffect__8daE_TT_cFv();
// True False
extern "C" void checkPlayerSearch__8daE_TT_cFv();
// True False
extern "C" void executeWait__8daE_TT_cFv();
// True False
extern "C" void executeChase__8daE_TT_cFv();
// True False
extern "C" void executeAttack__8daE_TT_cFv();
// True False
extern "C" void setDamageInit__8daE_TT_cFv();
// True False
extern "C" void executeDamage__8daE_TT_cFv();
// True False
extern "C" void executeDeath__8daE_TT_cFv();
// True False
extern "C" void executeOutRange__8daE_TT_cFv();
// True False
extern "C" void executeFirstAttack__8daE_TT_cFv();
// True False
extern "C" void action__8daE_TT_cFv();
// True False
//  int False
extern "C" void mtx_set__8daE_TT_cFi();
// True False
extern "C" void cc_set__8daE_TT_cFv();
// True False
extern "C" void execute__8daE_TT_cFv();
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
extern "C" static void daE_TT_Execute__FP8daE_TT_c();
// True False
//  bool False
//  daE_TT_c* False
// 	 daE_TT_c False
extern "C" static bool daE_TT_IsDelete__FP8daE_TT_c();
// True False
extern "C" void _delete__8daE_TT_cFv();
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
extern "C" static void daE_TT_Delete__FP8daE_TT_c();
// True False
extern "C" void CreateHeap__8daE_TT_cFv();
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" static void useHeapInit__FP10fopAc_ac_c();
// True False
extern "C" void create__8daE_TT_cFv();
// True False
extern "C" void __dt__8cM3dGSphFv();
// True False
extern "C" void __dt__8cM3dGAabFv();
// True False
extern "C" void __dt__10dCcD_GSttsFv();
// True False
extern "C" void __dt__12dBgS_ObjAcchFv();
// True False
extern "C" void __dt__12dBgS_AcchCirFv();
// True False
extern "C" void __dt__14dBgS_ObjGndChkFv();
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
extern "C" static void daE_TT_Create__FP8daE_TT_c();
// True False
extern "C" void __dt__10cCcD_GSttsFv();
// True False
extern "C" void __dt__12daE_TT_HIO_cFv();
// False False
extern "C" void __sinit_d_a_e_tt_cpp();
// True False
extern "C" static void func_807C1B2C();
// True False
extern "C" static void func_807C1B34();
// True False
extern "C" static void func_807C1B3C();
// True False
extern "C" static void func_807C1B44();
// True False
extern "C" static void func_807C1B4C();
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
extern "C" static void setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz();
// True False
extern "C" void __dt__4cXyzFv();
extern "C" extern u8 const lit_3911[8];
extern "C" extern u8 const lit_3912[8];
extern "C" extern u8 const lit_3913[8];
extern "C" extern u32 const lit_3914;
extern "C" extern u32 const lit_3930;
extern "C" extern u32 const lit_3931;
extern "C" extern u32 const lit_3932;
extern "C" extern u32 const lit_4017;
extern "C" extern u32 const lit_4041;
extern "C" extern u32 const lit_4042;
extern "C" extern u32 const lit_4145;
extern "C" extern u32 const lit_4146;
extern "C" extern u32 const lit_4258;
extern "C" extern u32 const lit_4259;
extern "C" extern u32 const lit_4260;
extern "C" extern u32 const lit_4261;
extern "C" extern u32 const lit_4262;
extern "C" extern u32 const lit_4263;
extern "C" extern u32 const lit_4264;
extern "C" extern u32 const lit_4394;
extern "C" extern u32 const lit_4395;
extern "C" extern u32 const lit_4633;
extern "C" extern u32 const lit_4790;
extern "C" extern u32 const lit_4791;
extern "C" extern u32 const lit_4792;
extern "C" extern u32 const lit_4793;
extern "C" extern u32 const lit_4794;
extern "C" extern u32 const lit_4795;
extern "C" extern u32 const lit_4797;
extern "C" extern u32 const lit_4798;
extern "C" extern u32 const lit_4799;
extern "C" extern u32 const lit_4940[1 + 1 /* padding */];
extern "C" extern u8 const lit_4943[8];
extern "C" extern u32 const lit_5054;
extern "C" extern u32 const lit_5055;
extern "C" extern u32 const lit_5056;
extern "C" extern u32 const lit_5103;
extern "C" extern u32 const lit_5178;
extern "C" extern u32 const lit_5179;
extern "C" extern u32 const lit_5218;
extern "C" extern u32 const lit_5447;
extern "C" extern u32 const lit_5448;
extern "C" extern u32 const lit_5449;
extern "C" extern u32 const lit_5546;
extern "C" extern u32 const lit_5789[1 + 1 /* padding */];
extern "C" extern u8 const lit_5791[8];
extern "C" extern char const* const stringBase0;
extern "C" extern u32 lit_1787[1 + 4 /* padding */];
extern "C" extern u8 data_807C20E8[8];
extern "C" extern u8 data_807C20F0[8];
extern "C" extern u8 data_807C20F8[6 + 2 /* padding */];
extern "C" extern u8 data_807C2140[64];
extern "C" extern void* g_profile_E_TT[12];
extern "C" extern void* __vt__12dBgS_AcchCir[3];
extern "C" extern void* __vt__10cCcD_GStts[3];
extern "C" extern void* __vt__10dCcD_GStts[3];
extern "C" extern void* __vt__8cM3dGSph[3];
extern "C" extern void* __vt__8cM3dGAab[3];
extern "C" extern void* __vt__12dBgS_ObjAcch[9];
extern "C" extern void* __vt__14dBgS_ObjGndChk[12];
extern "C" extern void* __vt__12daE_TT_HIO_c[3];
extern "C" extern u8 lit_1107[1 + 3 /* padding */];
extern "C" extern u8 lit_1105[1 + 3 /* padding */];
extern "C" extern u8 lit_1104[1 + 3 /* padding */];
extern "C" extern u8 lit_1099[1 + 3 /* padding */];
extern "C" extern u8 lit_1097[1 + 3 /* padding */];
extern "C" extern u8 lit_1095[1 + 3 /* padding */];
extern "C" extern u8 lit_1094[1 + 3 /* padding */];
extern "C" extern u8 lit_1057[1 + 3 /* padding */];
extern "C" extern u8 lit_1055[1 + 3 /* padding */];
extern "C" extern u8 lit_1053[1 + 3 /* padding */];
extern "C" extern u8 lit_1052[1 + 3 /* padding */];
extern "C" extern u8 lit_1014[1 + 3 /* padding */];
extern "C" extern u8 lit_1012[1 + 3 /* padding */];
extern "C" extern u8 lit_1010[1 + 3 /* padding */];
extern "C" extern u8 lit_4154[12 + 4 /* padding */];
extern "C" extern u8 data_807C2418[12];
extern "C" extern u8 lit_4269[12 + 4 /* padding */];
extern "C" extern u8 data_807C2434[12];
extern "C" extern u8 lit_4302[12 + 4 /* padding */];
extern "C" extern u8 data_807C2450[12];
extern "C" extern u8 lit_4400[12 + 4 /* padding */];
extern "C" extern u8 data_807C246C[12];
extern "C" extern u8 lit_4489[12 + 4 /* padding */];
extern "C" extern u8 data_807C2488[12];
extern "C" extern u8 data_807C2494[4];
extern "C" extern u8 data_807C2498[4];
extern "C" extern u8 data_807C249C[4];
extern "C" extern u8 data_807C24A0[4];
extern "C" extern u8 data_807C24A4[4];
extern "C" extern u8 data_807C24A8[4];
extern "C" extern u8 data_807C24AC[4];
extern "C" extern u8 data_807C24B0[4];
extern "C" extern u8 data_807C24B4[4];
extern "C" extern u8 data_807C24B8[4];
extern "C" extern u8 data_807C24BC[4];
extern "C" extern u8 data_807C24C0[4];
extern "C" extern u8 data_807C24C4[4];
extern "C" extern u8 data_807C24C8[4];
extern "C" extern u8 data_807C24CC[4];
extern "C" extern u8 data_807C24D0[4];
extern "C" extern u8 data_807C24D4[4];
extern "C" extern u8 data_807C24D8[4];
extern "C" extern u8 data_807C24DC[4];
extern "C" extern u8 data_807C24E0[4];
extern "C" extern u8 data_807C24E4[4];
extern "C" extern u8 data_807C24E8[4];
extern "C" extern u8 data_807C24EC[4];
extern "C" extern u8 data_807C24F0[4];
extern "C" extern u8 data_807C24F4[4];

// 
// External References:
// 

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
void mDoMtx_ZrotM(f32 (* )[4], s16);
// False False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  csXyz* False
// 	 csXyz False
void mDoMtx_MtxToRot(f32 const (* )[4], csXyz*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
void fopAcM_delete(fopAc_ac_c*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
void fopAcM_entrySolidHeap(fopAc_ac_c*, int (*)(fopAc_ac_c*), u32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMin(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
void fopAcM_SetMax(fopAc_ac_c*, f32, f32, f32);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
void fopAcM_posMoveF(fopAc_ac_c*, cXyz const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorAngleY(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistance(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_searchActorDistanceXZ(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
void fopAcM_createDisappear(fopAc_ac_c const*, cXyz const*, u8, u8, u8);
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
void fopAcM_otherBgCheck(fopAc_ac_c const*, fopAc_ac_c const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resLoad(request_of_phase_process_class*, char const*);
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
void dComIfG_resDelete(request_of_phase_process_class*, char const*);
// False False
//  int False
void dComIfGp_getReverb(int);
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
void dComIfGd_setShadow(u32, s8, J3DModel*, cXyz*, f32, f32, f32, f32, cBgS_PolyInfo&, dKy_tevstr_c*, s16, f32, _GXTexObj*);
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
void cc_at_check(fopAc_ac_c*, dCcU_AtInfo*);
// False False
void dKy_darkworld_check();
// False False
//  f32 False
//  f32 False
void cM_atan2s(f32, f32);
// False False
void cM_rnd();
// False False
//  f32 False
void cM_rndF(f32);
// False False
//  f32 False
void cM_rndFX(f32);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
void cLib_addCalc2(f32*, f32, f32, f32);
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
void cLib_addCalcAngleS(s16*, s16, s16, s16, s16);
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
void cLib_chaseF(f32*, f32, f32);
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
void cLib_targetAngleY(Vec const*, Vec const*);
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
void JPASetRMtxSTVecfromMtx(f32 const (* )[4], f32 (* )[4], JGeometry::TVec3__template0*, JGeometry::TVec3__template0*);
// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  s16 False
extern "C" void mDoMtx_ZrotM__FPA4_fs();
// False False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  csXyz* False
// 	 csXyz False
extern "C" void mDoMtx_MtxToRot__FPA4_CfP5csXyz();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void transM__14mDoMtx_stack_cFfff();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void scaleM__14mDoMtx_stack_cFfff();
// False False
//  csXyz const& False
// 	 csXyz const False
// 		 csXyz False
extern "C" void ZXYrotM__14mDoMtx_stack_cFRC5csXyz();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  mDoExt_McaMorfCallBack1_c* False
// 	 mDoExt_McaMorfCallBack1_c False
//  mDoExt_McaMorfCallBack2_c* False
// 	 mDoExt_McaMorfCallBack2_c False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  int False
//  int False
//  Z2Creature* False
// 	 Z2Creature False
//  u32 False
//  u32 False
extern "C" void __ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl();
// False False
//  J3DAnmTransform* False
// 	 J3DAnmTransform False
//  int False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff();
// False False
//  u32 False
//  s8 False
extern "C" void play__16mDoExt_McaMorfSOFUlSc();
// False False
extern "C" void entryDL__16mDoExt_McaMorfSOFv();
// False False
extern "C" void modelCalc__16mDoExt_McaMorfSOFv();
// False False
extern "C" void __ct__10fopAc_ac_cFv();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void fopAcM_delete__FP10fopAc_ac_c();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int (*)(fopAc_ac_c*) False
// 	 * False
// 		  False
// 	 int False
// 	 fopAc_ac_c* False
// 		 fopAc_ac_c False
//  u32 False
extern "C" void fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMin__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  f32 False
//  f32 False
//  f32 False
extern "C" void fopAcM_SetMax__FP10fopAc_ac_cfff();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  u8 False
//  u8 False
extern "C" void fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc();
// False False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void waterCheck__11fopAcM_wt_cFPC4cXyz();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resLoad__FP30request_of_phase_process_classPCc();
// False False
//  request_of_phase_process_class* False
// 	 request_of_phase_process_class False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void dComIfG_resDelete__FP30request_of_phase_process_classPCc();
// False False
//  int False
extern "C" void dComIfGp_getReverb__Fi();
// False False
//  u32 False
//  s8 False
//  J3DModel* False
// 	 J3DModel False
//  cXyz* False
// 	 cXyz False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
//  s16 False
//  f32 False
//  _GXTexObj* False
// 	 _GXTexObj False
extern "C" void dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj();
// False False
//  int False
//  int False
extern "C" void onSwitch__10dSv_info_cFii();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  s32 False
//  dRes_info_c* False
// 	 dRes_info_c False
//  int False
extern "C" void getRes__14dRes_control_cFPCclP11dRes_info_ci();
// False False
//  u32 False
extern "C" void getEmitter__Q213dPa_control_c7level_cFUl();
// False False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u16 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
// False False
//  u32 False
//  u8 False
//  u16 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  u8 False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  _GXColor const* False
// 	 _GXColor const False
// 		 _GXColor False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf();
// False False
//  u32 False
//  u16 False
//  cBgS_PolyInfo& False
// 	 cBgS_PolyInfo False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  dKy_tevstr_c const* False
// 	 dKy_tevstr_c const False
// 		 dKy_tevstr_c False
//  csXyz const* False
// 	 csXyz const False
// 		 csXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  int False
//  dPa_levelEcallBack* False
// 	 dPa_levelEcallBack False
//  s8 False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
extern "C" void setPoly__13dPa_control_cFUlUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz();
// False False
//  cBgS_LinChk* False
// 	 cBgS_LinChk False
extern "C" void LineCross__4cBgSFP11cBgS_LinChk();
// False False
//  cBgS_GndChk* False
// 	 cBgS_GndChk False
extern "C" void GroundCross__4cBgSFP11cBgS_GndChk();
// False False
//  cBgS_PolyInfo const& False
// 	 cBgS_PolyInfo const False
// 		 cBgS_PolyInfo False
extern "C" void GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo();
// False False
extern "C" void __ct__12dBgS_AcchCirFv();
// False False
//  f32 False
//  f32 False
extern "C" void SetWall__12dBgS_AcchCirFff();
// False False
extern "C" void __dt__9dBgS_AcchFv();
// False False
extern "C" void __ct__9dBgS_AcchFv();
// False False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  int False
//  dBgS_AcchCir* False
// 	 dBgS_AcchCir False
//  cXyz* False
// 	 cXyz False
//  csXyz* False
// 	 csXyz False
//  csXyz* False
// 	 csXyz False
extern "C" void Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz();
// False False
//  dBgS& False
// 	 dBgS False
extern "C" void CrrPos__9dBgS_AcchFR4dBgS();
// False False
extern "C" void __ct__11dBgS_GndChkFv();
// False False
extern "C" void __dt__11dBgS_GndChkFv();
// False False
extern "C" void __ct__11dBgS_LinChkFv();
// False False
extern "C" void __dt__11dBgS_LinChkFv();
// False False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const* False
// 	 cXyz const False
// 		 cXyz False
//  fopAc_ac_c const* False
// 	 fopAc_ac_c const False
// 		 fopAc_ac_c False
extern "C" void Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c();
// False False
extern "C" void __ct__21dBgS_CamLinChk_NorWtrFv();
// False False
extern "C" void __dt__21dBgS_CamLinChk_NorWtrFv();
// False False
extern "C" void SetObj__16dBgS_PolyPassChkFv();
// False False
extern "C" void __ct__10dCcD_GSttsFv();
// False False
extern "C" void Move__10dCcD_GSttsFv();
// False False
//  int False
//  int False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
extern "C" void Init__9dCcD_SttsFiiP10fopAc_ac_c();
// False False
extern "C" void __ct__12dCcD_GObjInfFv();
// False False
extern "C" void ChkTgHit__12dCcD_GObjInfFv();
// False False
extern "C" void GetTgHitObj__12dCcD_GObjInfFv();
// False False
//  dCcD_SrcSph const& False
// 	 dCcD_SrcSph const False
// 		 dCcD_SrcSph False
extern "C" void Set__8dCcD_SphFRC11dCcD_SrcSph();
// False False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
//  dCcU_AtInfo* False
// 	 dCcU_AtInfo False
extern "C" void cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo();
// False False
//  int False
//  cXyz* False
// 	 cXyz False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c();
// False False
//  J3DModelData* False
// 	 J3DModelData False
//  dKy_tevstr_c* False
// 	 dKy_tevstr_c False
extern "C" void setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c();
// False False
extern "C" void dKy_darkworld_check__Fv();
// False False
//  cCcD_Obj* False
// 	 cCcD_Obj False
extern "C" void Set__4cCcSFP8cCcD_Obj();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void __mi__4cXyzCFRC3Vec();
// False False
//  f32 False
//  f32 False
extern "C" void cM_atan2s__Fff();
// False False
extern "C" void cM_rnd__Fv();
// False False
//  f32 False
extern "C" void cM_rndF__Ff();
// False False
//  f32 False
extern "C" void cM_rndFX__Ff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void SetPos__11cBgS_GndChkFPC3Vec();
// False False
extern "C" void __dt__13cBgS_PolyInfoFv();
// False False
extern "C" void __dt__8cM3dGCirFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetC__8cM3dGSphFRC4cXyz();
// False False
//  f32 False
extern "C" void SetR__8cM3dGSphFf();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void cLib_addCalc2__FPffff();
// False False
//  s16* False
// 	 s16 False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
extern "C" void cLib_addCalcAngleS__FPsssss();
// False False
//  f32* False
// 	 f32 False
//  f32 False
//  f32 False
extern "C" void cLib_chaseF__FPfff();
// False False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
//  Vec const* False
// 	 Vec const False
// 		 Vec False
extern "C" void cLib_targetAngleY__FPC3VecPC3Vec();
// False True
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
//  JGeometry::TVec3<f32>* False
// 	 JGeometry::TVec3<f32> True
// 		 f32 False
extern "C" void func_80280808();
// False False
extern "C" void __ct__15Z2CreatureEnemyFv();
// False False
//  Vec* False
// 	 Vec False
//  Vec* False
// 	 Vec False
//  u8 False
//  u8 False
extern "C" void init__15Z2CreatureEnemyFP3VecP3VecUcUc();
// False False
//  bool False
extern "C" void setLinkSearch__15Z2CreatureEnemyFb();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void setEnemyName__15Z2CreatureEnemyFPCc();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  f32 False
extern "C" void checkPass__12J3DFrameCtrlFf();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSVECAdd();
// False False
extern "C" void PSVECSquareMag();
// False False
extern "C" void PSVECSquareDistance();
// False False
extern "C" void _savegpr_15();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_15();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
extern "C" extern void* g_fopAc_Method[8];
extern "C" extern void* g_fpcLf_Method[5 + 1 /* padding */];
extern "C" extern void* __vt__18dBgS_ObjGndChk_All[12];
extern "C" extern void* __vt__8dCcD_Sph[36];
extern "C" extern void* __vt__9dCcD_Stts[11];
extern "C" extern void* __vt__12cCcD_SphAttr[25];
extern "C" extern void* __vt__14cCcD_ShapeAttr[22];
extern "C" extern void* __vt__9cCcD_Stts[8];
extern "C" extern u8 now__14mDoMtx_stack_c[48];
extern "C" extern u8 mWaterCheck__11fopAcM_wt_c[84 + 4 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 mSimpleTexObj__21dDlst_shadowControl_c[32];
extern "C" extern u8 g_env_light[4880];
extern "C" extern u8 j3dSys[284];
extern "C" extern u8 mCurrentMtx__6J3DSys[48];
extern "C" extern u8 sincosTable___5JMath[65536];
extern "C" extern u32 __float_nan;
extern "C" extern f32 mWaterY__11fopAcM_wt_c[1 + 1 /* padding */];
extern "C" extern u8 m_midnaActor__9daPy_py_c[4];
// False False
extern "C" void __register_global_object();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 807C1FB8-807C1FBC 0004+00 s=19 e=0 z=0  None .rodata    @3908                                                        */
SECTION_RODATA static u32 const lit_3908 = 0x42C80000;

/* 807C20C8-807C20D4 000C+00 s=1 e=0 z=0  None .data      cNullVec__6Z2Calc                                            */
SECTION_DATA static u8 cNullVec__6Z2Calc[12] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807C20D4-807C20E8 0004+10 s=0 e=0 z=0  None .data      @1787                                                        */
SECTION_DATA u32 lit_1787[1 + 4 /* padding */] = {
	0x02000201,
	/* padding */
	0x40080000, 0x00000000, 0x3FE00000, 0x00000000,
};

/* 807C20E8-807C20F0 0008+00 s=0 e=0 z=0  None .data      e_prim$3787                                                  */
SECTION_DATA u8 data_807C20E8[8] = {
	0xFF, 0x78, 0x00, 0x00, 0xFF, 0x64, 0x78, 0x00,
};

/* 807C20F0-807C20F8 0008+00 s=0 e=0 z=0  None .data      e_env$3788                                                   */
SECTION_DATA u8 data_807C20F0[8] = {
	0x5A, 0x2D, 0x2D, 0x00, 0x3C, 0x1E, 0x1E, 0x00,
};

/* 807C20F8-807C2100 0006+02 s=0 e=0 z=0  None .data      eff_id$3796                                                  */
SECTION_DATA u8 data_807C20F8[6 + 2 /* padding */] = {
	0x02, 0x9D, 0x02, 0x9E, 0x02, 0x9F,
	/* padding */
	0x00, 0x00,
};

/* 807C2100-807C2140 0040+00 s=1 e=0 z=0  None .data      cc_tt_src__22@unnamed@d_a_e_tt_cpp@                          */
SECTION_DATA static u8 data_807C2100[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
	0xD8, 0xFB, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x75, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 807C2140-807C2180 0040+00 s=0 e=0 z=0  None .data      cc_tt_eye_src__22@unnamed@d_a_e_tt_cpp@                      */
SECTION_DATA u8 data_807C2140[64] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x20, 0x00, 0x00,
};

/* 807C2180-807C21B8 0038+00 s=1 e=0 z=0  None .data      @3973                                                        */
SECTION_DATA static void* lit_3973[14] = {
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0x60),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0x74),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0x88),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0xAC),
	(void*)(((char*)ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)+0x9C),
};

/* 807C21B8-807C21C8 0010+00 s=1 e=0 z=0  None .data      foot_jnt_no$4152                                             */
SECTION_DATA static u8 foot_jnt_no_4152[16] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x11,
};

/* 807C21C8-807C21D0 0008+00 s=1 e=0 z=0  None .data      w_eff_id$4272                                                */
SECTION_DATA static u8 w_eff_id_4272[8] = {
	0x01, 0xB8, 0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
};

/* 807C21D0-807C21D8 0006+02 s=1 e=0 z=0  None .data      w_eff_id$4305                                                */
SECTION_DATA static u8 w_eff_id_4305[6 + 2 /* padding */] = {
	0x01, 0xB9, 0x01, 0xBA, 0x01, 0xBB,
	/* padding */
	0x00, 0x00,
};

/* 807C21D8-807C21E8 0010+00 s=1 e=0 z=0  None .data      foot_jnt_no$4306                                             */
SECTION_DATA static u8 foot_jnt_no_4306[16] = {
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x11,
};

/* 807C21E8-807C220C 0024+00 s=1 e=0 z=0  None .data      @4800                                                        */
SECTION_DATA static void* lit_4800[9] = {
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x44),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x374),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x5D0),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x5D0),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x5D0),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x434),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x4DC),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x530),
	(void*)(((char*)executeWait__8daE_TT_cFv)+0x56C),
};

/* 807C220C-807C2238 002C+00 s=1 e=0 z=0  None .data      @4941                                                        */
SECTION_DATA static void* lit_4941[11] = {
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x60),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x90),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x59C),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x59C),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x59C),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x36C),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x4A4),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x4F8),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x538),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x59C),
	(void*)(((char*)executeChase__8daE_TT_cFv)+0x68),
};

/* 807C2238-807C2254 001C+00 s=1 e=0 z=0  None .data      @5104                                                        */
SECTION_DATA static void* lit_5104[7] = {
	(void*)(((char*)executeDamage__8daE_TT_cFv)+0x44),
	(void*)(((char*)executeDamage__8daE_TT_cFv)+0x90),
	(void*)(((char*)executeDamage__8daE_TT_cFv)+0xDC),
	(void*)(((char*)executeDamage__8daE_TT_cFv)+0x128),
	(void*)(((char*)executeDamage__8daE_TT_cFv)+0x174),
	(void*)(((char*)executeDamage__8daE_TT_cFv)+0x1C0),
	(void*)(((char*)executeDamage__8daE_TT_cFv)+0x1CC),
};

/* 807C2254-807C2290 003C+00 s=1 e=0 z=0  None .data      @5450                                                        */
SECTION_DATA static void* lit_5450[15] = {
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x70),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x94),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x6D8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x208),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x598),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x5E8),
	(void*)(((char*)executeFirstAttack__8daE_TT_cFv)+0x644),
};

/* 807C2290-807C22AC 001C+00 s=1 e=0 z=0  None .data      @5482                                                        */
SECTION_DATA static void* lit_5482[7] = {
	(void*)(((char*)action__8daE_TT_cFv)+0x74),
	(void*)(((char*)action__8daE_TT_cFv)+0x80),
	(void*)(((char*)action__8daE_TT_cFv)+0x90),
	(void*)(((char*)action__8daE_TT_cFv)+0xA0),
	(void*)(((char*)action__8daE_TT_cFv)+0xAC),
	(void*)(((char*)action__8daE_TT_cFv)+0xB8),
	(void*)(((char*)action__8daE_TT_cFv)+0xC4),
};

/* 807C22AC-807C22CC 0020+00 s=1 e=0 z=0  None .data      l_daE_TT_Method                                              */
SECTION_DATA static void* l_daE_TT_Method[8] = {
	(void*)daE_TT_Create__FP8daE_TT_c,
	(void*)daE_TT_Delete__FP8daE_TT_c,
	(void*)daE_TT_Execute__FP8daE_TT_c,
	(void*)daE_TT_IsDelete__FP8daE_TT_c,
	(void*)daE_TT_Draw__FP8daE_TT_c,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 807C22CC-807C22FC 0030+00 s=0 e=0 z=1  None .data      g_profile_E_TT                                               */
SECTION_DATA void* g_profile_E_TT[12] = {
	(void*)0xFFFFFFFD,
	(void*)0x0007FFFD,
	(void*)0x02060000,
	(void*)&g_fpcLf_Method,
	(void*)0x00000AD0,
	(void*)NULL,
	(void*)NULL,
	(void*)&g_fopAc_Method,
	(void*)0x00D00000,
	(void*)&l_daE_TT_Method,
	(void*)0x00040100,
	(void*)0x020E0000,
};

/* 807C22FC-807C2308 000C+00 s=1 e=0 z=0  None .data      __vt__12dBgS_AcchCir                                         */
SECTION_DATA void* __vt__12dBgS_AcchCir[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_AcchCirFv,
};

/* 807C2308-807C2314 000C+00 s=2 e=0 z=0  None .data      __vt__10cCcD_GStts                                           */
SECTION_DATA void* __vt__10cCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10cCcD_GSttsFv,
};

/* 807C2314-807C2320 000C+00 s=1 e=0 z=0  None .data      __vt__10dCcD_GStts                                           */
SECTION_DATA void* __vt__10dCcD_GStts[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10dCcD_GSttsFv,
};

/* 807C2320-807C232C 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGSph                                              */
SECTION_DATA void* __vt__8cM3dGSph[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGSphFv,
};

/* 807C232C-807C2338 000C+00 s=2 e=0 z=0  None .data      __vt__8cM3dGAab                                              */
SECTION_DATA void* __vt__8cM3dGAab[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGAabFv,
};

/* 807C2338-807C235C 0024+00 s=2 e=0 z=0  None .data      __vt__12dBgS_ObjAcch                                         */
SECTION_DATA void* __vt__12dBgS_ObjAcch[9] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12dBgS_ObjAcchFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807C1B4C,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807C1B44,
};

/* 807C235C-807C238C 0030+00 s=2 e=0 z=0  None .data      __vt__14dBgS_ObjGndChk                                       */
SECTION_DATA void* __vt__14dBgS_ObjGndChk[12] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14dBgS_ObjGndChkFv,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807C1B2C,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807C1B3C,
	(void*)NULL,
	(void*)NULL,
	(void*)func_807C1B34,
};

/* 807C238C-807C2398 000C+00 s=2 e=0 z=0  None .data      __vt__12daE_TT_HIO_c                                         */
SECTION_DATA void* __vt__12daE_TT_HIO_c[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12daE_TT_HIO_cFv,
};

/* 807BD7AC-807BD7EC 0040+00 s=1 e=0 z=0  None .text      __ct__12daE_TT_HIO_cFv                                       */
//	807BD7AC: 807C1FB8 (lit_3908)
//	807BD7B0: 807C1FB8 (lit_3908)
//	807BD7B4: 807C238C (__vt__12daE_TT_HIO_c)
//	807BD7B8: 807C238C (__vt__12daE_TT_HIO_c)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_TT_HIO_c::daE_TT_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__ct__12daE_TT_HIO_cFv.s"
}
#pragma pop


/* 807BD7EC-807BD8E0 00F4+00 s=2 e=0 z=0  None .text      ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel                    */
//	807BD7FC: 803621D8 (_savegpr_28)
//	807BD81C: 803DD470 (now__14mDoMtx_stack_c)
//	807BD820: 803DD470 (now__14mDoMtx_stack_c)
//	807BD824: 803464B0 (PSMTXCopy)
//	807BD834: 807C2180 (lit_3973)
//	807BD838: 807C2180 (lit_3973)
//	807BD84C: 803DD470 (now__14mDoMtx_stack_c)
//	807BD850: 803DD470 (now__14mDoMtx_stack_c)
//	807BD858: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	807BD860: 803DD470 (now__14mDoMtx_stack_c)
//	807BD864: 803DD470 (now__14mDoMtx_stack_c)
//	807BD86C: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	807BD874: 803DD470 (now__14mDoMtx_stack_c)
//	807BD878: 803DD470 (now__14mDoMtx_stack_c)
//	807BD880: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	807BD888: 803DD470 (now__14mDoMtx_stack_c)
//	807BD88C: 803DD470 (now__14mDoMtx_stack_c)
//	807BD894: 8000C4CC (mDoMtx_ZrotM__FPA4_fs)
//	807BD898: 803DD470 (now__14mDoMtx_stack_c)
//	807BD89C: 803DD470 (now__14mDoMtx_stack_c)
//	807BD8AC: 803464B0 (PSMTXCopy)
//	807BD8B0: 803DD470 (now__14mDoMtx_stack_c)
//	807BD8B4: 803DD470 (now__14mDoMtx_stack_c)
//	807BD8B8: 80434BE4 (mCurrentMtx__6J3DSys)
//	807BD8BC: 80434BE4 (mCurrentMtx__6J3DSys)
//	807BD8C0: 803464B0 (PSMTXCopy)
//	807BD8CC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  J3DModel* False
// 	 J3DModel False
asm void daE_TT_c::ctrlJoint(J3DJoint* param_0, J3DModel* param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel.s"
}
#pragma pop


/* 807BD8E0-807BD92C 004C+00 s=1 e=0 z=0  None .text      JointCallBack__8daE_TT_cFP8J3DJointi                         */
//	807BD8F8: 80434AC8 (j3dSys)
//	807BD8FC: 80434AC8 (j3dSys)
//	807BD914: 807BD7EC (ctrlJoint__8daE_TT_cFP8J3DJointP8J3DModel)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DJoint* False
// 	 J3DJoint False
//  int False
asm void daE_TT_c::JointCallBack(J3DJoint* param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/JointCallBack__8daE_TT_cFP8J3DJointi.s"
}
#pragma pop


/* 807BD92C-807BDAC0 0194+00 s=1 e=0 z=0  None .text      draw__8daE_TT_cFv                                            */
//	807BD93C: 803621D0 (_savegpr_26)
//	807BD944: 807C1FB8 (lit_3908)
//	807BD948: 807C1FB8 (lit_3908)
//	807BD954: 8042CA54 (g_env_light)
//	807BD958: 8042CA54 (g_env_light)
//	807BD968: 801A37C4 (settingTevStruct__18dScnKy_env_light_cFiP4cXyzP12dKy_tevstr_c)
//	807BD96C: 8042CA54 (g_env_light)
//	807BD970: 8042CA54 (g_env_light)
//	807BD97C: 801A4DA0 (setLightTevColorType_MAJI__18dScnKy_env_light_cFP12J3DModelDataP12dKy_tevstr_c)
//	807BDA44: 800111C0 (entryDL__16mDoExt_McaMorfSOFv)
//	807BDA94: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	807BDA98: 804248D0 (mSimpleTexObj__21dDlst_shadowControl_c)
//	807BDA9C: 8002E910 (dComIfGd_setShadow__FUlScP8J3DModelP4cXyzffffR13cBgS_PolyInfoP12dKy_tevstr_csfP9_GXTexObj)
//	807BDAAC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::draw() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/draw__8daE_TT_cFv.s"
}
#pragma pop


/* 807BDAC0-807BDAE0 0020+00 s=1 e=0 z=0  None .text      daE_TT_Draw__FP8daE_TT_c                                     */
//	807BDACC: 807BD92C (draw__8daE_TT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
asm static void daE_TT_Draw(daE_TT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/daE_TT_Draw__FP8daE_TT_c.s"
}
#pragma pop


/* ############################################################################################## */
/* 807C1FBC-807C1FC0 0004+00 s=1 e=0 z=0  None .rodata    @3909                                                        */
SECTION_RODATA static u8 const lit_3909[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 807C1FC0-807C1FC8 0004+04 s=3 e=0 z=0  None .rodata    @3910                                                        */
SECTION_RODATA static u32 const lit_3910[1 + 1 /* padding */] = {
	0x3F800000,
	/* padding */
	0x00000000,
};

/* 807C1FC8-807C1FD0 0008+00 s=0 e=0 z=0  None .rodata    @3911                                                        */
SECTION_RODATA u8 const lit_3911[8] = {
	0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807C1FD0-807C1FD8 0008+00 s=0 e=0 z=0  None .rodata    @3912                                                        */
SECTION_RODATA u8 const lit_3912[8] = {
	0x40, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807C1FD8-807C1FE0 0008+00 s=0 e=0 z=0  None .rodata    @3913                                                        */
SECTION_RODATA u8 const lit_3913[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807C1FE0-807C1FE4 0004+00 s=0 e=0 z=0  None .rodata    @3914                                                        */
SECTION_RODATA u32 const lit_3914 = 0x3C23D70A;

/* 807C1FE4-807C1FE8 0004+00 s=2 e=0 z=0  None .rodata    @3929                                                        */
SECTION_RODATA static u32 const lit_3929 = 0x3F19999A;

/* 807C1FE8-807C1FEC 0004+00 s=0 e=0 z=0  None .rodata    @3930                                                        */
SECTION_RODATA u32 const lit_3930 = 0x44A28000;

/* 807C1FEC-807C1FF0 0004+00 s=0 e=0 z=0  None .rodata    @3931                                                        */
SECTION_RODATA u32 const lit_3931 = 0x43C80000;

/* 807C1FF0-807C1FF4 0004+00 s=0 e=0 z=0  None .rodata    @3932                                                        */
SECTION_RODATA u32 const lit_3932 = 0x46000000;

/* 807C1FF4-807C1FF8 0004+00 s=0 e=0 z=0  None .rodata    @4017                                                        */
SECTION_RODATA u32 const lit_4017 = 0x442F0000;

/* 807C1FF8-807C1FFC 0004+00 s=1 e=0 z=0  None .rodata    @4031                                                        */
SECTION_RODATA static u32 const lit_4031 = 0xBF800000;

/* 807C1FFC-807C2000 0004+00 s=0 e=0 z=0  None .rodata    @4041                                                        */
SECTION_RODATA u32 const lit_4041 = 0x41200000;

/* 807C2000-807C2004 0004+00 s=0 e=0 z=0  None .rodata    @4042                                                        */
SECTION_RODATA u32 const lit_4042 = 0x3E4CCCCD;

/* 807C2004-807C2008 0004+00 s=0 e=0 z=0  None .rodata    @4145                                                        */
SECTION_RODATA u32 const lit_4145 = 0x43FA0000;

/* 807C2008-807C200C 0004+00 s=0 e=0 z=0  None .rodata    @4146                                                        */
SECTION_RODATA u32 const lit_4146 = 0xCE6E6B28;

/* 807C200C-807C2010 0004+00 s=0 e=0 z=0  None .rodata    @4258                                                        */
SECTION_RODATA u32 const lit_4258 = 0x3F400000;

/* 807C2010-807C2014 0004+00 s=0 e=0 z=0  None .rodata    @4259                                                        */
SECTION_RODATA u32 const lit_4259 = 0xC1A00000;

/* 807C2014-807C2018 0004+00 s=0 e=0 z=0  None .rodata    @4260                                                        */
SECTION_RODATA u32 const lit_4260 = 0x42B40000;

/* 807C2018-807C201C 0004+00 s=0 e=0 z=0  None .rodata    @4261                                                        */
SECTION_RODATA u32 const lit_4261 = 0x41F00000;

/* 807C201C-807C2020 0004+00 s=0 e=0 z=0  None .rodata    @4262                                                        */
SECTION_RODATA u32 const lit_4262 = 0x42480000;

/* 807C2020-807C2024 0004+00 s=0 e=0 z=0  None .rodata    @4263                                                        */
SECTION_RODATA u32 const lit_4263 = 0x42200000;

/* 807C2024-807C2028 0004+00 s=0 e=0 z=0  None .rodata    @4264                                                        */
SECTION_RODATA u32 const lit_4264 = 0xC1200000;

/* 807C2028-807C202C 0004+00 s=1 e=0 z=0  None .rodata    @4297                                                        */
SECTION_RODATA static u32 const lit_4297 = 0x3F99999A;

/* 807C202C-807C2030 0004+00 s=0 e=0 z=0  None .rodata    @4394                                                        */
SECTION_RODATA u32 const lit_4394 = 0x42F00000;

/* 807C2030-807C2034 0004+00 s=0 e=0 z=0  None .rodata    @4395                                                        */
SECTION_RODATA u32 const lit_4395 = 0x41A00000;

/* 807C2034-807C2038 0004+00 s=0 e=0 z=0  None .rodata    @4633                                                        */
SECTION_RODATA u32 const lit_4633 = 0x43960000;

/* 807C2038-807C203C 0004+00 s=0 e=0 z=0  None .rodata    @4790                                                        */
SECTION_RODATA u32 const lit_4790 = 0xC0A00000;

/* 807C203C-807C2040 0004+00 s=0 e=0 z=0  None .rodata    @4791                                                        */
SECTION_RODATA u32 const lit_4791 = 0x40400000;

/* 807C2040-807C2044 0004+00 s=0 e=0 z=0  None .rodata    @4792                                                        */
SECTION_RODATA u32 const lit_4792 = 0x43480000;

/* 807C2044-807C2048 0004+00 s=0 e=0 z=0  None .rodata    @4793                                                        */
SECTION_RODATA u32 const lit_4793 = 0x3E99999A;

/* 807C2048-807C204C 0004+00 s=0 e=0 z=0  None .rodata    @4794                                                        */
SECTION_RODATA u32 const lit_4794 = 0x46400000;

/* 807C204C-807C2050 0004+00 s=0 e=0 z=0  None .rodata    @4795                                                        */
SECTION_RODATA u32 const lit_4795 = 0x40800000;

/* 807C2050-807C2054 0004+00 s=1 e=0 z=0  None .rodata    @4796                                                        */
SECTION_RODATA static u32 const lit_4796 = 0x41700000;

/* 807C2054-807C2058 0004+00 s=0 e=0 z=0  None .rodata    @4797                                                        */
SECTION_RODATA u32 const lit_4797 = 0x420C0000;

/* 807C2058-807C205C 0004+00 s=0 e=0 z=0  None .rodata    @4798                                                        */
SECTION_RODATA u32 const lit_4798 = 0x40A00000;

/* 807C205C-807C2060 0004+00 s=0 e=0 z=0  None .rodata    @4799                                                        */
SECTION_RODATA u32 const lit_4799 = 0x3FC00000;

/* 807C2060-807C2068 0004+04 s=0 e=0 z=0  None .rodata    @4940                                                        */
SECTION_RODATA u32 const lit_4940[1 + 1 /* padding */] = {
	0x437A0000,
	/* padding */
	0x00000000,
};

/* 807C2068-807C2070 0008+00 s=0 e=0 z=0  None .rodata    @4943                                                        */
SECTION_RODATA u8 const lit_4943[8] = {
	0x43, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
};

/* 807C2070-807C2074 0004+00 s=0 e=0 z=0  None .rodata    @5054                                                        */
SECTION_RODATA u32 const lit_5054 = 0x42AA0000;

/* 807C2074-807C2078 0004+00 s=0 e=0 z=0  None .rodata    @5055                                                        */
SECTION_RODATA u32 const lit_5055 = 0x41880000;

/* 807C2078-807C207C 0004+00 s=0 e=0 z=0  None .rodata    @5056                                                        */
SECTION_RODATA u32 const lit_5056 = 0xC0400000;

/* 807C207C-807C2080 0004+00 s=0 e=0 z=0  None .rodata    @5103                                                        */
SECTION_RODATA u32 const lit_5103 = 0x40000000;

/* 807C2080-807C2084 0004+00 s=0 e=0 z=0  None .rodata    @5178                                                        */
SECTION_RODATA u32 const lit_5178 = 0x41900000;

/* 807C2084-807C2088 0004+00 s=0 e=0 z=0  None .rodata    @5179                                                        */
SECTION_RODATA u32 const lit_5179 = 0x3ECCCCCD;

/* 807C2088-807C208C 0004+00 s=0 e=0 z=0  None .rodata    @5218                                                        */
SECTION_RODATA u32 const lit_5218 = 0x44FA0000;

/* 807C208C-807C2090 0004+00 s=0 e=0 z=0  None .rodata    @5447                                                        */
SECTION_RODATA u32 const lit_5447 = 0x42820000;

/* 807C2090-807C2094 0004+00 s=0 e=0 z=0  None .rodata    @5448                                                        */
SECTION_RODATA u32 const lit_5448 = 0x41500000;

/* 807C2094-807C2098 0004+00 s=0 e=0 z=0  None .rodata    @5449                                                        */
SECTION_RODATA u32 const lit_5449 = 0x42A00000;

/* 807C2098-807C209C 0004+00 s=1 e=0 z=0  None .rodata    @5507                                                        */
SECTION_RODATA static u32 const lit_5507 = 0x453B8000;

/* 807C209C-807C20A0 0004+00 s=0 e=0 z=0  None .rodata    @5546                                                        */
SECTION_RODATA u32 const lit_5546 = 0x425C0000;

/* 807C20A0-807C20A8 0004+04 s=0 e=0 z=0  None .rodata    @5789                                                        */
SECTION_RODATA u32 const lit_5789[1 + 1 /* padding */] = {
	0xC3480000,
	/* padding */
	0x00000000,
};

/* 807C20A8-807C20B0 0008+00 s=0 e=0 z=0  None .rodata    @5791                                                        */
SECTION_RODATA u8 const lit_5791[8] = {
	0x43, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 807C20B0-807C20C6 0016+00 s=4 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_807C20B0 = "E_TT";
SECTION_DEAD char const* const stringBase_807C20B5 = "E_TTR";
SECTION_DEAD char const* const stringBase_807C20BB = "E_TTB";
SECTION_DEAD char const* const stringBase_807C20C1 = "E_tt";
#pragma pop

/* 807BDAE0-807BDB84 00A4+00 s=7 e=0 z=0  None .text      setBck__8daE_TT_cFiUcff                                      */
//	807BDB14: 807C20B0 (stringBase0)
//	807BDB18: 807C20B0 (stringBase0)
//	807BDB1C: 804061C0 (g_dComIfG_gameInfo)
//	807BDB20: 804061C0 (g_dComIfG_gameInfo)
//	807BDB30: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807BDB48: 807C1FBC (lit_3909)
//	807BDB4C: 807C1FBC (lit_3909)
//	807BDB50: 807C1FF8 (lit_4031)
//	807BDB54: 807C1FF8 (lit_4031)
//	807BDB58: 80010E70 (setAnm__16mDoExt_McaMorfSOFP15J3DAnmTransformiffff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  u8 False
//  f32 False
//  f32 False
asm void daE_TT_c::setBck(int param_0, u8 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setBck__8daE_TT_cFiUcff.s"
}
#pragma pop


/* 807BDB84-807BDBE4 0060+00 s=4 e=0 z=0  None .text      calcHitGroundSpeed__8daE_TT_cFv                              */
//	807BDB90: 807C1FB8 (lit_3908)
//	807BDB94: 807C1FB8 (lit_3908)
//	807BDBD0: 80270740 (cLib_chaseF__FPfff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::calcHitGroundSpeed() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/calcHitGroundSpeed__8daE_TT_cFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 807C23A0-807C23A4 0001+03 s=5 e=0 z=0  None .bss       @1109                                                        */
static u8 lit_1109[1 + 3 /* padding */];

/* 807C23A4-807C23A8 0001+03 s=0 e=0 z=0  None .bss       @1107                                                        */
u8 lit_1107[1 + 3 /* padding */];

/* 807C23A8-807C23AC 0001+03 s=0 e=0 z=0  None .bss       @1105                                                        */
u8 lit_1105[1 + 3 /* padding */];

/* 807C23AC-807C23B0 0001+03 s=0 e=0 z=0  None .bss       @1104                                                        */
u8 lit_1104[1 + 3 /* padding */];

/* 807C23B0-807C23B4 0001+03 s=0 e=0 z=0  None .bss       @1099                                                        */
u8 lit_1099[1 + 3 /* padding */];

/* 807C23B4-807C23B8 0001+03 s=0 e=0 z=0  None .bss       @1097                                                        */
u8 lit_1097[1 + 3 /* padding */];

/* 807C23B8-807C23BC 0001+03 s=0 e=0 z=0  None .bss       @1095                                                        */
u8 lit_1095[1 + 3 /* padding */];

/* 807C23BC-807C23C0 0001+03 s=0 e=0 z=0  None .bss       @1094                                                        */
u8 lit_1094[1 + 3 /* padding */];

/* 807C23C0-807C23C4 0001+03 s=0 e=0 z=0  None .bss       @1057                                                        */
u8 lit_1057[1 + 3 /* padding */];

/* 807C23C4-807C23C8 0001+03 s=0 e=0 z=0  None .bss       @1055                                                        */
u8 lit_1055[1 + 3 /* padding */];

/* 807C23C8-807C23CC 0001+03 s=0 e=0 z=0  None .bss       @1053                                                        */
u8 lit_1053[1 + 3 /* padding */];

/* 807C23CC-807C23D0 0001+03 s=0 e=0 z=0  None .bss       @1052                                                        */
u8 lit_1052[1 + 3 /* padding */];

/* 807C23D0-807C23D4 0001+03 s=0 e=0 z=0  None .bss       @1014                                                        */
u8 lit_1014[1 + 3 /* padding */];

/* 807C23D4-807C23D8 0001+03 s=0 e=0 z=0  None .bss       @1012                                                        */
u8 lit_1012[1 + 3 /* padding */];

/* 807C23D8-807C23DC 0001+03 s=0 e=0 z=0  None .bss       @1010                                                        */
u8 lit_1010[1 + 3 /* padding */];

/* 807C23DC-807C23E0 0004+00 s=2 e=0 z=0  None .bss       None                                                         */
static u8 struct_807C23DC[4];

/* 807C23E0-807C23EC 000C+00 s=1 e=0 z=0  None .bss       @3924                                                        */
static u8 lit_3924[12];

/* 807C23EC-807C2404 0018+00 s=7 e=0 z=0  None .bss       l_HIO                                                        */
static u8 l_HIO[24];

/* 807C2404-807C2408 0004+00 s=4 e=0 z=0  None .bss       m_attack_tt                                                  */
static u8 m_attack_tt[4];

/* 807BDBE4-807BDC10 002C+00 s=8 e=0 z=0  None .text      setActionMode__8daE_TT_cFii                                  */
//	807BDBE4: 807C2404 (m_attack_tt)
//	807BDBE8: 807C2404 (m_attack_tt)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void daE_TT_c::setActionMode(int param_0, int param_1) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setActionMode__8daE_TT_cFii.s"
}
#pragma pop


/* 807BDC10-807BDC50 0040+00 s=1 e=0 z=0  None .text      getCutType__8daE_TT_cFv                                      */
//	807BDC10: 804061C0 (g_dComIfG_gameInfo)
//	807BDC14: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::getCutType() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/getCutType__8daE_TT_cFv.s"
}
#pragma pop


/* 807BDC50-807BDE5C 020C+00 s=1 e=0 z=0  None .text      damage_check__8daE_TT_cFv                                    */
//	807BDC60: 803621DC (_savegpr_29)
//	807BDC78: 80083830 (Move__10dCcD_GSttsFv)
//	807BDC80: 80084460 (ChkTgHit__12dCcD_GObjInfFv)
//	807BDC90: 800844F8 (GetTgHitObj__12dCcD_GObjInfFv)
//	807BDCE8: 804061C0 (g_dComIfG_gameInfo)
//	807BDCEC: 804061C0 (g_dComIfG_gameInfo)
//	807BDD34: 807BDC10 (getCutType__8daE_TT_cFv)
//	807BDDBC: 80087C04 (cc_at_check__FP10fopAc_ac_cP11dCcU_AtInfo)
//	807BDE10: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BDE30: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BDE40: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BDE48: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::damage_check() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/damage_check__8daE_TT_cFv.s"
}
#pragma pop


/* 807BDE5C-807BDF60 0104+00 s=1 e=0 z=0  None .text      checkWaterSurface__8daE_TT_cFv                               */
//	807BDE74: 803621DC (_savegpr_29)
//	807BDE7C: 807C1FB8 (lit_3908)
//	807BDE80: 807C1FB8 (lit_3908)
//	807BDED0: 80267D0C (SetPos__11cBgS_GndChkFPC3Vec)
//	807BDED4: 804061C0 (g_dComIfG_gameInfo)
//	807BDED8: 804061C0 (g_dComIfG_gameInfo)
//	807BDEE8: 800744A0 (GroundCross__4cBgSFP11cBgS_GndChk)
//	807BDF04: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	807BDF4C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::checkWaterSurface() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/checkWaterSurface__8daE_TT_cFv.s"
}
#pragma pop


/* 807BDF60-807BE2A8 0348+00 s=1 e=0 z=0  None .text      checkFootGround__8daE_TT_cFv                                 */
//	807BDF80: 803621B4 (_savegpr_19)
//	807BDF88: 807C23A0 (lit_1109)
//	807BDF8C: 807C23A0 (lit_1109)
//	807BDF90: 807C1FB8 (lit_3908)
//	807BDF94: 807C1FB8 (lit_3908)
//	807BDFA8: 80077C68 (__ct__11dBgS_LinChkFv)
//	807BDFCC: 807C1F68 (__dt__4cXyzFv)
//	807BDFD0: 807C1F68 (__dt__4cXyzFv)
//	807BDFD8: 807BD738 (__register_global_object)
//	807BDFF0: 803DD470 (now__14mDoMtx_stack_c)
//	807BDFF4: 803DD470 (now__14mDoMtx_stack_c)
//	807BDFF8: 804061C0 (g_dComIfG_gameInfo)
//	807BDFFC: 804061C0 (g_dComIfG_gameInfo)
//	807BE00C: 807C21B8 (foot_jnt_no_4152)
//	807BE010: 807C21B8 (foot_jnt_no_4152)
//	807BE044: 803464B0 (PSMTXCopy)
//	807BE054: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807BE07C: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807BE0A4: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807BE0E4: 8001DD84 (waterCheck__11fopAcM_wt_cFPC4cXyz)
//	807BE0F0: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	807BE0F4: 80450CD8 (mWaterY__11fopAcM_wt_c)
//	807BE144: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	807BE150: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	807BE1A4: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	807BE1A8: 803F1D80 (mWaterCheck__11fopAcM_wt_c)
//	807BE1BC: 8004D6A4 (setPoly__13dPa_control_cFUlUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	807BE1D0: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807BE22C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807BE24C: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807BE27C: 80077CDC (__dt__11dBgS_LinChkFv)
//	807BE294: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::checkFootGround() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/checkFootGround__8daE_TT_cFv.s"
}
#pragma pop


/* 807BE2A8-807BE438 0190+00 s=1 e=0 z=0  None .text      setBodyLandEffect__8daE_TT_cFv                               */
//	807BE2B8: 803621C0 (_savegpr_22)
//	807BE2C0: 807C23A0 (lit_1109)
//	807BE2C4: 807C23A0 (lit_1109)
//	807BE2D4: 807C2028 (lit_4297)
//	807BE2D8: 807C2028 (lit_4297)
//	807BE2EC: 807C1F68 (__dt__4cXyzFv)
//	807BE2F0: 807C1F68 (__dt__4cXyzFv)
//	807BE2F8: 807BD738 (__register_global_object)
//	807BE318: 804061C0 (g_dComIfG_gameInfo)
//	807BE31C: 804061C0 (g_dComIfG_gameInfo)
//	807BE320: 807C21C8 (w_eff_id_4272)
//	807BE324: 807C21C8 (w_eff_id_4272)
//	807BE364: 8004D068 (setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	807BE3C8: 804061C0 (g_dComIfG_gameInfo)
//	807BE3CC: 804061C0 (g_dComIfG_gameInfo)
//	807BE3F0: 8004D068 (setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	807BE424: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::setBodyLandEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setBodyLandEffect__8daE_TT_cFv.s"
}
#pragma pop


/* 807BE438-807BE708 02D0+00 s=4 e=0 z=0  None .text      setWaterEffect__8daE_TT_cFv                                  */
//	807BE448: 803621A4 (_savegpr_15)
//	807BE450: 807C23A0 (lit_1109)
//	807BE454: 807C23A0 (lit_1109)
//	807BE458: 807C1FB8 (lit_3908)
//	807BE45C: 807C1FB8 (lit_3908)
//	807BE480: 807C1F68 (__dt__4cXyzFv)
//	807BE484: 807C1F68 (__dt__4cXyzFv)
//	807BE48C: 807BD738 (__register_global_object)
//	807BE49C: 80077E78 (__ct__21dBgS_CamLinChk_NorWtrFv)
//	807BE4A8: 803DD470 (now__14mDoMtx_stack_c)
//	807BE4AC: 803DD470 (now__14mDoMtx_stack_c)
//	807BE4B0: 804061C0 (g_dComIfG_gameInfo)
//	807BE4B4: 804061C0 (g_dComIfG_gameInfo)
//	807BE4C0: 807C21D8 (foot_jnt_no_4306)
//	807BE4C4: 807C21D8 (foot_jnt_no_4306)
//	807BE4E8: 803464B0 (PSMTXCopy)
//	807BE4F8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807BE520: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807BE54C: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	807BE558: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	807BE56C: 80074E50 (GetPolyAtt0__4dBgSFRC13cBgS_PolyInfo)
//	807BE5B4: 807C21D0 (w_eff_id_4305)
//	807BE5B8: 807C21D0 (w_eff_id_4305)
//	807BE5F8: 8004D068 (setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	807BE6B0: 8004D068 (setPoly__13dPa_control_cFUsR13cBgS_PolyInfoPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyziP18dPa_levelEcallBackScPC4cXyz)
//	807BE6EC: 80077EE4 (__dt__21dBgS_CamLinChk_NorWtrFv)
//	807BE6F4: 803621F0 (_restgpr_15)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::setWaterEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setWaterEffect__8daE_TT_cFv.s"
}
#pragma pop


/* 807BE708-807BE99C 0294+00 s=1 e=0 z=0  None .text      setDeathEyeEffect__8daE_TT_cFv                               */
//	807BE718: 803621DC (_savegpr_29)
//	807BE720: 807C23A0 (lit_1109)
//	807BE724: 807C23A0 (lit_1109)
//	807BE734: 807C1FE4 (lit_3929)
//	807BE738: 807C1FE4 (lit_3929)
//	807BE74C: 807C1F68 (__dt__4cXyzFv)
//	807BE750: 807C1F68 (__dt__4cXyzFv)
//	807BE758: 807BD738 (__register_global_object)
//	807BE770: 804061C0 (g_dComIfG_gameInfo)
//	807BE774: 804061C0 (g_dComIfG_gameInfo)
//	807BE7C0: 807C1FC0 (lit_3910)
//	807BE7C4: 807C1FC0 (lit_3910)
//	807BE7C8: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807BE818: 807C1FC0 (lit_3910)
//	807BE81C: 807C1FC0 (lit_3910)
//	807BE820: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807BE82C: 804061C0 (g_dComIfG_gameInfo)
//	807BE830: 804061C0 (g_dComIfG_gameInfo)
//	807BE87C: 807C1FC0 (lit_3910)
//	807BE880: 807C1FC0 (lit_3910)
//	807BE884: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807BE8D4: 807C1FC0 (lit_3910)
//	807BE8D8: 807C1FC0 (lit_3910)
//	807BE8DC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807BE8E4: 804061C0 (g_dComIfG_gameInfo)
//	807BE8E8: 804061C0 (g_dComIfG_gameInfo)
//	807BE8F8: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807BE924: 80280808 (func_80280808)
//	807BE944: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807BE970: 80280808 (func_80280808)
//	807BE988: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::setDeathEyeEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setDeathEyeEffect__8daE_TT_cFv.s"
}
#pragma pop


/* 807BE99C-807BEBAC 0210+00 s=1 e=0 z=0  None .text      setDeathFootEffect__8daE_TT_cFv                              */
//	807BE9AC: 803621DC (_savegpr_29)
//	807BE9B4: 807C23A0 (lit_1109)
//	807BE9B8: 807C23A0 (lit_1109)
//	807BE9C8: 807C1FE4 (lit_3929)
//	807BE9CC: 807C1FE4 (lit_3929)
//	807BE9E0: 807C1F68 (__dt__4cXyzFv)
//	807BE9E4: 807C1F68 (__dt__4cXyzFv)
//	807BE9EC: 807BD738 (__register_global_object)
//	807BEA08: 803DD470 (now__14mDoMtx_stack_c)
//	807BEA0C: 803DD470 (now__14mDoMtx_stack_c)
//	807BEA10: 803464B0 (PSMTXCopy)
//	807BEA14: 803DD470 (now__14mDoMtx_stack_c)
//	807BEA18: 803DD470 (now__14mDoMtx_stack_c)
//	807BEA48: 8000CC00 (mDoMtx_MtxToRot__FPA4_CfP5csXyz)
//	807BEA4C: 804061C0 (g_dComIfG_gameInfo)
//	807BEA50: 804061C0 (g_dComIfG_gameInfo)
//	807BEA9C: 807C1FC0 (lit_3910)
//	807BEAA0: 807C1FC0 (lit_3910)
//	807BEAA4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807BEAF4: 807C1FC0 (lit_3910)
//	807BEAF8: 807C1FC0 (lit_3910)
//	807BEAFC: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807BEB10: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807BEB38: 80280808 (func_80280808)
//	807BEB58: 8004B918 (getEmitter__Q213dPa_control_c7level_cFUl)
//	807BEB80: 80280808 (func_80280808)
//	807BEB98: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::setDeathFootEffect() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setDeathFootEffect__8daE_TT_cFv.s"
}
#pragma pop


/* 807BEBAC-807BED70 01C4+00 s=5 e=0 z=0  None .text      checkPlayerSearch__8daE_TT_cFv                               */
//	807BEBBC: 803621DC (_savegpr_29)
//	807BEBC4: 807C1FB8 (lit_3908)
//	807BEBC8: 807C1FB8 (lit_3908)
//	807BEC0C: 8034739C (PSVECSquareDistance)
//	807BEC7C: 80450AE0 (__float_nan)
//	807BEC80: 80450AE0 (__float_nan)
//	807BECEC: 80450AE0 (__float_nan)
//	807BECF0: 80450AE0 (__float_nan)
//	807BED0C: 804061C0 (g_dComIfG_gameInfo)
//	807BED10: 804061C0 (g_dComIfG_gameInfo)
//	807BED18: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807BED20: 807C23EC (l_HIO)
//	807BED24: 807C23EC (l_HIO)
//	807BED40: 8001CDFC (fopAcM_otherBgCheck__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807BED5C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::checkPlayerSearch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/checkPlayerSearch__8daE_TT_cFv.s"
}
#pragma pop


/* 807BED70-807BF358 05E8+00 s=2 e=0 z=0  None .text      executeWait__8daE_TT_cFv                                     */
//	807BED88: 807C1FB8 (lit_3908)
//	807BED8C: 807C1FB8 (lit_3908)
//	807BED9C: 807C21E8 (lit_4800)
//	807BEDA0: 807C21E8 (lit_4800)
//	807BEDCC: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BEE10: 8034739C (PSVECSquareDistance)
//	807BEE80: 80450AE0 (__float_nan)
//	807BEE84: 80450AE0 (__float_nan)
//	807BEEF0: 80450AE0 (__float_nan)
//	807BEEF4: 80450AE0 (__float_nan)
//	807BEF10: 80267954 (cM_rndF__Ff)
//	807BEF30: 8026786C (cM_rnd__Fv)
//	807BEF90: 8034739C (PSVECSquareDistance)
//	807BF000: 80450AE0 (__float_nan)
//	807BF004: 80450AE0 (__float_nan)
//	807BF070: 80450AE0 (__float_nan)
//	807BF074: 80450AE0 (__float_nan)
//	807BF08C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807BF0D0: 8026798C (cM_rndFX__Ff)
//	807BF0F0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807BF144: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807BF178: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF184: 807BEBAC (checkPlayerSearch__8daE_TT_cFv)
//	807BF19C: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BF1B0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807BF22C: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF290: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF2CC: 807BE438 (setWaterEffect__8daE_TT_cFv)
//	807BF2F8: 807BDB84 (calcHitGroundSpeed__8daE_TT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::executeWait() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/executeWait__8daE_TT_cFv.s"
}
#pragma pop


/* 807BF358-807BF914 05BC+00 s=2 e=0 z=0  None .text      executeChase__8daE_TT_cFv                                    */
//	807BF370: 803621DC (_savegpr_29)
//	807BF378: 807C1FB8 (lit_3908)
//	807BF37C: 807C1FB8 (lit_3908)
//	807BF380: 804061C0 (g_dComIfG_gameInfo)
//	807BF384: 804061C0 (g_dComIfG_gameInfo)
//	807BF38C: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807BF3A0: 807C220C (lit_4941)
//	807BF3A4: 807C220C (lit_4941)
//	807BF3DC: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF3F4: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807BF4A0: 8034739C (PSVECSquareDistance)
//	807BF510: 80450AE0 (__float_nan)
//	807BF514: 80450AE0 (__float_nan)
//	807BF580: 80450AE0 (__float_nan)
//	807BF584: 80450AE0 (__float_nan)
//	807BF5A0: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BF5B0: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807BF5C8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807BF5D4: 807C23EC (l_HIO)
//	807BF5D8: 807C23EC (l_HIO)
//	807BF604: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF610: 807BEBAC (checkPlayerSearch__8daE_TT_cFv)
//	807BF628: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BF64C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807BF660: 803650D0 (abs)
//	807BF684: 807C23EC (l_HIO)
//	807BF688: 807C23EC (l_HIO)
//	807BF698: 807C2404 (m_attack_tt)
//	807BF69C: 807C2404 (m_attack_tt)
//	807BF6B4: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BF6B8: 807C2404 (m_attack_tt)
//	807BF6BC: 807C2404 (m_attack_tt)
//	807BF6D0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807BF710: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807BF728: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807BF778: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF788: 807C23EC (l_HIO)
//	807BF78C: 807C23EC (l_HIO)
//	807BF840: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF880: 807BE438 (setWaterEffect__8daE_TT_cFv)
//	807BF8AC: 807BDB84 (calcHitGroundSpeed__8daE_TT_cFv)
//	807BF900: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::executeChase() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/executeChase__8daE_TT_cFv.s"
}
#pragma pop


/* 807BF914-807BFD38 0424+00 s=1 e=0 z=0  None .text      executeAttack__8daE_TT_cFv                                   */
//	807BF92C: 807C1FB8 (lit_3908)
//	807BF930: 807C1FB8 (lit_3908)
//	807BF934: 804061C0 (g_dComIfG_gameInfo)
//	807BF938: 804061C0 (g_dComIfG_gameInfo)
//	807BF9C4: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BF9E4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807BF9FC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807BFA0C: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807BFA88: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BFAD0: 8034739C (PSVECSquareDistance)
//	807BFB40: 80450AE0 (__float_nan)
//	807BFB44: 80450AE0 (__float_nan)
//	807BFBB0: 80450AE0 (__float_nan)
//	807BFBB4: 80450AE0 (__float_nan)
//	807BFC24: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BFC68: 807BE438 (setWaterEffect__8daE_TT_cFv)
//	807BFCA8: 807BDB84 (calcHitGroundSpeed__8daE_TT_cFv)
//	807BFCF0: 807BEBAC (checkPlayerSearch__8daE_TT_cFv)
//	807BFD08: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BFD1C: 807BDBE4 (setActionMode__8daE_TT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::executeAttack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/executeAttack__8daE_TT_cFv.s"
}
#pragma pop


/* 807BFD38-807BFD60 0028+00 s=1 e=0 z=0  None .text      setDamageInit__8daE_TT_cFv                                   */
//	807BFD50: 807C2050 (lit_4796)
//	807BFD54: 807C2050 (lit_4796)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::setDamageInit() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setDamageInit__8daE_TT_cFv.s"
}
#pragma pop


/* 807BFD60-807BFFF4 0294+00 s=2 e=0 z=0  None .text      executeDamage__8daE_TT_cFv                                   */
//	807BFD78: 807C1FB8 (lit_3908)
//	807BFD7C: 807C1FB8 (lit_3908)
//	807BFD8C: 807C2238 (lit_5104)
//	807BFD90: 807C2238 (lit_5104)
//	807BFDE0: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BFDE8: 807BFD38 (setDamageInit__8daE_TT_cFv)
//	807BFE2C: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BFE34: 807BFD38 (setDamageInit__8daE_TT_cFv)
//	807BFE78: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BFE80: 807BFD38 (setDamageInit__8daE_TT_cFv)
//	807BFEC4: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BFECC: 807BFD38 (setDamageInit__8daE_TT_cFv)
//	807BFF10: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807BFF18: 807BFD38 (setDamageInit__8daE_TT_cFv)
//	807BFF58: 80270740 (cLib_chaseF__FPfff)
//	807BFF6C: 80270740 (cLib_chaseF__FPfff)
//	807BFFAC: 807BEBAC (checkPlayerSearch__8daE_TT_cFv)
//	807BFFC4: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807BFFD8: 807BDBE4 (setActionMode__8daE_TT_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::executeDamage() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/executeDamage__8daE_TT_cFv.s"
}
#pragma pop


/* 807BFFF4-807C033C 0348+00 s=1 e=0 z=0  None .text      executeDeath__8daE_TT_cFv                                    */
//	807C000C: 807C1FB8 (lit_3908)
//	807C0010: 807C1FB8 (lit_3908)
//	807C00C0: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C00D0: 807BE708 (setDeathEyeEffect__8daE_TT_cFv)
//	807C0120: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C0130: 807BE99C (setDeathFootEffect__8daE_TT_cFv)
//	807C014C: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C0160: 807BE708 (setDeathEyeEffect__8daE_TT_cFv)
//	807C0170: 807BE99C (setDeathFootEffect__8daE_TT_cFv)
//	807C0180: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807C0190: 807BE2A8 (setBodyLandEffect__8daE_TT_cFv)
//	807C01C0: 80270740 (cLib_chaseF__FPfff)
//	807C01D4: 80270740 (cLib_chaseF__FPfff)
//	807C01E8: 8026FA3C (cLib_addCalc2__FPffff)
//	807C0248: 8026FA3C (cLib_addCalc2__FPffff)
//	807C0278: 80270740 (cLib_chaseF__FPfff)
//	807C028C: 80270740 (cLib_chaseF__FPfff)
//	807C02BC: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	807C02D8: 8001CAD8 (fopAcM_createDisappear__FPC10fopAc_ac_cPC4cXyzUcUcUc)
//	807C02E0: 80019C7C (fopAcM_delete__FP10fopAc_ac_c)
//	807C02F0: 804061C0 (g_dComIfG_gameInfo)
//	807C02F4: 804061C0 (g_dComIfG_gameInfo)
//	807C0300: 80035360 (isSwitch__10dSv_info_cCFii)
//	807C030C: 804061C0 (g_dComIfG_gameInfo)
//	807C0310: 804061C0 (g_dComIfG_gameInfo)
//	807C0320: 80035200 (onSwitch__10dSv_info_cFii)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::executeDeath() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/executeDeath__8daE_TT_cFv.s"
}
#pragma pop


/* 807C033C-807C0530 01F4+00 s=1 e=0 z=0  None .text      executeOutRange__8daE_TT_cFv                                 */
//	807C034C: 803621DC (_savegpr_29)
//	807C0354: 807C1FB8 (lit_3908)
//	807C0358: 807C1FB8 (lit_3908)
//	807C0388: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C03A0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807C03D8: 804061C0 (g_dComIfG_gameInfo)
//	807C03DC: 804061C0 (g_dComIfG_gameInfo)
//	807C03E4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C03FC: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807C041C: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807C042C: 803650D0 (abs)
//	807C0444: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807C0454: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C0470: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807C0480: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C04A4: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C04B8: 803650D0 (abs)
//	807C04DC: 807C23EC (l_HIO)
//	807C04E0: 807C23EC (l_HIO)
//	807C04F0: 807C2404 (m_attack_tt)
//	807C04F4: 807C2404 (m_attack_tt)
//	807C050C: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807C0510: 807C2404 (m_attack_tt)
//	807C0514: 807C2404 (m_attack_tt)
//	807C051C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::executeOutRange() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/executeOutRange__8daE_TT_cFv.s"
}
#pragma pop


/* 807C0530-807C0C28 06F8+00 s=2 e=0 z=0  None .text      executeFirstAttack__8daE_TT_cFv                              */
//	807C0548: 803621D8 (_savegpr_28)
//	807C0550: 807C1FB8 (lit_3908)
//	807C0554: 807C1FB8 (lit_3908)
//	807C0558: 804061C0 (g_dComIfG_gameInfo)
//	807C055C: 804061C0 (g_dComIfG_gameInfo)
//	807C0588: 807C2254 (lit_5450)
//	807C058C: 807C2254 (lit_5450)
//	807C05B8: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C05D0: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807C060C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C0624: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807C0658: 8001A964 (fopAcM_searchActorDistanceXZ__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C066C: 8001A710 (fopAcM_searchActorAngleY__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C067C: 803650D0 (abs)
//	807C06A0: 807C23EC (l_HIO)
//	807C06A4: 807C23EC (l_HIO)
//	807C06F0: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C0744: 80439A20 (sincosTable___5JMath)
//	807C0748: 80439A20 (sincosTable___5JMath)
//	807C0784: 80347090 (PSVECAdd)
//	807C0790: 80270C04 (cLib_targetAngleY__FPC3VecPC3Vec)
//	807C07A8: 80270540 (cLib_addCalcAngleS__FPsssss)
//	807C07B8: 8032842C (checkPass__12J3DFrameCtrlFf)
//	807C0834: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C0888: 8034739C (PSVECSquareDistance)
//	807C08F8: 80450AE0 (__float_nan)
//	807C08FC: 80450AE0 (__float_nan)
//	807C0968: 80450AE0 (__float_nan)
//	807C096C: 80450AE0 (__float_nan)
//	807C09B8: 8034739C (PSVECSquareDistance)
//	807C0A28: 80450AE0 (__float_nan)
//	807C0A2C: 80450AE0 (__float_nan)
//	807C0A98: 80450AE0 (__float_nan)
//	807C0A9C: 80450AE0 (__float_nan)
//	807C0B0C: 807BDAE0 (setBck__8daE_TT_cFiUcff)
//	807C0B50: 807BE438 (setWaterEffect__8daE_TT_cFv)
//	807C0B90: 807BDB84 (calcHitGroundSpeed__8daE_TT_cFv)
//	807C0BD8: 807BEBAC (checkPlayerSearch__8daE_TT_cFv)
//	807C0BF0: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807C0C04: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807C0C14: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::executeFirstAttack() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/executeFirstAttack__8daE_TT_cFv.s"
}
#pragma pop


/* 807C0C28-807C0E10 01E8+00 s=2 e=0 z=0  None .text      action__8daE_TT_cFv                                          */
//	807C0C38: 803621DC (_savegpr_29)
//	807C0C40: 807C1FB8 (lit_3908)
//	807C0C44: 807C1FB8 (lit_3908)
//	807C0C48: 807BDE5C (checkWaterSurface__8daE_TT_cFv)
//	807C0C5C: 807BDF60 (checkFootGround__8daE_TT_cFv)
//	807C0C64: 807BDC50 (damage_check__8daE_TT_cFv)
//	807C0C84: 807C2290 (lit_5482)
//	807C0C88: 807C2290 (lit_5482)
//	807C0CA0: 807BED70 (executeWait__8daE_TT_cFv)
//	807C0CAC: 807BF358 (executeChase__8daE_TT_cFv)
//	807C0CBC: 807BF914 (executeAttack__8daE_TT_cFv)
//	807C0CCC: 807BFD60 (executeDamage__8daE_TT_cFv)
//	807C0CD8: 807BFFF4 (executeDeath__8daE_TT_cFv)
//	807C0CE4: 807C033C (executeOutRange__8daE_TT_cFv)
//	807C0CF0: 807C0530 (executeFirstAttack__8daE_TT_cFv)
//	807C0D04: 802C1B7C (setLinkSearch__15Z2CreatureEnemyFb)
//	807C0D24: 80077C68 (__ct__11dBgS_LinChkFv)
//	807C0D2C: 804061C0 (g_dComIfG_gameInfo)
//	807C0D30: 804061C0 (g_dComIfG_gameInfo)
//	807C0D44: 80077D64 (Set__11dBgS_LinChkFPC4cXyzPC4cXyzPC10fopAc_ac_c)
//	807C0D48: 804061C0 (g_dComIfG_gameInfo)
//	807C0D4C: 804061C0 (g_dComIfG_gameInfo)
//	807C0D58: 800743B4 (LineCross__4cBgSFP11cBgS_LinChk)
//	807C0D80: 80077CDC (__dt__11dBgS_LinChkFv)
//	807C0D90: 80270740 (cLib_chaseF__FPfff)
//	807C0DC4: 8001A6CC (fopAcM_posMoveF__FP10fopAc_ac_cPC4cXyz)
//	807C0DCC: 804061C0 (g_dComIfG_gameInfo)
//	807C0DD0: 804061C0 (g_dComIfG_gameInfo)
//	807C0DD8: 80076AAC (CrrPos__9dBgS_AcchFR4dBgS)
//	807C0DE4: 8002D06C (dComIfGp_getReverb__Fi)
//	807C0DF4: 800110B0 (play__16mDoExt_McaMorfSOFUlSc)
//	807C0DFC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::action() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/action__8daE_TT_cFv.s"
}
#pragma pop


/* 807C0E10-807C0EE8 00D8+00 s=2 e=0 z=0  None .text      mtx_set__8daE_TT_cFi                                         */
//	807C0E2C: 803DD470 (now__14mDoMtx_stack_c)
//	807C0E30: 803DD470 (now__14mDoMtx_stack_c)
//	807C0E48: 803468E8 (PSMTXTrans)
//	807C0E50: 8000CF44 (ZXYrotM__14mDoMtx_stack_cFRC5csXyz)
//	807C0E54: 807C23EC (l_HIO)
//	807C0E58: 807C23EC (l_HIO)
//	807C0E68: 8000CE38 (scaleM__14mDoMtx_stack_cFfff)
//	807C0E74: 803DD470 (now__14mDoMtx_stack_c)
//	807C0E78: 803DD470 (now__14mDoMtx_stack_c)
//	807C0E80: 803464B0 (PSMTXCopy)
//	807C0EA8: 804061C0 (g_dComIfG_gameInfo)
//	807C0EAC: 804061C0 (g_dComIfG_gameInfo)
//	807C0EB4: 8001A7E0 (fopAcM_searchActorDistance__FPC10fopAc_ac_cPC10fopAc_ac_c)
//	807C0EB8: 807C2098 (lit_5507)
//	807C0EBC: 807C2098 (lit_5507)
//	807C0ECC: 800111EC (modelCalc__16mDoExt_McaMorfSOFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void daE_TT_c::mtx_set(int param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/mtx_set__8daE_TT_cFi.s"
}
#pragma pop


/* 807C0EE8-807C1024 013C+00 s=1 e=0 z=0  None .text      cc_set__8daE_TT_cFv                                          */
//	807C0EF8: 803621D8 (_savegpr_28)
//	807C0F00: 807C1FB8 (lit_3908)
//	807C0F04: 807C1FB8 (lit_3908)
//	807C0F1C: 803DD470 (now__14mDoMtx_stack_c)
//	807C0F20: 803DD470 (now__14mDoMtx_stack_c)
//	807C0F24: 803464B0 (PSMTXCopy)
//	807C0F34: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807C0F38: 803DD470 (now__14mDoMtx_stack_c)
//	807C0F3C: 803DD470 (now__14mDoMtx_stack_c)
//	807C0F98: 803464B0 (PSMTXCopy)
//	807C0FA8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807C0FCC: 8026F648 (SetC__8cM3dGSphFRC4cXyz)
//	807C0FE4: 8026F708 (SetR__8cM3dGSphFf)
//	807C0FF4: 8026F708 (SetR__8cM3dGSphFf)
//	807C0FF8: 804061C0 (g_dComIfG_gameInfo)
//	807C0FFC: 804061C0 (g_dComIfG_gameInfo)
//	807C1008: 80264BA8 (Set__4cCcSFP8cCcD_Obj)
//	807C1010: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::cc_set() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/cc_set__8daE_TT_cFv.s"
}
#pragma pop


/* 807C1024-807C113C 0118+00 s=1 e=0 z=0  None .text      execute__8daE_TT_cFv                                         */
//	807C103C: 807C1FB8 (lit_3908)
//	807C1040: 807C1FB8 (lit_3908)
//	807C1098: 807C0C28 (action__8daE_TT_cFv)
//	807C10A4: 807C0E10 (mtx_set__8daE_TT_cFi)
//	807C10AC: 807C0EE8 (cc_set__8daE_TT_cFv)
//	807C10C0: 803DD470 (now__14mDoMtx_stack_c)
//	807C10C4: 803DD470 (now__14mDoMtx_stack_c)
//	807C10C8: 803464B0 (PSMTXCopy)
//	807C10D8: 8000CD9C (transM__14mDoMtx_stack_cFfff)
//	807C10DC: 803DD470 (now__14mDoMtx_stack_c)
//	807C10E0: 803DD470 (now__14mDoMtx_stack_c)
//	807C111C: 807C1B54 (setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::execute() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/execute__8daE_TT_cFv.s"
}
#pragma pop


/* 807C113C-807C115C 0020+00 s=1 e=0 z=0  None .text      daE_TT_Execute__FP8daE_TT_c                                  */
//	807C1148: 807C1024 (execute__8daE_TT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
asm static void daE_TT_Execute(daE_TT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/daE_TT_Execute__FP8daE_TT_c.s"
}
#pragma pop


/* 807C115C-807C1164 0008+00 s=1 e=0 z=0  None .text      daE_TT_IsDelete__FP8daE_TT_c                                 */
// True False
//  bool False
//  daE_TT_c* False
// 	 daE_TT_c False
static bool daE_TT_IsDelete(daE_TT_c* param_0) {
	return true;
}


/* 807C1164-807C11FC 0098+00 s=1 e=0 z=0  None .text      _delete__8daE_TT_cFv                                         */
//	807C1178: 807C2404 (m_attack_tt)
//	807C117C: 807C2404 (m_attack_tt)
//	807C1198: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	807C11A0: 807C20B0 (stringBase0)
//	807C11A4: 807C20B0 (stringBase0)
//	807C11A8: 8002D008 (dComIfG_resDelete__FP30request_of_phase_process_classPCc)
//	807C11BC: 807C23DD (struct_807C23DC)
//	807C11C0: 807C23DD (struct_807C23DC)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::_delete() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/_delete__8daE_TT_cFv.s"
}
#pragma pop


/* 807C11FC-807C121C 0020+00 s=1 e=0 z=0  None .text      daE_TT_Delete__FP8daE_TT_c                                   */
//	807C1208: 807C1164 (_delete__8daE_TT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
asm static void daE_TT_Delete(daE_TT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/daE_TT_Delete__FP8daE_TT_c.s"
}
#pragma pop


/* 807C121C-807C1394 0178+00 s=1 e=0 z=0  None .text      CreateHeap__8daE_TT_cFv                                      */
//	807C122C: 803621DC (_savegpr_29)
//	807C1248: 804061C0 (g_dComIfG_gameInfo)
//	807C124C: 804061C0 (g_dComIfG_gameInfo)
//	807C125C: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807C1270: 804061C0 (g_dComIfG_gameInfo)
//	807C1274: 804061C0 (g_dComIfG_gameInfo)
//	807C1284: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807C1290: 802CEC4C (__nw__FUl)
//	807C129C: 807C20B0 (stringBase0)
//	807C12A0: 807C20B0 (stringBase0)
//	807C12A8: 804061C0 (g_dComIfG_gameInfo)
//	807C12AC: 804061C0 (g_dComIfG_gameInfo)
//	807C12BC: 8003C2EC (getRes__14dRes_control_cFPCclP11dRes_info_ci)
//	807C12F4: 807C1FC0 (lit_3910)
//	807C12F8: 807C1FC0 (lit_3910)
//	807C1304: 800107D0 (__ct__16mDoExt_McaMorfSOFP12J3DModelDataP25mDoExt_McaMorfCallBack1_cP25mDoExt_McaMorfCallBack2_cP15J3DAnmTransformifiiP10Z2CreatureUlUl)
//	807C1344: 807BD8E0 (JointCallBack__8daE_TT_cFP8J3DJointi)
//	807C1348: 807BD8E0 (JointCallBack__8daE_TT_cFP8J3DJointi)
//	807C1380: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::CreateHeap() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/CreateHeap__8daE_TT_cFv.s"
}
#pragma pop


/* 807C1394-807C13B4 0020+00 s=1 e=0 z=0  None .text      useHeapInit__FP10fopAc_ac_c                                  */
//	807C13A0: 807C121C (CreateHeap__8daE_TT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopAc_ac_c* False
// 	 fopAc_ac_c False
asm static void useHeapInit(fopAc_ac_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/useHeapInit__FP10fopAc_ac_c.s"
}
#pragma pop


/* 807C13B4-807C17FC 0448+00 s=1 e=0 z=0  None .text      create__8daE_TT_cFv                                          */
//	807C13C4: 803621D8 (_savegpr_28)
//	807C13CC: 807C1FB8 (lit_3908)
//	807C13D0: 807C1FB8 (lit_3908)
//	807C13EC: 80018B64 (__ct__10fopAc_ac_cFv)
//	807C13F4: 802C0F64 (__ct__15Z2CreatureEnemyFv)
//	807C1400: 8007757C (__ct__11dBgS_GndChkFv)
//	807C1404: 807C235C (__vt__14dBgS_ObjGndChk)
//	807C1408: 807C235C (__vt__14dBgS_ObjGndChk)
//	807C142C: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	807C1430: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	807C1434: 803AB6E8 (__vt__18dBgS_ObjGndChk_All)
//	807C1464: 80075EAC (__ct__12dBgS_AcchCirFv)
//	807C1470: 800760A0 (__ct__9dBgS_AcchFv)
//	807C1474: 807C2338 (__vt__12dBgS_ObjAcch)
//	807C1478: 807C2338 (__vt__12dBgS_ObjAcch)
//	807C1494: 80078E68 (SetObj__16dBgS_PolyPassChkFv)
//	807C1498: 803C3728 (__vt__9cCcD_Stts)
//	807C149C: 803C3728 (__vt__9cCcD_Stts)
//	807C14A8: 80083760 (__ct__10dCcD_GSttsFv)
//	807C14AC: 803AC2E4 (__vt__9dCcD_Stts)
//	807C14B0: 803AC2E4 (__vt__9dCcD_Stts)
//	807C14C8: 80083A28 (__ct__12dCcD_GObjInfFv)
//	807C14CC: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807C14D0: 803C36D0 (__vt__14cCcD_ShapeAttr)
//	807C14D8: 807C232C (__vt__8cM3dGAab)
//	807C14DC: 807C232C (__vt__8cM3dGAab)
//	807C14E4: 807C2320 (__vt__8cM3dGSph)
//	807C14E8: 807C2320 (__vt__8cM3dGSph)
//	807C14F0: 803C3540 (__vt__12cCcD_SphAttr)
//	807C14F4: 803C3540 (__vt__12cCcD_SphAttr)
//	807C1504: 803ABFC0 (__vt__8dCcD_Sph)
//	807C1508: 803ABFC0 (__vt__8dCcD_Sph)
//	807C1540: 804061C0 (g_dComIfG_gameInfo)
//	807C1544: 804061C0 (g_dComIfG_gameInfo)
//	807C1550: 80035360 (isSwitch__10dSv_info_cCFii)
//	807C1590: 807C20B0 (stringBase0)
//	807C1594: 807C20B0 (stringBase0)
//	807C15A4: 807C20B0 (stringBase0)
//	807C15A8: 807C20B0 (stringBase0)
//	807C161C: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	807C1630: 807C20B0 (stringBase0)
//	807C1634: 807C20B0 (stringBase0)
//	807C1638: 8002CEBC (dComIfG_resLoad__FP30request_of_phase_process_classPCc)
//	807C164C: 807C1394 (useHeapInit__FP10fopAc_ac_c)
//	807C1650: 807C1394 (useHeapInit__FP10fopAc_ac_c)
//	807C1658: 8001A4B0 (fopAcM_entrySolidHeap__FP10fopAc_ac_cPFP10fopAc_ac_c_iUl)
//	807C166C: 807C23DD (struct_807C23DC)
//	807C1670: 807C23DD (struct_807C23DC)
//	807C168C: 807C23EC (l_HIO)
//	807C1690: 807C23EC (l_HIO)
//	807C16C0: 8001A528 (fopAcM_SetMin__FP10fopAc_ac_cfff)
//	807C16D4: 8001A538 (fopAcM_SetMax__FP10fopAc_ac_cfff)
//	807C1700: 80076248 (Set__9dBgS_AcchFP4cXyzP4cXyzP10fopAc_ac_ciP12dBgS_AcchCirP4cXyzP5csXyzP5csXyz)
//	807C1710: 80075F58 (SetWall__12dBgS_AcchCirFff)
//	807C1744: 80083860 (Init__9dCcD_SttsFiiP10fopAc_ac_c)
//	807C174C: 807C2100 (data_807C2100)
//	807C1750: 807C2100 (data_807C2100)
//	807C1754: 80084A34 (Set__8dCcD_SphFRC11dCcD_SrcSph)
//	807C1774: 802C1094 (init__15Z2CreatureEnemyFP3VecP3VecUcUc)
//	807C177C: 807C20B0 (stringBase0)
//	807C1780: 807C20B0 (stringBase0)
//	807C1788: 802C1B90 (setEnemyName__15Z2CreatureEnemyFPCc)
//	807C17BC: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807C17D0: 807BDBE4 (setActionMode__8daE_TT_cFii)
//	807C17DC: 807C0E10 (mtx_set__8daE_TT_cFi)
//	807C17E8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void daE_TT_c::create() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/create__8daE_TT_cFv.s"
}
#pragma pop


/* 807C17FC-807C1844 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGSphFv                                            */
//	807C1814: 807C2320 (__vt__8cM3dGSph)
//	807C1818: 807C2320 (__vt__8cM3dGSph)
//	807C1828: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGSph::~cM3dGSph() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__8cM3dGSphFv.s"
}
#pragma pop


/* 807C1844-807C188C 0048+00 s=1 e=0 z=0  None .text      __dt__8cM3dGAabFv                                            */
//	807C185C: 807C232C (__vt__8cM3dGAab)
//	807C1860: 807C232C (__vt__8cM3dGAab)
//	807C1870: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cM3dGAab::~cM3dGAab() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__8cM3dGAabFv.s"
}
#pragma pop


/* 807C188C-807C18E8 005C+00 s=1 e=0 z=0  None .text      __dt__10dCcD_GSttsFv                                         */
//	807C18A4: 807C2314 (__vt__10dCcD_GStts)
//	807C18A8: 807C2314 (__vt__10dCcD_GStts)
//	807C18B4: 807C2308 (__vt__10cCcD_GStts)
//	807C18B8: 807C2308 (__vt__10cCcD_GStts)
//	807C18CC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dCcD_GStts::~dCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__10dCcD_GSttsFv.s"
}
#pragma pop


/* 807C18E8-807C1958 0070+00 s=3 e=0 z=0  None .text      __dt__12dBgS_ObjAcchFv                                       */
//	807C1908: 807C2338 (__vt__12dBgS_ObjAcch)
//	807C190C: 807C2338 (__vt__12dBgS_ObjAcch)
//	807C1928: 80075F94 (__dt__9dBgS_AcchFv)
//	807C1938: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjAcch::~dBgS_ObjAcch() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__12dBgS_ObjAcchFv.s"
}
#pragma pop


/* 807C1958-807C19C8 0070+00 s=1 e=0 z=0  None .text      __dt__12dBgS_AcchCirFv                                       */
//	807C1978: 807C22FC (__vt__12dBgS_AcchCir)
//	807C197C: 807C22FC (__vt__12dBgS_AcchCir)
//	807C198C: 8026EF18 (__dt__8cM3dGCirFv)
//	807C1998: 802680B0 (__dt__13cBgS_PolyInfoFv)
//	807C19A8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_AcchCir::~dBgS_AcchCir() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__12dBgS_AcchCirFv.s"
}
#pragma pop


/* 807C19C8-807C1A40 0078+00 s=4 e=0 z=0  None .text      __dt__14dBgS_ObjGndChkFv                                     */
//	807C19E8: 807C235C (__vt__14dBgS_ObjGndChk)
//	807C19EC: 807C235C (__vt__14dBgS_ObjGndChk)
//	807C1A10: 800775F0 (__dt__11dBgS_GndChkFv)
//	807C1A20: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm dBgS_ObjGndChk::~dBgS_ObjGndChk() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__14dBgS_ObjGndChkFv.s"
}
#pragma pop


/* 807C1A40-807C1A60 0020+00 s=1 e=0 z=0  None .text      daE_TT_Create__FP8daE_TT_c                                   */
//	807C1A4C: 807C13B4 (create__8daE_TT_cFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  daE_TT_c* False
// 	 daE_TT_c False
asm static void daE_TT_Create(daE_TT_c* param_0) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/daE_TT_Create__FP8daE_TT_c.s"
}
#pragma pop


/* 807C1A60-807C1AA8 0048+00 s=1 e=0 z=0  None .text      __dt__10cCcD_GSttsFv                                         */
//	807C1A78: 807C2308 (__vt__10cCcD_GStts)
//	807C1A7C: 807C2308 (__vt__10cCcD_GStts)
//	807C1A8C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cCcD_GStts::~cCcD_GStts() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__10cCcD_GSttsFv.s"
}
#pragma pop


/* 807C1AA8-807C1AF0 0048+00 s=2 e=0 z=0  None .text      __dt__12daE_TT_HIO_cFv                                       */
//	807C1AC0: 807C238C (__vt__12daE_TT_HIO_c)
//	807C1AC4: 807C238C (__vt__12daE_TT_HIO_c)
//	807C1AD4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm daE_TT_HIO_c::~daE_TT_HIO_c() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__12daE_TT_HIO_cFv.s"
}
#pragma pop


/* 807C1AF0-807C1B2C 003C+00 s=0 e=1 z=0  None .text      __sinit_d_a_e_tt_cpp                                         */
//	807C1AFC: 807C23EC (l_HIO)
//	807C1B00: 807C23EC (l_HIO)
//	807C1B04: 807BD7AC (__ct__12daE_TT_HIO_cFv)
//	807C1B08: 807C1AA8 (__dt__12daE_TT_HIO_cFv)
//	807C1B0C: 807C1AA8 (__dt__12daE_TT_HIO_cFv)
//	807C1B10: 807C23E0 (lit_3924)
//	807C1B14: 807C23E0 (lit_3924)
//	807C1B18: 807BD738 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_d_a_e_tt_cpp() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__sinit_d_a_e_tt_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_807C1AF0 = (void*)__sinit_d_a_e_tt_cpp;
#pragma pop


/* 807C1B2C-807C1B34 0008+00 s=1 e=0 z=0  None .text      @20@__dt__14dBgS_ObjGndChkFv                                 */
//	807C1B30: 807C19C8 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807C1B2C() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/func_807C1B2C.s"
}
#pragma pop


/* 807C1B34-807C1B3C 0008+00 s=1 e=0 z=0  None .text      @76@__dt__14dBgS_ObjGndChkFv                                 */
//	807C1B38: 807C19C8 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807C1B34() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/func_807C1B34.s"
}
#pragma pop


/* 807C1B3C-807C1B44 0008+00 s=1 e=0 z=0  None .text      @60@__dt__14dBgS_ObjGndChkFv                                 */
//	807C1B40: 807C19C8 (__dt__14dBgS_ObjGndChkFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807C1B3C() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/func_807C1B3C.s"
}
#pragma pop


/* 807C1B44-807C1B4C 0008+00 s=1 e=0 z=0  None .text      @36@__dt__12dBgS_ObjAcchFv                                   */
//	807C1B48: 807C18E8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807C1B44() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/func_807C1B44.s"
}
#pragma pop


/* 807C1B4C-807C1B54 0008+00 s=1 e=0 z=0  None .text      @20@__dt__12dBgS_ObjAcchFv                                   */
//	807C1B50: 807C18E8 (__dt__12dBgS_ObjAcchFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void func_807C1B4C() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/func_807C1B4C.s"
}
#pragma pop


/* 807C1B54-807C1F68 0414+00 s=1 e=0 z=0  None .text      setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz */
//	807C1B64: 803621B4 (_savegpr_19)
//	807C1B78: 807C20C8 (cNullVec__6Z2Calc)
//	807C1B7C: 807C20C8 (cNullVec__6Z2Calc)
//	807C1B80: 807C1FB8 (lit_3908)
//	807C1B84: 807C1FB8 (lit_3908)
//	807C1B88: 804061C0 (g_dComIfG_gameInfo)
//	807C1B8C: 804061C0 (g_dComIfG_gameInfo)
//	807C1B94: 80451018 (m_midnaActor__9daPy_py_c)
//	807C1B98: 80451018 (m_midnaActor__9daPy_py_c)
//	807C1BC0: 801AC57C (dKy_darkworld_check__Fv)
//	807C1BE4: 80451018 (m_midnaActor__9daPy_py_c)
//	807C1BE8: 80451018 (m_midnaActor__9daPy_py_c)
//	807C1C00: 803DD470 (now__14mDoMtx_stack_c)
//	807C1C04: 803DD470 (now__14mDoMtx_stack_c)
//	807C1C08: 803464B0 (PSMTXCopy)
//	807C1C20: 803DD470 (now__14mDoMtx_stack_c)
//	807C1C24: 803DD470 (now__14mDoMtx_stack_c)
//	807C1C30: 80346D6C (PSMTXMultVec)
//	807C1C40: 80266B34 (__mi__4cXyzCFRC3Vec)
//	807C1C5C: 80267674 (cM_atan2s__Fff)
//	807C1C90: 80267674 (cM_atan2s__Fff)
//	807C1CAC: 804061C0 (g_dComIfG_gameInfo)
//	807C1CB0: 804061C0 (g_dComIfG_gameInfo)
//	807C1D00: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807C1D10: 80347138 (PSVECSquareMag)
//	807C1D80: 80450AE0 (__float_nan)
//	807C1D84: 80450AE0 (__float_nan)
//	807C1DF0: 80450AE0 (__float_nan)
//	807C1DF4: 80450AE0 (__float_nan)
//	807C1E48: 8004CA90 (set__13dPa_control_cFUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807C1E84: 804061C0 (g_dComIfG_gameInfo)
//	807C1E88: 804061C0 (g_dComIfG_gameInfo)
//	807C1EF4: 8004D4CC (set__13dPa_control_cFUlUcUsPC4cXyzPC12dKy_tevstr_cPC5csXyzPC4cXyzUcP18dPa_levelEcallBackScPC8_GXColorPC8_GXColorPC4cXyzf)
//	807C1F54: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  fopEn_enemy_c* False
// 	 fopEn_enemy_c False
//  Z2CreatureEnemy* False
// 	 Z2CreatureEnemy False
//  cXyz* False
// 	 cXyz False
//  cXyz* False
// 	 cXyz False
asm static void setMidnaBindEffect(fopEn_enemy_c* param_0, Z2CreatureEnemy* param_1, cXyz* param_2, cXyz* param_3) {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/setMidnaBindEffect__FP13fopEn_enemy_cP15Z2CreatureEnemyP4cXyzP4cXyz.s"
}
#pragma pop


/* 807C1F68-807C1FA4 003C+00 s=5 e=0 z=0  None .text      __dt__4cXyzFv                                                */
//	807C1F88: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm cXyz::~cXyz() {
	nofralloc
#include "asm/rel/d/a/e/d_a_e_tt/d_a_e_tt/__dt__4cXyzFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 807C2408-807C2418 000C+04 s=0 e=0 z=0  None .bss       @4154                                                        */
u8 lit_4154[12 + 4 /* padding */];

/* 807C2418-807C2424 000C+00 s=0 e=0 z=0  None .bss       sc$4153                                                      */
u8 data_807C2418[12];

/* 807C2424-807C2434 000C+04 s=0 e=0 z=0  None .bss       @4269                                                        */
u8 lit_4269[12 + 4 /* padding */];

/* 807C2434-807C2440 000C+00 s=0 e=0 z=0  None .bss       sc$4268                                                      */
u8 data_807C2434[12];

/* 807C2440-807C2450 000C+04 s=0 e=0 z=0  None .bss       @4302                                                        */
u8 lit_4302[12 + 4 /* padding */];

/* 807C2450-807C245C 000C+00 s=0 e=0 z=0  None .bss       sc$4301                                                      */
u8 data_807C2450[12];

/* 807C245C-807C246C 000C+04 s=0 e=0 z=0  None .bss       @4400                                                        */
u8 lit_4400[12 + 4 /* padding */];

/* 807C246C-807C2478 000C+00 s=0 e=0 z=0  None .bss       sc$4399                                                      */
u8 data_807C246C[12];

/* 807C2478-807C2488 000C+04 s=0 e=0 z=0  None .bss       @4489                                                        */
u8 lit_4489[12 + 4 /* padding */];

/* 807C2488-807C2494 000C+00 s=0 e=0 z=0  None .bss       sc$4488                                                      */
u8 data_807C2488[12];

/* 807C2494-807C2498 0004+00 s=0 e=0 z=0  None .bss       sInstance__40JASGlobalInstance<19JASDefaultBankTable>        */
u8 data_807C2494[4];

/* 807C2498-807C249C 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14JASAudioThread>             */
u8 data_807C2498[4];

/* 807C249C-807C24A0 0004+00 s=0 e=0 z=0  None .bss       sInstance__27JASGlobalInstance<7Z2SeMgr>                     */
u8 data_807C249C[4];

/* 807C24A0-807C24A4 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8Z2SeqMgr>                    */
u8 data_807C24A0[4];

/* 807C24A4-807C24A8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SceneMgr>                 */
u8 data_807C24A4[4];

/* 807C24A8-807C24AC 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2StatusMgr>                */
u8 data_807C24A8[4];

/* 807C24AC-807C24B0 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2DebugSys>                 */
u8 data_807C24AC[4];

/* 807C24B0-807C24B4 0004+00 s=0 e=0 z=0  None .bss       sInstance__36JASGlobalInstance<15JAISoundStarter>            */
u8 data_807C24B0[4];

/* 807C24B4-807C24B8 0004+00 s=0 e=0 z=0  None .bss       sInstance__35JASGlobalInstance<14Z2SoundStarter>             */
u8 data_807C24B4[4];

/* 807C24B8-807C24BC 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12Z2SpeechMgr2>               */
u8 data_807C24B8[4];

/* 807C24BC-807C24C0 0004+00 s=0 e=0 z=0  None .bss       sInstance__28JASGlobalInstance<8JAISeMgr>                    */
u8 data_807C24BC[4];

/* 807C24C0-807C24C4 0004+00 s=0 e=0 z=0  None .bss       sInstance__29JASGlobalInstance<9JAISeqMgr>                   */
u8 data_807C24C0[4];

/* 807C24C4-807C24C8 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAIStreamMgr>               */
u8 data_807C24C4[4];

/* 807C24C8-807C24CC 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2SoundMgr>                 */
u8 data_807C24C8[4];

/* 807C24CC-807C24D0 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAISoundInfo>               */
u8 data_807C24CC[4];

/* 807C24D0-807C24D4 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13JAUSoundTable>              */
u8 data_807C24D0[4];

/* 807C24D4-807C24D8 0004+00 s=0 e=0 z=0  None .bss       sInstance__38JASGlobalInstance<17JAUSoundNameTable>          */
u8 data_807C24D4[4];

/* 807C24D8-807C24DC 0004+00 s=0 e=0 z=0  None .bss       sInstance__33JASGlobalInstance<12JAUSoundInfo>               */
u8 data_807C24D8[4];

/* 807C24DC-807C24E0 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SoundInfo>                */
u8 data_807C24DC[4];

/* 807C24E0-807C24E4 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2SoundObjMgr>              */
u8 data_807C24E0[4];

/* 807C24E4-807C24E8 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2Audience>                 */
u8 data_807C24E4[4];

/* 807C24E8-807C24EC 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2FxLineMgr>                */
u8 data_807C24E8[4];

/* 807C24EC-807C24F0 0004+00 s=0 e=0 z=0  None .bss       sInstance__31JASGlobalInstance<10Z2EnvSeMgr>                 */
u8 data_807C24EC[4];

/* 807C24F0-807C24F4 0004+00 s=0 e=0 z=0  None .bss       sInstance__32JASGlobalInstance<11Z2SpeechMgr>                */
u8 data_807C24F0[4];

/* 807C24F4-807C24F8 0004+00 s=0 e=0 z=0  None .bss       sInstance__34JASGlobalInstance<13Z2WolfHowlMgr>              */
u8 data_807C24F4[4];

