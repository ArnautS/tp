// 
// Generated By: dol2asm
// Translation Unit: MSL_Common_Embedded/Src/ansi_fp
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp.h"

// 
// Forward References:
// 


// False False
extern "C" void __num2dec();
// True False
extern "C" static void __num2dec_internal();
// True False
extern "C" static void __two_exp();
// True False
extern "C" static void __timesdec();
extern "C" extern char const* const MSL_Common_Embedded_Src_ansi_fp__stringBase0;

// 
// External References:
// 


// False False
extern "C" void __div2u();
// False False
extern "C" void __mod2u();
// False False
extern "C" void __cvt_dbl_usll();
// False False
extern "C" void frexp();
// False False
extern "C" void ldexp();
// False False
extern "C" void modf();

// 
// Declarations:
// 

/* 80363124-803632C8 01A4+00 s=0 e=2 z=0  None .text      __num2dec                                                    */
//	80363144: 803632C8 (__num2dec_internal)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __num2dec() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__num2dec.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456660-80456668 0008+00 s=1 e=0 z=0  None .sdata2    @824                                                         */
SECTION_SDATA2 static u8 lit_824[8] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803632C8-8036367C 03B4+00 s=1 e=0 z=0  None .text      __num2dec_internal                                           */
//	803632D0: 80456660 (lit_824)
//	80363450: 8036C244 (frexp)
//	80363558: 8036367C (__two_exp)
//	80363564: 8036C2D0 (ldexp)
//	8036356C: 8036C494 (modf)
//	80363574: 80362770 (__cvt_dbl_usll)
//	803635C8: 8036245C (__mod2u)
//	803635F0: 80362238 (__div2u)
//	8036365C: 80364E00 (__timesdec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void __num2dec_internal() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__num2dec_internal.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A2238-803A2318 00DD+03 s=1 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_803A2238 = 
    "179769313486231580793729011405303420";
SECTION_DEAD char const* const stringBase_803A225D = 
    "542101086242752217003726400434970855712890625";
SECTION_DEAD char const* const stringBase_803A228B = 
    "11102230246251565404236316680908203125";
SECTION_DEAD char const* const stringBase_803A22B2 = "23283064365386962890625";
SECTION_DEAD char const* const stringBase_803A22CA = "152587890625";
SECTION_DEAD char const* const stringBase_803A22D7 = "390625";
SECTION_DEAD char const* const stringBase_803A22DE = "78125";
SECTION_DEAD char const* const stringBase_803A22E4 = "15625";
SECTION_DEAD char const* const stringBase_803A22EA = "3125";
SECTION_DEAD char const* const stringBase_803A22EF = "625";
SECTION_DEAD char const* const stringBase_803A22F3 = "125";
SECTION_DEAD char const* const stringBase_803A22F7 = "25";
SECTION_DEAD char const* const stringBase_803A22FA = "5";
SECTION_DEAD char const* const stringBase_803A22FC = "1";
SECTION_DEAD char const* const stringBase_803A22FE = "2";
SECTION_DEAD char const* const stringBase_803A2300 = "4";
SECTION_DEAD char const* const stringBase_803A2302 = "8";
SECTION_DEAD char const* const stringBase_803A2304 = "16";
SECTION_DEAD char const* const stringBase_803A2307 = "32";
SECTION_DEAD char const* const stringBase_803A230A = "64";
SECTION_DEAD char const* const stringBase_803A230D = "128";
SECTION_DEAD char const* const stringBase_803A2311 = "256";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_803A2315 = "\0\0";
#pragma pop

/* 803D2AF0-803D2C18 0124+04 s=1 e=0 z=0  None .data      @1710                                                        */
SECTION_DATA static void* lit_1710[73 + 1 /* padding */] = {
	(void*)(((char*)__two_exp)+0x40),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x13C),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x238),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x334),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x14DC),
	(void*)(((char*)__two_exp)+0x430),
	(void*)(((char*)__two_exp)+0x52C),
	(void*)(((char*)__two_exp)+0x628),
	(void*)(((char*)__two_exp)+0x724),
	(void*)(((char*)__two_exp)+0x820),
	(void*)(((char*)__two_exp)+0x91C),
	(void*)(((char*)__two_exp)+0xA18),
	(void*)(((char*)__two_exp)+0xB14),
	(void*)(((char*)__two_exp)+0xC10),
	(void*)(((char*)__two_exp)+0xD08),
	(void*)(((char*)__two_exp)+0xE00),
	(void*)(((char*)__two_exp)+0xEF8),
	(void*)(((char*)__two_exp)+0xFF0),
	(void*)(((char*)__two_exp)+0x10EC),
	(void*)(((char*)__two_exp)+0x11E8),
	(void*)(((char*)__two_exp)+0x12E4),
	(void*)(((char*)__two_exp)+0x13E0),
	/* padding */
	NULL,
};

/* 8036367C-80364E00 1784+00 s=2 e=0 z=0  None .text      __two_exp                                                    */
//	803636A4: 803D2AF0 (lit_1710)
//	803636AC: 803D2AF0 (lit_1710)
//	803636C0: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803636CC: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803637BC: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803637C8: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803638B8: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803638C4: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803639B4: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803639C0: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363AB0: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363ABC: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363BAC: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363BB8: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363CA8: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363CB4: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363DA4: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363DB0: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363EA0: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363EAC: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363F9C: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80363FA8: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364098: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803640A4: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364194: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	803641A0: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364290: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364298: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364388: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364390: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364480: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364488: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364578: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364580: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364670: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	8036467C: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	8036476C: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364778: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364868: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364874: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364964: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364970: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364A60: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364A6C: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364B78: 80364E00 (__timesdec)
//	80364BE8: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364BEC: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364CE0: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364CEC: 803A2238 (MSL_Common_Embedded_Src_ansi_fp__stringBase0)
//	80364DE4: 80364E00 (__timesdec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void __two_exp() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__two_exp.s"
}
#pragma pop


/* 80364E00-80365078 0278+00 s=2 e=0 z=0  None .text      __timesdec                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void __timesdec() {
	nofralloc
#include "asm/MSL_C.PPCEABI.bare.H/MSL_Common_Embedded/Src/ansi_fp/__timesdec.s"
}
#pragma pop


