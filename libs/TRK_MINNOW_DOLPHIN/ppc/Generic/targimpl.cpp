// 
// Generated By: dol2asm
// Translation Unit: ppc/Generic/targimpl
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl.h"

// 
// Forward References:
// 


// False False
extern "C" void __TRK_get_MSR();
// True False
extern "C" static void __TRK_set_MSR();
// True False
extern "C" static void TRK_ppc_memcpy();
// False False
extern "C" void TRKInterruptHandler();
// True False
extern "C" static void TRKExceptionHandler();
// False False
extern "C" void TRKSwapAndGo();
// True False
extern "C" static void TRKInterruptHandlerEnableInterrupts();
// True False
extern "C" static void ReadFPSCR();
// True False
extern "C" static void WriteFPSCR();
// False False
extern "C" void TRKTargetAccessARAM();
// False False
extern "C" void TRKTargetSetInputPendingPtr();
// False False
extern "C" void TRKTargetStop();
// False False
extern "C" void TRKTargetSetStopped();
// False False
extern "C" void TRKTargetStopped();
// False False
extern "C" void TRKTargetSupportRequest();
// False False
extern "C" void TRKTargetGetPC();
// False False
extern "C" void TRKTargetStepOutOfRange();
// False False
extern "C" void TRKTargetSingleStep();
// False False
extern "C" void TRKTargetAddExceptionInfo();
// False False
extern "C" void TRKTargetAddStopInfo();
// False False
extern "C" void TRKTargetInterrupt();
// True False
extern "C" static void TRKPostInterruptEvent();
// False False
extern "C" void TRKTargetAccessExtended2();
// False False
extern "C" void TRKTargetAccessExtended1();
// False False
extern "C" void TRKTargetAccessFP();
// False False
extern "C" void TRKTargetAccessDefault();
// True False
extern "C" static void TRKTargetReadInstruction();
// False False
extern "C" void TRKTargetAccessMemory();
// True False
extern "C" static void TRKValidMemory32();
extern "C" extern u8 gTRKRestoreFlags[9 + 3 /* padding */];
SECTION_BSS u8 TRK_saved_exceptionID[2 + 2 /* padding */];
extern "C" extern u8 gTRKState[164];
extern "C" extern u8 gTRKCPUState[1072];

// 
// External References:
// 


// False False
SECTION_INIT void memset();
// False False
extern "C" void TRKConstructEvent();
// False False
extern "C" void TRKPostEvent();
// False False
extern "C" void TRKReadBuffer_ui32();
// False False
extern "C" void TRKReadBuffer1_ui64();
// False False
extern "C" void TRKAppendBuffer_ui32();
// False False
extern "C" void TRKAppendBuffer_ui8();
// False False
extern "C" void TRKAppendBuffer1_ui64();
// False False
extern "C" void HandlePositionFileSupportRequest();
// False False
extern "C" void HandleCloseFileSupportRequest();
// False False
extern "C" void HandleOpenFileSupportRequest();
// False False
extern "C" void TRKSuppAccessFile();
// False False
extern "C" void TRKDoNotifyStopped();
// False False
extern "C" void TRK_flush_cache();
// False False
extern "C" void TRKSaveExtended1Block();
// False False
extern "C" void TRKRestoreExtended1Block();
// False False
extern "C" void TRK__write_aram();
// False False
extern "C" void TRK__read_aram();
// False False
extern "C" void TRKTargetTranslate();
// False False
//  void False
extern "C" void TRKUARTInterruptHandler();
// False False
extern "C" void MWTRACE();

// 
// Declarations:
// 

/* 8036F638-8036F640 0008+00 s=2 e=1 z=0  None .text      __TRK_get_MSR                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __TRK_get_MSR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/__TRK_get_MSR.s"
}
#pragma pop


/* 8036F640-8036F648 0008+00 s=1 e=0 z=0  None .text      __TRK_set_MSR                                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void __TRK_set_MSR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/__TRK_set_MSR.s"
}
#pragma pop


/* 8036F648-8036F684 003C+00 s=1 e=0 z=0  None .text      TRK_ppc_memcpy                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void TRK_ppc_memcpy() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRK_ppc_memcpy.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D3238-803D3244 0009+03 s=1 e=1 z=0  None .data      gTRKRestoreFlags                                             */
SECTION_DATA u8 gTRKRestoreFlags[9 + 3 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803D3244-803D3254 0010+00 s=10 e=0 z=0  None .data      gTRKExceptionStatus                                          */
SECTION_DATA static u8 gTRKExceptionStatus[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
};

/* 8044F290-8044F294 0002+02 s=1 e=0 z=0  .bss .bss       TRK_saved_exceptionID                                        */
static u8 TRK_saved_exceptionID[2 + 2 /* padding */];

/* 8044F294-8044F338 00A4+00 s=11 e=1 z=0  None .bss       gTRKState                                                    */
u8 gTRKState[164];

/* 8044F338-8044F768 0430+00 s=12 e=6 z=0  None .bss       gTRKCPUState                                                 */
u8 gTRKCPUState[1072];

/* 8044F768-8044F7FC 0094+00 s=1 e=0 z=0  None .bss       gTRKSaveState                                                */
static u8 gTRKSaveState[148];

/* 8036F684-8036F818 0194+00 s=0 e=1 z=0  None .text      TRKInterruptHandler                                          */
//	8036F698: 8044F294 (gTRKState)
//	8036F69C: 8044F294 (gTRKState)
//	8036F6B8: 8044F290 (TRK_saved_exceptionID)
//	8036F6BC: 8044F290 (TRK_saved_exceptionID)
//	8036F6CC: 8044F338 (gTRKCPUState)
//	8036F6D0: 8044F338 (gTRKCPUState)
//	8036F6DC: 80371C7C (TRKUARTInterruptHandler)
//	8036F6E0: 8044F338 (gTRKCPUState)
//	8036F6E4: 8044F338 (gTRKCPUState)
//	8036F6F0: 8044F294 (gTRKState)
//	8036F6F4: 8044F294 (gTRKState)
//	8036F708: 803D3244 (gTRKExceptionStatus)
//	8036F70C: 803D3244 (gTRKExceptionStatus)
//	8036F71C: 8044F294 (gTRKState)
//	8036F720: 8044F294 (gTRKState)
//	8036F730: 8044F768 (gTRKSaveState)
//	8036F734: 8044F768 (gTRKSaveState)
//	8036F74C: 8044F290 (TRK_saved_exceptionID)
//	8036F750: 8044F290 (TRK_saved_exceptionID)
//	8036F758: 803D3244 (gTRKExceptionStatus)
//	8036F75C: 803D3244 (gTRKExceptionStatus)
//	8036F768: 8036F818 (TRKExceptionHandler)
//	8036F76C: 8044F338 (gTRKCPUState)
//	8036F770: 8044F338 (gTRKCPUState)
//	8036F7B0: 803711F0 (TRKSaveExtended1Block)
//	8036F7B4: 803D3244 (gTRKExceptionStatus)
//	8036F7B8: 803D3244 (gTRKExceptionStatus)
//	8036F7C4: 8044F294 (gTRKState)
//	8036F7C8: 8044F294 (gTRKState)
//	8036F814: 80370134 (TRKPostInterruptEvent)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKInterruptHandler() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKInterruptHandler.s"
}
#pragma pop


/* 8036F818-8036F8B4 009C+00 s=1 e=0 z=0  None .text      TRKExceptionHandler                                          */
//	8036F818: 803D3244 (gTRKExceptionStatus)
//	8036F81C: 803D3244 (gTRKExceptionStatus)
//	8036F890: 803D3244 (gTRKExceptionStatus)
//	8036F894: 803D3244 (gTRKExceptionStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void TRKExceptionHandler() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKExceptionHandler.s"
}
#pragma pop


/* 8036F8B4-8036F978 00C4+00 s=0 e=1 z=0  None .text      TRKSwapAndGo                                                 */
//	8036F8B4: 8044F294 (gTRKState)
//	8036F8B8: 8044F294 (gTRKState)
//	8036F904: 8044F294 (gTRKState)
//	8036F908: 8044F294 (gTRKState)
//	8036F91C: 8044F294 (gTRKState)
//	8036F920: 8044F294 (gTRKState)
//	8036F92C: 8036F978 (TRKInterruptHandlerEnableInterrupts)
//	8036F930: 803D3244 (gTRKExceptionStatus)
//	8036F934: 803D3244 (gTRKExceptionStatus)
//	8036F940: 803713A8 (TRKRestoreExtended1Block)
//	8036F944: 8044F338 (gTRKCPUState)
//	8036F948: 8044F338 (gTRKCPUState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKSwapAndGo() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKSwapAndGo.s"
}
#pragma pop


/* 8036F978-8036F9CC 0054+00 s=1 e=0 z=0  None .text      TRKInterruptHandlerEnableInterrupts                          */
//	8036F978: 8044F294 (gTRKState)
//	8036F97C: 8044F294 (gTRKState)
//	8036F9C8: 80370134 (TRKPostInterruptEvent)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void TRKInterruptHandlerEnableInterrupts() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKInterruptHandlerEnableInterrupts.s"
}
#pragma pop


/* 8036F9CC-8036F9F0 0024+00 s=1 e=0 z=0  None .text      ReadFPSCR                                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void ReadFPSCR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/ReadFPSCR.s"
}
#pragma pop


/* 8036F9F0-8036FA14 0024+00 s=1 e=0 z=0  None .text      WriteFPSCR                                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void WriteFPSCR() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/WriteFPSCR.s"
}
#pragma pop


/* 8036FA14-8036FAD8 00C4+00 s=0 e=2 z=0  None .text      TRKTargetAccessARAM                                          */
//	8036FA1C: 803D3244 (gTRKExceptionStatus)
//	8036FA30: 803D3244 (gTRKExceptionStatus)
//	8036FA6C: 80371878 (TRK__read_aram)
//	8036FA74: 8037168C (TRK__write_aram)
//	8036FA90: 803D3244 (gTRKExceptionStatus)
//	8036FA98: 803D3244 (gTRKExceptionStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAccessARAM() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessARAM.s"
}
#pragma pop


/* 8036FAD8-8036FAE8 0010+00 s=0 e=1 z=0  None .text      TRKTargetSetInputPendingPtr                                  */
//	8036FAD8: 8044F294 (gTRKState)
//	8036FADC: 8044F294 (gTRKState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetSetInputPendingPtr() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSetInputPendingPtr.s"
}
#pragma pop


/* 8036FAE8-8036FB00 0018+00 s=0 e=1 z=0  None .text      TRKTargetStop                                                */
//	8036FAE8: 8044F294 (gTRKState)
//	8036FAF0: 8044F294 (gTRKState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetStop() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetStop.s"
}
#pragma pop


/* 8036FB00-8036FB10 0010+00 s=0 e=1 z=0  None .text      TRKTargetSetStopped                                          */
//	8036FB00: 8044F294 (gTRKState)
//	8036FB04: 8044F294 (gTRKState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetSetStopped() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSetStopped.s"
}
#pragma pop


/* 8036FB10-8036FB20 0010+00 s=0 e=3 z=0  None .text      TRKTargetStopped                                             */
//	8036FB10: 8044F294 (gTRKState)
//	8036FB14: 8044F294 (gTRKState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetStopped() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetStopped.s"
}
#pragma pop


/* 8036FB20-8036FD20 0200+00 s=0 e=1 z=0  None .text      TRKTargetSupportRequest                                      */
//	8036FB28: 8044F338 (gTRKCPUState)
//	8036FB34: 8044F338 (gTRKCPUState)
//	8036FB6C: 8036CC3C (TRKConstructEvent)
//	8036FB74: 8036CC54 (TRKPostEvent)
//	8036FB88: 8044F338 (gTRKCPUState)
//	8036FB90: 8044F338 (gTRKCPUState)
//	8036FBA4: 8036EF7C (HandleOpenFileSupportRequest)
//	8036FBDC: 8044F338 (gTRKCPUState)
//	8036FBE4: 8044F338 (gTRKCPUState)
//	8036FBEC: 8036EE94 (HandleCloseFileSupportRequest)
//	8036FC24: 8044F338 (gTRKCPUState)
//	8036FC2C: 8044F338 (gTRKCPUState)
//	8036FC4C: 8036ED84 (HandlePositionFileSupportRequest)
//	8036FC88: 8044F338 (gTRKCPUState)
//	8036FC90: 8044F338 (gTRKCPUState)
//	8036FCB4: 8036F278 (TRKSuppAccessFile)
//	8036FCF0: 8036F548 (TRK_flush_cache)
//	8036FCF4: 8044F338 (gTRKCPUState)
//	8036FCFC: 8044F338 (gTRKCPUState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetSupportRequest() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSupportRequest.s"
}
#pragma pop


/* 8036FD20-8036FD30 0010+00 s=0 e=1 z=0  None .text      TRKTargetGetPC                                               */
//	8036FD20: 8044F338 (gTRKCPUState)
//	8036FD24: 8044F338 (gTRKCPUState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetGetPC() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetGetPC.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A2B60-803A2B70 0010+00 s=1 e=0 z=0  None .rodata    gTRKMemMap                                                   */
SECTION_RODATA static u8 const gTRKMemMap[16] = {
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
};

/* 803A2B70-803A2B98 0028+00 s=2 e=0 z=0  None .rodata    @276                                                         */
SECTION_RODATA static u8 const lit_276[40] = {
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
};

/* 803A2B98-803A2BC0 0028+00 s=1 e=0 z=0  None .rodata    @283                                                         */
SECTION_RODATA static u8 const lit_283[40] = {
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
};

/* 803A2BC0-803A2BE8 0028+00 s=1 e=0 z=0  None .rodata    @290                                                         */
SECTION_RODATA static u8 const lit_290[40] = {
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
};

/* 803A2BE8-803A2BF8 0010+00 s=3 e=0 z=0  None .rodata    @422                                                         */
SECTION_RODATA static u8 const lit_422[16] = {
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x6F, 0x53, 0x74, 0x65, 0x70, 0x28, 0x29, 0x0A, 0x00,
};

/* 803D3254-803D3268 0014+00 s=3 e=0 z=0  None .data      gTRKStepStatus                                               */
SECTION_DATA static u8 gTRKStepStatus[20] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 8036FD30-8036FDE8 00B8+00 s=0 e=1 z=0  None .text      TRKTargetStepOutOfRange                                      */
//	8036FD50: 803D3254 (gTRKStepStatus)
//	8036FD54: 803A2BE8 (lit_422)
//	8036FD58: 803D3254 (gTRKStepStatus)
//	8036FD64: 803A2BE8 (lit_422)
//	8036FD80: 80372C54 (MWTRACE)
//	8036FD84: 8044F338 (gTRKCPUState)
//	8036FD8C: 8044F338 (gTRKCPUState)
//	8036FDAC: 803D3254 (gTRKStepStatus)
//	8036FDB0: 803D3254 (gTRKStepStatus)
//	8036FDC0: 8044F294 (gTRKState)
//	8036FDC8: 8044F294 (gTRKState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetStepOutOfRange() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetStepOutOfRange.s"
}
#pragma pop


/* 8036FDE8-8036FE94 00AC+00 s=0 e=1 z=0  None .text      TRKTargetSingleStep                                          */
//	8036FE08: 803D3254 (gTRKStepStatus)
//	8036FE0C: 803A2BE8 (lit_422)
//	8036FE10: 803D3254 (gTRKStepStatus)
//	8036FE20: 803A2BE8 (lit_422)
//	8036FE34: 80372C54 (MWTRACE)
//	8036FE38: 8044F338 (gTRKCPUState)
//	8036FE40: 8044F338 (gTRKCPUState)
//	8036FE6C: 8044F294 (gTRKState)
//	8036FE74: 8044F294 (gTRKState)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetSingleStep() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetSingleStep.s"
}
#pragma pop


/* 8036FE94-8036FF18 0084+00 s=0 e=1 z=0  None .text      TRKTargetAddExceptionInfo                                    */
//	8036FEB4: 80003458 (memset)
//	8036FEB8: 803D3244 (gTRKExceptionStatus)
//	8036FEC0: 803D3244 (gTRKExceptionStatus)
//	8036FED8: 80370D88 (TRKTargetReadInstruction)
//	8036FEDC: 803D3244 (gTRKExceptionStatus)
//	8036FEE4: 803D3244 (gTRKExceptionStatus)
//	8036FF00: 8036D388 (TRKAppendBuffer_ui8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAddExceptionInfo() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAddExceptionInfo.s"
}
#pragma pop


/* 8036FF18-8036FFA4 008C+00 s=0 e=1 z=0  None .text      TRKTargetAddStopInfo                                         */
//	8036FF38: 80003458 (memset)
//	8036FF3C: 8044F338 (gTRKCPUState)
//	8036FF44: 8044F338 (gTRKCPUState)
//	8036FF60: 80370D88 (TRKTargetReadInstruction)
//	8036FF64: 8044F338 (gTRKCPUState)
//	8036FF6C: 8044F338 (gTRKCPUState)
//	8036FF8C: 8036D388 (TRKAppendBuffer_ui8)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAddStopInfo() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAddStopInfo.s"
}
#pragma pop


/* 8036FFA4-80370134 0190+00 s=0 e=1 z=0  None .text      TRKTargetInterrupt                                           */
//	8036FFD4: 803D3254 (gTRKStepStatus)
//	8036FFD8: 803D3254 (gTRKStepStatus)
//	8036FFE8: 8044F338 (gTRKCPUState)
//	8036FFF0: 8044F338 (gTRKCPUState)
//	8037006C: 803D3254 (gTRKStepStatus)
//	80370074: 803D3254 (gTRKStepStatus)
//	8037007C: 803D3254 (gTRKStepStatus)
//	80370084: 803D3254 (gTRKStepStatus)
//	80370088: 803A2BE8 (lit_422)
//	80370090: 803A2BE8 (lit_422)
//	8037009C: 80372C54 (MWTRACE)
//	803700A0: 803D3254 (gTRKStepStatus)
//	803700A8: 803D3254 (gTRKStepStatus)
//	803700C8: 803D3254 (gTRKStepStatus)
//	803700CC: 803D3254 (gTRKStepStatus)
//	803700DC: 8044F294 (gTRKState)
//	803700E4: 8044F294 (gTRKState)
//	803700EC: 803D3254 (gTRKStepStatus)
//	803700F0: 803D3254 (gTRKStepStatus)
//	803700FC: 8044F294 (gTRKState)
//	80370104: 8044F294 (gTRKState)
//	80370110: 8036F4B0 (TRKDoNotifyStopped)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetInterrupt() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetInterrupt.s"
}
#pragma pop


/* 80370134-803701E0 00AC+00 s=2 e=0 z=0  None .text      TRKPostInterruptEvent                                        */
//	8037013C: 8044F294 (gTRKState)
//	80370144: 8044F294 (gTRKState)
//	80370160: 8044F338 (gTRKCPUState)
//	80370164: 8044F338 (gTRKCPUState)
//	80370188: 8044F338 (gTRKCPUState)
//	80370190: 8044F338 (gTRKCPUState)
//	80370198: 80370D88 (TRKTargetReadInstruction)
//	803701C4: 8036CC3C (TRKConstructEvent)
//	803701CC: 8036CC54 (TRKPostEvent)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void TRKPostInterruptEvent() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKPostInterruptEvent.s"
}
#pragma pop


/* ############################################################################################## */
/* 8044F7FC-8044F810 0010+04 s=2 e=0 z=0  None .bss       TRKvalue128_temp                                             */
static u8 TRKvalue128_temp[16 + 4 /* padding */];

/* 803701E0-80370618 0438+00 s=0 e=2 z=0  None .text      TRKTargetAccessExtended2                                     */
//	80370214: 803A2B70 (lit_276)
//	80370218: 803D3244 (gTRKExceptionStatus)
//	8037021C: 803A2B70 (lit_276)
//	80370228: 803D3244 (gTRKExceptionStatus)
//	803702C4: 8036F548 (TRK_flush_cache)
//	803702C8: 8044F7FC (TRKvalue128_temp)
//	803702D0: 8044F7FC (TRKvalue128_temp)
//	803702E0: 803A2B70 (lit_276)
//	803702E8: 803A2B70 (lit_276)
//	8037036C: 8036F548 (TRK_flush_cache)
//	80370370: 8044F7FC (TRKvalue128_temp)
//	80370378: 8044F7FC (TRKvalue128_temp)
//	80370388: 803A2B70 (lit_276)
//	80370390: 803A2B70 (lit_276)
//	80370410: 8036F548 (TRK_flush_cache)
//	80370414: 8044F7FC (TRKvalue128_temp)
//	8037041C: 8044F7FC (TRKvalue128_temp)
//	80370450: 803A2B98 (lit_283)
//	80370454: 803A2B98 (lit_283)
//	803704C8: 8036F548 (TRK_flush_cache)
//	803704CC: 8044F7FC (TRKvalue128_temp)
//	803704D4: 8044F7FC (TRKvalue128_temp)
//	803704F0: 8036D3F0 (TRKAppendBuffer1_ui64)
//	80370500: 8036D1A4 (TRKReadBuffer1_ui64)
//	80370504: 803A2B98 (lit_283)
//	80370508: 803A2B98 (lit_283)
//	80370580: 8036F548 (TRK_flush_cache)
//	80370584: 8044F7FC (TRKvalue128_temp)
//	8037058C: 8044F7FC (TRKvalue128_temp)
//	803705DC: 803D3244 (gTRKExceptionStatus)
//	803705E4: 803D3244 (gTRKExceptionStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAccessExtended2() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessExtended2.s"
}
#pragma pop


/* 80370618-80370788 0170+00 s=0 e=2 z=0  None .text      TRKTargetAccessExtended1                                     */
//	80370640: 803D3244 (gTRKExceptionStatus)
//	80370648: 803D3244 (gTRKExceptionStatus)
//	80370680: 8044F338 (gTRKCPUState)
//	80370698: 8044F338 (gTRKCPUState)
//	803706B8: 8036D28C (TRKAppendBuffer_ui32)
//	803706E0: 803D3238 (gTRKRestoreFlags)
//	803706E8: 803D3238 (gTRKRestoreFlags)
//	803706EC: 8044F338 (gTRKCPUState)
//	803706F0: 8044F338 (gTRKCPUState)
//	80370714: 803D3238 (gTRKRestoreFlags)
//	8037071C: 803D3238 (gTRKRestoreFlags)
//	8037072C: 8036D01C (TRKReadBuffer_ui32)
//	80370748: 803D3244 (gTRKExceptionStatus)
//	80370750: 803D3244 (gTRKExceptionStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAccessExtended1() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessExtended1.s"
}
#pragma pop


/* 80370788-80370C94 050C+00 s=0 e=2 z=0  None .text      TRKTargetAccessFP                                            */
//	803707BC: 803D3244 (gTRKExceptionStatus)
//	803707C4: 803D3244 (gTRKExceptionStatus)
//	803707EC: 8036F638 (__TRK_get_MSR)
//	803707F4: 8036F640 (__TRK_set_MSR)
//	80370828: 803A2BC0 (lit_290)
//	80370830: 803A2BC0 (lit_290)
//	803708B0: 8036F548 (TRK_flush_cache)
//	803708B4: 8044F7FC (TRKvalue128_temp)
//	803708BC: 8044F7FC (TRKvalue128_temp)
//	803708E0: 8036F9CC (ReadFPSCR)
//	803708EC: 8036F9F0 (WriteFPSCR)
//	8037092C: 803A2B70 (lit_276)
//	80370934: 803A2B70 (lit_276)
//	803709CC: 8036F548 (TRK_flush_cache)
//	803709D0: 8044F7FC (TRKvalue128_temp)
//	803709D8: 8044F7FC (TRKvalue128_temp)
//	80370A18: 8036D3F0 (TRKAppendBuffer1_ui64)
//	80370A28: 8036D1A4 (TRKReadBuffer1_ui64)
//	80370A2C: 803A2BC0 (lit_290)
//	80370A34: 803A2BC0 (lit_290)
//	80370AB8: 8036F548 (TRK_flush_cache)
//	80370ABC: 8044F7FC (TRKvalue128_temp)
//	80370AC4: 8044F7FC (TRKvalue128_temp)
//	80370AEC: 8036F9CC (ReadFPSCR)
//	80370AF8: 8036F9F0 (WriteFPSCR)
//	80370B38: 803A2B70 (lit_276)
//	80370B40: 803A2B70 (lit_276)
//	80370BD8: 8036F548 (TRK_flush_cache)
//	80370BDC: 8044F7FC (TRKvalue128_temp)
//	80370BE4: 8044F7FC (TRKvalue128_temp)
//	80370C58: 803D3244 (gTRKExceptionStatus)
//	80370C60: 803D3244 (gTRKExceptionStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAccessFP() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessFP.s"
}
#pragma pop


/* 80370C94-80370D88 00F4+00 s=0 e=2 z=0  None .text      TRKTargetAccessDefault                                       */
//	80370CBC: 803D3244 (gTRKExceptionStatus)
//	80370CC4: 803D3244 (gTRKExceptionStatus)
//	80370CC8: 8044F338 (gTRKCPUState)
//	80370CF4: 8044F338 (gTRKCPUState)
//	80370D1C: 8036D28C (TRKAppendBuffer_ui32)
//	80370D2C: 8036D01C (TRKReadBuffer_ui32)
//	80370D48: 803D3244 (gTRKExceptionStatus)
//	80370D50: 803D3244 (gTRKExceptionStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAccessDefault() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessDefault.s"
}
#pragma pop


/* 80370D88-80370DD4 004C+00 s=3 e=0 z=0  None .text      TRKTargetReadInstruction                                     */
//	80370DA8: 80370DD4 (TRKTargetAccessMemory)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void TRKTargetReadInstruction() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetReadInstruction.s"
}
#pragma pop


/* 80370DD4-80370F20 014C+00 s=1 e=2 z=0  None .text      TRKTargetAccessMemory                                        */
//	80370DDC: 803D3244 (gTRKExceptionStatus)
//	80370DEC: 803D3244 (gTRKExceptionStatus)
//	80370E28: 80371B24 (TRKTargetTranslate)
//	80370E3C: 80370F20 (TRKValidMemory32)
//	80370E54: 8036F638 (__TRK_get_MSR)
//	80370E58: 8044F338 (gTRKCPUState)
//	80370E60: 8044F338 (gTRKCPUState)
//	80370E88: 8036F648 (TRK_ppc_memcpy)
//	80370EA4: 8036F648 (TRK_ppc_memcpy)
//	80370EB0: 8036F548 (TRK_flush_cache)
//	80370EC4: 8036F548 (TRK_flush_cache)
//	80370EE0: 803D3244 (gTRKExceptionStatus)
//	80370EE8: 803D3244 (gTRKExceptionStatus)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void TRKTargetAccessMemory() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKTargetAccessMemory.s"
}
#pragma pop


/* 80370F20-803711C4 02A4+00 s=1 e=0 z=0  None .text      TRKValidMemory32                                             */
//	80370F50: 803A2B60 (gTRKMemMap)
//	80370F58: 803A2B60 (gTRKMemMap)
//	80370F98: 803A2B60 (gTRKMemMap)
//	80370FA0: 803A2B60 (gTRKMemMap)
//	80370FBC: 803A2B60 (gTRKMemMap)
//	80370FC4: 803A2B60 (gTRKMemMap)
//	80371034: 803A2B60 (gTRKMemMap)
//	8037103C: 803A2B60 (gTRKMemMap)
//	80371058: 803A2B60 (gTRKMemMap)
//	80371060: 803A2B60 (gTRKMemMap)
//	8037108C: 803A2B60 (gTRKMemMap)
//	80371090: 803A2B60 (gTRKMemMap)
//	803710C0: 803A2B60 (gTRKMemMap)
//	803710C4: 803A2B60 (gTRKMemMap)
//	80371134: 803A2B60 (gTRKMemMap)
//	8037113C: 803A2B60 (gTRKMemMap)
//	80371158: 803A2B60 (gTRKMemMap)
//	80371160: 803A2B60 (gTRKMemMap)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void TRKValidMemory32() {
	nofralloc
#include "asm/TRK_MINNOW_DOLPHIN/ppc/Generic/targimpl/TRKValidMemory32.s"
}
#pragma pop


