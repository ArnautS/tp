// 
// Generated By: dol2asm
// Translation Unit: c_m3d_g_cps
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "SSystem/SComponent/c_m3d_g_cps.h"

// 
// Types:
// 

struct cXyz {
};

struct Vec {
};

struct cM3dGLin {
	/* 8026F2E8 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
void SetStartEnd(cXyz const&, cXyz const&);
	/* 8026F31C */ // False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
void SetStartEnd(Vec const&, Vec const&);
};

struct cM3dGCpsS {
};

struct cM3dGCps {
	/* 8026EF88 */ // False False
cM3dGCps();
	/* 8026EFA4 */ // False False
~cM3dGCps();
	/* 8026F000 */ // False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
void Set(cXyz const&, cXyz const&, f32);
	/* 8026F03C */ // False False
//  cM3dGCpsS const& False
// 	 cM3dGCpsS const False
// 		 cM3dGCpsS False
void Set(cM3dGCpsS const&);
	/* 8026F080 */ // False False
//  cM3dGCps const& False
// 	 cM3dGCps const False
// 		 cM3dGCps False
void SetCps(cM3dGCps const&);
};

// 
// Forward References:
// 


// False False
extern "C" void __ct__8cM3dGCpsFv();
// False False
extern "C" void __dt__8cM3dGCpsFv();
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
extern "C" void Set__8cM3dGCpsFRC4cXyzRC4cXyzf();
// False False
//  cM3dGCpsS const& False
// 	 cM3dGCpsS const False
// 		 cM3dGCpsS False
extern "C" void Set__8cM3dGCpsFRC9cM3dGCpsS();
// False False
//  cM3dGCps const& False
// 	 cM3dGCps const False
// 		 cM3dGCps False
extern "C" void SetCps__8cM3dGCpsFRC8cM3dGCps();
extern "C" extern void* __vt__8cM3dGCps[3 + 7 /* padding */];

// 
// External References:
// 

// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
extern "C" void SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz();
// False False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
//  Vec const& False
// 	 Vec const False
// 		 Vec False
extern "C" void SetStartEnd__8cM3dGLinFRC3VecRC3Vec();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
extern "C" extern void* __vt__8cM3dGLin[3];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803C3FF8-803C4020 000C+1C s=2 e=0 z=0  None .data      __vt__8cM3dGCps                                              */
SECTION_DATA void* __vt__8cM3dGCps[3 + 7 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__8cM3dGCpsFv,
	/* padding */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 8026EF88-8026EFA4 001C+00 s=0 e=5 z=20  None .text      __ct__8cM3dGCpsFv                                            */
//	8026EF88: 803A78F8 (__vt__8cM3dGLin)
//	8026EF8C: 803A78F8 (__vt__8cM3dGLin)
//	8026EF94: 803C3FF8 (__vt__8cM3dGCps)
//	8026EF98: 803C3FF8 (__vt__8cM3dGCps)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm cM3dGCps::cM3dGCps() {
	nofralloc
#include "asm/SSystem/SComponent/c_m3d_g_cps/__ct__8cM3dGCpsFv.s"
}
#pragma pop


/* 8026EFA4-8026F000 005C+00 s=1 e=7 z=6  None .text      __dt__8cM3dGCpsFv                                            */
//	8026EFBC: 803C3FF8 (__vt__8cM3dGCps)
//	8026EFC0: 803C3FF8 (__vt__8cM3dGCps)
//	8026EFCC: 803A78F8 (__vt__8cM3dGLin)
//	8026EFD0: 803A78F8 (__vt__8cM3dGLin)
//	8026EFE4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm cM3dGCps::~cM3dGCps() {
	nofralloc
#include "asm/SSystem/SComponent/c_m3d_g_cps/__dt__8cM3dGCpsFv.s"
}
#pragma pop


/* 8026F000-8026F03C 003C+00 s=1 e=2 z=10  None .text      Set__8cM3dGCpsFRC4cXyzRC4cXyzf                               */
//	8026F01C: 8026F2E8 (SetStartEnd__8cM3dGLinFRC4cXyzRC4cXyz)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  cXyz const& False
// 	 cXyz const False
// 		 cXyz False
//  f32 False
asm void cM3dGCps::Set(cXyz const& param_0, cXyz const& param_1, f32 param_2) {
	nofralloc
#include "asm/SSystem/SComponent/c_m3d_g_cps/Set__8cM3dGCpsFRC4cXyzRC4cXyzf.s"
}
#pragma pop


/* 8026F03C-8026F080 0044+00 s=0 e=1 z=10  None .text      Set__8cM3dGCpsFRC9cM3dGCpsS                                  */
//	8026F05C: 8026F31C (SetStartEnd__8cM3dGLinFRC3VecRC3Vec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cM3dGCpsS const& False
// 	 cM3dGCpsS const False
// 		 cM3dGCpsS False
asm void cM3dGCps::Set(cM3dGCpsS const& param_0) {
	nofralloc
#include "asm/SSystem/SComponent/c_m3d_g_cps/Set__8cM3dGCpsFRC9cM3dGCpsS.s"
}
#pragma pop


/* 8026F080-8026F0A8 0028+00 s=0 e=1 z=0  None .text      SetCps__8cM3dGCpsFRC8cM3dGCps                                */
//	8026F094: 8026F000 (Set__8cM3dGCpsFRC4cXyzRC4cXyzf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  cM3dGCps const& False
// 	 cM3dGCps const False
// 		 cM3dGCps False
asm void cM3dGCps::SetCps(cM3dGCps const& param_0) {
	nofralloc
#include "asm/SSystem/SComponent/c_m3d_g_cps/SetCps__8cM3dGCpsFRC8cM3dGCps.s"
}
#pragma pop


