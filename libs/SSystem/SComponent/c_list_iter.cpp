// 
// Generated By: dol2asm
// Translation Unit: c_list_iter
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "SSystem/SComponent/c_list_iter.h"

// 
// Types:
// 

struct node_list_class {
};

struct node_class {
};

// 
// Forward References:
// 

// False False
//  node_list_class* False
// 	 node_list_class False
//  int (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void cLsIt_Method(node_list_class*, int (*)(node_class*, void*), void*);
// False False
//  node_list_class* False
// 	 node_list_class False
//  void* (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void cLsIt_Judge(node_list_class*, void* (*)(node_class*, void*), void*);

// False False
//  node_list_class* False
// 	 node_list_class False
//  int (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void cLsIt_Method__FP15node_list_classPFP10node_classPv_iPv();
// False False
//  node_list_class* False
// 	 node_list_class False
//  void* (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void cLsIt_Judge__FP15node_list_classPFP10node_classPv_PvPv();

// 
// External References:
// 

// False False
//  node_class* False
// 	 node_class False
//  int (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void cNdIt_Method(node_class*, int (*)(node_class*, void*), void*);
// False False
//  node_class* False
// 	 node_class False
//  void* (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void cNdIt_Judge(node_class*, void* (*)(node_class*, void*), void*);

// False False
//  node_class* False
// 	 node_class False
//  int (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void cNdIt_Method__FP10node_classPFP10node_classPv_iPv();
// False False
//  node_class* False
// 	 node_class False
//  void* (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void cNdIt_Judge__FP10node_classPFP10node_classPv_PvPv();

// 
// Declarations:
// 

/* 80266060-80266098 0038+00 s=0 e=5 z=0  None .text      cLsIt_Method__FP15node_list_classPFP10node_classPv_iPv       */
//	8026607C: 80266324 (cNdIt_Method__FP10node_classPFP10node_classPv_iPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  node_list_class* False
// 	 node_list_class False
//  int (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 int False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
asm void cLsIt_Method(node_list_class* param_0, int (*)(node_class*, void*), void* param_2) {
	nofralloc
#include "asm/SSystem/SComponent/c_list_iter/cLsIt_Method__FP15node_list_classPFP10node_classPv_iPv.s"
}
#pragma pop


/* 80266098-802660D0 0038+00 s=0 e=4 z=0  None .text      cLsIt_Judge__FP15node_list_classPFP10node_classPv_PvPv       */
//	802660B4: 802663B4 (cNdIt_Judge__FP10node_classPFP10node_classPv_PvPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  node_list_class* False
// 	 node_list_class False
//  void* (*)(node_class*, void*) False
// 	 * False
// 		  False
// 	 void* False
// 		 void False
// 	 node_class* False
// 		 node_class False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
asm void cLsIt_Judge(node_list_class* param_0, void* (*)(node_class*, void*), void* param_2) {
	nofralloc
#include "asm/SSystem/SComponent/c_list_iter/cLsIt_Judge__FP15node_list_classPFP10node_classPv_PvPv.s"
}
#pragma pop


