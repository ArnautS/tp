//
// Generated By: dol2asm
// Translation Unit: PPCArch
//

#include "dolphin/base/PPCArch.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Forward References:
//

extern "C" void PPCMfmsr();
extern "C" void PPCMtmsr();
extern "C" void PPCMfhid0();
extern "C" static void PPCMthid0();
extern "C" void PPCMfl2cr();
extern "C" void PPCMtl2cr();
extern "C" void PPCMtdec();
extern "C" void PPCSync();
extern "C" void PPCHalt();
extern "C" void PPCMtmmcr0();
extern "C" void PPCMtmmcr1();
extern "C" void PPCMtpmc1();
extern "C" void PPCMtpmc2();
extern "C" void PPCMtpmc3();
extern "C" void PPCMtpmc4();
extern "C" void PPCMffpscr();
extern "C" void PPCMtfpscr();
extern "C" void PPCMfhid2();
extern "C" void PPCMthid2();
extern "C" void PPCMtwpar();
extern "C" void PPCDisableSpeculation();
extern "C" void PPCSetFpNonIEEEMode();

//
// External References:
//

//
// Declarations:
//

/* 80339CC0-80339CC8 334600 0008+00 0/0 5/5 0/0 .text            PPCMfmsr */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMfmsr() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMfmsr.s"
}
#pragma pop

/* 80339CC8-80339CD0 334608 0008+00 0/0 4/4 0/0 .text            PPCMtmsr */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtmsr() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtmsr.s"
}
#pragma pop

/* 80339CD0-80339CD8 334610 0008+00 1/1 1/1 0/0 .text            PPCMfhid0 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMfhid0() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMfhid0.s"
}
#pragma pop

/* 80339CD8-80339CE0 334618 0008+00 1/1 0/0 0/0 .text            PPCMthid0 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
static asm void PPCMthid0() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMthid0.s"
}
#pragma pop

/* 80339CE0-80339CE8 334620 0008+00 0/0 2/2 0/0 .text            PPCMfl2cr */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMfl2cr() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMfl2cr.s"
}
#pragma pop

/* 80339CE8-80339CF0 334628 0008+00 0/0 2/2 0/0 .text            PPCMtl2cr */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtl2cr() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtl2cr.s"
}
#pragma pop

/* 80339CF0-80339CF8 334630 0008+00 0/0 3/3 0/0 .text            PPCMtdec */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtdec() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtdec.s"
}
#pragma pop

/* 80339CF8-80339D00 334638 0008+00 0/0 9/9 0/0 .text            PPCSync */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCSync() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCSync.s"
}
#pragma pop

/* 80339D00-80339D14 334640 0014+00 0/0 7/7 0/0 .text            PPCHalt */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCHalt() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCHalt.s"
}
#pragma pop

/* 80339D14-80339D1C 334654 0008+00 0/0 1/1 0/0 .text            PPCMtmmcr0 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtmmcr0() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtmmcr0.s"
}
#pragma pop

/* 80339D1C-80339D24 33465C 0008+00 0/0 1/1 0/0 .text            PPCMtmmcr1 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtmmcr1() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtmmcr1.s"
}
#pragma pop

/* 80339D24-80339D2C 334664 0008+00 0/0 1/1 0/0 .text            PPCMtpmc1 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtpmc1() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtpmc1.s"
}
#pragma pop

/* 80339D2C-80339D34 33466C 0008+00 0/0 1/1 0/0 .text            PPCMtpmc2 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtpmc2() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtpmc2.s"
}
#pragma pop

/* 80339D34-80339D3C 334674 0008+00 0/0 1/1 0/0 .text            PPCMtpmc3 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtpmc3() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtpmc3.s"
}
#pragma pop

/* 80339D3C-80339D44 33467C 0008+00 0/0 1/1 0/0 .text            PPCMtpmc4 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtpmc4() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtpmc4.s"
}
#pragma pop

/* 80339D44-80339D64 334684 0020+00 0/0 2/2 0/0 .text            PPCMffpscr */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMffpscr() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMffpscr.s"
}
#pragma pop

/* 80339D64-80339D8C 3346A4 0028+00 0/0 2/2 0/0 .text            PPCMtfpscr */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtfpscr() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtfpscr.s"
}
#pragma pop

/* 80339D8C-80339D94 3346CC 0008+00 0/0 4/4 1/1 .text            PPCMfhid2 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMfhid2() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMfhid2.s"
}
#pragma pop

/* 80339D94-80339D9C 3346D4 0008+00 0/0 4/4 0/0 .text            PPCMthid2 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMthid2() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMthid2.s"
}
#pragma pop

/* 80339D9C-80339DA4 3346DC 0008+00 0/0 1/1 0/0 .text            PPCMtwpar */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCMtwpar() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCMtwpar.s"
}
#pragma pop

/* 80339DA4-80339DCC 3346E4 0028+00 0/0 1/1 0/0 .text            PPCDisableSpeculation */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCDisableSpeculation() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCDisableSpeculation.s"
}
#pragma pop

/* 80339DCC-80339DD4 33470C 0008+00 0/0 1/1 0/0 .text            PPCSetFpNonIEEEMode */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PPCSetFpNonIEEEMode() {
    nofralloc
#include "asm/dolphin/base/PPCArch/PPCSetFpNonIEEEMode.s"
}
#pragma pop
