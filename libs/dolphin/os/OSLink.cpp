// 
// Generated By: dol2asm
// Translation Unit: OSLink
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "dolphin/os/OSLink.h"

// 
// Forward References:
// 


// True False
//  void False
extern "C" static void OSNotifyLink();
// True False
//  void False
extern "C" static void OSNotifyUnlink();
// False False
extern "C" void OSSetStringTable();
// True False
extern "C" static void Relocate();
// True False
extern "C" static void Link();
// False False
extern "C" void OSLink();
// False False
extern "C" void OSLinkFixed();
// True False
extern "C" static void Undo();
// False False
extern "C" void OSUnlink();
// False False
extern "C" void __OSModuleInit();

// 
// External References:
// 


// False False
SECTION_INIT void memset();
// False False
extern "C" void OSReport();
// False False
extern "C" void DCFlushRange();
// False False
extern "C" void ICInvalidateRange();

// 
// Declarations:
// 

/* 8033DF60-8033DF64 0004+00 s=1 e=0 z=0  None .text      OSNotifyLink                                                 */
// True False
//  void False
extern "C" static void OSNotifyLink() {
	/* empty function */
}


/* 8033DF64-8033DF68 0004+00 s=1 e=0 z=0  None .text      OSNotifyUnlink                                               */
// True False
//  void False
extern "C" static void OSNotifyUnlink() {
	/* empty function */
}


/* 8033DF68-8033DF74 000C+00 s=0 e=1 z=0  None .text      OSSetStringTable                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void OSSetStringTable() {
	nofralloc
#include "asm/dolphin/os/OSLink/OSSetStringTable.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D0788-803D07B0 0025+03 s=1 e=0 z=0  None .data      @62                                                          */
SECTION_DATA static u8 lit_62[37 + 3 /* padding */] = {
	0x4F, 0x53, 0x4C, 0x69, 0x6E, 0x6B, 0x3A, 0x20, 0x75, 0x6E, 0x6B, 0x6E, 0x6F, 0x77, 0x6E, 0x20,
	0x72, 0x65, 0x6C, 0x6F, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20,
	0x25, 0x33, 0x64, 0x0A, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 8033DF74-8033E230 02BC+00 s=1 e=0 z=0  None .text      Relocate                                                     */
//	8033DFE0: 803D0788 (lit_62)
//	8033DFE8: 803D0788 (lit_62)
//	8033E1A4: 8033B5AC (DCFlushRange)
//	8033E1B0: 8033B690 (ICInvalidateRange)
//	8033E1DC: 80006ABC (OSReport)
//	8033E208: 8033B5AC (DCFlushRange)
//	8033E214: 8033B690 (ICInvalidateRange)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void Relocate() {
	nofralloc
#include "asm/dolphin/os/OSLink/Relocate.s"
}
#pragma pop


/* 8033E230-8033E510 02E0+00 s=2 e=0 z=0  None .text      Link                                                         */
//	8033E43C: 8033DF74 (Relocate)
//	8033E454: 8033DF74 (Relocate)
//	8033E468: 8033DF74 (Relocate)
//	8033E4E0: 80003458 (memset)
//	8033E4E8: 8033DF60 (OSNotifyLink)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void Link() {
	nofralloc
#include "asm/dolphin/os/OSLink/Link.s"
}
#pragma pop


/* 8033E510-8033E534 0024+00 s=0 e=1 z=0  None .text      OSLink                                                       */
//	8033E520: 8033E230 (Link)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void OSLink() {
	nofralloc
#include "asm/dolphin/os/OSLink/OSLink.s"
}
#pragma pop


/* 8033E534-8033E570 003C+00 s=0 e=1 z=0  None .text      OSLinkFixed                                                  */
//	8033E55C: 8033E230 (Link)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void OSLinkFixed() {
	nofralloc
#include "asm/dolphin/os/OSLink/OSLinkFixed.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D07B0-803D07D8 0027+01 s=1 e=0 z=0  None .data      @189                                                         */
SECTION_DATA static u8 lit_189[39 + 1 /* padding */] = {
	0x4F, 0x53, 0x55, 0x6E, 0x6C, 0x69, 0x6E, 0x6B, 0x3A, 0x20, 0x75, 0x6E, 0x6B, 0x6E, 0x6F, 0x77,
	0x6E, 0x20, 0x72, 0x65, 0x6C, 0x6F, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x74, 0x79, 0x70,
	0x65, 0x20, 0x25, 0x33, 0x64, 0x0A, 0x00,
	/* padding */
	0x00,
};

/* 8033E570-8033E7A8 0238+00 s=1 e=0 z=0  None .text      Undo                                                         */
//	8033E5CC: 803D07B0 (lit_189)
//	8033E5D4: 803D07B0 (lit_189)
//	8033E71C: 8033B5AC (DCFlushRange)
//	8033E728: 8033B690 (ICInvalidateRange)
//	8033E754: 80006ABC (OSReport)
//	8033E780: 8033B5AC (DCFlushRange)
//	8033E78C: 8033B690 (ICInvalidateRange)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void Undo() {
	nofralloc
#include "asm/dolphin/os/OSLink/Undo.s"
}
#pragma pop


/* 8033E7A8-8033E97C 01D4+00 s=0 e=1 z=0  None .text      OSUnlink                                                     */
//	8033E80C: 8033E570 (Undo)
//	8033E820: 8033DF64 (OSNotifyUnlink)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void OSUnlink() {
	nofralloc
#include "asm/dolphin/os/OSLink/OSUnlink.s"
}
#pragma pop


/* 8033E97C-8033E994 0018+00 s=0 e=1 z=0  None .text      __OSModuleInit                                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __OSModuleInit() {
	nofralloc
#include "asm/dolphin/os/OSLink/__OSModuleInit.s"
}
#pragma pop


