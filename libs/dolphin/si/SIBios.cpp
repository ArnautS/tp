// 
// Generated By: dol2asm
// Translation Unit: SIBios
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "dolphin/si/SIBios.h"

// 
// Forward References:
// 


// False False
extern "C" void SIBusy();
// False False
extern "C" void SIIsChanBusy();
// True False
extern "C" static void CompleteTransfer();
// True False
extern "C" static void SIInterruptHandler();
// True False
extern "C" static void SIEnablePollingInterrupt();
// False False
extern "C" void SIRegisterPollingHandler();
// False False
extern "C" void SIUnregisterPollingHandler();
// False False
extern "C" void SIInit();
// True False
extern "C" static void __SITransfer();
// False False
extern "C" void SIGetStatus();
// False False
extern "C" void SISetCommand();
// False False
extern "C" void SITransferCommands();
// False False
extern "C" void SISetXY();
// False False
extern "C" void SIEnablePolling();
// False False
extern "C" void SIDisablePolling();
// True False
extern "C" static void SIGetResponseRaw();
// False False
extern "C" void SIGetResponse();
// True False
extern "C" static void AlarmHandler();
// False False
extern "C" void SITransfer();
// True False
extern "C" static void GetTypeCallback();
// False False
extern "C" void SIGetType();
// False False
extern "C" void SIGetTypeAsync();
extern "C" extern u8 lit_457[12];
extern "C" extern u8 lit_459[15 + 1 /* padding */];
extern "C" extern u8 lit_460[15 + 1 /* padding */];
extern "C" extern u8 lit_461[13 + 3 /* padding */];
extern "C" extern u8 SIBios__lit_462[10 + 2 /* padding */];
extern "C" extern u8 SIBios__lit_463[16];
extern "C" extern u8 SIBios__lit_464[20];
extern "C" extern u8 SIBios__lit_465[18 + 2 /* padding */];
extern "C" extern u8 SIBios__lit_466[20];
extern "C" extern u8 lit_467[9 + 3 /* padding */];
extern "C" extern u8 lit_468[9 + 7 /* padding */];
extern "C" extern u8 InputBufferValid[16];
extern "C" extern u8 InputBuffer[32];
extern "C" extern u8 InputBufferVcount[16];
extern "C" extern u8 data_8044C820[16];
extern "C" extern u8 __PADFixBits[4 + 4 /* padding */];

// 
// External References:
// 


// False False
extern "C" void OSRegisterVersion();
// False False
extern "C" void OSSetAlarm();
// False False
extern "C" void OSCancelAlarm();
// False False
extern "C" void OSDisableInterrupts();
// False False
extern "C" void OSRestoreInterrupts();
// False False
extern "C" void __OSSetInterruptHandler();
// False False
extern "C" void __OSUnmaskInterrupts();
// False False
extern "C" void OSGetWirelessID();
// False False
extern "C" void OSSetWirelessID();
// False False
extern "C" void __OSGetSystemTime();
// False False
extern "C" void SISetSamplingRate();
// False False
extern "C" void VIGetCurrentLine();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803D11B8-803D11FC 0044+00 s=4 e=0 z=0  None .data      @1                                                           */
SECTION_DATA static u8 lit_1[68] = {
	0x3C, 0x3C, 0x20, 0x44, 0x6F, 0x6C, 0x70, 0x68, 0x69, 0x6E, 0x20, 0x53, 0x44, 0x4B, 0x20, 0x2D,
	0x20, 0x53, 0x49, 0x09, 0x72, 0x65, 0x6C, 0x65, 0x61, 0x73, 0x65, 0x20, 0x62, 0x75, 0x69, 0x6C,
	0x64, 0x3A, 0x20, 0x41, 0x70, 0x72, 0x20, 0x20, 0x35, 0x20, 0x32, 0x30, 0x30, 0x34, 0x20, 0x30,
	0x34, 0x3A, 0x31, 0x34, 0x3A, 0x31, 0x36, 0x20, 0x28, 0x30, 0x78, 0x32, 0x33, 0x30, 0x31, 0x29,
	0x20, 0x3E, 0x3E, 0x00,
};

/* 803D11FC-803D1210 0014+00 s=8 e=0 z=0  None .data      Si                                                           */
SECTION_DATA static u8 Si[20] = {
	0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
};

/* 80344BA0-80344BC0 0020+00 s=0 e=1 z=0  None .text      SIBusy                                                       */
//	80344BA0: 803D11FC (Si)
//	80344BA4: 803D11FC (Si)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIBusy() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIBusy.s"
}
#pragma pop


/* ############################################################################################## */
/* 8044C630-8044C6B0 0080+00 s=9 e=0 z=0  None .bss       Packet                                                       */
static u8 Packet[128];

/* 80344BC0-80344BFC 003C+00 s=0 e=1 z=0  None .text      SIIsChanBusy                                                 */
//	80344BC0: 8044C630 (Packet)
//	80344BC8: 8044C630 (Packet)
//	80344BE0: 803D11FC (Si)
//	80344BE4: 803D11FC (Si)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIIsChanBusy() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIIsChanBusy.s"
}
#pragma pop


/* ############################################################################################## */
/* 8044C6B0-8044C750 00A0+00 s=1 e=0 z=0  None .bss       Alarm                                                        */
static u8 Alarm[160];

/* 8044C750-8044C770 0020+00 s=2 e=0 z=0  None .bss       TypeTime                                                     */
static u8 TypeTime[32];

/* 8044C770-8044C790 0020+00 s=1 e=0 z=0  None .bss       XferTime                                                     */
static u8 XferTime[32];

/* 80344BFC-80344EF8 02FC+00 s=1 e=0 z=0  None .text      CompleteTransfer                                             */
//	80344C2C: 803D11B8 (lit_1)
//	80344C3C: 803D11B8 (lit_1)
//	80344C4C: 8034271C (__OSGetSystemTime)
//	80344C54: 8044C770 (XferTime)
//	80344C58: 8044C770 (XferTime)
//	80344E90: 8034271C (__OSGetSystemTime)
//	80344E98: 8044C750 (TypeTime)
//	80344E9C: 8044C750 (TypeTime)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void CompleteTransfer() {
	nofralloc
#include "asm/dolphin/si/SIBios/CompleteTransfer.s"
}
#pragma pop


/* ############################################################################################## */
/* 804516F0-804516F4 0004+00 s=1 e=0 z=0  None .sbss      cmdTypeAndStatus$78                                          */
static u8 cmdTypeAndStatus_78[4];

/* 80344EF8-8034523C 0344+00 s=1 e=0 z=0  None .text      SIInterruptHandler                                           */
//	80344F04: 8044C630 (Packet)
//	80344F08: 803D11B8 (lit_1)
//	80344F1C: 8044C630 (Packet)
//	80344F20: 803D11B8 (lit_1)
//	80344F3C: 80344BFC (CompleteTransfer)
//	80344F80: 8034271C (__OSGetSystemTime)
//	80344FC0: 80345548 (__SITransfer)
//	80344FD8: 8033AC3C (OSCancelAlarm)
//	80345080: 80345CF8 (GetTypeCallback)
//	80345098: 80345CF8 (GetTypeCallback)
//	803450A4: 804516F0 (cmdTypeAndStatus_78)
//	803450B4: 80345B8C (SITransfer)
//	803450C8: 8034DA04 (VIGetCurrentLine)
//	803450EC: 80345968 (SIGetResponseRaw)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void SIInterruptHandler() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIInterruptHandler.s"
}
#pragma pop


/* 8034523C-803452D4 0098+00 s=2 e=0 z=0  None .text      SIEnablePollingInterrupt                                     */
//	80345240: 8044C630 (Packet)
//	80345250: 8044C630 (Packet)
//	80345260: 8033D6F4 (OSDisableInterrupts)
//	803452B0: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void SIEnablePollingInterrupt() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIEnablePollingInterrupt.s"
}
#pragma pop


/* ############################################################################################## */
/* 8044C790-8044C7D0 0040+00 s=1 e=0 z=0  None .bss       TypeCallback                                                 */
static u8 TypeCallback[64];

/* 8044C7D0-8044C7E0 0010+00 s=2 e=0 z=0  None .bss       RDSTHandler                                                  */
static u8 RDSTHandler[16];

/* 803452D4-803453A0 00CC+00 s=0 e=1 z=0  None .text      SIRegisterPollingHandler                                     */
//	803452EC: 8033D6F4 (OSDisableInterrupts)
//	803452F0: 8044C7D0 (RDSTHandler)
//	803452F8: 8044C7D0 (RDSTHandler)
//	80345318: 8033D71C (OSRestoreInterrupts)
//	80345344: 8044C7D0 (RDSTHandler)
//	8034534C: 8044C7D0 (RDSTHandler)
//	8034535C: 8034523C (SIEnablePollingInterrupt)
//	80345364: 8033D71C (OSRestoreInterrupts)
//	80345380: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIRegisterPollingHandler() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIRegisterPollingHandler.s"
}
#pragma pop


/* 803453A0-80345494 00F4+00 s=0 e=1 z=0  None .text      SIUnregisterPollingHandler                                   */
//	803453B8: 8033D6F4 (OSDisableInterrupts)
//	803453BC: 8044C7D0 (RDSTHandler)
//	803453C4: 8044C7D0 (RDSTHandler)
//	803453E4: 8044C7D0 (RDSTHandler)
//	803453EC: 8044C7D0 (RDSTHandler)
//	80345450: 8034523C (SIEnablePollingInterrupt)
//	80345458: 8033D71C (OSRestoreInterrupts)
//	80345474: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIUnregisterPollingHandler() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIUnregisterPollingHandler.s"
}
#pragma pop


/* ############################################################################################## */
/* 804509C8-804509D0 0004+04 s=1 e=0 z=0  None .sdata     __SIVersion                                                  */
SECTION_SDATA static void* __SIVersion[1 + 1 /* padding */] = {
	(void*)&lit_1,
	/* padding */
	NULL,
};

/* 80345494-80345548 00B4+00 s=0 e=1 z=0  None .text      SIInit                                                       */
//	80345498: 8044C630 (Packet)
//	803454A8: 8044C630 (Packet)
//	803454AC: 804509C8 (__SIVersion)
//	803454B0: 8033A874 (OSRegisterVersion)
//	803454BC: 803D11FC (Si)
//	803454C0: 803D11FC (Si)
//	803454DC: 80346290 (SISetSamplingRate)
//	803454F8: 80344EF8 (SIInterruptHandler)
//	80345500: 80344EF8 (SIInterruptHandler)
//	80345508: 8033D740 (__OSSetInterruptHandler)
//	80345510: 8033DB44 (__OSUnmaskInterrupts)
//	80345518: 80345F90 (SIGetType)
//	80345520: 80345F90 (SIGetType)
//	80345528: 80345F90 (SIGetType)
//	80345530: 80345F90 (SIGetType)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIInit() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIInit.s"
}
#pragma pop


/* 80345548-80345754 020C+00 s=3 e=0 z=0  None .text      __SITransfer                                                 */
//	8034554C: 803D11B8 (lit_1)
//	80345574: 803D11B8 (lit_1)
//	80345578: 8033D6F4 (OSDisableInterrupts)
//	80345588: 8033D71C (OSRestoreInterrupts)
//	8034571C: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void __SITransfer() {
	nofralloc
#include "asm/dolphin/si/SIBios/__SITransfer.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D1210-803D1220 0010+00 s=5 e=0 z=0  None .data      Type                                                         */
SECTION_DATA static u8 Type[16] = {
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08,
};

/* 80345754-803457D0 007C+00 s=1 e=1 z=0  None .text      SIGetStatus                                                  */
//	8034576C: 8033D6F4 (OSDisableInterrupts)
//	8034578C: 803D1210 (Type)
//	80345794: 803D1210 (Type)
//	803457B0: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIGetStatus() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIGetStatus.s"
}
#pragma pop


/* 803457D0-803457E4 0014+00 s=0 e=4 z=0  None .text      SISetCommand                                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SISetCommand() {
	nofralloc
#include "asm/dolphin/si/SIBios/SISetCommand.s"
}
#pragma pop


/* 803457E4-803457F4 0010+00 s=0 e=1 z=0  None .text      SITransferCommands                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SITransferCommands() {
	nofralloc
#include "asm/dolphin/si/SIBios/SITransferCommands.s"
}
#pragma pop


/* 803457F4-80345860 006C+00 s=0 e=1 z=0  None .text      SISetXY                                                      */
//	80345810: 8033D6F4 (OSDisableInterrupts)
//	80345814: 803D11FC (Si)
//	80345818: 803D11FC (Si)
//	80345844: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SISetXY() {
	nofralloc
#include "asm/dolphin/si/SIBios/SISetXY.s"
}
#pragma pop


/* 80345860-803458FC 009C+00 s=0 e=3 z=0  None .text      SIEnablePolling                                              */
//	80345878: 803D11FC (Si)
//	8034587C: 803D11FC (Si)
//	80345888: 8033D6F4 (OSDisableInterrupts)
//	8034588C: 803D11FC (Si)
//	80345890: 803D11FC (Si)
//	803458E0: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIEnablePolling() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIEnablePolling.s"
}
#pragma pop


/* 803458FC-80345968 006C+00 s=0 e=6 z=0  None .text      SIDisablePolling                                             */
//	80345914: 803D11FC (Si)
//	80345918: 803D11FC (Si)
//	80345924: 8033D6F4 (OSDisableInterrupts)
//	80345928: 803D11FC (Si)
//	8034592C: 803D11FC (Si)
//	8034594C: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIDisablePolling() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIDisablePolling.s"
}
#pragma pop


/* 80345968-80345A3C 00D4+00 s=1 e=0 z=0  None .text      SIGetResponseRaw                                             */
//	8034596C: 8044C630 (Packet)
//	8034597C: 8044C630 (Packet)
//	8034598C: 8033D6F4 (OSDisableInterrupts)
//	803459AC: 803D1210 (Type)
//	803459B4: 803D1210 (Type)
//	803459D0: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void SIGetResponseRaw() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIGetResponseRaw.s"
}
#pragma pop


/* 80345A3C-80345B00 00C4+00 s=0 e=4 z=0  None .text      SIGetResponse                                                */
//	80345A40: 8044C630 (Packet)
//	80345A58: 8044C630 (Packet)
//	80345A5C: 8033D6F4 (OSDisableInterrupts)
//	80345A68: 80345754 (SIGetStatus)
//	80345AE4: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIGetResponse() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIGetResponse.s"
}
#pragma pop


/* 80345B00-80345B8C 008C+00 s=1 e=0 z=0  None .text      AlarmHandler                                                 */
//	80345B04: 8044C6B0 (Alarm)
//	80345B0C: 8044C6B0 (Alarm)
//	80345B34: 8044C630 (Packet)
//	80345B3C: 8044C630 (Packet)
//	80345B64: 80345548 (__SITransfer)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void AlarmHandler() {
	nofralloc
#include "asm/dolphin/si/SIBios/AlarmHandler.s"
}
#pragma pop


/* 80345B8C-80345CF8 016C+00 s=3 e=3 z=0  None .text      SITransfer                                                   */
//	80345BA0: 8044C630 (Packet)
//	80345BA4: 8044C630 (Packet)
//	80345BCC: 8033D6F4 (OSDisableInterrupts)
//	80345BE0: 803D11FC (Si)
//	80345BE4: 803D11FC (Si)
//	80345BF4: 8033D71C (OSRestoreInterrupts)
//	80345C00: 8034271C (__OSGetSystemTime)
//	80345C64: 80345B00 (AlarmHandler)
//	80345C6C: 80345B00 (AlarmHandler)
//	80345C7C: 8033AB58 (OSSetAlarm)
//	80345C9C: 80345548 (__SITransfer)
//	80345CAC: 8033D71C (OSRestoreInterrupts)
//	80345CDC: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SITransfer() {
	nofralloc
#include "asm/dolphin/si/SIBios/SITransfer.s"
}
#pragma pop


/* ############################################################################################## */
/* 804516F4-804516F8 0004+00 s=1 e=0 z=0  None .sbss      cmdTypeAndStatus$372                                         */
static u8 cmdTypeAndStatus_372[4];

/* 804516F8-80451700 0004+04 s=1 e=1 z=0  None .sbss      __PADFixBits                                                 */
u8 __PADFixBits[4 + 4 /* padding */];

/* 80345CF8-80345F90 0298+00 s=2 e=0 z=0  None .text      GetTypeCallback                                              */
//	80345D0C: 803D1210 (Type)
//	80345D10: 803D1210 (Type)
//	80345D1C: 8044C630 (Packet)
//	80345D24: 8044C630 (Packet)
//	80345D40: 8034271C (__OSGetSystemTime)
//	80345D60: 804516F8 (__PADFixBits)
//	80345D6C: 804516F8 (__PADFixBits)
//	80345DA0: 8034084C (OSSetWirelessID)
//	80345DF4: 803407C8 (OSGetWirelessID)
//	80345E4C: 80345B8C (SITransfer)
//	80345E88: 8034084C (OSSetWirelessID)
//	80345EC0: 80345B8C (SITransfer)
//	80345EE8: 8034084C (OSSetWirelessID)
//	80345F20: 80345B8C (SITransfer)
//	80345F30: 8034084C (OSSetWirelessID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
extern "C" asm static void GetTypeCallback() {
	nofralloc
#include "asm/dolphin/si/SIBios/GetTypeCallback.s"
}
#pragma pop


/* 80345F90-80346154 01C4+00 s=2 e=3 z=0  None .text      SIGetType                                                    */
//	80345FA4: 8033D6F4 (OSDisableInterrupts)
//	80345FA8: 803D1210 (Type)
//	80345FB0: 803D1210 (Type)
//	80345FC0: 8034271C (__OSGetSystemTime)
//	80345FC4: 8044C750 (TypeTime)
//	80345FCC: 8044C750 (TypeTime)
//	80345FD8: 803D11FC (Si)
//	80345FDC: 803D11FC (Si)
//	80346008: 8034271C (__OSGetSystemTime)
//	80346018: 8033D71C (OSRestoreInterrupts)
//	8034607C: 8033D71C (OSRestoreInterrupts)
//	803460E0: 8034271C (__OSGetSystemTime)
//	803460EC: 80345CF8 (GetTypeCallback)
//	803460F8: 80345CF8 (GetTypeCallback)
//	80346120: 804516F4 (cmdTypeAndStatus_372)
//	80346130: 80345B8C (SITransfer)
//	80346138: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIGetType() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIGetType.s"
}
#pragma pop


/* 80346154-80346290 013C+00 s=0 e=6 z=0  None .text      SIGetTypeAsync                                               */
//	80346178: 8033D6F4 (OSDisableInterrupts)
//	80346184: 80345F90 (SIGetType)
//	80346188: 803D1210 (Type)
//	80346190: 803D1210 (Type)
//	803461A8: 8044C790 (TypeCallback)
//	803461B0: 8044C790 (TypeCallback)
//	80346268: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void SIGetTypeAsync() {
	nofralloc
#include "asm/dolphin/si/SIBios/SIGetTypeAsync.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D1220-803D122C 000C+00 s=0 e=0 z=0  None .data      @457                                                         */
SECTION_DATA u8 lit_457[12] = {
	0x4E, 0x6F, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6F, 0x6E, 0x73, 0x65, 0x00,
};

/* 803D122C-803D123C 000F+01 s=0 e=0 z=0  None .data      @459                                                         */
SECTION_DATA u8 lit_459[15 + 1 /* padding */] = {
	0x4E, 0x36, 0x34, 0x20, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x6C, 0x65, 0x72, 0x00,
	/* padding */
	0x00,
};

/* 803D123C-803D124C 000F+01 s=0 e=0 z=0  None .data      @460                                                         */
SECTION_DATA u8 lit_460[15 + 1 /* padding */] = {
	0x4E, 0x36, 0x34, 0x20, 0x6D, 0x69, 0x63, 0x72, 0x6F, 0x70, 0x68, 0x6F, 0x6E, 0x65, 0x00,
	/* padding */
	0x00,
};

/* 803D124C-803D125C 000D+03 s=0 e=0 z=0  None .data      @461                                                         */
SECTION_DATA u8 lit_461[13 + 3 /* padding */] = {
	0x4E, 0x36, 0x34, 0x20, 0x6B, 0x65, 0x79, 0x62, 0x6F, 0x61, 0x72, 0x64, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803D125C-803D1268 000A+02 s=0 e=0 z=0  None .data      @462                                                         */
SECTION_DATA u8 SIBios__lit_462[10 + 2 /* padding */] = {
	0x4E, 0x36, 0x34, 0x20, 0x6D, 0x6F, 0x75, 0x73, 0x65, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 803D1268-803D1278 0010+00 s=0 e=0 z=0  None .data      @463                                                         */
SECTION_DATA u8 SIBios__lit_463[16] = {
	0x47, 0x61, 0x6D, 0x65, 0x42, 0x6F, 0x79, 0x20, 0x41, 0x64, 0x76, 0x61, 0x6E, 0x63, 0x65, 0x00,
};

/* 803D1278-803D128C 0014+00 s=0 e=0 z=0  None .data      @464                                                         */
SECTION_DATA u8 SIBios__lit_464[20] = {
	0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x20, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C,
	0x6C, 0x65, 0x72, 0x00,
};

/* 803D128C-803D12A0 0012+02 s=0 e=0 z=0  None .data      @465                                                         */
SECTION_DATA u8 SIBios__lit_465[18 + 2 /* padding */] = {
	0x57, 0x69, 0x72, 0x65, 0x6C, 0x65, 0x73, 0x73, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x00,
	/* padding */
	0x00, 0x00,
};

/* 803D12A0-803D12B4 0014+00 s=0 e=0 z=0  None .data      @466                                                         */
SECTION_DATA u8 SIBios__lit_466[20] = {
	0x57, 0x61, 0x76, 0x65, 0x42, 0x69, 0x72, 0x64, 0x20, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C,
	0x6C, 0x65, 0x72, 0x00,
};

/* 803D12B4-803D12C0 0009+03 s=0 e=0 z=0  None .data      @467                                                         */
SECTION_DATA u8 lit_467[9 + 3 /* padding */] = {
	0x4B, 0x65, 0x79, 0x62, 0x6F, 0x61, 0x72, 0x64, 0x00,
	/* padding */
	0x00, 0x00, 0x00,
};

/* 803D12C0-803D12D0 0009+07 s=0 e=0 z=0  None .data      @468                                                         */
SECTION_DATA u8 lit_468[9 + 7 /* padding */] = {
	0x53, 0x74, 0x65, 0x65, 0x72, 0x69, 0x6E, 0x67, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 8044C7E0-8044C7F0 0010+00 s=0 e=0 z=0  None .bss       InputBufferValid                                             */
u8 InputBufferValid[16];

/* 8044C7F0-8044C810 0020+00 s=0 e=0 z=0  None .bss       InputBuffer                                                  */
u8 InputBuffer[32];

/* 8044C810-8044C820 0010+00 s=0 e=0 z=0  None .bss       InputBufferVcount                                            */
u8 InputBufferVcount[16];

/* 8044C820-8044C830 0010+00 s=0 e=0 z=0  None .bss       cmdFixDevice$327                                             */
u8 data_8044C820[16];

