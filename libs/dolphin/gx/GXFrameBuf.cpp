// 
// Generated By: dol2asm
// Translation Unit: GXFrameBuf
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "dolphin/gx/GXFrameBuf.h"

// 
// Forward References:
// 


// False False
extern "C" void GXSetDispCopySrc();
// False False
extern "C" void GXSetTexCopySrc();
// False False
extern "C" void GXSetDispCopyDst();
// False False
extern "C" void GXSetTexCopyDst();
// False False
extern "C" void GXSetDispCopyFrame2Field();
// False False
extern "C" void GXSetCopyClamp();
// False False
extern "C" void GXGetNumXfbLines();
// False False
extern "C" void GXGetYScaleFactor();
// False False
extern "C" void GXSetDispCopyYScale();
// False False
extern "C" void GXSetCopyClear();
// False False
extern "C" void GXSetCopyFilter();
// False False
extern "C" void GXSetDispCopyGamma();
// False False
extern "C" void GXCopyDisp();
// False False
extern "C" void GXCopyTex();
// False False
extern "C" void GXClearBoundingBox();
extern "C" extern u8 GXNtsc480IntDf[60];
extern "C" extern u8 GXNtsc480Int[60];
extern "C" extern u8 GXMpal480IntDf[60];
extern "C" extern u8 GXPal528IntDf[60];
extern "C" extern u8 GXEurgb60Hz480IntDf[60 + 4 /* padding */];

// 
// External References:
// 


// False False
extern "C" void __GetImageTileCount();
// False False
extern "C" void __cvt_fp2unsigned();
extern "C" extern void* __GXData;

// 
// Declarations:
// 

/* 8035CA04-8035CA80 007C+00 s=0 e=2 z=0  None .text      GXSetDispCopySrc                                             */
//	8035CA04: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetDispCopySrc() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetDispCopySrc.s"
}
#pragma pop


/* 8035CA80-8035CAFC 007C+00 s=0 e=9 z=0  None .text      GXSetTexCopySrc                                              */
//	8035CA80: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetTexCopySrc() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetTexCopySrc.s"
}
#pragma pop


/* 8035CAFC-8035CB30 0034+00 s=0 e=2 z=0  None .text      GXSetDispCopyDst                                             */
//	8035CAFC: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetDispCopyDst() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetDispCopyDst.s"
}
#pragma pop


/* 8035CB30-8035CC60 0130+00 s=0 e=9 z=0  None .text      GXSetTexCopyDst                                              */
//	8035CB58: 80456580 (__GXData)
//	8035CB8C: 80456580 (__GXData)
//	8035CBA4: 80456580 (__GXData)
//	8035CBBC: 80456580 (__GXData)
//	8035CBF8: 8035DD78 (__GetImageTileCount)
//	8035CBFC: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetTexCopyDst() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetTexCopyDst.s"
}
#pragma pop


/* 8035CC60-8035CC84 0024+00 s=0 e=1 z=0  None .text      GXSetDispCopyFrame2Field                                     */
//	8035CC60: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetDispCopyFrame2Field() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetDispCopyFrame2Field.s"
}
#pragma pop


/* 8035CC84-8035CCDC 0058+00 s=0 e=2 z=0  None .text      GXSetCopyClamp                                               */
//	8035CC88: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetCopyClamp() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetCopyClamp.s"
}
#pragma pop


/* ############################################################################################## */
/* 804565A8-804565B0 0004+04 s=3 e=0 z=0  None .sdata2    @179                                                         */
SECTION_SDATA2 static f32 lit_179[1 + 1 /* padding */] = {
	256.0f,
	/* padding */
	0.0f,
};

/* 8035CCDC-8035CD6C 0090+00 s=0 e=2 z=0  None .text      GXGetNumXfbLines                                             */
//	8035CCF0: 804565A8 (lit_179)
//	8035CCF8: 803620AC (__cvt_fp2unsigned)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXGetNumXfbLines() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXGetNumXfbLines.s"
}
#pragma pop


/* ############################################################################################## */
/* 804565B0-804565B8 0008+00 s=1 e=0 z=0  None .sdata2    @234                                                         */
SECTION_SDATA2 static f64 lit_234 = 4503599627370496.0 /* cast u32 to float */;

/* 8035CD6C-8035CFA4 0238+00 s=0 e=2 z=0  None .text      GXGetYScaleFactor                                            */
//	8035CDB0: 804565B0 (lit_234)
//	8035CDC0: 804565A8 (lit_179)
//	8035CDD4: 803620AC (__cvt_fp2unsigned)
//	8035CE2C: 804565B0 (lit_234)
//	8035CE34: 804565A8 (lit_179)
//	8035CE78: 803620AC (__cvt_fp2unsigned)
//	8035CED8: 804565B0 (lit_234)
//	8035CEDC: 804565A8 (lit_179)
//	8035CF20: 803620AC (__cvt_fp2unsigned)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXGetYScaleFactor() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXGetYScaleFactor.s"
}
#pragma pop


/* 8035CFA4-8035D070 00CC+00 s=0 e=2 z=0  None .text      GXSetDispCopyYScale                                          */
//	8035CFB0: 804565A8 (lit_179)
//	8035CFB8: 803620AC (__cvt_fp2unsigned)
//	8035CFC0: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetDispCopyYScale() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetDispCopyYScale.s"
}
#pragma pop


/* 8035D070-8035D0E8 0078+00 s=0 e=2 z=0  None .text      GXSetCopyClear                                               */
//	8035D088: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetCopyClear() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetCopyClear.s"
}
#pragma pop


/* 8035D0E8-8035D2F0 0208+00 s=0 e=4 z=0  None .text      GXSetCopyFilter                                              */
//	8035D2C4: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetCopyFilter() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetCopyFilter.s"
}
#pragma pop


/* 8035D2F0-8035D304 0014+00 s=0 e=2 z=0  None .text      GXSetDispCopyGamma                                           */
//	8035D2F0: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXSetDispCopyGamma() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXSetDispCopyGamma.s"
}
#pragma pop


/* 8035D304-8035D46C 0168+00 s=0 e=3 z=0  None .text      GXCopyDisp                                                   */
//	8035D30C: 80456580 (__GXData)
//	8035D358: 80456580 (__GXData)
//	8035D36C: 80456580 (__GXData)
//	8035D3A0: 80456580 (__GXData)
//	8035D448: 80456580 (__GXData)
//	8035D45C: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXCopyDisp() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXCopyDisp.s"
}
#pragma pop


/* 8035D46C-8035D5F8 018C+00 s=0 e=9 z=0  None .text      GXCopyTex                                                    */
//	8035D474: 80456580 (__GXData)
//	8035D4B4: 80456580 (__GXData)
//	8035D52C: 80456580 (__GXData)
//	8035D5D4: 80456580 (__GXData)
//	8035D5E8: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXCopyTex() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXCopyTex.s"
}
#pragma pop


/* 8035D5F8-8035D630 0038+00 s=0 e=1 z=0  None .text      GXClearBoundingBox                                           */
//	8035D5FC: 80456580 (__GXData)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void GXClearBoundingBox() {
	nofralloc
#include "asm/dolphin/gx/GXFrameBuf/GXClearBoundingBox.s"
}
#pragma pop


/* ############################################################################################## */
/* 803D2448-803D2484 003C+00 s=0 e=2 z=0  None .data      GXNtsc480IntDf                                               */
SECTION_DATA u8 GXNtsc480IntDf[60] = {
	0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0x01, 0xE0, 0x01, 0xE0, 0x00, 0x28, 0x00, 0x00, 0x02, 0x80,
	0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x08, 0x08, 0x0A, 0x0C, 0x0A, 0x08, 0x08, 0x00, 0x00, 0x00,
};

/* 803D2484-803D24C0 003C+00 s=0 e=1 z=0  None .data      GXNtsc480Int                                                 */
SECTION_DATA u8 GXNtsc480Int[60] = {
	0x00, 0x00, 0x00, 0x00, 0x02, 0x80, 0x01, 0xE0, 0x01, 0xE0, 0x00, 0x28, 0x00, 0x00, 0x02, 0x80,
	0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x00, 0x00, 0x15, 0x16, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803D24C0-803D24FC 003C+00 s=0 e=1 z=0  None .data      GXMpal480IntDf                                               */
SECTION_DATA u8 GXMpal480IntDf[60] = {
	0x00, 0x00, 0x00, 0x08, 0x02, 0x80, 0x01, 0xE0, 0x01, 0xE0, 0x00, 0x28, 0x00, 0x00, 0x02, 0x80,
	0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x08, 0x08, 0x0A, 0x0C, 0x0A, 0x08, 0x08, 0x00, 0x00, 0x00,
};

/* 803D24FC-803D2538 003C+00 s=0 e=1 z=0  None .data      GXPal528IntDf                                                */
SECTION_DATA u8 GXPal528IntDf[60] = {
	0x00, 0x00, 0x00, 0x04, 0x02, 0x80, 0x02, 0x10, 0x02, 0x10, 0x00, 0x28, 0x00, 0x17, 0x02, 0x80,
	0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x08, 0x08, 0x0A, 0x0C, 0x0A, 0x08, 0x08, 0x00, 0x00, 0x00,
};

/* 803D2538-803D2578 003C+04 s=0 e=1 z=0  None .data      GXEurgb60Hz480IntDf                                          */
SECTION_DATA u8 GXEurgb60Hz480IntDf[60 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x14, 0x02, 0x80, 0x01, 0xE0, 0x01, 0xE0, 0x00, 0x28, 0x00, 0x00, 0x02, 0x80,
	0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
	0x06, 0x06, 0x08, 0x08, 0x0A, 0x0C, 0x0A, 0x08, 0x08, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

