// 
// Generated By: dol2asm
// Translation Unit: Z2SceneMgr
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "Z2AudioLib/Z2SceneMgr.h"

// 
// Types:
// 

struct dSv_memBit_c {
	/* 80034860 */ // False False
//  int False
void isSwitch(int) const;
};

struct dSv_info_c {
	/* 80035360 */ // False False
//  int False
//  int False
void isSwitch(int, int) const;
};

struct dSv_event_c {
	/* 800349BC */ // False False
//  u16 False
void isEventBit(u16) const;
};

struct Z2StatusMgr {
	/* 802B617C */ // False False
void menuOut();
	/* 802B61E8 */ // False False
//  char* False
// 	 char False
void setDemoName(char*);
	/* 802B6734 */ // False False
void checkDayTime();
};

struct Z2SoundObjMgr {
	/* 802BF980 */ // False False
//  bool False
//  u16 False
//  u16 False
//  u16 False
void setForceBattleArea(bool, u16, u16, u16);
	/* 802BFFEC */ // False False
//  u8 False
void setGhostEnemyState(u8);
	/* 802C013C */ // False False
void deleteEnemyAll();
};

struct Z2SoundMgr {
	/* 802AA430 */ // False False
void resetFilterAll();
};

struct Z2SeqMgr {
	/* 802AF010 */ // False False
//  u32 False
//  u32 False
//  s32 False
void bgmStart(u32, u32, s32);
	/* 802AF408 */ // False False
//  u32 False
//  s32 False
void bgmStop(u32, s32);
	/* 802AFB94 */ // False False
//  u32 False
void bgmStreamPrepare(u32);
	/* 802AFDEC */ // False False
void bgmStreamCheckReady();
	/* 802AFE18 */ // False False
void bgmStreamPlay();
	/* 802AFF8C */ // False False
//  s32 False
void changeBgmStatus(s32);
	/* 802B3318 */ // False False
//  bool False
//  u32 False
void setHeightVolMod(bool, u32);
	/* 802B3398 */ // False False
//  bool False
//  u32 False
void setTimeProcVolMod(bool, u32);
	/* 802B3EAC */ // False False
//  u32 False
void checkBgmIDPlaying(u32);
	/* 802B4128 */ // False False
void resetBattleBgmParams();
	/* 802B4164 */ // False False
//  bool False
void setBattleBgmOff(bool);
	/* 802B9968 */ // True False
//  bool False
void setFieldBgmPlay(bool);
	/* 802B99AC */ // True False
//  u32 False
void unMuteSceneBgm(u32);
	/* 802B9A24 */ // True False
//  u32 False
//  f32 False
void muteSceneBgm(u32, f32);
	/* 802B9AD0 */ // True False
//  f32 False
void setTwilightGateVol(f32);
	/* 802B9AFC */ // True False
//  f32 False
//  u32 False
void setWindStoneVol(f32, u32);
};

struct Z2SeMgr {
	/* 802AB80C */ // False False
void resetModY();
	/* 802AD94C */ // False False
//  u32 False
void seStopAll(u32);
	/* 802AD9F4 */ // False False
//  f32 False
//  u32 False
void seMoveVolumeAll(f32, u32);
	/* 802B9AC4 */ // True False
void resetCrowdSize();
};

struct JAISoundID {
	/* 802B9B60 */ // True False
//  u32 False
JAISoundID(u32);
	/* 802B995C */ // True False
//  JAISoundID const& False
// 	 JAISoundID const False
// 		 JAISoundID False
JAISoundID(JAISoundID const&);
	/* 802B9A88 */ // True False
//  JAISoundID const& False
// 	 JAISoundID const False
// 		 JAISoundID False
void operator=(JAISoundID const&);
};

struct Z2SceneMgr {
	/* 802B6840 */ // False False
Z2SceneMgr();
	/* 802B68B0 */ // False False
//  bool False
void setInDarkness(bool);
	/* 802B68E0 */ // False False
//  bool False
void setSceneExist(bool);
	/* 802B697C */ // False False
//  u8 False
void setFadeOutStart(u8);
	/* 802B6A18 */ // False False
//  u8 False
void setFadeInStart(u8);
	/* 802B6AF8 */ // False False
//  char* False
// 	 char False
//  s32 False
//  s32 False
void setSceneName(char*, s32, s32);
	/* 802B9B68 */ // True False
//  JAISoundID False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
//  bool False
void sceneChange(JAISoundID, u8, u8, u8, u8, u8, bool);
	/* 802B9C50 */ // False False
void framework();
	/* 802B9D40 */ // False False
void load1stDynamicWave();
	/* 802B9D98 */ // True False
void _load1stWaveInner_1();
	/* 802B9FC8 */ // True False
void _load1stWaveInner_2();
	/* 802BA09C */ // False False
void check1stDynamicWave();
	/* 802BA120 */ // False False
void load2ndDynamicWave();
	/* 802BA294 */ // False False
void sceneBgmStart();
	/* 802BA56C */ // False False
void loadStaticWaves();
	/* 802BA5C0 */ // False False
//  bool False
bool checkFirstWaves();
	/* 802BA5C8 */ // True False
//  u32 False
void eraseSeWave(u32);
	/* 802BA630 */ // True False
//  u32 False
void eraseBgmWave(u32);
	/* 802BA698 */ // True False
//  u32 False
//  u32 False
void getWaveLoadStatus(u32, u32);
	/* 802BA704 */ // True False
//  u32 False
void loadSeWave(u32);
	/* 802BA770 */ // True False
//  u32 False
void loadBgmWave(u32);
};

struct Z2FxLineMgr {
	/* 802BAEB8 */ // False False
//  s32 False
void setSceneFx(s32);
};

struct Z2EnvSeMgr {
	/* 802C699C */ // False False
void resetSceneInner();
	/* 802C6AC0 */ // False False
//  s32 False
//  s8 False
//  f32 False
void initSceneEnvSe(s32, s8, f32);
};

template <typename A0>
struct JSUList { };
/* JSUList<JAIStream> */
struct JSUList__template2 {
	/* 802B9994 */ // False True
void getFirst() const;
};

struct JAUSoundTable {
	/* 802A7160 */ // False False
//  JAISoundID False
void getTypeID(JAISoundID) const;
};

struct JASHeap {
};

struct JASWaveArc {
	/* 8029A4C0 */ // False False
//  JASHeap* False
// 	 JASHeap False
void load(JASHeap*);
	/* 8029A580 */ // False False
//  JASHeap* False
// 	 JASHeap False
void loadTail(JASHeap*);
	/* 8029A640 */ // False False
void erase();
};

struct JAIStreamMgr {
	/* 802B9978 */ // True False
void isActive() const;
};

struct JAISoundParamsMove {
	/* 802A2DB4 */ // False False
//  f32 False
//  u32 False
void moveVolume(f32, u32);
};

struct JAISound {
	/* 802A24DC */ // False False
//  u32 False
void stop(u32);
	/* 802B9988 */ // True False
void getID() const;
};

// 
// Forward References:
// 

// True False
static void dComIfGs_getStartPoint();
// True False
//  int False
static void dComIfGs_isSaveSwitch(int);

// False False
extern "C" void __ct__10Z2SceneMgrFv();
// False False
//  bool False
extern "C" void setInDarkness__10Z2SceneMgrFb();
// False False
//  bool False
extern "C" void setSceneExist__10Z2SceneMgrFb();
// False False
//  u8 False
extern "C" void setFadeOutStart__10Z2SceneMgrFUc();
// False False
//  u8 False
extern "C" void setFadeInStart__10Z2SceneMgrFUc();
// False False
//  char* False
// 	 char False
//  s32 False
//  s32 False
extern "C" void setSceneName__10Z2SceneMgrFPcll();
// True False
//  JAISoundID const& False
// 	 JAISoundID const False
// 		 JAISoundID False
extern "C" void __ct__10JAISoundIDFRC10JAISoundID();
// True False
//  bool False
extern "C" void setFieldBgmPlay__8Z2SeqMgrFb();
// True False
extern "C" void isActive__12JAIStreamMgrCFv();
// True False
extern "C" void getID__8JAISoundCFv();
// False True
extern "C" void func_802B9994();
// True False
extern "C" static void dComIfGs_getStartPoint__Fv();
// True False
//  u32 False
extern "C" void unMuteSceneBgm__8Z2SeqMgrFUl();
// True False
//  u32 False
//  f32 False
extern "C" void muteSceneBgm__8Z2SeqMgrFUlf();
// True False
//  JAISoundID const& False
// 	 JAISoundID const False
// 		 JAISoundID False
extern "C" void __as__10JAISoundIDFRC10JAISoundID();
// True False
//  int False
extern "C" static void dComIfGs_isSaveSwitch__Fi();
// True False
extern "C" void resetCrowdSize__7Z2SeMgrFv();
// True False
//  f32 False
extern "C" void setTwilightGateVol__8Z2SeqMgrFf();
// True False
//  f32 False
//  u32 False
extern "C" void setWindStoneVol__8Z2SeqMgrFfUl();
// True False
//  u32 False
extern "C" void __ct__10JAISoundIDFUl();
// True False
//  JAISoundID False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
//  bool False
extern "C" void sceneChange__10Z2SceneMgrF10JAISoundIDUcUcUcUcUcb();
// False False
extern "C" void framework__10Z2SceneMgrFv();
// False False
extern "C" void load1stDynamicWave__10Z2SceneMgrFv();
// True False
extern "C" void _load1stWaveInner_1__10Z2SceneMgrFv();
// True False
extern "C" void _load1stWaveInner_2__10Z2SceneMgrFv();
// False False
extern "C" void check1stDynamicWave__10Z2SceneMgrFv();
// False False
extern "C" void load2ndDynamicWave__10Z2SceneMgrFv();
// False False
extern "C" void sceneBgmStart__10Z2SceneMgrFv();
// False False
extern "C" void loadStaticWaves__10Z2SceneMgrFv();
// False False
//  bool False
extern "C" bool checkFirstWaves__10Z2SceneMgrFv();
// True False
//  u32 False
extern "C" void eraseSeWave__10Z2SceneMgrFUl();
// True False
//  u32 False
extern "C" void eraseBgmWave__10Z2SceneMgrFUl();
// True False
//  u32 False
//  u32 False
extern "C" void getWaveLoadStatus__10Z2SceneMgrFUlUl();
// True False
//  u32 False
extern "C" void loadSeWave__10Z2SceneMgrFUl();
// True False
//  u32 False
extern "C" void loadBgmWave__10Z2SceneMgrFUl();
extern "C" extern char const* const Z2SceneMgr__stringBase0;

// 
// External References:
// 

// False False
//  int False
//  int False
void dComIfGs_isStageSwitch(int, int);
// False False
//  u16 False
void dComIfGs_isEventBit(u16);

// False False
//  int False
//  int False
extern "C" void dComIfGs_isStageSwitch__Fii();
// False False
//  int False
extern "C" void isSwitch__12dSv_memBit_cCFi();
// False False
//  u16 False
extern "C" void isEventBit__11dSv_event_cCFUs();
// False False
//  int False
//  int False
extern "C" void isSwitch__10dSv_info_cCFii();
// False False
//  u16 False
extern "C" void dComIfGs_isEventBit__FUs();
// False False
//  JASHeap* False
// 	 JASHeap False
extern "C" void load__10JASWaveArcFP7JASHeap();
// False False
//  JASHeap* False
// 	 JASHeap False
extern "C" void loadTail__10JASWaveArcFP7JASHeap();
// False False
extern "C" void erase__10JASWaveArcFv();
// False False
//  u32 False
extern "C" void stop__8JAISoundFUl();
// False False
//  f32 False
//  u32 False
extern "C" void moveVolume__18JAISoundParamsMoveFfUl();
// False False
//  JAISoundID False
extern "C" void getTypeID__13JAUSoundTableCF10JAISoundID();
// False False
extern "C" void resetFilterAll__10Z2SoundMgrFv();
// False False
extern "C" void resetModY__7Z2SeMgrFv();
// False False
//  u32 False
extern "C" void seStopAll__7Z2SeMgrFUl();
// False False
//  f32 False
//  u32 False
extern "C" void seMoveVolumeAll__7Z2SeMgrFfUl();
// False False
//  u32 False
//  u32 False
//  s32 False
extern "C" void bgmStart__8Z2SeqMgrFUlUll();
// False False
//  u32 False
//  s32 False
extern "C" void bgmStop__8Z2SeqMgrFUll();
// False False
//  u32 False
extern "C" void bgmStreamPrepare__8Z2SeqMgrFUl();
// False False
extern "C" void bgmStreamCheckReady__8Z2SeqMgrFv();
// False False
extern "C" void bgmStreamPlay__8Z2SeqMgrFv();
// False False
//  s32 False
extern "C" void changeBgmStatus__8Z2SeqMgrFl();
// False False
//  bool False
//  u32 False
extern "C" void setHeightVolMod__8Z2SeqMgrFbUl();
// False False
//  bool False
//  u32 False
extern "C" void setTimeProcVolMod__8Z2SeqMgrFbUl();
// False False
//  u32 False
extern "C" void checkBgmIDPlaying__8Z2SeqMgrFUl();
// False False
extern "C" void resetBattleBgmParams__8Z2SeqMgrFv();
// False False
//  bool False
extern "C" void setBattleBgmOff__8Z2SeqMgrFb();
// False False
extern "C" void menuOut__11Z2StatusMgrFv();
// False False
//  char* False
// 	 char False
extern "C" void setDemoName__11Z2StatusMgrFPc();
// False False
extern "C" void checkDayTime__11Z2StatusMgrFv();
// False False
//  s32 False
extern "C" void setSceneFx__11Z2FxLineMgrFl();
// False False
//  bool False
//  u16 False
//  u16 False
//  u16 False
extern "C" void setForceBattleArea__13Z2SoundObjMgrFbUsUsUs();
// False False
//  u8 False
extern "C" void setGhostEnemyState__13Z2SoundObjMgrFUc();
// False False
extern "C" void deleteEnemyAll__13Z2SoundObjMgrFv();
// False False
extern "C" void resetSceneInner__10Z2EnvSeMgrFv();
// False False
//  s32 False
//  s8 False
//  f32 False
extern "C" void initSceneEnvSe__10Z2EnvSeMgrFlScf();
// False False
extern "C" void _savegpr_16();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_16();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void strcmp();
extern "C" extern u8 saveBitLabels__16dSv_event_flag_c[1644 + 4 /* padding */];
extern "C" extern u8 g_dComIfG_gameInfo[122384];
extern "C" extern u8 struct_80450860[4];
extern "C" extern u8 data_80450B3C[4];
extern "C" extern u8 data_80450B40[4];
extern "C" extern u8 data_80450B48[4];
extern "C" extern u8 data_80450B58[4];
extern "C" extern u8 data_80450B60[4];
extern "C" extern u8 data_80450B7C[4];
extern "C" extern u8 data_80450B80[4];
extern "C" extern u8 data_80450B84[4];
extern "C" extern u8 data_80450B88[4];
extern "C" extern u8 data_80450CC0[4 + 4 /* padding */];

// 
// Declarations:
// 

/* 802B6840-802B68B0 0070+00 s=0 e=1 z=0  None .text      __ct__10Z2SceneMgrFv                                         */
//	802B6844: 80450B80 (data_80450B80)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm Z2SceneMgr::Z2SceneMgr() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/__ct__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802B68B0-802B68E0 0030+00 s=0 e=1 z=0  None .text      setInDarkness__10Z2SceneMgrFb                                */
//	802B68C8: 80450B60 (data_80450B60)
//	802B68CC: 802AA430 (resetFilterAll__10Z2SoundMgrFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  bool False
asm void Z2SceneMgr::setInDarkness(bool param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setInDarkness__10Z2SceneMgrFb.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455A38-80455A3C 0004+00 s=8 e=0 z=0  None .sdata2    @3511                                                        */
SECTION_SDATA2 static u8 lit_3511[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80455A3C-80455A40 0004+00 s=6 e=0 z=0  None .sdata2    @3512                                                        */
SECTION_SDATA2 static f32 lit_3512 = 1.0f;

/* 802B68E0-802B697C 009C+00 s=3 e=2 z=2  None .text      setSceneExist__10Z2SceneMgrFb                                */
//	802B68F8: 80450B60 (data_80450B60)
//	802B691C: 80455A38 (lit_3511)
//	802B6924: 802A2DB4 (moveVolume__18JAISoundParamsMoveFfUl)
//	802B6934: 80450B88 (data_80450B88)
//	802B6938: 80455A38 (lit_3511)
//	802B6940: 802AD9F4 (seMoveVolumeAll__7Z2SeMgrFfUl)
//	802B694C: 80455A3C (lit_3512)
//	802B6954: 802A2DB4 (moveVolume__18JAISoundParamsMoveFfUl)
//	802B6960: 80455A38 (lit_3511)
//	802B6968: 802A2DB4 (moveVolume__18JAISoundParamsMoveFfUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  bool False
asm void Z2SceneMgr::setSceneExist(bool param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setSceneExist__10Z2SceneMgrFb.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455A40-80455A48 0004+04 s=1 e=0 z=0  None .sdata2    @3529                                                        */
SECTION_SDATA2 static f32 lit_3529[1 + 1 /* padding */] = {
	3.0f / 10.0f,
	/* padding */
	0.0f,
};

/* 80455A48-80455A50 0008+00 s=5 e=0 z=0  None .sdata2    @3531                                                        */
SECTION_SDATA2 static f64 lit_3531 = 4503599627370496.0 /* cast u32 to float */;

/* 802B697C-802B6A18 009C+00 s=0 e=1 z=0  None .text      setFadeOutStart__10Z2SceneMgrFUc                             */
//	802B6994: 802B68E0 (setSceneExist__10Z2SceneMgrFb)
//	802B6998: 80450B84 (data_80450B84)
//	802B69A8: 80455A40 (lit_3529)
//	802B69B4: 80455A48 (lit_3531)
//	802B69D8: 80450B88 (data_80450B88)
//	802B69DC: 80455A38 (lit_3511)
//	802B69E4: 802AD9F4 (seMoveVolumeAll__7Z2SeMgrFfUl)
//	802B69E8: 80450B84 (data_80450B84)
//	802B69F0: 802B4164 (setBattleBgmOff__8Z2SeqMgrFb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
asm void Z2SceneMgr::setFadeOutStart(u8 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setFadeOutStart__10Z2SceneMgrFUc.s"
}
#pragma pop


/* 802B6A18-802B6AF8 00E0+00 s=0 e=1 z=0  None .text      setFadeInStart__10Z2SceneMgrFUc                              */
//	802B6A38: 80450B88 (data_80450B88)
//	802B6A3C: 80455A38 (lit_3511)
//	802B6A44: 802AD9F4 (seMoveVolumeAll__7Z2SeMgrFfUl)
//	802B6A4C: 80450B88 (data_80450B88)
//	802B6A50: 80455A3C (lit_3512)
//	802B6A58: 802AD9F4 (seMoveVolumeAll__7Z2SeMgrFfUl)
//	802B6A68: 80450B60 (data_80450B60)
//	802B6A70: 80455A38 (lit_3511)
//	802B6A78: 802A2DB4 (moveVolume__18JAISoundParamsMoveFfUl)
//	802B6A7C: 80455A3C (lit_3512)
//	802B6A80: 80450B84 (data_80450B84)
//	802B6A88: 80450B7C (data_80450B7C)
//	802B6A8C: 802B617C (menuOut__11Z2StatusMgrFv)
//	802B6A9C: 80450B84 (data_80450B84)
//	802B6AAC: 80455A3C (lit_3512)
//	802B6AB8: 80455A48 (lit_3531)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
asm void Z2SceneMgr::setFadeInStart(u8 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setFadeInStart__10Z2SceneMgrFUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039BFA8-8039C220 0274+04 s=2 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8039BFA8 = "F_SP00";
SECTION_DEAD char const* const stringBase_8039BFAF = "F_SP103";
SECTION_DEAD char const* const stringBase_8039BFB7 = "R_SP01";
SECTION_DEAD char const* const stringBase_8039BFBE = "F_SP104";
SECTION_DEAD char const* const stringBase_8039BFC6 = "R_SP107";
SECTION_DEAD char const* const stringBase_8039BFCE = "F_SP108";
SECTION_DEAD char const* const stringBase_8039BFD6 = "R_SP108";
SECTION_DEAD char const* const stringBase_8039BFDE = "F_SP117";
SECTION_DEAD char const* const stringBase_8039BFE6 = "F_SP109";
SECTION_DEAD char const* const stringBase_8039BFEE = "R_SP109";
SECTION_DEAD char const* const stringBase_8039BFF6 = "R_SP209";
SECTION_DEAD char const* const stringBase_8039BFFE = "F_SP110";
SECTION_DEAD char const* const stringBase_8039C006 = "R_SP110";
SECTION_DEAD char const* const stringBase_8039C00E = "F_SP111";
SECTION_DEAD char const* const stringBase_8039C016 = "F_SP128";
SECTION_DEAD char const* const stringBase_8039C01E = "R_SP128";
SECTION_DEAD char const* const stringBase_8039C026 = "F_SP115";
SECTION_DEAD char const* const stringBase_8039C02E = "F_SP112";
SECTION_DEAD char const* const stringBase_8039C036 = "F_SP126";
SECTION_DEAD char const* const stringBase_8039C03E = "F_SP127";
SECTION_DEAD char const* const stringBase_8039C046 = "R_SP127";
SECTION_DEAD char const* const stringBase_8039C04E = "F_SP113";
SECTION_DEAD char const* const stringBase_8039C056 = "F_SP116";
SECTION_DEAD char const* const stringBase_8039C05E = "R_SP116";
SECTION_DEAD char const* const stringBase_8039C066 = "R_SP160";
SECTION_DEAD char const* const stringBase_8039C06E = "R_SP161";
SECTION_DEAD char const* const stringBase_8039C076 = "F_SP114";
SECTION_DEAD char const* const stringBase_8039C07E = "F_SP118";
SECTION_DEAD char const* const stringBase_8039C086 = "F_SP124";
SECTION_DEAD char const* const stringBase_8039C08E = "F_SP125";
SECTION_DEAD char const* const stringBase_8039C096 = "F_SP121";
SECTION_DEAD char const* const stringBase_8039C09E = "F_SP122";
SECTION_DEAD char const* const stringBase_8039C0A6 = "F_SP123";
SECTION_DEAD char const* const stringBase_8039C0AE = "F_SP200";
SECTION_DEAD char const* const stringBase_8039C0B6 = "F_SP102";
SECTION_DEAD char const* const stringBase_8039C0BE = "";
SECTION_DEAD char const* const stringBase_8039C0BF = "R_SP300";
SECTION_DEAD char const* const stringBase_8039C0C7 = "R_SP301";
SECTION_DEAD char const* const stringBase_8039C0CF = "T_ENEMY";
SECTION_DEAD char const* const stringBase_8039C0D7 = "D_MN54";
SECTION_DEAD char const* const stringBase_8039C0DE = "D_MN05";
SECTION_DEAD char const* const stringBase_8039C0E5 = "D_MN05B";
SECTION_DEAD char const* const stringBase_8039C0ED = "D_MN05A";
SECTION_DEAD char const* const stringBase_8039C0F5 = "D_MN04";
SECTION_DEAD char const* const stringBase_8039C0FC = "D_MN04B";
SECTION_DEAD char const* const stringBase_8039C104 = "D_MN04A";
SECTION_DEAD char const* const stringBase_8039C10C = "D_MN01";
SECTION_DEAD char const* const stringBase_8039C113 = "D_MN01B";
SECTION_DEAD char const* const stringBase_8039C11B = "D_MN01A";
SECTION_DEAD char const* const stringBase_8039C123 = "D_MN10";
SECTION_DEAD char const* const stringBase_8039C12A = "D_MN10B";
SECTION_DEAD char const* const stringBase_8039C132 = "D_MN10A";
SECTION_DEAD char const* const stringBase_8039C13A = "D_MN11";
SECTION_DEAD char const* const stringBase_8039C141 = "D_MN11B";
SECTION_DEAD char const* const stringBase_8039C149 = "D_MN11A";
SECTION_DEAD char const* const stringBase_8039C151 = "D_MN06";
SECTION_DEAD char const* const stringBase_8039C158 = "D_MN06B";
SECTION_DEAD char const* const stringBase_8039C160 = "D_MN06A";
SECTION_DEAD char const* const stringBase_8039C168 = "D_MN07";
SECTION_DEAD char const* const stringBase_8039C16F = "D_MN07B";
SECTION_DEAD char const* const stringBase_8039C177 = "D_MN07A";
SECTION_DEAD char const* const stringBase_8039C17F = "D_MN08";
SECTION_DEAD char const* const stringBase_8039C186 = "D_MN08B";
SECTION_DEAD char const* const stringBase_8039C18E = "D_MN08C";
SECTION_DEAD char const* const stringBase_8039C196 = "D_MN08A";
SECTION_DEAD char const* const stringBase_8039C19E = "D_MN08D";
SECTION_DEAD char const* const stringBase_8039C1A6 = "D_MN09";
SECTION_DEAD char const* const stringBase_8039C1AD = "D_MN09A";
SECTION_DEAD char const* const stringBase_8039C1B5 = "D_MN09B";
SECTION_DEAD char const* const stringBase_8039C1BD = "D_MN09C";
SECTION_DEAD char const* const stringBase_8039C1C5 = "D_SB00";
SECTION_DEAD char const* const stringBase_8039C1CC = "D_SB01";
SECTION_DEAD char const* const stringBase_8039C1D3 = "D_SB02";
SECTION_DEAD char const* const stringBase_8039C1DA = "D_SB03";
SECTION_DEAD char const* const stringBase_8039C1E1 = "D_SB04";
SECTION_DEAD char const* const stringBase_8039C1E8 = "D_SB05";
SECTION_DEAD char const* const stringBase_8039C1EF = "D_SB06";
SECTION_DEAD char const* const stringBase_8039C1F6 = "D_SB07";
SECTION_DEAD char const* const stringBase_8039C1FD = "D_SB08";
SECTION_DEAD char const* const stringBase_8039C204 = "D_SB09";
SECTION_DEAD char const* const stringBase_8039C20B = "D_SB10";
SECTION_DEAD char const* const stringBase_8039C212 = "force_end";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039C21C = "\0\0\0";
#pragma pop

/* 803CA5C0-803CA704 0144+00 s=1 e=0 z=0  None .data      sSpotName                                                    */
SECTION_DATA static void* sSpotName[81] = {
	(void*)&Z2SceneMgr__stringBase0,
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x7),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xF),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x16),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x26),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x2E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x36),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x3E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x46),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x4E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x56),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x5E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x66),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x6E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x76),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x7E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x86),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x8E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x96),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x9E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xA6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xAE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xB6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xBE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xC6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xCE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xD6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xDE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xE6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xEE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xF6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0xFE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x106),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x10E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x116),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x117),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x11F),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x127),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x12F),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x136),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x13D),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x145),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x14D),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x154),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x15C),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x164),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x16B),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x173),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x17B),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x182),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x18A),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x192),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x199),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1A1),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1A9),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1B0),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1B8),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1C0),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1C7),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1CF),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1D7),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1DE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1E6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1EE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1F6),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x1FE),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x205),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x20D),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x215),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x21D),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x224),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x22B),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x232),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x239),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x240),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x247),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x24E),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x255),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x25C),
	(void*)(((char*)&Z2SceneMgr__stringBase0)+0x263),
};

/* 803CA704-803CA744 0040+00 s=1 e=0 z=0  None .data      @5354                                                        */
SECTION_DATA static void* lit_5354[16] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BDC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BE4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BE4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BDC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BE4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BE4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BDC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BEC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2BC0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BEC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BDC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BEC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BEC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BDC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BE4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BE4),
};

/* 803CA744-803CA784 0040+00 s=1 e=0 z=0  None .data      @5353                                                        */
SECTION_DATA static void* lit_5353[16] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BA0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BB8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1B98),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1B98),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1B98),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BA0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BB8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BA0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BBC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BA8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BA8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BA8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BB0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BB0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BB0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BB8),
};

/* 803CA784-803CA7BC 0038+00 s=1 e=0 z=0  None .data      @5352                                                        */
SECTION_DATA static void* lit_5352[14] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC78),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xCC8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xCC8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xCA0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xCC8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC08),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC08),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xCC8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC18),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC20),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC28),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC34),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xC3C),
};

/* 803CA7BC-803CA7F4 0038+00 s=1 e=0 z=0  None .data      @5351                                                        */
SECTION_DATA static void* lit_5351[14] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xAF4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xADC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xADC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB48),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xADC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xAEC),
};

/* 803CA7F4-803CA824 0030+00 s=1 e=0 z=0  None .data      @5350                                                        */
SECTION_DATA static void* lit_5350[12] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x7B0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x72C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x804),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x804),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x778),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x788),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x798),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x790),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x798),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x7A0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x7A8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x7A8),
};

/* 803CA824-803CA844 0020+00 s=1 e=0 z=0  None .data      @5349                                                        */
SECTION_DATA static void* lit_5349[8] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x430),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x45C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x52C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x604),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x604),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x628),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x6F4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x604),
};

/* 803CA844-803CA878 0034+00 s=1 e=0 z=0  None .data      @5348                                                        */
SECTION_DATA static void* lit_5348[13] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x3E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2E0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x3E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x364),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x378),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x338),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x3E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x3E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x338),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x35C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x3E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x3E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x328),
};

/* 803CA878-803CA9BC 0144+00 s=1 e=0 z=0  None .data      @5347                                                        */
SECTION_DATA static void* lit_5347[81] = {
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x150),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1E0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x40C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x700),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x80C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xA08),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x968),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1824),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xB94),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xCF4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xF00),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1010),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1174),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0xF70),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1098),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1140),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x11BC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x13B4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x12D8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1338),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1384),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1468),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x150C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x15E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1688),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x17E0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x18E8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1994),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1934),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x19C8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1A30),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1BF4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1CF8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1DA8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1D2C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2BC0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2A7C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x948),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x134),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2BC0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1E68),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1EA4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1F00),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1FAC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x1FE8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2038),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x20D8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2108),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2158),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x21F8),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2248),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2298),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2338),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2374),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x23D0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x247C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x24AC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x24FC),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x259C),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x25F4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2644),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x26E4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2760),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2760),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x27B0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2894),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x28D4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2980),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2A04),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2A34),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2AC4),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2A84),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2AF0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2AF0),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2B18),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2B44),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2B44),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2B44),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2B44),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2B44),
	(void*)(((char*)setSceneName__10Z2SceneMgrFPcll)+0x2B6C),
};

/* 80455A50-80455A54 0004+00 s=1 e=0 z=0  None .sdata2    @5341                                                        */
SECTION_SDATA2 static f32 lit_5341 = -1.0f;

/* 80455A54-80455A58 0004+00 s=2 e=0 z=0  None .sdata2    @5342                                                        */
SECTION_SDATA2 static f32 lit_5342 = 0.5f;

/* 80455A58-80455A5C 0004+00 s=1 e=0 z=0  None .sdata2    @5343                                                        */
SECTION_SDATA2 static f32 lit_5343 = 7.0f / 10.0f;

/* 80455A5C-80455A60 0004+00 s=1 e=0 z=0  None .sdata2    @5344                                                        */
SECTION_SDATA2 static f32 lit_5344 = 4.0f / 5.0f;

/* 80455A60-80455A64 0004+00 s=1 e=0 z=0  None .sdata2    @5345                                                        */
SECTION_SDATA2 static f32 lit_5345 = 1.0f / 10.0f;

/* 80455A64-80455A68 0004+00 s=1 e=0 z=0  None .sdata2    @5346                                                        */
SECTION_SDATA2 static f32 lit_5346 = 2.0f / 25.0f;

/* 802B6AF8-802B995C 2E64+00 s=8 e=1 z=0  None .text      setSceneName__10Z2SceneMgrFPcll                              */
//	802B6B10: 803621A8 (_savegpr_16)
//	802B6B2C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6B60: 80455A50 (lit_5341)
//	802B6B64: 80450B84 (data_80450B84)
//	802B6B68: 802B4128 (resetBattleBgmParams__8Z2SeqMgrFv)
//	802B6B6C: 80450B84 (data_80450B84)
//	802B6B70: 80455A3C (lit_3512)
//	802B6B78: 802B9AFC (setWindStoneVol__8Z2SeqMgrFfUl)
//	802B6B7C: 80450B84 (data_80450B84)
//	802B6B80: 80455A3C (lit_3512)
//	802B6B84: 802B9AD0 (setTwilightGateVol__8Z2SeqMgrFf)
//	802B6B88: 80450B88 (data_80450B88)
//	802B6B8C: 802B9AC4 (resetCrowdSize__7Z2SeMgrFv)
//	802B6B90: 80450B48 (data_80450B48)
//	802B6B98: 802BFFEC (setGhostEnemyState__13Z2SoundObjMgrFUc)
//	802B6B9C: 80450B88 (data_80450B88)
//	802B6BA0: 802AB80C (resetModY__7Z2SeMgrFv)
//	802B6BA4: 80450B7C (data_80450B7C)
//	802B6BB4: 8039BFA8 (Z2SceneMgr__stringBase0)
//	802B6BB8: 8039BFA8 (Z2SceneMgr__stringBase0)
//	802B6BC0: 802B61E8 (setDemoName__11Z2StatusMgrFPc)
//	802B6BD4: 803CA5C0 (sSpotName)
//	802B6BD8: 803CA5C0 (sSpotName)
//	802B6BE4: 80368994 (strcmp)
//	802B6C14: 803CA878 (lit_5347)
//	802B6C18: 803CA878 (lit_5347)
//	802B6C54: 802B9A94 (dComIfGs_isSaveSwitch__Fi)
//	802B6C6C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6C78: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6C80: 80450B84 (data_80450B84)
//	802B6C88: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B6CA8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6CB4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6D28: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6D34: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6D3C: 80450B84 (data_80450B84)
//	802B6D44: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B6D58: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6D64: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6D8C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6D98: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6DC0: 803CA844 (lit_5348)
//	802B6DC4: 803CA844 (lit_5348)
//	802B6DE4: 802B9A94 (dComIfGs_isSaveSwitch__Fi)
//	802B6DFC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6E08: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6E10: 80450B84 (data_80450B84)
//	802B6E18: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B6E3C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6E48: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6E64: 802B9A94 (dComIfGs_isSaveSwitch__Fi)
//	802B6E70: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6E74: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6E7C: 8014139C (dComIfGs_isEventBit__FUs)
//	802B6E88: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6E8C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6E94: 8014139C (dComIfGs_isEventBit__FUs)
//	802B6EA4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6EA8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6EB0: 8014139C (dComIfGs_isEventBit__FUs)
//	802B6EC8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6ED4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6EE8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6EF4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6F10: 803CA824 (lit_5349)
//	802B6F14: 803CA824 (lit_5349)
//	802B6F34: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6F40: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6F5C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6F60: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6F68: 8014139C (dComIfGs_isEventBit__FUs)
//	802B6F80: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6F8C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6FA0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6FAC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B6FC0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6FC4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B6FCC: 8014139C (dComIfGs_isEventBit__FUs)
//	802B6FE4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B6FF0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7008: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7014: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7040: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B704C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B706C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7078: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7080: 80450B84 (data_80450B84)
//	802B7088: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B7098: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B709C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B70A4: 8014139C (dComIfGs_isEventBit__FUs)
//	802B70BC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B70C8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B70E0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B70EC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7108: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7114: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B712C: 802B9A94 (dComIfGs_isSaveSwitch__Fi)
//	802B7144: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7150: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7158: 80450B84 (data_80450B84)
//	802B7160: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B7174: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7180: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B718C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7190: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7198: 8014139C (dComIfGs_isEventBit__FUs)
//	802B71B0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B71BC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B71D4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B71E0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B720C: 803CA7F4 (lit_5350)
//	802B7210: 803CA7F4 (lit_5350)
//	802B7234: 802B9A94 (dComIfGs_isSaveSwitch__Fi)
//	802B724C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7258: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7260: 80450B84 (data_80450B84)
//	802B7268: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B72A8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B72AC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B72B4: 8014139C (dComIfGs_isEventBit__FUs)
//	802B72C0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B72C4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B72CC: 8014139C (dComIfGs_isEventBit__FUs)
//	802B72E4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B72F0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7348: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B734C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7354: 8014139C (dComIfGs_isEventBit__FUs)
//	802B736C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7378: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B73D0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B73DC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B740C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7418: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B747C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7488: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B74AC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B74B8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B74D4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B74E0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B74EC: 80450B84 (data_80450B84)
//	802B74F4: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B756C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7578: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7594: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B75A0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B75BC: 803CA7BC (lit_5351)
//	802B75C0: 803CA7BC (lit_5351)
//	802B75EC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B75F0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B75F8: 8014139C (dComIfGs_isEventBit__FUs)
//	802B7604: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7608: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7610: 8014139C (dComIfGs_isEventBit__FUs)
//	802B7628: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7634: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B764C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7658: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B766C: 80450B84 (data_80450B84)
//	802B7674: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B767C: 80450B84 (data_80450B84)
//	802B7684: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B76C0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B76CC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B76E8: 803CA784 (lit_5352)
//	802B76EC: 803CA784 (lit_5352)
//	802B774C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7758: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B777C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7788: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B77A8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B77B4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B77CC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B77D8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7828: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7834: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B787C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7880: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7888: 8014139C (dComIfGs_isEventBit__FUs)
//	802B78A0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B78AC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B78C0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B78CC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B78E8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B78EC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B78F4: 8014139C (dComIfGs_isEventBit__FUs)
//	802B790C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7918: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7924: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7928: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7930: 8014139C (dComIfGs_isEventBit__FUs)
//	802B7948: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7954: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7960: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B7964: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B796C: 8014139C (dComIfGs_isEventBit__FUs)
//	802B7984: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7990: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B79A8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B79B4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B79DC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B79E8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7A14: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7A20: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7A3C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7A48: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7A54: 80450B84 (data_80450B84)
//	802B7A5C: 80455A54 (lit_5342)
//	802B7A60: 802B9A24 (muteSceneBgm__8Z2SeqMgrFUlf)
//	802B7A84: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7A90: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7AB4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7AC0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7AD8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7AE4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7AEC: 80450B84 (data_80450B84)
//	802B7AF4: 802B99AC (unMuteSceneBgm__8Z2SeqMgrFUl)
//	802B7B3C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7B48: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7B64: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7B70: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7B98: 80450B48 (data_80450B48)
//	802B7BAC: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B7BB0: 804061C0 (g_dComIfG_gameInfo)
//	802B7BB4: 804061C0 (g_dComIfG_gameInfo)
//	802B7BC0: 80035360 (isSwitch__10dSv_info_cCFii)
//	802B7BCC: 804061C0 (g_dComIfG_gameInfo)
//	802B7BD0: 804061C0 (g_dComIfG_gameInfo)
//	802B7BDC: 80035360 (isSwitch__10dSv_info_cCFii)
//	802B7BF4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7C00: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7C18: 80450B84 (data_80450B84)
//	802B7C24: 802AF408 (bgmStop__8Z2SeqMgrFUll)
//	802B7C44: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7C50: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7C90: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7C9C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7D20: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7D2C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7D48: 80450B48 (data_80450B48)
//	802B7D60: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B7D6C: 802B9A94 (dComIfGs_isSaveSwitch__Fi)
//	802B7D7C: 802B9A94 (dComIfGs_isSaveSwitch__Fi)
//	802B7DAC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7DB8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7E04: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7E10: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7E58: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7E64: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7E8C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7E98: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7EC8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7ED4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7F00: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7F0C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7F28: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7F34: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7FB4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7FC0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B7FE0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B7FEC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8030: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B803C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8094: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8098: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B80A0: 8014139C (dComIfGs_isEventBit__FUs)
//	802B80B8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B80C4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B80CC: 80450B84 (data_80450B84)
//	802B80D4: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B810C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8118: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8168: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8174: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B81D0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B81DC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B81F4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8200: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8218: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8224: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B822C: 80450B84 (data_80450B84)
//	802B8234: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B8248: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8254: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B826C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8278: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8290: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B829C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B82A4: 80450B84 (data_80450B84)
//	802B82AC: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B82C0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B82CC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B82E0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B82E4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B82EC: 8014139C (dComIfGs_isEventBit__FUs)
//	802B8304: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8310: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B833C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8348: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8380: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B838C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8404: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8410: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8474: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8480: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8494: 80450B48 (data_80450B48)
//	802B84A8: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8508: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8514: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8540: 80455A58 (lit_5343)
//	802B8584: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8590: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B85A8: 80455A3C (lit_3512)
//	802B85AC: 80450B48 (data_80450B48)
//	802B85C0: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B85F0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B85FC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8624: 80450B7C (data_80450B7C)
//	802B8628: 802B6734 (checkDayTime__11Z2StatusMgrFv)
//	802B863C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8648: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B865C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8668: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8678: 803CA744 (lit_5353)
//	802B867C: 803CA744 (lit_5353)
//	802B86BC: 803CA704 (lit_5354)
//	802B86C0: 803CA704 (lit_5354)
//	802B86D4: 80455A3C (lit_3512)
//	802B86DC: 80455A58 (lit_5343)
//	802B86E4: 80455A5C (lit_5344)
//	802B86FC: 80455A3C (lit_3512)
//	802B8710: 80455A54 (lit_5342)
//	802B8748: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8754: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8770: 80455A5C (lit_5344)
//	802B8784: 80455A5C (lit_5344)
//	802B8798: 80455A3C (lit_3512)
//	802B87A0: 80450B7C (data_80450B7C)
//	802B87A4: 802B6734 (checkDayTime__11Z2StatusMgrFv)
//	802B87B8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B87C4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B87D8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B87E4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B87FC: 80455A3C (lit_3512)
//	802B8808: 80450B48 (data_80450B48)
//	802B881C: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B887C: 80455A3C (lit_3512)
//	802B8884: 80450B48 (data_80450B48)
//	802B8898: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B88A4: 802B999C (dComIfGs_getStartPoint__Fv)
//	802B88BC: 802B999C (dComIfGs_getStartPoint__Fv)
//	802B88D4: 802B999C (dComIfGs_getStartPoint__Fv)
//	802B88EC: 802B999C (dComIfGs_getStartPoint__Fv)
//	802B8904: 802B999C (dComIfGs_getStartPoint__Fv)
//	802B891C: 802B999C (dComIfGs_getStartPoint__Fv)
//	802B8944: 80450B48 (data_80450B48)
//	802B8958: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B896C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8978: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B898C: 80450B84 (data_80450B84)
//	802B8994: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B89A8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B89B4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B89D0: 80450B48 (data_80450B48)
//	802B89E4: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B89E8: 80450B84 (data_80450B84)
//	802B89EC: 80450860 (struct_80450860)
//	802B89F0: 802B99AC (unMuteSceneBgm__8Z2SeqMgrFUl)
//	802B8A04: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B8A1C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8A28: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8A34: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8A38: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8A40: 8014139C (dComIfGs_isEventBit__FUs)
//	802B8A58: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8A64: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8A7C: 80450B48 (data_80450B48)
//	802B8A90: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8A94: 80450B84 (data_80450B84)
//	802B8A98: 80450860 (struct_80450860)
//	802B8A9C: 802B99AC (unMuteSceneBgm__8Z2SeqMgrFUl)
//	802B8AB0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8ABC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8AC8: 80450B84 (data_80450B84)
//	802B8AD0: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B8AEC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8AF8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8B14: 80450B48 (data_80450B48)
//	802B8B28: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8B3C: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B8B54: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8B60: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8B6C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8B70: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8B78: 8014139C (dComIfGs_isEventBit__FUs)
//	802B8B90: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8B9C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8BB4: 80450B48 (data_80450B48)
//	802B8BC8: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8BDC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8BE8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8C0C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8C18: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8C34: 80450B48 (data_80450B48)
//	802B8C48: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8C5C: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B8C74: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8C80: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8C8C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8C90: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8C98: 8014139C (dComIfGs_isEventBit__FUs)
//	802B8CB0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8CBC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8CD4: 80450B48 (data_80450B48)
//	802B8CE8: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8CFC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8D08: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8D24: 80450B48 (data_80450B48)
//	802B8D38: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8D4C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8D58: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8D74: 80450B48 (data_80450B48)
//	802B8D88: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8D9C: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B8DB4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8DC0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8DCC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8DD0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8DD8: 8014139C (dComIfGs_isEventBit__FUs)
//	802B8DF0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8DFC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8E14: 80450B48 (data_80450B48)
//	802B8E28: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8E3C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8E48: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8E5C: 80450B84 (data_80450B84)
//	802B8E64: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B8E78: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8E84: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8EA0: 80450B48 (data_80450B48)
//	802B8EB4: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8EB8: 80450B84 (data_80450B84)
//	802B8EC0: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B8EC8: 80450B84 (data_80450B84)
//	802B8ED0: 802B99AC (unMuteSceneBgm__8Z2SeqMgrFUl)
//	802B8EE0: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B8EF8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8F04: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8F10: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8F14: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B8F1C: 8014139C (dComIfGs_isEventBit__FUs)
//	802B8F34: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8F40: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8F58: 80450B48 (data_80450B48)
//	802B8F6C: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B8F80: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8F8C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8FB0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B8FBC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B8FD8: 80450B48 (data_80450B48)
//	802B8FEC: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B9000: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B9018: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9024: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9030: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B9034: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B903C: 8014139C (dComIfGs_isEventBit__FUs)
//	802B9054: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9060: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9078: 80450B48 (data_80450B48)
//	802B908C: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B90A8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B90B4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B90CC: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B90D8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B90F8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9104: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9120: 80450B48 (data_80450B48)
//	802B9134: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B9148: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B9160: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B916C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9178: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B917C: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B9184: 8014139C (dComIfGs_isEventBit__FUs)
//	802B919C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B91A8: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B91C0: 80450B48 (data_80450B48)
//	802B91D4: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B922C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9238: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9240: 80450B84 (data_80450B84)
//	802B9248: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B9264: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9270: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B928C: 80450B48 (data_80450B48)
//	802B92A0: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B92D0: 8002D740 (dComIfGs_isStageSwitch__Fii)
//	802B92E8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B92F4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9300: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B9304: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B930C: 8014139C (dComIfGs_isEventBit__FUs)
//	802B9324: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9330: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9334: 80450B60 (data_80450B60)
//	802B933C: 802B9994 (func_802B9994)
//	802B9350: 802B9988 (getID__8JAISoundCFv)
//	802B936C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9378: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B93B0: 80450B48 (data_80450B48)
//	802B93C4: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B93E8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B93F4: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B941C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9428: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9438: 80450B84 (data_80450B84)
//	802B9444: 802AF408 (bgmStop__8Z2SeqMgrFUll)
//	802B945C: 80450B48 (data_80450B48)
//	802B9470: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B94E0: 80450B48 (data_80450B48)
//	802B94F4: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B9510: 80450B48 (data_80450B48)
//	802B9524: 802BF980 (setForceBattleArea__13Z2SoundObjMgrFbUsUsUs)
//	802B9538: 80455A60 (lit_5345)
//	802B955C: 80455A64 (lit_5346)
//	802B95A4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B95B0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B95D0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B95DC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B95F8: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9604: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9624: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9630: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B964C: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9658: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9680: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B968C: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B96A4: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B96B0: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B96B8: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B96BC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B96C4: 8014139C (dComIfGs_isEventBit__FUs)
//	802B96D0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B96D4: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B96DC: 8014139C (dComIfGs_isEventBit__FUs)
//	802B9714: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9720: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9734: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B9740: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B9764: 80450B84 (data_80450B84)
//	802B976C: 80455A54 (lit_5342)
//	802B9770: 802B9A24 (muteSceneBgm__8Z2SeqMgrFUlf)
//	802B9778: 80450B84 (data_80450B84)
//	802B9780: 802B99AC (unMuteSceneBgm__8Z2SeqMgrFUl)
//	802B97C0: 802B9B60 (__ct__10JAISoundIDFUl)
//	802B97CC: 802B9A88 (__as__10JAISoundIDFRC10JAISoundID)
//	802B97D4: 80450B84 (data_80450B84)
//	802B97DC: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802B97E4: 80450B60 (data_80450B60)
//	802B97EC: 802B9978 (isActive__12JAIStreamMgrCFv)
//	802B97F8: 80450B58 (data_80450B58)
//	802B97FC: 80450B60 (data_80450B60)
//	802B9804: 802B9994 (func_802B9994)
//	802B9824: 802B9988 (getID__8JAISoundCFv)
//	802B9830: 802A7160 (getTypeID__13JAUSoundTableCF10JAISoundID)
//	802B9844: 80450860 (struct_80450860)
//	802B9848: 802A24DC (stop__8JAISoundFUl)
//	802B9858: 80450B84 (data_80450B84)
//	802B9864: 802B3318 (setHeightVolMod__8Z2SeqMgrFbUl)
//	802B9868: 80450B84 (data_80450B84)
//	802B9874: 802B3398 (setTimeProcVolMod__8Z2SeqMgrFbUl)
//	802B9878: 80450B84 (data_80450B84)
//	802B9880: 802B9968 (setFieldBgmPlay__8Z2SeqMgrFb)
//	802B9884: 80450B3C (data_80450B3C)
//	802B9894: 802C6AC0 (initSceneEnvSe__10Z2EnvSeMgrFlScf)
//	802B9910: 802B995C (__ct__10JAISoundIDFRC10JAISoundID)
//	802B9934: 802B9B68 (sceneChange__10Z2SceneMgrF10JAISoundIDUcUcUcUcUcb)
//	802B9948: 803621F4 (_restgpr_16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char* False
// 	 char False
//  s32 False
//  s32 False
asm void Z2SceneMgr::setSceneName(char* param_0, s32 param_1, s32 param_2) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setSceneName__10Z2SceneMgrFPcll.s"
}
#pragma pop


/* 802B995C-802B9968 000C+00 s=1 e=0 z=0  None .text      __ct__10JAISoundIDFRC10JAISoundID                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JAISoundID const& False
// 	 JAISoundID const False
// 		 JAISoundID False
asm JAISoundID::JAISoundID(JAISoundID const& param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/__ct__10JAISoundIDFRC10JAISoundID.s"
}
#pragma pop


/* 802B9968-802B9978 0010+00 s=1 e=0 z=0  None .text      setFieldBgmPlay__8Z2SeqMgrFb                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool False
asm void Z2SeqMgr::setFieldBgmPlay(bool param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setFieldBgmPlay__8Z2SeqMgrFb.s"
}
#pragma pop


/* 802B9978-802B9988 0010+00 s=1 e=0 z=0  None .text      isActive__12JAIStreamMgrCFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JAIStreamMgr::isActive() const {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/isActive__12JAIStreamMgrCFv.s"
}
#pragma pop


/* 802B9988-802B9994 000C+00 s=1 e=0 z=0  None .text      getID__8JAISoundCFv                                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JAISound::getID() const {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/getID__8JAISoundCFv.s"
}
#pragma pop


/* 802B9994-802B999C 0008+00 s=1 e=0 z=0  None .text      getFirst__19JSUList<9JAIStream>CFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
asm void JSUList__template2::getFirst() const {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/func_802B9994.s"
}
#pragma pop


/* 802B999C-802B99AC 0010+00 s=1 e=0 z=0  None .text      dComIfGs_getStartPoint__Fv                                   */
//	802B999C: 804061C0 (g_dComIfG_gameInfo)
//	802B99A0: 804061C0 (g_dComIfG_gameInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm static void dComIfGs_getStartPoint() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/dComIfGs_getStartPoint__Fv.s"
}
#pragma pop


/* 802B99AC-802B9A24 0078+00 s=1 e=0 z=0  None .text      unMuteSceneBgm__8Z2SeqMgrFUl                                 */
//	802B99B0: 80455A3C (lit_3512)
//	802B99B8: 80455A38 (lit_3511)
//	802B99E4: 80455A48 (lit_3531)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void Z2SeqMgr::unMuteSceneBgm(u32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/unMuteSceneBgm__8Z2SeqMgrFUl.s"
}
#pragma pop


/* 802B9A24-802B9A88 0064+00 s=1 e=0 z=0  None .text      muteSceneBgm__8Z2SeqMgrFUlf                                  */
//	802B9A40: 80455A48 (lit_3531)
//	802B9A6C: 80455A38 (lit_3511)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  f32 False
asm void Z2SeqMgr::muteSceneBgm(u32 param_0, f32 param_1) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/muteSceneBgm__8Z2SeqMgrFUlf.s"
}
#pragma pop


/* 802B9A88-802B9A94 000C+00 s=1 e=0 z=0  None .text      __as__10JAISoundIDFRC10JAISoundID                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JAISoundID const& False
// 	 JAISoundID const False
// 		 JAISoundID False
asm void JAISoundID::operator=(JAISoundID const& param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/__as__10JAISoundIDFRC10JAISoundID.s"
}
#pragma pop


/* 802B9A94-802B9AC4 0030+00 s=1 e=0 z=0  None .text      dComIfGs_isSaveSwitch__Fi                                    */
//	802B9AA4: 804061C0 (g_dComIfG_gameInfo)
//	802B9AA8: 804061C0 (g_dComIfG_gameInfo)
//	802B9AB0: 80034860 (isSwitch__12dSv_memBit_cCFi)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm static void dComIfGs_isSaveSwitch(int param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/dComIfGs_isSaveSwitch__Fi.s"
}
#pragma pop


/* 802B9AC4-802B9AD0 000C+00 s=1 e=0 z=0  None .text      resetCrowdSize__7Z2SeMgrFv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void Z2SeMgr::resetCrowdSize() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/resetCrowdSize__7Z2SeMgrFv.s"
}
#pragma pop


/* 802B9AD0-802B9AFC 002C+00 s=1 e=0 z=0  None .text      setTwilightGateVol__8Z2SeqMgrFf                              */
//	802B9AD0: 80455A38 (lit_3511)
//	802B9AE0: 80455A3C (lit_3512)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void Z2SeqMgr::setTwilightGateVol(f32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setTwilightGateVol__8Z2SeqMgrFf.s"
}
#pragma pop


/* 802B9AFC-802B9B60 0064+00 s=1 e=0 z=0  None .text      setWindStoneVol__8Z2SeqMgrFfUl                               */
//	802B9B18: 80455A48 (lit_3531)
//	802B9B44: 80455A38 (lit_3511)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  u32 False
asm void Z2SeqMgr::setWindStoneVol(f32 param_0, u32 param_1) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/setWindStoneVol__8Z2SeqMgrFfUl.s"
}
#pragma pop


/* 802B9B60-802B9B68 0008+00 s=1 e=0 z=0  None .text      __ct__10JAISoundIDFUl                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm JAISoundID::JAISoundID(u32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/__ct__10JAISoundIDFUl.s"
}
#pragma pop


/* 802B9B68-802B9C50 00E8+00 s=1 e=0 z=0  None .text      sceneChange__10Z2SceneMgrF10JAISoundIDUcUcUcUcUcb            */
//	802B9B88: 80450B84 (data_80450B84)
//	802B9BC8: 80450B84 (data_80450B84)
//	802B9C34: 80450B40 (data_80450B40)
//	802B9C3C: 802BAEB8 (setSceneFx__11Z2FxLineMgrFl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JAISoundID False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
//  u8 False
//  bool False
asm void Z2SceneMgr::sceneChange(JAISoundID param_0, u8 param_1, u8 param_2, u8 param_3, u8 param_4, u8 param_5, bool param_6) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/sceneChange__10Z2SceneMgrF10JAISoundIDUcUcUcUcUcb.s"
}
#pragma pop


/* 802B9C50-802B9D40 00F0+00 s=0 e=1 z=0  None .text      framework__10Z2SceneMgrFv                                    */
//	802B9C90: 802B9D98 (_load1stWaveInner_1__10Z2SceneMgrFv)
//	802B9CC0: 802B9FC8 (_load1stWaveInner_2__10Z2SceneMgrFv)
//	802B9CF0: 80450B7C (data_80450B7C)
//	802B9D04: 80450863 (struct_80450860)
//	802B9D10: 80450B84 (data_80450B84)
//	802B9D18: 802B4164 (setBattleBgmOff__8Z2SeqMgrFb)
//	802B9D20: 80450B84 (data_80450B84)
//	802B9D28: 802B4164 (setBattleBgmOff__8Z2SeqMgrFb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2SceneMgr::framework() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/framework__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802B9D40-802B9D98 0058+00 s=0 e=1 z=0  None .text      load1stDynamicWave__10Z2SceneMgrFv                           */
//	802B9D5C: 80450B48 (data_80450B48)
//	802B9D60: 802C013C (deleteEnemyAll__13Z2SoundObjMgrFv)
//	802B9D6C: 802B68E0 (setSceneExist__10Z2SceneMgrFb)
//	802B9D80: 802B9D98 (_load1stWaveInner_1__10Z2SceneMgrFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2SceneMgr::load1stDynamicWave() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/load1stDynamicWave__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802B9D98-802B9FC8 0230+00 s=2 e=0 z=0  None .text      _load1stWaveInner_1__10Z2SceneMgrFv                          */
//	802B9DAC: 80450B88 (data_80450B88)
//	802B9DB4: 802AD94C (seStopAll__7Z2SeMgrFUl)
//	802B9DB8: 80450B3C (data_80450B3C)
//	802B9DBC: 802C699C (resetSceneInner__10Z2EnvSeMgrFv)
//	802B9DC0: 804061C0 (g_dComIfG_gameInfo)
//	802B9DC4: 804061C0 (g_dComIfG_gameInfo)
//	802B9DCC: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B9DD0: 803A7288 (saveBitLabels__16dSv_event_flag_c)
//	802B9DD8: 800349BC (isEventBit__11dSv_event_cCFUs)
//	802B9E08: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802B9E3C: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802B9E58: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802B9E94: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802B9EB8: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802B9EDC: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802B9F04: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802B9F18: 802BA704 (loadSeWave__10Z2SceneMgrFUl)
//	802B9F3C: 802BA704 (loadSeWave__10Z2SceneMgrFUl)
//	802B9F68: 80450B84 (data_80450B84)
//	802B9F9C: 802AF408 (bgmStop__8Z2SeqMgrFUll)
//	802B9FB0: 802B9FC8 (_load1stWaveInner_2__10Z2SceneMgrFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void Z2SceneMgr::_load1stWaveInner_1() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/_load1stWaveInner_1__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802B9FC8-802BA09C 00D4+00 s=2 e=0 z=0  None .text      _load1stWaveInner_2__10Z2SceneMgrFv                          */
//	802B9FF4: 802BA630 (eraseBgmWave__10Z2SceneMgrFUl)
//	802BA020: 802BA630 (eraseBgmWave__10Z2SceneMgrFUl)
//	802BA044: 802BA630 (eraseBgmWave__10Z2SceneMgrFUl)
//	802BA068: 802BA770 (loadBgmWave__10Z2SceneMgrFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void Z2SceneMgr::_load1stWaveInner_2() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/_load1stWaveInner_2__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802BA09C-802BA120 0084+00 s=0 e=1 z=0  None .text      check1stDynamicWave__10Z2SceneMgrFv                          */
//	802BA0AC: 803621DC (_savegpr_29)
//	802BA0D0: 802BA698 (getWaveLoadStatus__10Z2SceneMgrFUlUl)
//	802BA0F4: 802BA698 (getWaveLoadStatus__10Z2SceneMgrFUlUl)
//	802BA10C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2SceneMgr::check1stDynamicWave() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/check1stDynamicWave__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802BA120-802BA294 0174+00 s=0 e=2 z=0  None .text      load2ndDynamicWave__10Z2SceneMgrFv                           */
//	802BA150: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802BA174: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802BA1A0: 802BA704 (loadSeWave__10Z2SceneMgrFUl)
//	802BA1DC: 802BA5C8 (eraseSeWave__10Z2SceneMgrFUl)
//	802BA200: 802BA704 (loadSeWave__10Z2SceneMgrFUl)
//	802BA23C: 802BA630 (eraseBgmWave__10Z2SceneMgrFUl)
//	802BA260: 802BA770 (loadBgmWave__10Z2SceneMgrFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2SceneMgr::load2ndDynamicWave() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/load2ndDynamicWave__10Z2SceneMgrFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CA9BC-803CAB18 015C+00 s=1 e=0 z=0  None .data      @5852                                                        */
SECTION_DATA static void* lit_5852[87] = {
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x150),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x150),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x204),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x23C),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x150),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x180),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x150),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x150),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x150),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x180),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x180),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x150),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x180),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x190),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x2A0),
	(void*)(((char*)sceneBgmStart__10Z2SceneMgrFv)+0x1B8),
};

/* 802BA294-802BA56C 02D8+00 s=1 e=2 z=0  None .text      sceneBgmStart__10Z2SceneMgrFv                                */
//	802BA2B4: 802B68E0 (setSceneExist__10Z2SceneMgrFb)
//	802BA2BC: 80450B7C (data_80450B7C)
//	802BA2D0: 80450B84 (data_80450B84)
//	802BA2D8: 802B3EAC (checkBgmIDPlaying__8Z2SeqMgrFUl)
//	802BA2F4: 80450B7C (data_80450B7C)
//	802BA324: 80450B84 (data_80450B84)
//	802BA384: 802AF010 (bgmStart__8Z2SeqMgrFUlUll)
//	802BA388: 80450B84 (data_80450B84)
//	802BA38C: 80455A3C (lit_3512)
//	802BA394: 80455A38 (lit_3511)
//	802BA3CC: 803CA9BC (lit_5852)
//	802BA3D0: 803CA9BC (lit_5852)
//	802BA3F0: 80450B84 (data_80450B84)
//	802BA3F8: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802BA400: 80450B84 (data_80450B84)
//	802BA40C: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802BA414: 80450B84 (data_80450B84)
//	802BA41C: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802BA430: 80450B84 (data_80450B84)
//	802BA434: 80455A54 (lit_5342)
//	802BA474: 80450B84 (data_80450B84)
//	802BA478: 80455A54 (lit_5342)
//	802BA480: 80455A38 (lit_3511)
//	802BA4B0: 80450B84 (data_80450B84)
//	802BA4B8: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802BA4C0: 80450B84 (data_80450B84)
//	802BA4C8: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802BA4F0: 80450B84 (data_80450B84)
//	802BA4F8: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802BA500: 80450B84 (data_80450B84)
//	802BA508: 802AFF8C (changeBgmStatus__8Z2SeqMgrFl)
//	802BA510: 80450B84 (data_80450B84)
//	802BA514: 802AFDEC (bgmStreamCheckReady__8Z2SeqMgrFv)
//	802BA520: 80450B84 (data_80450B84)
//	802BA528: 802AFB94 (bgmStreamPrepare__8Z2SeqMgrFUl)
//	802BA52C: 80450B84 (data_80450B84)
//	802BA530: 802AFE18 (bgmStreamPlay__8Z2SeqMgrFv)
//	802BA534: 80450B84 (data_80450B84)
//	802BA538: 80455A3C (lit_3512)
//	802BA540: 80455A38 (lit_3511)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2SceneMgr::sceneBgmStart() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/sceneBgmStart__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802BA56C-802BA5C0 0054+00 s=0 e=1 z=0  None .text      loadStaticWaves__10Z2SceneMgrFv                              */
//	802BA584: 802BA704 (loadSeWave__10Z2SceneMgrFUl)
//	802BA590: 802BA770 (loadBgmWave__10Z2SceneMgrFUl)
//	802BA59C: 802BA704 (loadSeWave__10Z2SceneMgrFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2SceneMgr::loadStaticWaves() {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/loadStaticWaves__10Z2SceneMgrFv.s"
}
#pragma pop


/* 802BA5C0-802BA5C8 0008+00 s=0 e=1 z=0  None .text      checkFirstWaves__10Z2SceneMgrFv                              */
// False False
//  bool False
bool Z2SceneMgr::checkFirstWaves() {
	return false;
}


/* 802BA5C8-802BA630 0068+00 s=2 e=0 z=0  None .text      eraseSeWave__10Z2SceneMgrFUl                                 */
//	802BA5D4: 80450CC0 (data_80450CC0)
//	802BA614: 8029A640 (erase__10JASWaveArcFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void Z2SceneMgr::eraseSeWave(u32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/eraseSeWave__10Z2SceneMgrFUl.s"
}
#pragma pop


/* 802BA630-802BA698 0068+00 s=2 e=0 z=0  None .text      eraseBgmWave__10Z2SceneMgrFUl                                */
//	802BA63C: 80450CC0 (data_80450CC0)
//	802BA67C: 8029A640 (erase__10JASWaveArcFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void Z2SceneMgr::eraseBgmWave(u32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/eraseBgmWave__10Z2SceneMgrFUl.s"
}
#pragma pop


/* 802BA698-802BA704 006C+00 s=1 e=0 z=0  None .text      getWaveLoadStatus__10Z2SceneMgrFUlUl                         */
//	802BA6A4: 80450CC0 (data_80450CC0)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u32 False
asm void Z2SceneMgr::getWaveLoadStatus(u32 param_0, u32 param_1) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/getWaveLoadStatus__10Z2SceneMgrFUlUl.s"
}
#pragma pop


/* 802BA704-802BA770 006C+00 s=3 e=0 z=0  None .text      loadSeWave__10Z2SceneMgrFUl                                  */
//	802BA710: 80450CC0 (data_80450CC0)
//	802BA754: 8029A4C0 (load__10JASWaveArcFP7JASHeap)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void Z2SceneMgr::loadSeWave(u32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/loadSeWave__10Z2SceneMgrFUl.s"
}
#pragma pop


/* 802BA770-802BA7DC 006C+00 s=3 e=0 z=0  None .text      loadBgmWave__10Z2SceneMgrFUl                                 */
//	802BA77C: 80450CC0 (data_80450CC0)
//	802BA7C0: 8029A580 (loadTail__10JASWaveArcFP7JASHeap)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void Z2SceneMgr::loadBgmWave(u32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2SceneMgr/loadBgmWave__10Z2SceneMgrFUl.s"
}
#pragma pop


