// 
// Generated By: dol2asm
// Translation Unit: Z2Calc
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "Z2AudioLib/Z2Calc.h"

// 
// Types:
// 

struct Z2Calc {
	struct CurveSign {
	};

	struct FNoise1f {
		/* 802A9944 */ // False False
//  f32 False
//  f32 False
//  f32 False
void setParam(f32, f32, f32);
		/* 802A9958 */ // True False
//  f32 False
void tau(f32);
		/* 802A99A0 */ // False False
void calcNoise1f();
	};

	/* 802A968C */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  bool False
void linearTransform(f32, f32, f32, f32, f32, bool);
	/* 802A96F4 */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  Z2Calc::CurveSign False
void getParamByExp(f32, f32, f32, f32, f32, f32, Z2Calc::CurveSign);
	/* 802A9814 */ // False False
//  f32 False
//  f32 False
//  f32 False
void getRandom(f32, f32, f32);
	/* 802A98D4 */ // False False
void getRandom_0_1();
};

struct JMath {
	struct TRandom_fast_ {
		/* 80339AE4 */ // False False
//  u32 False
TRandom_fast_(u32);
	};

};

// 
// Forward References:
// 


// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  bool False
extern "C" void linearTransform__6Z2CalcFfffffb();
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  Z2Calc::CurveSign False
extern "C" void getParamByExp__6Z2CalcFffffffQ26Z2Calc9CurveSign();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void getRandom__6Z2CalcFfff();
// False False
extern "C" void getRandom_0_1__6Z2CalcFv();
// False False
//  f32 False
//  f32 False
//  f32 False
extern "C" void setParam__Q26Z2Calc8FNoise1fFfff();
// True False
//  f32 False
extern "C" void tau__Q26Z2Calc8FNoise1fFf();
// False False
extern "C" void calcNoise1f__Q26Z2Calc8FNoise1fFv();
extern "C" extern f32 cEqualCSlope__6Z2Calc;
extern "C" extern f32 cEqualPSlope__6Z2Calc;

// 
// External References:
// 


// False False
//  u32 False
extern "C" void __ct__Q25JMath13TRandom_fast_FUl();
// False False
extern "C" void exp();
// False False
extern "C" void pow();

// 
// Declarations:
// 

/* 802A968C-802A96F4 0068+00 s=1 e=16 z=0  None .text      linearTransform__6Z2CalcFfffffb                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  bool False
asm void Z2Calc::linearTransform(f32 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4, bool param_5) {
	nofralloc
#include "asm/Z2AudioLib/Z2Calc/linearTransform__6Z2CalcFfffffb.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455820-80455824 0004+00 s=0 e=1 z=0  None .sdata2    cEqualCSlope__6Z2Calc                                        */
SECTION_SDATA2 f32 cEqualCSlope__6Z2Calc = 1.0f;

/* 80455824-80455828 0004+00 s=0 e=1 z=0  None .sdata2    cEqualPSlope__6Z2Calc                                        */
SECTION_SDATA2 f32 cEqualPSlope__6Z2Calc = 0.5f;

/* 80455828-8045582C 0004+00 s=1 e=0 z=0  None .sdata2    @380                                                         */
SECTION_SDATA2 static u8 lit_380[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 8045582C-80455830 0004+00 s=4 e=0 z=0  None .sdata2    @381                                                         */
SECTION_SDATA2 static f32 lit_381 = 1.0f;

/* 802A96F4-802A9814 0120+00 s=0 e=29 z=0  None .text      getParamByExp__6Z2CalcFffffffQ26Z2Calc9CurveSign             */
//	802A9734: 80455828 (lit_380)
//	802A9740: 802A968C (linearTransform__6Z2CalcFfffffb)
//	802A9744: 8036C740 (exp)
//	802A9750: 8036C740 (exp)
//	802A975C: 8045582C (lit_381)
//	802A976C: 802A968C (linearTransform__6Z2CalcFfffffb)
//	802A977C: 80455828 (lit_380)
//	802A9784: 802A968C (linearTransform__6Z2CalcFfffffb)
//	802A9788: 8036C740 (exp)
//	802A9794: 8036C740 (exp)
//	802A97A0: 8045582C (lit_381)
//	802A97B0: 802A968C (linearTransform__6Z2CalcFfffffb)
//	802A97C4: 802A968C (linearTransform__6Z2CalcFfffffb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  Z2Calc::CurveSign False
asm void Z2Calc::getParamByExp(f32 param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4, f32 param_5, Z2Calc::CurveSign param_6) {
	nofralloc
#include "asm/Z2AudioLib/Z2Calc/getParamByExp__6Z2CalcFffffffQ26Z2Calc9CurveSign.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455830-80455834 0004+00 s=1 e=0 z=0  None .sdata2    @396                                                         */
SECTION_SDATA2 static f32 lit_396 = 2.0f;

/* 80455834-80455838 0004+00 s=1 e=0 z=0  None .sdata2    @397                                                         */
SECTION_SDATA2 static f32 lit_397 = -2.0f;

/* 802A9814-802A98D4 00C0+00 s=0 e=2 z=0  None .text      getRandom__6Z2CalcFfff                                       */
//	802A9854: 80455830 (lit_396)
//	802A985C: 80455834 (lit_397)
//	802A9860: 8045582C (lit_381)
//	802A986C: 802A98D4 (getRandom_0_1__6Z2CalcFv)
//	802A9888: 802A98D4 (getRandom_0_1__6Z2CalcFv)
//	802A9890: 8036C780 (pow)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  f32 False
asm void Z2Calc::getRandom(f32 param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/Z2AudioLib/Z2Calc/getRandom__6Z2CalcFfff.s"
}
#pragma pop


/* ############################################################################################## */
/* 80451330-80451334 0004+00 s=1 e=0 z=0  None .sbss      None                                                         */
static u8 data_80451330[4];

/* 80451334-80451338 0004+00 s=1 e=0 z=0  None .sbss      oRandom$401                                                  */
static u8 oRandom[4];

/* 802A98D4-802A9944 0070+00 s=1 e=1 z=0  None .text      getRandom_0_1__6Z2CalcFv                                     */
//	802A98E0: 80451330 (data_80451330)
//	802A98EC: 80451334 (oRandom)
//	802A98F4: 80339AE4 (__ct__Q25JMath13TRandom_fast_FUl)
//	802A98FC: 80451330 (data_80451330)
//	802A9900: 80451334 (oRandom)
//	802A9918: 80451334 (oRandom)
//	802A992C: 8045582C (lit_381)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2Calc::getRandom_0_1() {
	nofralloc
#include "asm/Z2AudioLib/Z2Calc/getRandom_0_1__6Z2CalcFv.s"
}
#pragma pop


/* 802A9944-802A9958 0014+00 s=0 e=1 z=0  None .text      setParam__Q26Z2Calc8FNoise1fFfff                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  f32 False
asm void Z2Calc::FNoise1f::setParam(f32 param_0, f32 param_1, f32 param_2) {
	nofralloc
#include "asm/Z2AudioLib/Z2Calc/setParam__Q26Z2Calc8FNoise1fFfff.s"
}
#pragma pop


/* 802A9958-802A99A0 0048+00 s=1 e=0 z=0  None .text      tau__Q26Z2Calc8FNoise1fFf                                    */
//	802A9960: 8045582C (lit_381)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void Z2Calc::FNoise1f::tau(f32 param_0) {
	nofralloc
#include "asm/Z2AudioLib/Z2Calc/tau__Q26Z2Calc8FNoise1fFf.s"
}
#pragma pop


/* 802A99A0-802A9A34 0094+00 s=0 e=5 z=0  None .text      calcNoise1f__Q26Z2Calc8FNoise1fFv                            */
//	802A9A14: 802A9958 (tau__Q26Z2Calc8FNoise1fFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void Z2Calc::FNoise1f::calcNoise1f() {
	nofralloc
#include "asm/Z2AudioLib/Z2Calc/calcNoise1f__Q26Z2Calc8FNoise1fFv.s"
}
#pragma pop


