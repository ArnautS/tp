// 
// Generated By: dol2asm
// Translation Unit: J3DMaterialFactory
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/J3DGraphLoader/J3DMaterialFactory.h"

// 
// Types:
// 

struct J3DZMode {
};

struct J3DTexMtxInfo {
	/* 80325718 */ // False False
//  J3DTexMtxInfo const& False
// 	 J3DTexMtxInfo const False
// 		 J3DTexMtxInfo False
void operator=(J3DTexMtxInfo const&);
};

struct J3DTexMtx {
};

struct J3DTexGenBlockPatched {
	/* 80317644 */ // False False
void initialize();
};

struct J3DTexGenBlockNull {
	/* 80332AA0 */ // True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void calc(f32 const (* )[4]);
	/* 80332AA4 */ // True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void calcWithoutViewMtx(f32 const (* )[4]);
	/* 80332AA8 */ // True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void calcPostTexMtx(f32 const (* )[4]);
	/* 80332AAC */ // True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void calcPostTexMtxWithoutViewMtx(f32 const (* )[4]);
	/* 80332AB0 */ // True False
//  void False
void load();
	/* 80332AB4 */ // True False
//  void False
void patch();
	/* 80332AB8 */ // True False
//  void False
//  u32 False
void diff(u32);
	/* 80332ABC */ // True False
//  void False
void diffTexMtx();
	/* 80332AC0 */ // True False
//  void False
void diffTexGen();
	/* 80332AC4 */ // True False
void getType();
	/* 80332AD0 */ // True False
~J3DTexGenBlockNull();
};

struct J3DNBTScale {
};

struct J3DTexCoord {
	/* 8000E464 */ // False False
J3DTexCoord();
};

struct J3DTexGenBlock {
	/* 8000DFD8 */ // False False
//  bool False
//  u32 False
bool getTexMtx(u32);
	/* 8000DFE0 */ // False False
//  bool False
//  u32 False
bool getTexCoord(u32);
	/* 8000DFE8 */ // False False
//  bool False
bool getTexGenNum() const;
	/* 8000E0CC */ // False False
//  void False
//  u32 False
//  J3DTexCoord const* False
// 	 J3DTexCoord const False
// 		 J3DTexCoord False
void setTexCoord(u32, J3DTexCoord const*);
	/* 8031741C */ // False False
//  void False
//  u32 const* False
// 	 u32 const False
// 		 u32 False
void setTexGenNum(u32 const*);
	/* 8000E0D0 */ // False False
//  void False
//  u32 False
void setTexGenNum(u32);
	/* 8003AB2C */ // False False
//  void False
//  u32 False
//  J3DTexMtx* False
// 	 J3DTexMtx False
void setTexMtx(u32, J3DTexMtx*);
	/* 803172FC */ // False False
//  bool False
bool countDLSize();
	/* 80317334 */ // False False
//  bool False
bool getNBTScale();
	/* 80317354 */ // False False
//  void False
//  J3DTexGenBlock* False
// 	 J3DTexGenBlock False
void reset(J3DTexGenBlock*);
	/* 80317420 */ // False False
//  void False
//  J3DNBTScale False
void setNBTScale(J3DNBTScale);
	/* 80317424 */ // False False
//  void False
//  J3DNBTScale const* False
// 	 J3DNBTScale const False
// 		 J3DNBTScale False
void setNBTScale(J3DNBTScale const*);
	/* 80317428 */ // False False
//  bool False
bool getTexMtxOffset() const;
	/* 80317430 */ // False False
//  void False
//  u32 False
void setTexMtxOffset(u32);
};

struct J3DTevSwapModeTable {
};

struct J3DTevSwapModeInfo {
};

struct J3DTevStageInfo {
};

struct J3DTevStage {
	/* 8000E230 */ // False False
J3DTevStage();
	/* 8003AACC */ // False False
//  J3DTevStageInfo const& False
// 	 J3DTevStageInfo const False
// 		 J3DTevStageInfo False
J3DTevStage(J3DTevStageInfo const&);
};

struct J3DTevOrder {
	/* 8000E140 */ // False False
J3DTevOrder();
};

struct J3DTevBlockPatched {
	/* 803176E0 */ // False False
void initialize();
};

struct J3DGXColorS10 {
	/* 8000E460 */ // False False
J3DGXColorS10();
};

struct J3DGXColor {
	/* 8000E538 */ // False False
J3DGXColor();
};

struct J3DIndTevStage {
	/* 8000E14C */ // False False
J3DIndTevStage();
};

struct J3DTevBlock {
	/* 8000DBC8 */ // False False
//  void False
void patchTexNoAndTexCoordScale();
	/* 8000DBD4 */ // False False
//  void False
void patch();
	/* 8000DF84 */ // False False
//  bool False
//  u32 False
bool getIndTevStage(u32);
	/* 8000DF8C */ // False False
//  bool False
//  u32 False
bool getTevStage(u32);
	/* 8000DF94 */ // False False
//  u32 False
void getTexNo(u32) const;
	/* 8000DFA0 */ // False False
//  bool False
//  u32 False
bool getTevSwapModeTable(u32);
	/* 8000DFA8 */ // False False
//  bool False
//  u32 False
bool getTevKAlphaSel(u32);
	/* 8000DFB0 */ // False False
//  bool False
//  u32 False
bool getTevKColorSel(u32);
	/* 8000DFB8 */ // False False
//  bool False
//  u32 False
bool getTevOrder(u32);
	/* 8000DFC0 */ // False False
//  bool False
//  u32 False
bool getTevKColor(u32);
	/* 8000DFC8 */ // False False
//  bool False
//  u32 False
bool getTevColor(u32);
	/* 8000DFD0 */ // False False
//  bool False
bool getTevStageNum() const;
	/* 8000E0A4 */ // False False
//  void False
//  u32 False
//  J3DIndTevStage False
void setIndTevStage(u32, J3DIndTevStage);
	/* 80323554 */ // False False
//  void False
//  u32 False
//  J3DIndTevStage const* False
// 	 J3DIndTevStage const False
// 		 J3DIndTevStage False
void setIndTevStage(u32, J3DIndTevStage const*);
	/* 8000E0A8 */ // False False
//  void False
//  u32 False
//  J3DTevStage False
void setTevStage(u32, J3DTevStage);
	/* 80323550 */ // False False
//  void False
//  u32 False
//  J3DTevStage const* False
// 	 J3DTevStage const False
// 		 J3DTevStage False
void setTevStage(u32, J3DTevStage const*);
	/* 8000E0AC */ // False False
//  void False
//  u32 False
//  u16 False
void setTexNo(u32, u16);
	/* 80323544 */ // False False
//  void False
//  u32 False
//  u16 const* False
// 	 u16 const False
// 		 u16 False
void setTexNo(u32, u16 const*);
	/* 8000E0B0 */ // False False
//  void False
//  u32 False
//  J3DTevSwapModeTable False
void setTevSwapModeTable(u32, J3DTevSwapModeTable);
	/* 80322960 */ // False False
//  void False
//  u32 False
//  J3DTevSwapModeTable const* False
// 	 J3DTevSwapModeTable const False
// 		 J3DTevSwapModeTable False
void setTevSwapModeTable(u32, J3DTevSwapModeTable const*);
	/* 8000E0B4 */ // False False
//  void False
//  u32 False
//  u8 False
void setTevKAlphaSel(u32, u8);
	/* 80322954 */ // False False
//  void False
//  u32 False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
void setTevKAlphaSel(u32, u8 const*);
	/* 8000E0B8 */ // False False
//  void False
//  u32 False
//  u8 False
void setTevKColorSel(u32, u8);
	/* 80322950 */ // False False
//  void False
//  u32 False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
void setTevKColorSel(u32, u8 const*);
	/* 8000E0BC */ // False False
//  void False
//  u32 False
//  J3DTevOrder False
void setTevOrder(u32, J3DTevOrder);
	/* 80323548 */ // False False
//  void False
//  u32 False
//  J3DTevOrder const* False
// 	 J3DTevOrder const False
// 		 J3DTevOrder False
void setTevOrder(u32, J3DTevOrder const*);
	/* 800732AC */ // False False
//  void False
//  u32 False
//  J3DGXColor const* False
// 	 J3DGXColor const False
// 		 J3DGXColor False
void setTevKColor(u32, J3DGXColor const*);
	/* 8000E0C0 */ // False False
//  void False
//  u32 False
//  J3DGXColor False
void setTevKColor(u32, J3DGXColor);
	/* 80110E80 */ // False False
//  void False
//  u32 False
//  J3DGXColorS10 const* False
// 	 J3DGXColorS10 const False
// 		 J3DGXColorS10 False
void setTevColor(u32, J3DGXColorS10 const*);
	/* 8000E0C4 */ // False False
//  void False
//  u32 False
//  J3DGXColorS10 False
void setTevColor(u32, J3DGXColorS10);
	/* 8000E0C8 */ // False False
//  void False
//  u8 False
void setTevStageNum(u8);
	/* 8032354C */ // False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
void setTevStageNum(u8 const*);
	/* 8031730C */ // False False
//  bool False
bool countDLSize();
	/* 80317330 */ // False False
//  void False
void load();
	/* 8031CD44 */ // False False
//  u32 False
void diff(u32);
	/* 8031E098 */ // False False
//  u32 False
void indexToPtr_private(u32);
	/* 80321938 */ // False False
//  void False
void diffTevReg();
	/* 8032193C */ // False False
//  void False
void diffTevStageIndirect();
	/* 80321940 */ // False False
//  void False
void diffTevStage();
	/* 80321944 */ // False False
//  void False
void diffTexCoordScale();
	/* 80321948 */ // False False
//  void False
void diffTexNo();
	/* 80321FE0 */ // False False
//  u32 False
void setTexNoOffset(u32);
	/* 80322958 */ // False False
//  void False
//  u32 False
//  J3DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J3DTevSwapModeInfo);
	/* 8032295C */ // False False
//  void False
//  u32 False
//  J3DTevSwapModeInfo const* False
// 	 J3DTevSwapModeInfo const False
// 		 J3DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J3DTevSwapModeInfo const*);
	/* 80322964 */ // False False
//  bool False
bool getTevRegOffset() const;
	/* 8032296C */ // False False
//  void False
//  u32 False
void setTevRegOffset(u32);
	/* 8032353C */ // False False
//  void False
void patchTexNo();
	/* 80323540 */ // False False
//  void False
void patchTevReg();
	/* 80323558 */ // False False
//  bool False
bool getTexNoOffset() const;
};

struct J3DTevBlockNull {
	/* 803176D4 */ // False False
void initialize();
	/* 80332A0C */ // True False
//  void False
//  J3DTevBlock* False
// 	 J3DTevBlock False
void reset(J3DTevBlock*);
	/* 80332A10 */ // True False
//  void False
void ptrToIndex();
	/* 80332A14 */ // True False
void indexToPtr();
	/* 80332A38 */ // True False
void getType();
	/* 80332A44 */ // True False
~J3DTevBlockNull();
};

struct J3DPatchedMaterial {
	/* 80316FB8 */ // False False
void initialize();
};

struct J3DPEBlockNull {
	/* 803329A0 */ // True False
//  void False
void load();
	/* 803329A4 */ // True False
void getType();
	/* 803329B0 */ // True False
~J3DPEBlockNull();
};

struct J3DAlphaComp {
};

struct J3DFog {
};

struct J3DBlend {
};

struct J3DPEBlock {
	/* 8000DBCC */ // False False
//  void False
void patch();
	/* 8000DF3C */ // False False
//  bool False
bool getZCompLoc() const;
	/* 8000DF44 */ // False False
//  bool False
bool getZMode();
	/* 8000DF4C */ // False False
//  bool False
bool getBlend();
	/* 8000DF54 */ // False False
//  bool False
bool getAlphaComp();
	/* 8000DF5C */ // False False
//  bool False
bool getFog();
	/* 8000E010 */ // False False
//  void False
//  u8 False
void setZCompLoc(u8);
	/* 80317378 */ // False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
void setZCompLoc(u8 const*);
	/* 8000E014 */ // False False
//  void False
//  J3DZMode False
void setZMode(J3DZMode);
	/* 80317374 */ // False False
//  void False
//  J3DZMode const* False
// 	 J3DZMode const False
// 		 J3DZMode False
void setZMode(J3DZMode const*);
	/* 8000E018 */ // False False
//  void False
//  J3DBlend const& False
// 	 J3DBlend const False
// 		 J3DBlend False
void setBlend(J3DBlend const&);
	/* 80317370 */ // False False
//  void False
//  J3DBlend const* False
// 	 J3DBlend const False
// 		 J3DBlend False
void setBlend(J3DBlend const*);
	/* 8000E01C */ // False False
//  void False
//  J3DAlphaComp const& False
// 	 J3DAlphaComp const False
// 		 J3DAlphaComp False
void setAlphaComp(J3DAlphaComp const&);
	/* 8031736C */ // False False
//  void False
//  J3DAlphaComp const* False
// 	 J3DAlphaComp const False
// 		 J3DAlphaComp False
void setAlphaComp(J3DAlphaComp const*);
	/* 8031731C */ // False False
//  bool False
bool countDLSize();
	/* 80317344 */ // False False
//  void False
//  u32 False
void diff(u32);
	/* 80317348 */ // False False
//  void False
//  J3DPEBlock* False
// 	 J3DPEBlock False
void reset(J3DPEBlock*);
	/* 8031735C */ // False False
//  void False
void diffFog();
	/* 80317360 */ // False False
//  void False
void diffBlend();
	/* 80317364 */ // False False
//  void False
//  J3DFog* False
// 	 J3DFog False
void setFog(J3DFog*);
	/* 80317368 */ // False False
//  void False
//  J3DFog False
void setFog(J3DFog);
	/* 80317380 */ // False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
void setDither(u8 const*);
	/* 8031737C */ // False False
//  void False
//  u8 False
void setDither(u8);
	/* 80317384 */ // False False
//  bool False
bool getDither() const;
	/* 8031738C */ // False False
//  bool False
bool getFogOffset() const;
	/* 80317394 */ // False False
//  void False
//  u32 False
void setFogOffset(u32);
};

struct J3DMaterialDLBlock {
};

struct J3DMaterialBlock {
};

struct J3DMaterial {
	/* 803157A0 */ // False False
//  u32 False
void createColorBlock(u32);
	/* 803159A0 */ // False False
//  u32 False
void createTexGenBlock(u32);
	/* 80315B04 */ // False False
//  int False
void createTevBlock(int);
	/* 80315E78 */ // False False
//  int False
void createIndBlock(int);
	/* 80315F60 */ // False False
//  u32 False
//  u32 False
void createPEBlock(u32, u32);
	/* 80316100 */ // False False
//  u32 False
void calcSizeColorBlock(u32);
	/* 80316150 */ // False False
//  u32 False
void calcSizeTexGenBlock(u32);
	/* 8031617C */ // False False
//  int False
void calcSizeTevBlock(int);
	/* 803161C4 */ // False False
//  int False
void calcSizeIndBlock(int);
	/* 803161D8 */ // False False
//  u32 False
//  u32 False
void calcSizePEBlock(u32, u32);
	/* 80316240 */ // False False
void initialize();
	/* 80332B94 */ // False False
~J3DMaterial();
};

struct J3DMaterialFactory {
	struct MaterialType {
	};

	/* 80330234 */ // False False
//  J3DMaterialDLBlock const& False
// 	 J3DMaterialDLBlock const False
// 		 J3DMaterialDLBlock False
J3DMaterialFactory(J3DMaterialDLBlock const&);
	/* 8032FFEC */ // False False
//  J3DMaterialBlock const& False
// 	 J3DMaterialBlock const False
// 		 J3DMaterialBlock False
J3DMaterialFactory(J3DMaterialBlock const&);
	/* 803302BC */ // False False
void countUniqueMaterials();
	/* 80330304 */ // True False
//  int False
void countTexGens(int) const;
	/* 8033033C */ // True False
//  int False
void countStages(int) const;
	/* 803303C4 */ // False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  J3DMaterialFactory::MaterialType False
//  int False
//  u32 False
void create(J3DMaterial*, J3DMaterialFactory::MaterialType, int, u32) const;
	/* 80330440 */ // True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
void createNormalMaterial(J3DMaterial*, int, u32) const;
	/* 80330D84 */ // True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
void createPatchedMaterial(J3DMaterial*, int, u32) const;
	/* 8033168C */ // False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
void modifyPatchedCurrentMtx(J3DMaterial*, int) const;
	/* 803317D4 */ // True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
void createLockedMaterial(J3DMaterial*, int, u32) const;
	/* 80331A7C */ // False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  J3DMaterialFactory::MaterialType False
//  int False
//  u32 False
void calcSize(J3DMaterial*, J3DMaterialFactory::MaterialType, int, u32) const;
	/* 80331AFC */ // True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
void calcSizeNormalMaterial(J3DMaterial*, int, u32) const;
	/* 80331C30 */ // True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
void calcSizePatchedMaterial(J3DMaterial*, int, u32) const;
	/* 80331D00 */ // True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
void calcSizeLockedMaterial(J3DMaterial*, int, u32) const;
	/* 80331D18 */ // True False
//  int False
//  int False
void newMatColor(int, int) const;
	/* 80331D74 */ // True False
//  int False
void newColorChanNum(int) const;
	/* 80331DAC */ // True False
//  int False
//  int False
void newColorChan(int, int) const;
	/* 80331F50 */ // True False
//  int False
//  int False
void newAmbColor(int, int) const;
	/* 80331FAC */ // True False
//  int False
void newTexGenNum(int) const;
	/* 80331FE4 */ // True False
//  int False
//  int False
void newTexCoord(int, int) const;
	/* 80332044 */ // True False
//  int False
//  int False
void newTexMtx(int, int) const;
	/* 803320CC */ // True False
//  int False
void newCullMode(int) const;
	/* 8033210C */ // True False
//  int False
//  int False
void newTexNo(int, int) const;
	/* 80332154 */ // True False
//  int False
//  int False
void newTevOrder(int, int) const;
	/* 803321A0 */ // True False
//  int False
//  int False
void newTevColor(int, int) const;
	/* 80332210 */ // True False
//  int False
//  int False
void newTevKColor(int, int) const;
	/* 8033226C */ // True False
//  int False
void newTevStageNum(int) const;
	/* 803322A4 */ // True False
//  int False
//  int False
void newTevStage(int, int) const;
	/* 80332304 */ // True False
//  int False
//  int False
void newTevSwapModeTable(int, int) const;
	/* 803323A0 */ // True False
//  int False
void newIndTexStageNum(int) const;
	/* 803323C8 */ // True False
//  int False
//  int False
void newIndTexOrder(int, int) const;
	/* 8033240C */ // True False
//  int False
//  int False
void newIndTexMtx(int, int) const;
	/* 803324B4 */ // True False
//  int False
//  int False
void newIndTevStage(int, int) const;
	/* 80332648 */ // True False
//  int False
//  int False
void newIndTexCoordScale(int, int) const;
	/* 8033268C */ // True False
//  int False
void newFog(int) const;
	/* 80332768 */ // True False
//  int False
void newAlphaComp(int) const;
	/* 803327E8 */ // True False
//  int False
void newBlend(int) const;
	/* 8033282C */ // True False
//  int False
void newZMode(int) const;
	/* 8033288C */ // True False
//  int False
void newZCompLoc(int) const;
	/* 803328C4 */ // True False
//  int False
void newDither(int) const;
	/* 803328FC */ // True False
//  int False
void newNBTScale(int) const;
};

struct J3DLockedMaterial {
	/* 80317044 */ // False False
void initialize();
};

struct J3DLightObj {
};

struct J3DIndTexMtxInfo {
	/* 803257DC */ // False False
//  J3DIndTexMtxInfo const& False
// 	 J3DIndTexMtxInfo const False
// 		 J3DIndTexMtxInfo False
void operator=(J3DIndTexMtxInfo const&);
};

struct J3DFogInfo {
	/* 80325800 */ // False False
//  J3DFogInfo const& False
// 	 J3DFogInfo const False
// 		 J3DFogInfo False
void operator=(J3DFogInfo const&);
};

struct J3DDisplayListObj {
	/* 803125E4 */ // False False
//  void* False
// 	 void False
//  u32 False
void setSingleDisplayList(void*, u32);
};

struct J3DColorChan {
};

struct J3DColorBlockNull {
	/* 80332B2C */ // True False
void getType();
	/* 80332B38 */ // True False
~J3DColorBlockNull();
};

struct J3DColorBlock {
	/* 8000DBD0 */ // False False
//  void False
void patchLight();
	/* 8000DFF0 */ // False False
//  bool False
//  u32 False
bool getAmbColor(u32);
	/* 8000DFF8 */ // False False
//  bool False
//  u32 False
bool getColorChan(u32);
	/* 8000E000 */ // False False
//  bool False
//  u32 False
bool getMatColor(u32);
	/* 8000E008 */ // False False
//  bool False
bool getColorChanNum() const;
	/* 801A4C0C */ // False False
//  void False
//  u32 False
//  J3DGXColor const* False
// 	 J3DGXColor const False
// 		 J3DGXColor False
void setAmbColor(u32, J3DGXColor const*);
	/* 8000E0D4 */ // False False
//  void False
//  u32 False
//  J3DGXColor False
void setAmbColor(u32, J3DGXColor);
	/* 80317450 */ // False False
//  void False
//  u32 False
//  J3DColorChan const* False
// 	 J3DColorChan const False
// 		 J3DColorChan False
void setColorChan(u32, J3DColorChan const*);
	/* 8000E0D8 */ // False False
//  void False
//  u32 False
//  J3DColorChan const& False
// 	 J3DColorChan const False
// 		 J3DColorChan False
void setColorChan(u32, J3DColorChan const&);
	/* 80317448 */ // False False
//  void False
//  u32 False
//  J3DGXColor const* False
// 	 J3DGXColor const False
// 		 J3DGXColor False
void setMatColor(u32, J3DGXColor const*);
	/* 8000E0DC */ // False False
//  void False
//  u32 False
//  J3DGXColor False
void setMatColor(u32, J3DGXColor);
	/* 8031744C */ // False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
void setColorChanNum(u8 const*);
	/* 8000E0E0 */ // False False
//  void False
//  u8 False
void setColorChanNum(u8);
	/* 801A4C08 */ // False False
//  void False
//  u32 False
//  J3DLightObj* False
// 	 J3DLightObj False
void setLight(u32, J3DLightObj*);
	/* 80317304 */ // False False
//  bool False
bool countDLSize();
	/* 80317324 */ // False False
//  void False
void load();
	/* 80317328 */ // False False
//  s32 False
s32 getCullMode() const;
	/* 8031733C */ // False False
//  void False
void patch();
	/* 80317340 */ // False False
//  void False
//  u32 False
void diff(u32);
	/* 80317358 */ // False False
//  void False
//  J3DColorBlock* False
// 	 J3DColorBlock False
void reset(J3DColorBlock*);
	/* 80317434 */ // False False
//  void False
void patchMatColor();
	/* 80317438 */ // False False
//  void False
void diffAmbColor();
	/* 8031743C */ // False False
//  void False
void diffMatColor();
	/* 80317440 */ // False False
//  void False
void diffColorChan();
	/* 80317444 */ // False False
//  void False
//  u32 False
void diffLightObj(u32);
	/* 80317454 */ // False False
//  bool False
//  u32 False
bool getLight(u32);
	/* 8031745C */ // False False
//  void False
//  u8 False
void setCullMode(u8);
	/* 80317460 */ // False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
void setCullMode(u8 const*);
	/* 80317464 */ // False False
//  bool False
bool getMatColorOffset() const;
	/* 8031746C */ // False False
//  bool False
bool getColorChanOffset() const;
	/* 80317474 */ // False False
//  void False
//  u32 False
void setMatColorOffset(u32);
	/* 80317478 */ // False False
//  void False
//  u32 False
void setColorChanOffset(u32);
};

// 
// Forward References:
// 

// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template43(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template44(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template45(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template46(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template47(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template48(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template49(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template50(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template51(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template52(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template53(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template54(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template55(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template56(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template57(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template58(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template59(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template60(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template61(void const*, void const*);

// False False
//  J3DMaterialBlock const& False
// 	 J3DMaterialBlock const False
// 		 J3DMaterialBlock False
extern "C" void __ct__18J3DMaterialFactoryFRC16J3DMaterialBlock();
// False False
//  J3DMaterialDLBlock const& False
// 	 J3DMaterialDLBlock const False
// 		 J3DMaterialDLBlock False
extern "C" void __ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock();
// False False
extern "C" void countUniqueMaterials__18J3DMaterialFactoryFv();
// True False
//  int False
extern "C" void countTexGens__18J3DMaterialFactoryCFi();
// True False
//  int False
extern "C" void countStages__18J3DMaterialFactoryCFi();
// False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  J3DMaterialFactory::MaterialType False
//  int False
//  u32 False
extern "C" void create__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl();
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
extern "C" void createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
extern "C" void createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
// False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
extern "C" void modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali();
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
extern "C" void createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
// False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  J3DMaterialFactory::MaterialType False
//  int False
//  u32 False
extern "C" void calcSize__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl();
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
extern "C" void calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
extern "C" void calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
extern "C" void calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl();
// True False
//  int False
//  int False
extern "C" void newMatColor__18J3DMaterialFactoryCFii();
// True False
//  int False
extern "C" void newColorChanNum__18J3DMaterialFactoryCFi();
// True False
//  int False
//  int False
extern "C" void newColorChan__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newAmbColor__18J3DMaterialFactoryCFii();
// True False
//  int False
extern "C" void newTexGenNum__18J3DMaterialFactoryCFi();
// True False
//  int False
//  int False
extern "C" void newTexCoord__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newTexMtx__18J3DMaterialFactoryCFii();
// True False
//  int False
extern "C" void newCullMode__18J3DMaterialFactoryCFi();
// True False
//  int False
//  int False
extern "C" void newTexNo__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newTevOrder__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newTevColor__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newTevKColor__18J3DMaterialFactoryCFii();
// True False
//  int False
extern "C" void newTevStageNum__18J3DMaterialFactoryCFi();
// True False
//  int False
//  int False
extern "C" void newTevStage__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newTevSwapModeTable__18J3DMaterialFactoryCFii();
// True False
//  int False
extern "C" void newIndTexStageNum__18J3DMaterialFactoryCFi();
// True False
//  int False
//  int False
extern "C" void newIndTexOrder__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newIndTexMtx__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newIndTevStage__18J3DMaterialFactoryCFii();
// True False
//  int False
//  int False
extern "C" void newIndTexCoordScale__18J3DMaterialFactoryCFii();
// True False
//  int False
extern "C" void newFog__18J3DMaterialFactoryCFi();
// True False
//  int False
extern "C" void newAlphaComp__18J3DMaterialFactoryCFi();
// True False
//  int False
extern "C" void newBlend__18J3DMaterialFactoryCFi();
// True False
//  int False
extern "C" void newZMode__18J3DMaterialFactoryCFi();
// True False
//  int False
extern "C" void newZCompLoc__18J3DMaterialFactoryCFi();
// True False
//  int False
extern "C" void newDither__18J3DMaterialFactoryCFi();
// True False
//  int False
extern "C" void newNBTScale__18J3DMaterialFactoryCFi();
// True False
//  void False
extern "C" void load__14J3DPEBlockNullFv();
// True False
extern "C" void getType__14J3DPEBlockNullFv();
// True False
extern "C" void __dt__14J3DPEBlockNullFv();
// True False
//  void False
//  J3DTevBlock* False
// 	 J3DTevBlock False
extern "C" void reset__15J3DTevBlockNullFP11J3DTevBlock();
// True False
//  void False
extern "C" void ptrToIndex__15J3DTevBlockNullFv();
// True False
extern "C" void indexToPtr__15J3DTevBlockNullFv();
// True False
extern "C" void getType__15J3DTevBlockNullFv();
// True False
extern "C" void __dt__15J3DTevBlockNullFv();
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
extern "C" void calc__18J3DTexGenBlockNullFPA4_Cf();
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
extern "C" void calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf();
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
extern "C" void calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf();
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
extern "C" void calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf();
// True False
//  void False
extern "C" void load__18J3DTexGenBlockNullFv();
// True False
//  void False
extern "C" void patch__18J3DTexGenBlockNullFv();
// True False
//  void False
//  u32 False
extern "C" void diff__18J3DTexGenBlockNullFUl();
// True False
//  void False
extern "C" void diffTexMtx__18J3DTexGenBlockNullFv();
// True False
//  void False
extern "C" void diffTexGen__18J3DTexGenBlockNullFv();
// True False
extern "C" void getType__18J3DTexGenBlockNullFv();
// True False
extern "C" void __dt__18J3DTexGenBlockNullFv();
// True False
extern "C" void getType__17J3DColorBlockNullFv();
// True False
extern "C" void __dt__17J3DColorBlockNullFv();
// False False
extern "C" void __dt__11J3DMaterialFv();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332BDC();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332BF4();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332C0C();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332C24();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332C3C();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332C54();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332C6C();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332C84();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332C9C();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332CB4();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332CCC();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332CE4();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332CFC();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332D14();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332D2C();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332D44();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332D5C();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332D74();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_80332D8C();
extern "C" extern void* __vt__14J3DPEBlockNull[31];
extern "C" extern void* __vt__15J3DTevBlockNull[55];
extern "C" extern void* __vt__18J3DTexGenBlockNull[27];
extern "C" extern void* __vt__17J3DColorBlockNull[36 + 1 /* padding */];

// 
// External References:
// 

// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template19(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template24(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template25(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template26(void const*, void const*);
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
void JSUConvertOffsetToPtr__template28(void const*, void const*);

// False False
//  void False
extern "C" void patchTexNoAndTexCoordScale__11J3DTevBlockFv();
// False False
//  void False
extern "C" void patch__10J3DPEBlockFv();
// False False
//  void False
extern "C" void patchLight__13J3DColorBlockFv();
// False False
//  void False
extern "C" void patch__11J3DTevBlockFv();
// False False
//  bool False
extern "C" bool getZCompLoc__10J3DPEBlockCFv();
// False False
//  bool False
extern "C" bool getZMode__10J3DPEBlockFv();
// False False
//  bool False
extern "C" bool getBlend__10J3DPEBlockFv();
// False False
//  bool False
extern "C" bool getAlphaComp__10J3DPEBlockFv();
// False False
//  bool False
extern "C" bool getFog__10J3DPEBlockFv();
// False False
//  bool False
//  u32 False
extern "C" bool getIndTevStage__11J3DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevStage__11J3DTevBlockFUl();
// False False
//  u32 False
extern "C" void getTexNo__11J3DTevBlockCFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevSwapModeTable__11J3DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevKAlphaSel__11J3DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevKColorSel__11J3DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevOrder__11J3DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevKColor__11J3DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevColor__11J3DTevBlockFUl();
// False False
//  bool False
extern "C" bool getTevStageNum__11J3DTevBlockCFv();
// False False
//  bool False
//  u32 False
extern "C" bool getTexMtx__14J3DTexGenBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTexCoord__14J3DTexGenBlockFUl();
// False False
//  bool False
extern "C" bool getTexGenNum__14J3DTexGenBlockCFv();
// False False
//  bool False
//  u32 False
extern "C" bool getAmbColor__13J3DColorBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getColorChan__13J3DColorBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getMatColor__13J3DColorBlockFUl();
// False False
//  bool False
extern "C" bool getColorChanNum__13J3DColorBlockCFv();
// False False
//  void False
//  u8 False
extern "C" void setZCompLoc__10J3DPEBlockFUc();
// False False
//  void False
//  J3DZMode False
extern "C" void setZMode__10J3DPEBlockF8J3DZMode();
// False False
//  void False
//  J3DBlend const& False
// 	 J3DBlend const False
// 		 J3DBlend False
extern "C" void setBlend__10J3DPEBlockFRC8J3DBlend();
// False False
//  void False
//  J3DAlphaComp const& False
// 	 J3DAlphaComp const False
// 		 J3DAlphaComp False
extern "C" void setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp();
// False False
//  void False
//  u32 False
//  J3DIndTevStage False
extern "C" void setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage();
// False False
//  void False
//  u32 False
//  J3DTevStage False
extern "C" void setTevStage__11J3DTevBlockFUl11J3DTevStage();
// False False
//  void False
//  u32 False
//  u16 False
extern "C" void setTexNo__11J3DTevBlockFUlUs();
// False False
//  void False
//  u32 False
//  J3DTevSwapModeTable False
extern "C" void setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable();
// False False
//  void False
//  u32 False
//  u8 False
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlUc();
// False False
//  void False
//  u32 False
//  u8 False
extern "C" void setTevKColorSel__11J3DTevBlockFUlUc();
// False False
//  void False
//  u32 False
//  J3DTevOrder False
extern "C" void setTevOrder__11J3DTevBlockFUl11J3DTevOrder();
// False False
//  void False
//  u32 False
//  J3DGXColor False
extern "C" void setTevKColor__11J3DTevBlockFUl10J3DGXColor();
// False False
//  void False
//  u32 False
//  J3DGXColorS10 False
extern "C" void setTevColor__11J3DTevBlockFUl13J3DGXColorS10();
// False False
//  void False
//  u8 False
extern "C" void setTevStageNum__11J3DTevBlockFUc();
// False False
//  void False
//  u32 False
//  J3DTexCoord const* False
// 	 J3DTexCoord const False
// 		 J3DTexCoord False
extern "C" void setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord();
// False False
//  void False
//  u32 False
extern "C" void setTexGenNum__14J3DTexGenBlockFUl();
// False False
//  void False
//  u32 False
//  J3DGXColor False
extern "C" void setAmbColor__13J3DColorBlockFUl10J3DGXColor();
// False False
//  void False
//  u32 False
//  J3DColorChan const& False
// 	 J3DColorChan const False
// 		 J3DColorChan False
extern "C" void setColorChan__13J3DColorBlockFUlRC12J3DColorChan();
// False False
//  void False
//  u32 False
//  J3DGXColor False
extern "C" void setMatColor__13J3DColorBlockFUl10J3DGXColor();
// False False
//  void False
//  u8 False
extern "C" void setColorChanNum__13J3DColorBlockFUc();
// False False
extern "C" void __ct__11J3DTevOrderFv();
// False False
extern "C" void __ct__14J3DIndTevStageFv();
// False False
extern "C" void __ct__11J3DTevStageFv();
// False False
extern "C" void __ct__13J3DGXColorS10Fv();
// False False
extern "C" void __ct__11J3DTexCoordFv();
// False False
extern "C" void __ct__10J3DGXColorFv();
// False False
//  J3DTevStageInfo const& False
// 	 J3DTevStageInfo const False
// 		 J3DTevStageInfo False
extern "C" void __ct__11J3DTevStageFRC15J3DTevStageInfo();
// False False
//  void False
//  u32 False
//  J3DTexMtx* False
// 	 J3DTexMtx False
extern "C" void setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx();
// False False
//  void False
//  u32 False
//  J3DGXColor const* False
// 	 J3DGXColor const False
// 		 J3DGXColor False
extern "C" void setTevKColor__11J3DTevBlockFUlPC10J3DGXColor();
// False False
//  void False
//  u32 False
//  J3DGXColorS10 const* False
// 	 J3DGXColorS10 const False
// 		 J3DGXColorS10 False
extern "C" void setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10();
// False False
//  void False
//  u32 False
//  J3DLightObj* False
// 	 J3DLightObj False
extern "C" void setLight__13J3DColorBlockFUlP11J3DLightObj();
// False False
//  void False
//  u32 False
//  J3DGXColor const* False
// 	 J3DGXColor const False
// 		 J3DGXColor False
extern "C" void setAmbColor__13J3DColorBlockFUlPC10J3DGXColor();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_802F41E8();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_802F4260();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_802F4278();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_802F4290();
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void func_802F42C0();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void setSingleDisplayList__17J3DDisplayListObjFPvUl();
// False False
//  u32 False
extern "C" void createColorBlock__11J3DMaterialFUl();
// False False
//  u32 False
extern "C" void createTexGenBlock__11J3DMaterialFUl();
// False False
//  int False
extern "C" void createTevBlock__11J3DMaterialFi();
// False False
//  int False
extern "C" void createIndBlock__11J3DMaterialFi();
// False False
//  u32 False
//  u32 False
extern "C" void createPEBlock__11J3DMaterialFUlUl();
// False False
//  u32 False
extern "C" void calcSizeColorBlock__11J3DMaterialFUl();
// False False
//  u32 False
extern "C" void calcSizeTexGenBlock__11J3DMaterialFUl();
// False False
//  int False
extern "C" void calcSizeTevBlock__11J3DMaterialFi();
// False False
//  int False
extern "C" void calcSizeIndBlock__11J3DMaterialFi();
// False False
//  u32 False
//  u32 False
extern "C" void calcSizePEBlock__11J3DMaterialFUlUl();
// False False
extern "C" void initialize__11J3DMaterialFv();
// False False
extern "C" void initialize__18J3DPatchedMaterialFv();
// False False
extern "C" void initialize__17J3DLockedMaterialFv();
// False False
//  bool False
extern "C" bool countDLSize__14J3DTexGenBlockFv();
// False False
//  bool False
extern "C" bool countDLSize__13J3DColorBlockFv();
// False False
//  bool False
extern "C" bool countDLSize__11J3DTevBlockFv();
// False False
//  bool False
extern "C" bool countDLSize__10J3DPEBlockFv();
// False False
//  void False
extern "C" void load__13J3DColorBlockFv();
// False False
//  s32 False
extern "C" s32 getCullMode__13J3DColorBlockCFv();
// False False
//  void False
extern "C" void load__11J3DTevBlockFv();
// False False
//  bool False
extern "C" bool getNBTScale__14J3DTexGenBlockFv();
// False False
//  void False
extern "C" void patch__13J3DColorBlockFv();
// False False
//  void False
//  u32 False
extern "C" void diff__13J3DColorBlockFUl();
// False False
//  void False
//  u32 False
extern "C" void diff__10J3DPEBlockFUl();
// False False
//  void False
//  J3DPEBlock* False
// 	 J3DPEBlock False
extern "C" void reset__10J3DPEBlockFP10J3DPEBlock();
// False False
//  void False
//  J3DTexGenBlock* False
// 	 J3DTexGenBlock False
extern "C" void reset__14J3DTexGenBlockFP14J3DTexGenBlock();
// False False
//  void False
//  J3DColorBlock* False
// 	 J3DColorBlock False
extern "C" void reset__13J3DColorBlockFP13J3DColorBlock();
// False False
//  void False
extern "C" void diffFog__10J3DPEBlockFv();
// False False
//  void False
extern "C" void diffBlend__10J3DPEBlockFv();
// False False
//  void False
//  J3DFog* False
// 	 J3DFog False
extern "C" void setFog__10J3DPEBlockFP6J3DFog();
// False False
//  void False
//  J3DFog False
extern "C" void setFog__10J3DPEBlockF6J3DFog();
// False False
//  void False
//  J3DAlphaComp const* False
// 	 J3DAlphaComp const False
// 		 J3DAlphaComp False
extern "C" void setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp();
// False False
//  void False
//  J3DBlend const* False
// 	 J3DBlend const False
// 		 J3DBlend False
extern "C" void setBlend__10J3DPEBlockFPC8J3DBlend();
// False False
//  void False
//  J3DZMode const* False
// 	 J3DZMode const False
// 		 J3DZMode False
extern "C" void setZMode__10J3DPEBlockFPC8J3DZMode();
// False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
extern "C" void setZCompLoc__10J3DPEBlockFPCUc();
// False False
//  void False
//  u8 False
extern "C" void setDither__10J3DPEBlockFUc();
// False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
extern "C" void setDither__10J3DPEBlockFPCUc();
// False False
//  bool False
extern "C" bool getDither__10J3DPEBlockCFv();
// False False
//  bool False
extern "C" bool getFogOffset__10J3DPEBlockCFv();
// False False
//  void False
//  u32 False
extern "C" void setFogOffset__10J3DPEBlockFUl();
// False False
//  void False
//  u32 const* False
// 	 u32 const False
// 		 u32 False
extern "C" void setTexGenNum__14J3DTexGenBlockFPCUl();
// False False
//  void False
//  J3DNBTScale False
extern "C" void setNBTScale__14J3DTexGenBlockF11J3DNBTScale();
// False False
//  void False
//  J3DNBTScale const* False
// 	 J3DNBTScale const False
// 		 J3DNBTScale False
extern "C" void setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale();
// False False
//  bool False
extern "C" bool getTexMtxOffset__14J3DTexGenBlockCFv();
// False False
//  void False
//  u32 False
extern "C" void setTexMtxOffset__14J3DTexGenBlockFUl();
// False False
//  void False
extern "C" void patchMatColor__13J3DColorBlockFv();
// False False
//  void False
extern "C" void diffAmbColor__13J3DColorBlockFv();
// False False
//  void False
extern "C" void diffMatColor__13J3DColorBlockFv();
// False False
//  void False
extern "C" void diffColorChan__13J3DColorBlockFv();
// False False
//  void False
//  u32 False
extern "C" void diffLightObj__13J3DColorBlockFUl();
// False False
//  void False
//  u32 False
//  J3DGXColor const* False
// 	 J3DGXColor const False
// 		 J3DGXColor False
extern "C" void setMatColor__13J3DColorBlockFUlPC10J3DGXColor();
// False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
extern "C" void setColorChanNum__13J3DColorBlockFPCUc();
// False False
//  void False
//  u32 False
//  J3DColorChan const* False
// 	 J3DColorChan const False
// 		 J3DColorChan False
extern "C" void setColorChan__13J3DColorBlockFUlPC12J3DColorChan();
// False False
//  bool False
//  u32 False
extern "C" bool getLight__13J3DColorBlockFUl();
// False False
//  void False
//  u8 False
extern "C" void setCullMode__13J3DColorBlockFUc();
// False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
extern "C" void setCullMode__13J3DColorBlockFPCUc();
// False False
//  bool False
extern "C" bool getMatColorOffset__13J3DColorBlockCFv();
// False False
//  bool False
extern "C" bool getColorChanOffset__13J3DColorBlockCFv();
// False False
//  void False
//  u32 False
extern "C" void setMatColorOffset__13J3DColorBlockFUl();
// False False
//  void False
//  u32 False
extern "C" void setColorChanOffset__13J3DColorBlockFUl();
// False False
extern "C" void initialize__21J3DTexGenBlockPatchedFv();
// False False
extern "C" void initialize__15J3DTevBlockNullFv();
// False False
extern "C" void initialize__18J3DTevBlockPatchedFv();
// False False
//  u32 False
extern "C" void diff__11J3DTevBlockFUl();
// False False
//  u32 False
extern "C" void indexToPtr_private__11J3DTevBlockFUl();
// False False
//  void False
extern "C" void diffTevReg__11J3DTevBlockFv();
// False False
//  void False
extern "C" void diffTevStageIndirect__11J3DTevBlockFv();
// False False
//  void False
extern "C" void diffTevStage__11J3DTevBlockFv();
// False False
//  void False
extern "C" void diffTexCoordScale__11J3DTevBlockFv();
// False False
//  void False
extern "C" void diffTexNo__11J3DTevBlockFv();
// False False
//  u32 False
extern "C" void setTexNoOffset__11J3DTevBlockFUl();
// False False
//  void False
//  u32 False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
extern "C" void setTevKColorSel__11J3DTevBlockFUlPCUc();
// False False
//  void False
//  u32 False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
extern "C" void setTevKAlphaSel__11J3DTevBlockFUlPCUc();
// False False
//  void False
//  u32 False
//  J3DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo();
// False False
//  void False
//  u32 False
//  J3DTevSwapModeInfo const* False
// 	 J3DTevSwapModeInfo const False
// 		 J3DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo();
// False False
//  void False
//  u32 False
//  J3DTevSwapModeTable const* False
// 	 J3DTevSwapModeTable const False
// 		 J3DTevSwapModeTable False
extern "C" void setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable();
// False False
//  bool False
extern "C" bool getTevRegOffset__11J3DTevBlockCFv();
// False False
//  void False
//  u32 False
extern "C" void setTevRegOffset__11J3DTevBlockFUl();
// False False
//  void False
extern "C" void patchTexNo__11J3DTevBlockFv();
// False False
//  void False
extern "C" void patchTevReg__11J3DTevBlockFv();
// False False
//  void False
//  u32 False
//  u16 const* False
// 	 u16 const False
// 		 u16 False
extern "C" void setTexNo__11J3DTevBlockFUlPCUs();
// False False
//  void False
//  u32 False
//  J3DTevOrder const* False
// 	 J3DTevOrder const False
// 		 J3DTevOrder False
extern "C" void setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder();
// False False
//  void False
//  u8 const* False
// 	 u8 const False
// 		 u8 False
extern "C" void setTevStageNum__11J3DTevBlockFPCUc();
// False False
//  void False
//  u32 False
//  J3DTevStage const* False
// 	 J3DTevStage const False
// 		 J3DTevStage False
extern "C" void setTevStage__11J3DTevBlockFUlPC11J3DTevStage();
// False False
//  void False
//  u32 False
//  J3DIndTevStage const* False
// 	 J3DIndTevStage const False
// 		 J3DIndTevStage False
extern "C" void setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage();
// False False
//  bool False
extern "C" bool getTexNoOffset__11J3DTevBlockCFv();
// False False
//  J3DTexMtxInfo const& False
// 	 J3DTexMtxInfo const False
// 		 J3DTexMtxInfo False
extern "C" void __as__13J3DTexMtxInfoFRC13J3DTexMtxInfo();
// False False
//  J3DIndTexMtxInfo const& False
// 	 J3DIndTexMtxInfo const False
// 		 J3DIndTexMtxInfo False
extern "C" void __as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo();
// False False
//  J3DFogInfo const& False
// 	 J3DFogInfo const False
// 		 J3DFogInfo False
extern "C" void __as__10J3DFogInfoFRC10J3DFogInfo();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_18();
// False False
extern "C" void _savegpr_19();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_18();
// False False
extern "C" void _restgpr_19();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const j3dDefaultTexCoordInfo[32];
extern "C" extern u8 const j3dDefaultIndTexMtxInfo[28];
extern "C" extern u8 const j3dDefaultIndTevStageInfo[12];
extern "C" extern u8 const j3dDefaultFogInfo[44];
extern "C" extern u8 const j3dDefaultNBTScaleInfo[16];
extern "C" extern void* __vt__17J3DLockedMaterial[12];
extern "C" extern void* __vt__18J3DPatchedMaterial[12];
extern "C" extern void* __vt__11J3DMaterial[12];
extern "C" extern void* __vt__10J3DPEBlock[31];
extern "C" extern void* __vt__15J3DIndBlockNull[19];
extern "C" extern void* __vt__11J3DIndBlock[19];
extern "C" extern void* __vt__14J3DTexGenBlock[27];
extern "C" extern void* __vt__13J3DColorBlock[36];
extern "C" extern void* __vt__18J3DTevBlockPatched[55];
extern "C" extern void* __vt__21J3DTexGenBlockPatched[27];
extern "C" extern void* __vt__11J3DTevBlock[55];
extern "C" extern u32 j3dDefaultTevOrderInfoNull;
extern "C" extern u32 j3dDefaultIndTexOrderNull;
extern "C" extern u8 j3dDefaultIndTexCoordScaleInfo[4];
extern "C" extern u32 j3dDefaultTevSwapModeTable;
extern "C" extern u32 j3dDefaultBlendInfo;
extern "C" extern u8 j3dDefaultColorChanInfo[8];
extern "C" extern u16 j3dDefaultZModeID[1 + 1 /* padding */];

// 
// Declarations:
// 

/* 8032FFEC-80330234 0248+00 s=0 e=7 z=0  None .text      __ct__18J3DMaterialFactoryFRC16J3DMaterialBlock              */
//	80330018: 80332D8C (func_80332D8C)
//	80330028: 802F42C0 (func_802F42C0)
//	80330050: 80332D74 (func_80332D74)
//	8033006C: 802F4290 (func_802F4290)
//	8033007C: 802F4278 (func_802F4278)
//	8033008C: 802F4260 (func_802F4260)
//	8033009C: 80332D5C (func_80332D5C)
//	803300AC: 802F4278 (func_802F4278)
//	803300BC: 80332D44 (func_80332D44)
//	803300CC: 802F4260 (func_802F4260)
//	803300DC: 80332D2C (func_80332D2C)
//	803300EC: 80332D14 (func_80332D14)
//	803300FC: 80332CFC (func_80332CFC)
//	8033010C: 80332CFC (func_80332CFC)
//	8033011C: 802F42C0 (func_802F42C0)
//	8033012C: 80332CE4 (func_80332CE4)
//	8033013C: 802F41E8 (func_802F41E8)
//	8033014C: 802F4278 (func_802F4278)
//	8033015C: 802F4260 (func_802F4260)
//	8033016C: 80332CCC (func_80332CCC)
//	8033017C: 80332CB4 (func_80332CB4)
//	8033018C: 80332C9C (func_80332C9C)
//	8033019C: 80332C84 (func_80332C84)
//	803301AC: 80332C6C (func_80332C6C)
//	803301BC: 80332C54 (func_80332C54)
//	803301CC: 80332C3C (func_80332C3C)
//	803301DC: 802F4260 (func_802F4260)
//	803301EC: 802F4260 (func_802F4260)
//	803301FC: 80332C24 (func_80332C24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J3DMaterialBlock const& False
// 	 J3DMaterialBlock const False
// 		 J3DMaterialBlock False
asm J3DMaterialFactory::J3DMaterialFactory(J3DMaterialBlock const& param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__ct__18J3DMaterialFactoryFRC16J3DMaterialBlock.s"
}
#pragma pop


/* 80330234-803302BC 0088+00 s=0 e=2 z=0  None .text      __ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock            */
//	80330268: 80332C0C (func_80332C0C)
//	80330278: 80332BF4 (func_80332BF4)
//	80330288: 80332BDC (func_80332BDC)
//	80330298: 802F4260 (func_802F4260)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J3DMaterialDLBlock const& False
// 	 J3DMaterialDLBlock const False
// 		 J3DMaterialDLBlock False
asm J3DMaterialFactory::J3DMaterialFactory(J3DMaterialDLBlock const& param_0) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__ct__18J3DMaterialFactoryFRC18J3DMaterialDLBlock.s"
}
#pragma pop


/* 803302BC-80330304 0048+00 s=0 e=3 z=0  None .text      countUniqueMaterials__18J3DMaterialFactoryFv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J3DMaterialFactory::countUniqueMaterials() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countUniqueMaterials__18J3DMaterialFactoryFv.s"
}
#pragma pop


/* 80330304-8033033C 0038+00 s=4 e=0 z=0  None .text      countTexGens__18J3DMaterialFactoryCFi                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::countTexGens(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countTexGens__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033033C-803303C4 0088+00 s=2 e=0 z=0  None .text      countStages__18J3DMaterialFactoryCFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::countStages(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/countStages__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803303C4-80330440 007C+00 s=0 e=4 z=0  None .text      create__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl */
//	803303FC: 80330440 (createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
//	80330410: 803317D4 (createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
//	80330424: 80330D84 (createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  J3DMaterialFactory::MaterialType False
//  int False
//  u32 False
asm void J3DMaterialFactory::create(J3DMaterial* param_0, J3DMaterialFactory::MaterialType param_1, int param_2, u32 param_3) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_803303C4.s"
}
#pragma pop


/* 80330440-80330D84 0944+00 s=1 e=0 z=0  None .text      createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
//	80330450: 803621B4 (_savegpr_19)
//	80330470: 803317D4 (createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
//	8033047C: 8033033C (countStages__18J3DMaterialFactoryCFi)
//	803304A8: 80330304 (countTexGens__18J3DMaterialFactoryCFi)
//	803304DC: 802CEC4C (__nw__FUl)
//	803304E8: 803CDCF0 (__vt__11J3DMaterial)
//	803304EC: 803CDCF0 (__vt__11J3DMaterial)
//	8033050C: 80316240 (initialize__11J3DMaterialFv)
//	80330518: 803157A0 (createColorBlock__11J3DMaterialFUl)
//	80330524: 803159A0 (createTexGenBlock__11J3DMaterialFUl)
//	80330530: 80315B04 (createTevBlock__11J3DMaterialFi)
//	8033053C: 80315E78 (createIndBlock__11J3DMaterialFi)
//	80330560: 80315F60 (createPEBlock__11J3DMaterialFUlUl)
//	8033058C: 80331D74 (newColorChanNum__18J3DMaterialFactoryCFi)
//	803305B0: 803320CC (newCullMode__18J3DMaterialFactoryCFi)
//	803305D4: 80331FAC (newTexGenNum__18J3DMaterialFactoryCFi)
//	803305FC: 803328FC (newNBTScale__18J3DMaterialFactoryCFi)
//	80330644: 8033268C (newFog__18J3DMaterialFactoryCFi)
//	8033066C: 80332768 (newAlphaComp__18J3DMaterialFactoryCFi)
//	80330694: 803327E8 (newBlend__18J3DMaterialFactoryCFi)
//	803306BC: 8033282C (newZMode__18J3DMaterialFactoryCFi)
//	803306E8: 8033288C (newZCompLoc__18J3DMaterialFactoryCFi)
//	8033070C: 803328C4 (newDither__18J3DMaterialFactoryCFi)
//	80330730: 8033226C (newTevStageNum__18J3DMaterialFactoryCFi)
//	8033075C: 8033210C (newTexNo__18J3DMaterialFactoryCFii)
//	803307A0: 80332154 (newTevOrder__18J3DMaterialFactoryCFii)
//	80330800: 803322A4 (newTevStage__18J3DMaterialFactoryCFii)
//	803308E4: 80332210 (newTevKColor__18J3DMaterialFactoryCFii)
//	8033092C: 803321A0 (newTevColor__18J3DMaterialFactoryCFii)
//	80330974: 80332304 (newTevSwapModeTable__18J3DMaterialFactoryCFii)
//	803309C4: 80331F50 (newAmbColor__18J3DMaterialFactoryCFii)
//	80330A0C: 80331D18 (newMatColor__18J3DMaterialFactoryCFii)
//	80330A54: 80331DAC (newColorChan__18J3DMaterialFactoryCFii)
//	80330AA0: 80331FE4 (newTexCoord__18J3DMaterialFactoryCFii)
//	80330AF4: 80332044 (newTexMtx__18J3DMaterialFactoryCFii)
//	80330C04: 803323A0 (newIndTexStageNum__18J3DMaterialFactoryCFi)
//	80330C14: 803323A0 (newIndTexStageNum__18J3DMaterialFactoryCFi)
//	80330C4C: 8033240C (newIndTexMtx__18J3DMaterialFactoryCFii)
//	80330C98: 803323C8 (newIndTexOrder__18J3DMaterialFactoryCFii)
//	80330CEC: 80332648 (newIndTexCoordScale__18J3DMaterialFactoryCFii)
//	80330D30: 803324B4 (newIndTevStage__18J3DMaterialFactoryCFii)
//	80330D70: 80362200 (_restgpr_19)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
asm void J3DMaterialFactory::createNormalMaterial(J3DMaterial* param_0, int param_1, u32 param_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80330D84-8033168C 0908+00 s=1 e=0 z=0  None .text      createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
//	80330D94: 803621B0 (_savegpr_18)
//	80330DB0: 802CEC4C (__nw__FUl)
//	80330DBC: 803CDCF0 (__vt__11J3DMaterial)
//	80330DC0: 803CDCF0 (__vt__11J3DMaterial)
//	80330DE0: 80316240 (initialize__11J3DMaterialFv)
//	80330DE4: 803CDCC0 (__vt__18J3DPatchedMaterial)
//	80330DE8: 803CDCC0 (__vt__18J3DPatchedMaterial)
//	80330DF4: 80316FB8 (initialize__18J3DPatchedMaterialFv)
//	80330E0C: 803157A0 (createColorBlock__11J3DMaterialFUl)
//	80330E18: 802CEC4C (__nw__FUl)
//	80330E28: 803CDE34 (__vt__14J3DTexGenBlock)
//	80330E2C: 803CDE34 (__vt__14J3DTexGenBlock)
//	80330E34: 803CE60C (__vt__21J3DTexGenBlockPatched)
//	80330E38: 803CE60C (__vt__21J3DTexGenBlockPatched)
//	80330E44: 8000E464 (__ct__11J3DTexCoordFv)
//	80330E48: 8000E464 (__ct__11J3DTexCoordFv)
//	80330E58: 80361D60 (__construct_array)
//	80330E60: 80317644 (initialize__21J3DTexGenBlockPatchedFv)
//	80330E6C: 802CEC4C (__nw__FUl)
//	80330E7C: 803CE958 (__vt__11J3DTevBlock)
//	80330E80: 803CE958 (__vt__11J3DTevBlock)
//	80330E88: 803CE458 (__vt__18J3DTevBlockPatched)
//	80330E8C: 803CE458 (__vt__18J3DTevBlockPatched)
//	80330E98: 8000E140 (__ct__11J3DTevOrderFv)
//	80330E9C: 8000E140 (__ct__11J3DTevOrderFv)
//	80330EAC: 80361D60 (__construct_array)
//	80330EB4: 8000E230 (__ct__11J3DTevStageFv)
//	80330EB8: 8000E230 (__ct__11J3DTevStageFv)
//	80330EC8: 80361D60 (__construct_array)
//	80330ED0: 8000E14C (__ct__14J3DIndTevStageFv)
//	80330ED4: 8000E14C (__ct__14J3DIndTevStageFv)
//	80330EE4: 80361D60 (__construct_array)
//	80330EEC: 8000E460 (__ct__13J3DGXColorS10Fv)
//	80330EF0: 8000E460 (__ct__13J3DGXColorS10Fv)
//	80330F00: 80361D60 (__construct_array)
//	80330F08: 8000E538 (__ct__10J3DGXColorFv)
//	80330F0C: 8000E538 (__ct__10J3DGXColorFv)
//	80330F1C: 80361D60 (__construct_array)
//	80330F24: 803176E0 (initialize__18J3DTevBlockPatchedFv)
//	80330F30: 80315E78 (createIndBlock__11J3DMaterialFi)
//	80330F54: 80315F60 (createPEBlock__11J3DMaterialFUlUl)
//	80330F80: 8033226C (newTevStageNum__18J3DMaterialFactoryCFi)
//	80330FA4: 80331D74 (newColorChanNum__18J3DMaterialFactoryCFi)
//	80330FC8: 803320CC (newCullMode__18J3DMaterialFactoryCFi)
//	80330FF0: 8033268C (newFog__18J3DMaterialFactoryCFi)
//	80331018: 80332768 (newAlphaComp__18J3DMaterialFactoryCFi)
//	80331040: 803327E8 (newBlend__18J3DMaterialFactoryCFi)
//	80331068: 8033282C (newZMode__18J3DMaterialFactoryCFi)
//	80331094: 8033288C (newZCompLoc__18J3DMaterialFactoryCFi)
//	803310B8: 803328C4 (newDither__18J3DMaterialFactoryCFi)
//	80331100: 8033210C (newTexNo__18J3DMaterialFactoryCFii)
//	8033114C: 80332154 (newTevOrder__18J3DMaterialFactoryCFii)
//	8033119C: 80332210 (newTevKColor__18J3DMaterialFactoryCFii)
//	803311E4: 803321A0 (newTevColor__18J3DMaterialFactoryCFii)
//	80331244: 803322A4 (newTevStage__18J3DMaterialFactoryCFii)
//	8033139C: 80331D18 (newMatColor__18J3DMaterialFactoryCFii)
//	803313E4: 80331DAC (newColorChan__18J3DMaterialFactoryCFii)
//	80331424: 80330304 (countTexGens__18J3DMaterialFactoryCFi)
//	80331434: 80331FAC (newTexGenNum__18J3DMaterialFactoryCFi)
//	80331464: 80332044 (newTexMtx__18J3DMaterialFactoryCFii)
//	803314A8: 80331FE4 (newTexCoord__18J3DMaterialFactoryCFii)
//	80331504: 803323A0 (newIndTexStageNum__18J3DMaterialFactoryCFi)
//	80331514: 803323A0 (newIndTexStageNum__18J3DMaterialFactoryCFi)
//	8033154C: 8033240C (newIndTexMtx__18J3DMaterialFactoryCFii)
//	80331598: 803323C8 (newIndTexOrder__18J3DMaterialFactoryCFii)
//	803315EC: 80332648 (newIndTexCoordScale__18J3DMaterialFactoryCFii)
//	80331638: 803324B4 (newIndTevStage__18J3DMaterialFactoryCFii)
//	80331678: 803621FC (_restgpr_18)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
asm void J3DMaterialFactory::createPatchedMaterial(J3DMaterial* param_0, int param_1, u32 param_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createPatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 8033168C-803317D4 0148+00 s=0 e=1 z=0  None .text      modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali */
//	8033169C: 803621D0 (_savegpr_26)
//	803316AC: 803A1EFC (j3dDefaultTexCoordInfo)
//	803316B0: 803A1EFC (j3dDefaultTexCoordInfo)
//	8033171C: 80330304 (countTexGens__18J3DMaterialFactoryCFi)
//	8033173C: 80331FE4 (newTexCoord__18J3DMaterialFactoryCFii)
//	803317C0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
asm void J3DMaterialFactory::modifyPatchedCurrentMtx(J3DMaterial* param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/modifyPatchedCurrentMtx__18J3DMaterialFactoryCFP11J3DMateriali.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CEE90-803CEF0C 007C+00 s=2 e=0 z=0  None .data      __vt__14J3DPEBlockNull                                       */
SECTION_DATA void* __vt__14J3DPEBlockNull[31] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)reset__10J3DPEBlockFP10J3DPEBlock,
	(void*)load__14J3DPEBlockNullFv,
	(void*)patch__10J3DPEBlockFv,
	(void*)diff__10J3DPEBlockFUl,
	(void*)diffFog__10J3DPEBlockFv,
	(void*)diffBlend__10J3DPEBlockFv,
	(void*)countDLSize__10J3DPEBlockFv,
	(void*)getType__14J3DPEBlockNullFv,
	(void*)setFog__10J3DPEBlockF6J3DFog,
	(void*)setFog__10J3DPEBlockFP6J3DFog,
	(void*)getFog__10J3DPEBlockFv,
	(void*)setAlphaComp__10J3DPEBlockFPC12J3DAlphaComp,
	(void*)setAlphaComp__10J3DPEBlockFRC12J3DAlphaComp,
	(void*)getAlphaComp__10J3DPEBlockFv,
	(void*)setBlend__10J3DPEBlockFPC8J3DBlend,
	(void*)setBlend__10J3DPEBlockFRC8J3DBlend,
	(void*)getBlend__10J3DPEBlockFv,
	(void*)setZMode__10J3DPEBlockFPC8J3DZMode,
	(void*)setZMode__10J3DPEBlockF8J3DZMode,
	(void*)getZMode__10J3DPEBlockFv,
	(void*)setZCompLoc__10J3DPEBlockFPCUc,
	(void*)setZCompLoc__10J3DPEBlockFUc,
	(void*)getZCompLoc__10J3DPEBlockCFv,
	(void*)setDither__10J3DPEBlockFPCUc,
	(void*)setDither__10J3DPEBlockFUc,
	(void*)getDither__10J3DPEBlockCFv,
	(void*)getFogOffset__10J3DPEBlockCFv,
	(void*)setFogOffset__10J3DPEBlockFUl,
	(void*)__dt__14J3DPEBlockNullFv,
};

/* 803CEF0C-803CEFE8 00DC+00 s=2 e=0 z=0  None .data      __vt__15J3DTevBlockNull                                      */
SECTION_DATA void* __vt__15J3DTevBlockNull[55] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)reset__15J3DTevBlockNullFP11J3DTevBlock,
	(void*)load__11J3DTevBlockFv,
	(void*)diff__11J3DTevBlockFUl,
	(void*)diffTexNo__11J3DTevBlockFv,
	(void*)diffTevReg__11J3DTevBlockFv,
	(void*)diffTexCoordScale__11J3DTevBlockFv,
	(void*)diffTevStage__11J3DTevBlockFv,
	(void*)diffTevStageIndirect__11J3DTevBlockFv,
	(void*)patch__11J3DTevBlockFv,
	(void*)patchTexNo__11J3DTevBlockFv,
	(void*)patchTevReg__11J3DTevBlockFv,
	(void*)patchTexNoAndTexCoordScale__11J3DTevBlockFv,
	(void*)ptrToIndex__15J3DTevBlockNullFv,
	(void*)indexToPtr__15J3DTevBlockNullFv,
	(void*)getType__15J3DTevBlockNullFv,
	(void*)countDLSize__11J3DTevBlockFv,
	(void*)setTexNo__11J3DTevBlockFUlPCUs,
	(void*)setTexNo__11J3DTevBlockFUlUs,
	(void*)getTexNo__11J3DTevBlockCFUl,
	(void*)setTevOrder__11J3DTevBlockFUlPC11J3DTevOrder,
	(void*)setTevOrder__11J3DTevBlockFUl11J3DTevOrder,
	(void*)getTevOrder__11J3DTevBlockFUl,
	(void*)setTevColor__11J3DTevBlockFUlPC13J3DGXColorS10,
	(void*)setTevColor__11J3DTevBlockFUl13J3DGXColorS10,
	(void*)getTevColor__11J3DTevBlockFUl,
	(void*)setTevKColor__11J3DTevBlockFUlPC10J3DGXColor,
	(void*)setTevKColor__11J3DTevBlockFUl10J3DGXColor,
	(void*)getTevKColor__11J3DTevBlockFUl,
	(void*)setTevKColorSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKColorSel__11J3DTevBlockFUlUc,
	(void*)getTevKColorSel__11J3DTevBlockFUl,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlPCUc,
	(void*)setTevKAlphaSel__11J3DTevBlockFUlUc,
	(void*)getTevKAlphaSel__11J3DTevBlockFUl,
	(void*)setTevStageNum__11J3DTevBlockFPCUc,
	(void*)setTevStageNum__11J3DTevBlockFUc,
	(void*)getTevStageNum__11J3DTevBlockCFv,
	(void*)setTevStage__11J3DTevBlockFUlPC11J3DTevStage,
	(void*)setTevStage__11J3DTevBlockFUl11J3DTevStage,
	(void*)getTevStage__11J3DTevBlockFUl,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUlPC18J3DTevSwapModeInfo,
	(void*)setTevSwapModeInfo__11J3DTevBlockFUl18J3DTevSwapModeInfo,
	(void*)setTevSwapModeTable__11J3DTevBlockFUlPC19J3DTevSwapModeTable,
	(void*)setTevSwapModeTable__11J3DTevBlockFUl19J3DTevSwapModeTable,
	(void*)getTevSwapModeTable__11J3DTevBlockFUl,
	(void*)setIndTevStage__11J3DTevBlockFUlPC14J3DIndTevStage,
	(void*)setIndTevStage__11J3DTevBlockFUl14J3DIndTevStage,
	(void*)getIndTevStage__11J3DTevBlockFUl,
	(void*)getTexNoOffset__11J3DTevBlockCFv,
	(void*)getTevRegOffset__11J3DTevBlockCFv,
	(void*)setTexNoOffset__11J3DTevBlockFUl,
	(void*)setTevRegOffset__11J3DTevBlockFUl,
	(void*)__dt__15J3DTevBlockNullFv,
};

/* 803CEFE8-803CF054 006C+00 s=2 e=0 z=0  None .data      __vt__18J3DTexGenBlockNull                                   */
SECTION_DATA void* __vt__18J3DTexGenBlockNull[27] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)reset__14J3DTexGenBlockFP14J3DTexGenBlock,
	(void*)calc__18J3DTexGenBlockNullFPA4_Cf,
	(void*)calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf,
	(void*)calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf,
	(void*)calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf,
	(void*)load__18J3DTexGenBlockNullFv,
	(void*)patch__18J3DTexGenBlockNullFv,
	(void*)diff__18J3DTexGenBlockNullFUl,
	(void*)diffTexMtx__18J3DTexGenBlockNullFv,
	(void*)diffTexGen__18J3DTexGenBlockNullFv,
	(void*)countDLSize__14J3DTexGenBlockFv,
	(void*)getType__18J3DTexGenBlockNullFv,
	(void*)setTexGenNum__14J3DTexGenBlockFPCUl,
	(void*)setTexGenNum__14J3DTexGenBlockFUl,
	(void*)getTexGenNum__14J3DTexGenBlockCFv,
	(void*)setTexCoord__14J3DTexGenBlockFUlPC11J3DTexCoord,
	(void*)getTexCoord__14J3DTexGenBlockFUl,
	(void*)setTexMtx__14J3DTexGenBlockFUlP9J3DTexMtx,
	(void*)getTexMtx__14J3DTexGenBlockFUl,
	(void*)setNBTScale__14J3DTexGenBlockFPC11J3DNBTScale,
	(void*)setNBTScale__14J3DTexGenBlockF11J3DNBTScale,
	(void*)getNBTScale__14J3DTexGenBlockFv,
	(void*)getTexMtxOffset__14J3DTexGenBlockCFv,
	(void*)setTexMtxOffset__14J3DTexGenBlockFUl,
	(void*)__dt__18J3DTexGenBlockNullFv,
};

/* 803CF054-803CF0E8 0090+04 s=2 e=0 z=0  None .data      __vt__17J3DColorBlockNull                                    */
SECTION_DATA void* __vt__17J3DColorBlockNull[36 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)load__13J3DColorBlockFv,
	(void*)reset__13J3DColorBlockFP13J3DColorBlock,
	(void*)patch__13J3DColorBlockFv,
	(void*)patchMatColor__13J3DColorBlockFv,
	(void*)patchLight__13J3DColorBlockFv,
	(void*)diff__13J3DColorBlockFUl,
	(void*)diffAmbColor__13J3DColorBlockFv,
	(void*)diffMatColor__13J3DColorBlockFv,
	(void*)diffColorChan__13J3DColorBlockFv,
	(void*)diffLightObj__13J3DColorBlockFUl,
	(void*)countDLSize__13J3DColorBlockFv,
	(void*)getType__17J3DColorBlockNullFv,
	(void*)setMatColor__13J3DColorBlockFUlPC10J3DGXColor,
	(void*)setMatColor__13J3DColorBlockFUl10J3DGXColor,
	(void*)getMatColor__13J3DColorBlockFUl,
	(void*)setAmbColor__13J3DColorBlockFUlPC10J3DGXColor,
	(void*)setAmbColor__13J3DColorBlockFUl10J3DGXColor,
	(void*)getAmbColor__13J3DColorBlockFUl,
	(void*)setColorChanNum__13J3DColorBlockFUc,
	(void*)setColorChanNum__13J3DColorBlockFPCUc,
	(void*)getColorChanNum__13J3DColorBlockCFv,
	(void*)setColorChan__13J3DColorBlockFUlRC12J3DColorChan,
	(void*)setColorChan__13J3DColorBlockFUlPC12J3DColorChan,
	(void*)getColorChan__13J3DColorBlockFUl,
	(void*)setLight__13J3DColorBlockFUlP11J3DLightObj,
	(void*)getLight__13J3DColorBlockFUl,
	(void*)setCullMode__13J3DColorBlockFPCUc,
	(void*)setCullMode__13J3DColorBlockFUc,
	(void*)getCullMode__13J3DColorBlockCFv,
	(void*)getMatColorOffset__13J3DColorBlockCFv,
	(void*)getColorChanOffset__13J3DColorBlockCFv,
	(void*)setMatColorOffset__13J3DColorBlockFUl,
	(void*)setColorChanOffset__13J3DColorBlockFUl,
	(void*)__dt__17J3DColorBlockNullFv,
	/* padding */
	NULL,
};

/* 803317D4-80331A7C 02A8+00 s=2 e=0 z=0  None .text      createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
//	803317E4: 803621D8 (_savegpr_28)
//	803317FC: 802CEC4C (__nw__FUl)
//	80331808: 803CDCF0 (__vt__11J3DMaterial)
//	8033180C: 803CDCF0 (__vt__11J3DMaterial)
//	8033182C: 80316240 (initialize__11J3DMaterialFv)
//	80331830: 803CDC90 (__vt__17J3DLockedMaterial)
//	80331834: 803CDC90 (__vt__17J3DLockedMaterial)
//	80331840: 80317044 (initialize__17J3DLockedMaterialFv)
//	80331848: 802CEC4C (__nw__FUl)
//	80331854: 803CDEA0 (__vt__13J3DColorBlock)
//	80331858: 803CDEA0 (__vt__13J3DColorBlock)
//	80331860: 803CF054 (__vt__17J3DColorBlockNull)
//	80331864: 803CF054 (__vt__17J3DColorBlockNull)
//	80331874: 802CEC4C (__nw__FUl)
//	80331880: 803CDE34 (__vt__14J3DTexGenBlock)
//	80331884: 803CDE34 (__vt__14J3DTexGenBlock)
//	8033188C: 803CEFE8 (__vt__18J3DTexGenBlockNull)
//	80331890: 803CEFE8 (__vt__18J3DTexGenBlockNull)
//	803318A0: 802CEC4C (__nw__FUl)
//	803318AC: 803CE958 (__vt__11J3DTevBlock)
//	803318B0: 803CE958 (__vt__11J3DTevBlock)
//	803318B8: 803CEF0C (__vt__15J3DTevBlockNull)
//	803318BC: 803CEF0C (__vt__15J3DTevBlockNull)
//	803318C4: 803176D4 (initialize__15J3DTevBlockNullFv)
//	803318D0: 802CEC4C (__nw__FUl)
//	803318DC: 803CDDE8 (__vt__11J3DIndBlock)
//	803318E0: 803CDDE8 (__vt__11J3DIndBlock)
//	803318E8: 803CDD9C (__vt__15J3DIndBlockNull)
//	803318EC: 803CDD9C (__vt__15J3DIndBlockNull)
//	803318FC: 802CEC4C (__nw__FUl)
//	80331908: 803CDD20 (__vt__10J3DPEBlock)
//	8033190C: 803CDD20 (__vt__10J3DPEBlock)
//	80331914: 803CEE90 (__vt__14J3DPEBlockNull)
//	80331918: 803CEE90 (__vt__14J3DPEBlockNull)
//	80331A20: 802CEC4C (__nw__FUl)
//	80331A5C: 803125E4 (setSingleDisplayList__17J3DDisplayListObjFPvUl)
//	80331A68: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
asm void J3DMaterialFactory::createLockedMaterial(J3DMaterial* param_0, int param_1, u32 param_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/createLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80331A7C-80331AFC 0080+00 s=0 e=4 z=0  None .text      calcSize__18J3DMaterialFactoryCFP11J3DMaterialQ218J3DMaterialFactory12MaterialTypeiUl */
//	80331AB8: 80331AFC (calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
//	80331ACC: 80331D00 (calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
//	80331AE0: 80331C30 (calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J3DMaterial* False
// 	 J3DMaterial False
//  J3DMaterialFactory::MaterialType False
//  int False
//  u32 False
asm void J3DMaterialFactory::calcSize(J3DMaterial* param_0, J3DMaterialFactory::MaterialType param_1, int param_2, u32 param_3) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80331A7C.s"
}
#pragma pop


/* 80331AFC-80331C30 0134+00 s=1 e=0 z=0  None .text      calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
//	80331B0C: 803621C8 (_savegpr_24)
//	80331B30: 80331D00 (calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl)
//	80331B3C: 8033033C (countStages__18J3DMaterialFactoryCFi)
//	80331B58: 80330304 (countTexGens__18J3DMaterialFactoryCFi)
//	80331B88: 80316100 (calcSizeColorBlock__11J3DMaterialFUl)
//	80331B94: 80316150 (calcSizeTexGenBlock__11J3DMaterialFUl)
//	80331BA0: 8031617C (calcSizeTevBlock__11J3DMaterialFi)
//	80331BAC: 803161C4 (calcSizeIndBlock__11J3DMaterialFi)
//	80331BD0: 803161D8 (calcSizePEBlock__11J3DMaterialFUlUl)
//	80331C1C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
asm void J3DMaterialFactory::calcSizeNormalMaterial(J3DMaterial* param_0, int param_1, u32 param_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizeNormalMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80331C30-80331D00 00D0+00 s=1 e=0 z=0  None .text      calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
//	80331C40: 803621D8 (_savegpr_28)
//	80331C6C: 80316100 (calcSizeColorBlock__11J3DMaterialFUl)
//	80331C7C: 803161C4 (calcSizeIndBlock__11J3DMaterialFi)
//	80331CA0: 803161D8 (calcSizePEBlock__11J3DMaterialFUlUl)
//	80331CEC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
asm void J3DMaterialFactory::calcSizePatchedMaterial(J3DMaterial* param_0, int param_1, u32 param_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizePatchedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* 80331D00-80331D18 0018+00 s=2 e=0 z=0  None .text      calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J3DMaterial* False
// 	 J3DMaterial False
//  int False
//  u32 False
asm void J3DMaterialFactory::calcSizeLockedMaterial(J3DMaterial* param_0, int param_1, u32 param_2) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/calcSizeLockedMaterial__18J3DMaterialFactoryCFP11J3DMaterialiUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 804564A8-804564AC 0004+00 s=1 e=0 z=0  None .sdata2    @1691                                                        */
SECTION_SDATA2 static u32 lit_1691 = 0xFFFFFFFF;

/* 80331D18-80331D74 005C+00 s=2 e=0 z=0  None .text      newMatColor__18J3DMaterialFactoryCFii                        */
//	80331D1C: 804564A8 (lit_1691)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newMatColor(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newMatColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80331D74-80331DAC 0038+00 s=2 e=0 z=0  None .text      newColorChanNum__18J3DMaterialFactoryCFi                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newColorChanNum(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newColorChanNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 80331DAC-80331F50 01A4+00 s=2 e=0 z=0  None .text      newColorChan__18J3DMaterialFactoryCFii                       */
//	80331E94: 804563F0 (j3dDefaultColorChanInfo)
//	80331EC4: 804563F0 (j3dDefaultColorChanInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newColorChan(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newColorChan__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* ############################################################################################## */
/* 804564AC-804564B0 0004+00 s=1 e=0 z=0  None .sdata2    @1798                                                        */
SECTION_SDATA2 static u32 lit_1798 = 0x32323232;

/* 80331F50-80331FAC 005C+00 s=1 e=0 z=0  None .text      newAmbColor__18J3DMaterialFactoryCFii                        */
//	80331F54: 804564AC (lit_1798)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newAmbColor(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newAmbColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80331FAC-80331FE4 0038+00 s=2 e=0 z=0  None .text      newTexGenNum__18J3DMaterialFactoryCFi                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newTexGenNum(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexGenNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 80331FE4-80332044 0060+00 s=3 e=0 z=0  None .text      newTexCoord__18J3DMaterialFactoryCFii                        */
//	8033202C: 803A1EFC (j3dDefaultTexCoordInfo)
//	80332030: 803A1EFC (j3dDefaultTexCoordInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTexCoord(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexCoord__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332044-803320CC 0088+00 s=2 e=0 z=0  None .text      newTexMtx__18J3DMaterialFactoryCFii                          */
//	80332054: 803621DC (_savegpr_29)
//	80332090: 802CEC4C (__nw__FUl)
//	803320AC: 80325718 (__as__13J3DTexMtxInfoFRC13J3DTexMtxInfo)
//	803320B8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTexMtx(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexMtx__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 803320CC-8033210C 0040+00 s=2 e=0 z=0  None .text      newCullMode__18J3DMaterialFactoryCFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newCullMode(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newCullMode__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033210C-80332154 0048+00 s=2 e=0 z=0  None .text      newTexNo__18J3DMaterialFactoryCFii                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTexNo(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTexNo__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332154-803321A0 004C+00 s=2 e=0 z=0  None .text      newTevOrder__18J3DMaterialFactoryCFii                        */
//	80332194: 804563CC (j3dDefaultTevOrderInfoNull)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTevOrder(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevOrder__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456BB8-80456BBC 0004+00 s=1 e=0 z=0  None .sbss2     @1897                                                        */
SECTION_SBSS2 static u8 lit_1897[4];

/* 80456BBC-80456BC0 0004+00 s=1 e=0 z=0  None .sbss2     None                                                         */
SECTION_SBSS2 static u8 data_80456BBC[4];

/* 803321A0-80332210 0070+00 s=2 e=0 z=0  None .text      newTevColor__18J3DMaterialFactoryCFii                        */
//	803321A4: 80456BB8 (lit_1897)
//	803321A8: 80456BBC (data_80456BBC)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTevColor(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* ############################################################################################## */
/* 804564B0-804564B8 0004+04 s=1 e=0 z=0  None .sdata2    @1915                                                        */
SECTION_SDATA2 static u32 lit_1915[1 + 1 /* padding */] = {
	0xFFFFFFFF,
	/* padding */
	0x00000000,
};

/* 80332210-8033226C 005C+00 s=2 e=0 z=0  None .text      newTevKColor__18J3DMaterialFactoryCFii                       */
//	80332214: 804564B0 (lit_1915)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTevKColor(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevKColor__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 8033226C-803322A4 0038+00 s=2 e=0 z=0  None .text      newTevStageNum__18J3DMaterialFactoryCFi                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newTevStageNum(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevStageNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803322A4-80332304 0060+00 s=2 e=0 z=0  None .text      newTevStage__18J3DMaterialFactoryCFii                        */
//	803322E8: 8003AACC (__ct__11J3DTevStageFRC15J3DTevStageInfo)
//	803322F0: 8000E230 (__ct__11J3DTevStageFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTevStage(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevStage__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332304-803323A0 009C+00 s=1 e=0 z=0  None .text      newTevSwapModeTable__18J3DMaterialFactoryCFii                */
//	8033236C: 804563E8 (j3dDefaultTevSwapModeTable)
//	80332380: 804563E8 (j3dDefaultTevSwapModeTable)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newTevSwapModeTable(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newTevSwapModeTable__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 803323A0-803323C8 0028+00 s=2 e=0 z=0  None .text      newIndTexStageNum__18J3DMaterialFactoryCFi                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newIndTexStageNum(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexStageNum__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803323C8-8033240C 0044+00 s=2 e=0 z=0  None .text      newIndTexOrder__18J3DMaterialFactoryCFii                     */
//	803323CC: 804563D0 (j3dDefaultIndTexOrderNull)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newIndTexOrder(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexOrder__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 8033240C-803324B4 00A8+00 s=2 e=0 z=0  None .text      newIndTexMtx__18J3DMaterialFactoryCFii                       */
//	8033241C: 803621D8 (_savegpr_28)
//	80332434: 803A1F80 (j3dDefaultIndTexMtxInfo)
//	80332438: 803A1F80 (j3dDefaultIndTexMtxInfo)
//	8033243C: 803257DC (__as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo)
//	80332468: 803257DC (__as__16J3DIndTexMtxInfoFRC16J3DIndTexMtxInfo)
//	803324A0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newIndTexMtx(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexMtx__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 803324B4-80332648 0194+00 s=2 e=0 z=0  None .text      newIndTevStage__18J3DMaterialFactoryCFii                     */
//	803324B4: 803A1FB0 (j3dDefaultIndTevStageInfo)
//	803324B8: 803A1FB0 (j3dDefaultIndTevStageInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newIndTevStage(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTevStage__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 80332648-8033268C 0044+00 s=2 e=0 z=0  None .text      newIndTexCoordScale__18J3DMaterialFactoryCFii                */
//	8033264C: 804563DC (j3dDefaultIndTexCoordScaleInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  int False
asm void J3DMaterialFactory::newIndTexCoordScale(int param_0, int param_1) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newIndTexCoordScale__18J3DMaterialFactoryCFii.s"
}
#pragma pop


/* 8033268C-80332768 00DC+00 s=2 e=0 z=0  None .text      newFog__18J3DMaterialFactoryCFi                              */
//	8033269C: 803621DC (_savegpr_29)
//	803326B0: 803A1FBC (j3dDefaultFogInfo)
//	803326B4: 803A1FBC (j3dDefaultFogInfo)
//	803326B8: 80325800 (__as__10J3DFogInfoFRC10J3DFogInfo)
//	80332720: 80325800 (__as__10J3DFogInfoFRC10J3DFogInfo)
//	80332754: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newFog(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newFog__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 80332768-803327E8 0080+00 s=2 e=0 z=0  None .text      newAlphaComp__18J3DMaterialFactoryCFi                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newAlphaComp(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newAlphaComp__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803327E8-8033282C 0044+00 s=2 e=0 z=0  None .text      newBlend__18J3DMaterialFactoryCFi                            */
//	80332820: 804563EC (j3dDefaultBlendInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newBlend(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newBlend__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033282C-8033288C 0060+00 s=2 e=0 z=0  None .text      newZMode__18J3DMaterialFactoryCFi                            */
//	80332880: 804563FC (j3dDefaultZModeID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newZMode(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newZMode__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 8033288C-803328C4 0038+00 s=2 e=0 z=0  None .text      newZCompLoc__18J3DMaterialFactoryCFi                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newZCompLoc(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newZCompLoc__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803328C4-803328FC 0038+00 s=2 e=0 z=0  None .text      newDither__18J3DMaterialFactoryCFi                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newDither(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newDither__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803328FC-803329A0 00A4+00 s=1 e=0 z=0  None .text      newNBTScale__18J3DMaterialFactoryCFi                         */
//	80332900: 803A1FE8 (j3dDefaultNBTScaleInfo)
//	80332904: 803A1FE8 (j3dDefaultNBTScaleInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
asm void J3DMaterialFactory::newNBTScale(int param_0) const {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/newNBTScale__18J3DMaterialFactoryCFi.s"
}
#pragma pop


/* 803329A0-803329A4 0004+00 s=1 e=0 z=0  None .text      load__14J3DPEBlockNullFv                                     */
// True False
//  void False
void J3DPEBlockNull::load() {
	/* empty function */
}


/* 803329A4-803329B0 000C+00 s=1 e=0 z=0  None .text      getType__14J3DPEBlockNullFv                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J3DPEBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__14J3DPEBlockNullFv.s"
}
#pragma pop


/* 803329B0-80332A0C 005C+00 s=1 e=0 z=0  None .text      __dt__14J3DPEBlockNullFv                                     */
//	803329C8: 803CEE90 (__vt__14J3DPEBlockNull)
//	803329CC: 803CEE90 (__vt__14J3DPEBlockNull)
//	803329D8: 803CDD20 (__vt__10J3DPEBlock)
//	803329DC: 803CDD20 (__vt__10J3DPEBlock)
//	803329F0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DPEBlockNull::~J3DPEBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__14J3DPEBlockNullFv.s"
}
#pragma pop


/* 80332A0C-80332A10 0004+00 s=1 e=0 z=0  None .text      reset__15J3DTevBlockNullFP11J3DTevBlock                      */
// True False
//  void False
//  J3DTevBlock* False
// 	 J3DTevBlock False
void J3DTevBlockNull::reset(J3DTevBlock* param_0) {
	/* empty function */
}


/* 80332A10-80332A14 0004+00 s=1 e=0 z=0  None .text      ptrToIndex__15J3DTevBlockNullFv                              */
// True False
//  void False
void J3DTevBlockNull::ptrToIndex() {
	/* empty function */
}


/* 80332A14-80332A38 0024+00 s=1 e=0 z=0  None .text      indexToPtr__15J3DTevBlockNullFv                              */
//	80332A24: 8031E098 (indexToPtr_private__11J3DTevBlockFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J3DTevBlockNull::indexToPtr() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/indexToPtr__15J3DTevBlockNullFv.s"
}
#pragma pop


/* 80332A38-80332A44 000C+00 s=1 e=0 z=0  None .text      getType__15J3DTevBlockNullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J3DTevBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__15J3DTevBlockNullFv.s"
}
#pragma pop


/* 80332A44-80332AA0 005C+00 s=1 e=0 z=0  None .text      __dt__15J3DTevBlockNullFv                                    */
//	80332A5C: 803CEF0C (__vt__15J3DTevBlockNull)
//	80332A60: 803CEF0C (__vt__15J3DTevBlockNull)
//	80332A6C: 803CE958 (__vt__11J3DTevBlock)
//	80332A70: 803CE958 (__vt__11J3DTevBlock)
//	80332A84: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTevBlockNull::~J3DTevBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__15J3DTevBlockNullFv.s"
}
#pragma pop


/* 80332AA0-80332AA4 0004+00 s=1 e=0 z=0  None .text      calc__18J3DTexGenBlockNullFPA4_Cf                            */
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void J3DTexGenBlockNull::calc(f32 const (* param_0)[4]) {
	/* empty function */
}


/* 80332AA4-80332AA8 0004+00 s=1 e=0 z=0  None .text      calcWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf              */
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void J3DTexGenBlockNull::calcWithoutViewMtx(f32 const (* param_0)[4]) {
	/* empty function */
}


/* 80332AA8-80332AAC 0004+00 s=1 e=0 z=0  None .text      calcPostTexMtx__18J3DTexGenBlockNullFPA4_Cf                  */
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void J3DTexGenBlockNull::calcPostTexMtx(f32 const (* param_0)[4]) {
	/* empty function */
}


/* 80332AAC-80332AB0 0004+00 s=1 e=0 z=0  None .text      calcPostTexMtxWithoutViewMtx__18J3DTexGenBlockNullFPA4_Cf    */
// True False
//  void False
//  f32 const (* )[4] False
// 	 f32 const False
// 		 f32 False
// 	 * False
// 		  False
void J3DTexGenBlockNull::calcPostTexMtxWithoutViewMtx(f32 const (* param_0)[4]) {
	/* empty function */
}


/* 80332AB0-80332AB4 0004+00 s=1 e=0 z=0  None .text      load__18J3DTexGenBlockNullFv                                 */
// True False
//  void False
void J3DTexGenBlockNull::load() {
	/* empty function */
}


/* 80332AB4-80332AB8 0004+00 s=1 e=0 z=0  None .text      patch__18J3DTexGenBlockNullFv                                */
// True False
//  void False
void J3DTexGenBlockNull::patch() {
	/* empty function */
}


/* 80332AB8-80332ABC 0004+00 s=1 e=0 z=0  None .text      diff__18J3DTexGenBlockNullFUl                                */
// True False
//  void False
//  u32 False
void J3DTexGenBlockNull::diff(u32 param_0) {
	/* empty function */
}


/* 80332ABC-80332AC0 0004+00 s=1 e=0 z=0  None .text      diffTexMtx__18J3DTexGenBlockNullFv                           */
// True False
//  void False
void J3DTexGenBlockNull::diffTexMtx() {
	/* empty function */
}


/* 80332AC0-80332AC4 0004+00 s=1 e=0 z=0  None .text      diffTexGen__18J3DTexGenBlockNullFv                           */
// True False
//  void False
void J3DTexGenBlockNull::diffTexGen() {
	/* empty function */
}


/* 80332AC4-80332AD0 000C+00 s=1 e=0 z=0  None .text      getType__18J3DTexGenBlockNullFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J3DTexGenBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__18J3DTexGenBlockNullFv.s"
}
#pragma pop


/* 80332AD0-80332B2C 005C+00 s=1 e=0 z=0  None .text      __dt__18J3DTexGenBlockNullFv                                 */
//	80332AE8: 803CEFE8 (__vt__18J3DTexGenBlockNull)
//	80332AEC: 803CEFE8 (__vt__18J3DTexGenBlockNull)
//	80332AF8: 803CDE34 (__vt__14J3DTexGenBlock)
//	80332AFC: 803CDE34 (__vt__14J3DTexGenBlock)
//	80332B10: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DTexGenBlockNull::~J3DTexGenBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__18J3DTexGenBlockNullFv.s"
}
#pragma pop


/* 80332B2C-80332B38 000C+00 s=1 e=0 z=0  None .text      getType__17J3DColorBlockNullFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J3DColorBlockNull::getType() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/getType__17J3DColorBlockNullFv.s"
}
#pragma pop


/* 80332B38-80332B94 005C+00 s=1 e=0 z=0  None .text      __dt__17J3DColorBlockNullFv                                  */
//	80332B50: 803CF054 (__vt__17J3DColorBlockNull)
//	80332B54: 803CF054 (__vt__17J3DColorBlockNull)
//	80332B60: 803CDEA0 (__vt__13J3DColorBlock)
//	80332B64: 803CDEA0 (__vt__13J3DColorBlock)
//	80332B78: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J3DColorBlockNull::~J3DColorBlockNull() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__17J3DColorBlockNullFv.s"
}
#pragma pop


/* 80332B94-80332BDC 0048+00 s=0 e=2 z=0  None .text      __dt__11J3DMaterialFv                                        */
//	80332BAC: 803CDCF0 (__vt__11J3DMaterial)
//	80332BB0: 803CDCF0 (__vt__11J3DMaterial)
//	80332BC0: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J3DMaterial::~J3DMaterial() {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/__dt__11J3DMaterialFv.s"
}
#pragma pop


/* 80332BDC-80332BF4 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<17J3DCurrentMtxInfo>__FPCvPCv          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template43(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332BDC.s"
}
#pragma pop


/* 80332BF4-80332C0C 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<15J3DPatchingInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template44(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332BF4.s"
}
#pragma pop


/* 80332C0C-80332C24 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<18J3DDisplayListInit>__FPCvPCv         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template45(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C0C.s"
}
#pragma pop


/* 80332C24-80332C3C 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<15J3DNBTScaleInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template46(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C24.s"
}
#pragma pop


/* 80332C3C-80332C54 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<12J3DZModeInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template47(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C3C.s"
}
#pragma pop


/* 80332C54-80332C6C 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<12J3DBlendInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template48(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C54.s"
}
#pragma pop


/* 80332C6C-80332C84 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<16J3DAlphaCompInfo>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template49(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C6C.s"
}
#pragma pop


/* 80332C84-80332C9C 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<10J3DFogInfo>__FPCvPCv                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template50(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C84.s"
}
#pragma pop


/* 80332C9C-80332CB4 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<23J3DTevSwapModeTableInfo>__FPCvPCv    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template51(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332C9C.s"
}
#pragma pop


/* 80332CB4-80332CCC 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<18J3DTevSwapModeInfo>__FPCvPCv         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template52(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CB4.s"
}
#pragma pop


/* 80332CCC-80332CE4 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<15J3DTevStageInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template53(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CCC.s"
}
#pragma pop


/* 80332CE4-80332CFC 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<15J3DTevOrderInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template54(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CE4.s"
}
#pragma pop


/* 80332CFC-80332D14 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<13J3DTexMtxInfo>__FPCvPCv              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template55(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332CFC.s"
}
#pragma pop


/* 80332D14-80332D2C 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<16J3DTexCoord2Info>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template56(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D14.s"
}
#pragma pop


/* 80332D2C-80332D44 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<15J3DTexCoordInfo>__FPCvPCv            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template57(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D2C.s"
}
#pragma pop


/* 80332D44-80332D5C 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<12J3DLightInfo>__FPCvPCv               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template58(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D44.s"
}
#pragma pop


/* 80332D5C-80332D74 0018+00 s=1 e=1 z=0  None .text      JSUConvertOffsetToPtr<16J3DColorChanInfo>__FPCvPCv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template59(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D5C.s"
}
#pragma pop


/* 80332D74-80332D8C 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<14J3DIndInitData>__FPCvPCv             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template60(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D74.s"
}
#pragma pop


/* 80332D8C-80332DA4 0018+00 s=1 e=0 z=0  None .text      JSUConvertOffsetToPtr<19J3DMaterialInitData>__FPCvPCv        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  void const* False
// 	 void const False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
asm void JSUConvertOffsetToPtr__template61(void const* param_0, void const* param_1) {
	nofralloc
#include "asm/JSystem/J3DGraphLoader/J3DMaterialFactory/func_80332D8C.s"
}
#pragma pop


