// 
// Generated By: dol2asm
// Translation Unit: JKRDisposer
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JKernel/JKRDisposer.h"

// 
// Types:
// 

struct JSUPtrLink {
	/* 802DBDFC */ // False False
//  void* False
// 	 void False
JSUPtrLink(void*);
	/* 802DBE14 */ // False False
~JSUPtrLink();
};

struct JSUPtrList {
	/* 802DBF4C */ // False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
void append(JSUPtrLink*);
	/* 802DC15C */ // False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
void remove(JSUPtrLink*);
};

struct JKRHeap {
	/* 802CE83C */ // False False
//  void* False
// 	 void False
void findFromRoot(void*);
};

struct JKRDisposer {
	/* 802D147C */ // False False
JKRDisposer();
	/* 802D14E4 */ // False False
~JKRDisposer();
};

// 
// Forward References:
// 


// False False
extern "C" void __ct__11JKRDisposerFv();
// False False
extern "C" void __dt__11JKRDisposerFv();
extern "C" extern void* __vt__11JKRDisposer[3 + 1 /* padding */];

// 
// External References:
// 

// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  void* False
// 	 void False
extern "C" void findFromRoot__7JKRHeapFPv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  void* False
// 	 void False
extern "C" void __ct__10JSUPtrLinkFPv();
// False False
extern "C" void __dt__10JSUPtrLinkFv();
// False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
extern "C" void append__10JSUPtrListFP10JSUPtrLink();
// False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
extern "C" void remove__10JSUPtrListFP10JSUPtrLink();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CC0F0-803CC100 000C+04 s=2 e=0 z=0  None .data      __vt__11JKRDisposer                                          */
SECTION_DATA void* __vt__11JKRDisposer[3 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__11JKRDisposerFv,
	/* padding */
	NULL,
};

/* 802D147C-802D14E4 0068+00 s=0 e=12 z=0  None .text      __ct__11JKRDisposerFv                                        */
//	802D1490: 803CC0F0 (__vt__11JKRDisposer)
//	802D1494: 803CC0F0 (__vt__11JKRDisposer)
//	802D14A4: 802DBDFC (__ct__10JSUPtrLinkFPv)
//	802D14AC: 802CE83C (findFromRoot__7JKRHeapFPv)
//	802D14C8: 802DBF4C (append__10JSUPtrListFP10JSUPtrLink)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JKRDisposer::JKRDisposer() {
	nofralloc
#include "asm/JSystem/JKernel/JKRDisposer/__ct__11JKRDisposerFv.s"
}
#pragma pop


/* 802D14E4-802D1568 0084+00 s=1 e=10 z=0  None .text      __dt__11JKRDisposerFv                                        */
//	802D1504: 803CC0F0 (__vt__11JKRDisposer)
//	802D1508: 803CC0F0 (__vt__11JKRDisposer)
//	802D1524: 802DC15C (remove__10JSUPtrListFP10JSUPtrLink)
//	802D1538: 802DBE14 (__dt__10JSUPtrLinkFv)
//	802D1548: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JKRDisposer::~JKRDisposer() {
	nofralloc
#include "asm/JSystem/JKernel/JKRDisposer/__dt__11JKRDisposerFv.s"
}
#pragma pop


