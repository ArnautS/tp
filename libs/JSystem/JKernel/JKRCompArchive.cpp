// 
// Generated By: dol2asm
// Translation Unit: JKRCompArchive
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JKernel/JKRCompArchive.h"

// 
// Types:
// 

struct JUTException {
	/* 802E21FC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  ... False
void panic_f(char const*, int, char const*, ...);
};

struct JSUPtrLink {
};

struct JSUPtrList {
	/* 802DBFF0 */ // False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
void prepend(JSUPtrLink*);
	/* 802DC15C */ // False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
void remove(JSUPtrLink*);
};

struct JKRMemArchive {
	/* 802D6F5C */ // False False
//  u8* False
// 	 u8 False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  int False
void fetchResource_subroutine(u8*, u32, u8*, u32, int);
};

struct JKRHeap {
	/* 802CE4D4 */ // False False
//  u32 False
//  int False
void alloc(u32, int);
	/* 802CE474 */ // False False
//  u32 False
//  int False
//  JKRHeap* False
// 	 JKRHeap False
void alloc(u32, int, JKRHeap*);
	/* 802CE500 */ // False False
//  void* False
// 	 void False
//  JKRHeap* False
// 	 JKRHeap False
void free(void*, JKRHeap*);
	/* 802CE548 */ // False False
//  void* False
// 	 void False
void free(void*);
	/* 802CEB18 */ // False False
//  void* False
// 	 void False
//  void* False
// 	 void False
//  u32 False
void copyMemory(void*, void*, u32);
};

struct JKRFileLoader {
	/* 802D41D4 */ // False False
void unmount();
};

struct JKRExpandSwitch {
};

struct JKRDvdRipper {
	struct EAllocDirection {
	};

	/* 802D9C54 */ // False False
//  s32 False
//  u8* False
// 	 u8 False
//  JKRExpandSwitch False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRDvdRipper::EAllocDirection False
//  u32 False
//  int* False
// 	 int False
//  u32* False
// 	 u32 False
void loadToMainRAM(s32, u8*, JKRExpandSwitch, u32, JKRHeap*, JKRDvdRipper::EAllocDirection, u32, int*, u32*);
};

struct JKRDvdFile {
	/* 802D96A0 */ // False False
//  s32 False
JKRDvdFile(s32);
};

struct JKRDvdArchive {
	/* 802D8474 */ // False False
//  s32 False
//  u32 False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  int False
//  u8** False
// 	 u8* False
// 		 u8 False
void fetchResource_subroutine(s32, u32, u32, JKRHeap*, int, int, u8**);
	/* 802D826C */ // False False
//  s32 False
//  u32 False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  int False
//  int False
void fetchResource_subroutine(s32, u32, u32, u8*, u32, int, int);
};

struct JKRDvdAramRipper {
	/* 802DA874 */ // False False
//  s32 False
//  u32 False
//  JKRExpandSwitch False
//  u32 False
//  u32 False
//  u32* False
// 	 u32 False
void loadToAram(s32, u32, JKRExpandSwitch, u32, u32, u32*);
};

struct JKRDecomp {
	/* 802DB988 */ // False False
//  u8* False
// 	 u8 False
//  u8* False
// 	 u8 False
//  u32 False
//  u32 False
void orderSync(u8*, u8*, u32, u32);
};

struct JKRArchive {
	struct EMountDirection {
	};

	struct SDIFileEntry {
	};

	struct EMountMode {
	};

	/* 802D5A38 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void becomeCurrent(char const*);
	/* 802D5C64 */ // False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
void getResource(u32, char const*);
	/* 802D5BE8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void getResource(char const*);
	/* 802D5D8C */ // False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
void readResource(void*, u32, u32, char const*);
	/* 802D5E30 */ // False False
//  void* False
// 	 void False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
void readResource(void*, u32, char const*);
	/* 802D609C */ // False False
//  void* False
// 	 void False
void detachResource(void*);
	/* 802D60D8 */ // False False
//  void const* False
// 	 void const False
// 		 void False
void getResSize(void const*) const;
	/* 802D6150 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void countFile(char const*) const;
	/* 802D61B0 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void getFirstFile(char const*) const;
	/* 802D6294 */ // False False
//  s32 False
//  JKRArchive::EMountMode False
JKRArchive(s32, JKRArchive::EMountMode);
	/* 802D6334 */ // False False
~JKRArchive();
	/* 802D6734 */ // False False
//  void const* False
// 	 void const False
// 		 void False
void findPtrResource(void const*) const;
	/* 802D693C */ // False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32 False
void setExpandSize(JKRArchive::SDIFileEntry*, u32);
	/* 802D6978 */ // False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
void getExpandSize(JKRArchive::SDIFileEntry*) const;
};

struct JKRCompArchive {
	/* 802D87D4 */ // False False
//  s32 False
//  JKRArchive::EMountDirection False
JKRCompArchive(s32, JKRArchive::EMountDirection);
	/* 802D887C */ // True False
~JKRCompArchive();
	/* 802D89BC */ // True False
//  s32 False
void open(s32);
	/* 802D8F40 */ // True False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32* False
// 	 u32 False
void fetchResource(JKRArchive::SDIFileEntry*, u32*);
	/* 802D90C0 */ // True False
//  void* False
// 	 void False
//  u32 False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32* False
// 	 u32 False
void fetchResource(void*, u32, JKRArchive::SDIFileEntry*, u32*);
	/* 802D9260 */ // True False
void removeResourceAll();
	/* 802D92F4 */ // True False
//  void* False
// 	 void False
void removeResource(void*);
	/* 802D9360 */ // True False
//  void const* False
// 	 void const False
// 		 void False
void getExpandedResSize(void const*) const;
};

struct JKRAramHeap {
	struct EAllocMode {
	};

	/* 802D2FBC */ // False False
//  u32 False
//  JKRAramHeap::EAllocMode False
void alloc(u32, JKRAramHeap::EAllocMode);
};

struct JKRAramArchive {
	/* 802D7858 */ // False False
//  u32 False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  int False
void fetchResource_subroutine(u32, u32, u8*, u32, int);
	/* 802D7914 */ // False False
//  u32 False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  u8** False
// 	 u8* False
// 		 u8 False
void fetchResource_subroutine(u32, u32, JKRHeap*, int, u8**);
};

struct JKRAram {
	/* 802D233C */ // False False
//  u8* False
// 	 u8 False
//  u32 False
//  u32 False
//  JKRExpandSwitch False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  u32* False
// 	 u32 False
void mainRamToAram(u8*, u32, u32, JKRExpandSwitch, u32, JKRHeap*, int, u32*);
	/* 802D25B4 */ // False False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  JKRExpandSwitch False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  u32* False
// 	 u32 False
void aramToMainRam(u32, u8*, u32, JKRExpandSwitch, u32, JKRHeap*, int, u32*);
};

// 
// Forward References:
// 


// False False
//  s32 False
//  JKRArchive::EMountDirection False
extern "C" void __ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection();
// True False
extern "C" void __dt__14JKRCompArchiveFv();
// True False
//  s32 False
extern "C" void open__14JKRCompArchiveFl();
// True False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32* False
// 	 u32 False
extern "C" void fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl();
// True False
//  void* False
// 	 void False
//  u32 False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32* False
// 	 u32 False
extern "C" void fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl();
// True False
extern "C" void removeResourceAll__14JKRCompArchiveFv();
// True False
//  void* False
// 	 void False
extern "C" void removeResource__14JKRCompArchiveFPv();
// True False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void getExpandedResSize__14JKRCompArchiveCFPCv();
extern "C" extern char const* const JKRCompArchive__stringBase0;
extern "C" extern void* __vt__14JKRCompArchive[20];

// 
// External References:
// 

// False False
//  void* False
// 	 void False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
void* operator new(u32, JKRHeap*, int);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
//  u32 False
//  int False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void alloc__7JKRHeapFUliP7JKRHeap();
// False False
//  u32 False
//  int False
extern "C" void alloc__7JKRHeapFUli();
// False False
//  void* False
// 	 void False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void free__7JKRHeapFPvP7JKRHeap();
// False False
//  void* False
// 	 void False
extern "C" void free__7JKRHeapFPv();
// False False
//  void* False
// 	 void False
//  void* False
// 	 void False
//  u32 False
extern "C" void copyMemory__7JKRHeapFPvPvUl();
// False False
//  void* False
// 	 void False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
extern "C" void* __nw__FUlP7JKRHeapi();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  u8* False
// 	 u8 False
//  u32 False
//  u32 False
//  JKRExpandSwitch False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  u32* False
// 	 u32 False
extern "C" void mainRamToAram__7JKRAramFPUcUlUl15JKRExpandSwitchUlP7JKRHeapiPUl();
// False False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  JKRExpandSwitch False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  u32* False
// 	 u32 False
extern "C" void aramToMainRam__7JKRAramFUlPUcUl15JKRExpandSwitchUlP7JKRHeapiPUl();
// False False
//  u32 False
//  JKRAramHeap::EAllocMode False
extern "C" void alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode();
// False False
extern "C" void unmount__13JKRFileLoaderFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void becomeCurrent__10JKRArchiveFPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getResource__10JKRArchiveFPCc();
// False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getResource__10JKRArchiveFUlPCc();
// False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void readResource__10JKRArchiveFPvUlUlPCc();
// False False
//  void* False
// 	 void False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void readResource__10JKRArchiveFPvUlPCc();
// False False
//  void* False
// 	 void False
extern "C" void detachResource__10JKRArchiveFPv();
// False False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void getResSize__10JKRArchiveCFPCv();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void countFile__10JKRArchiveCFPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getFirstFile__10JKRArchiveCFPCc();
// False False
//  s32 False
//  JKRArchive::EMountMode False
extern "C" void __ct__10JKRArchiveFlQ210JKRArchive10EMountMode();
// False False
extern "C" void __dt__10JKRArchiveFv();
// False False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void findPtrResource__10JKRArchiveCFPCv();
// False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32 False
extern "C" void setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl();
// False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
extern "C" void getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry();
// False False
//  u8* False
// 	 u8 False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  int False
extern "C" void fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli();
// False False
//  u32 False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  int False
extern "C" void fetchResource_subroutine__14JKRAramArchiveFUlUlPUcUli();
// False False
//  u32 False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  u8** False
// 	 u8* False
// 		 u8 False
extern "C" void fetchResource_subroutine__14JKRAramArchiveFUlUlP7JKRHeapiPPUc();
// False False
//  s32 False
//  u32 False
//  u32 False
//  u8* False
// 	 u8 False
//  u32 False
//  int False
//  int False
extern "C" void fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii();
// False False
//  s32 False
//  u32 False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
//  int False
//  u8** False
// 	 u8* False
// 		 u8 False
extern "C" void fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc();
// False False
//  s32 False
extern "C" void __ct__10JKRDvdFileFl();
// False False
//  s32 False
//  u8* False
// 	 u8 False
//  JKRExpandSwitch False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRDvdRipper::EAllocDirection False
//  u32 False
//  int* False
// 	 int False
//  u32* False
// 	 u32 False
extern "C" void loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl();
// False False
//  s32 False
//  u32 False
//  JKRExpandSwitch False
//  u32 False
//  u32 False
//  u32* False
// 	 u32 False
extern "C" void loadToAram__16JKRDvdAramRipperFlUl15JKRExpandSwitchUlUlPUl();
// False False
//  u8* False
// 	 u8 False
//  u8* False
// 	 u8 False
//  u32 False
//  u32 False
extern "C" void orderSync__9JKRDecompFPUcPUcUlUl();
// False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
extern "C" void prepend__10JSUPtrListFP10JSUPtrLink();
// False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
extern "C" void remove__10JSUPtrListFP10JSUPtrLink();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  ... False
extern "C" void panic_f__12JUTExceptionFPCciPCce();
// False False
extern "C" void DCInvalidateRange();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
// False False
extern "C" void abs();
extern "C" extern u8 sVolumeList__13JKRFileLoader[12];
extern "C" extern u8 sSystemHeap__7JKRHeap[4];
extern "C" extern u8 sAramObject__7JKRAram[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CC3E8-803CC438 0050+00 s=2 e=0 z=0  None .data      __vt__14JKRCompArchive                                       */
SECTION_DATA void* __vt__14JKRCompArchive[20] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14JKRCompArchiveFv,
	(void*)unmount__13JKRFileLoaderFv,
	(void*)becomeCurrent__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFUlPCc,
	(void*)readResource__10JKRArchiveFPvUlPCc,
	(void*)readResource__10JKRArchiveFPvUlUlPCc,
	(void*)removeResourceAll__14JKRCompArchiveFv,
	(void*)removeResource__14JKRCompArchiveFPv,
	(void*)detachResource__10JKRArchiveFPv,
	(void*)getResSize__10JKRArchiveCFPCv,
	(void*)countFile__10JKRArchiveCFPCc,
	(void*)getFirstFile__10JKRArchiveCFPCc,
	(void*)getExpandedResSize__14JKRCompArchiveCFPCv,
	(void*)fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl,
	(void*)fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl,
	(void*)setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl,
	(void*)getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry,
};

/* 802D87D4-802D887C 00A8+00 s=0 e=1 z=0  None .text      __ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection      */
//	802D87E4: 803621DC (_savegpr_29)
//	802D87F8: 802D6294 (__ct__10JKRArchiveFlQ210JKRArchive10EMountMode)
//	802D87FC: 803CC3E8 (__vt__14JKRCompArchive)
//	802D8800: 803CC3E8 (__vt__14JKRCompArchive)
//	802D8814: 802D89BC (open__14JKRCompArchiveFl)
//	802D8848: 80434354 (sVolumeList__13JKRFileLoader)
//	802D884C: 80434354 (sVolumeList__13JKRFileLoader)
//	802D8854: 802DBFF0 (prepend__10JSUPtrListFP10JSUPtrLink)
//	802D8868: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s32 False
//  JKRArchive::EMountDirection False
asm JKRCompArchive::JKRCompArchive(s32 param_0, JKRArchive::EMountDirection param_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/__ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection.s"
}
#pragma pop


/* 802D887C-802D89BC 0140+00 s=1 e=0 z=0  None .text      __dt__14JKRCompArchiveFv                                     */
//	802D888C: 803621D8 (_savegpr_28)
//	802D889C: 803CC3E8 (__vt__14JKRCompArchive)
//	802D88A0: 803CC3E8 (__vt__14JKRCompArchive)
//	802D88DC: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D88FC: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D893C: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D896C: 80434354 (sVolumeList__13JKRFileLoader)
//	802D8970: 80434354 (sVolumeList__13JKRFileLoader)
//	802D8978: 802DC15C (remove__10JSUPtrListFP10JSUPtrLink)
//	802D898C: 802D6334 (__dt__10JKRArchiveFv)
//	802D899C: 802CED3C (__dl__FPv)
//	802D89A8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm JKRCompArchive::~JKRCompArchive() {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/__dt__14JKRCompArchiveFv.s"
}
#pragma pop


/* 802D89BC-802D8F40 0584+00 s=1 e=0 z=0  None .text      open__14JKRCompArchiveFl                                     */
//	802D89CC: 803621CC (_savegpr_25)
//	802D8A08: 80451370 (sSystemHeap__7JKRHeap)
//	802D8A10: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D8A20: 802D96A0 (__ct__10JKRDvdFileFl)
//	802D8A48: 80451370 (sSystemHeap__7JKRHeap)
//	802D8A54: 802CE4D4 (alloc__7JKRHeapFUli)
//	802D8A94: 802D9C54 (loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8AA0: 8033B580 (DCInvalidateRange)
//	802D8B00: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D8B4C: 802D9C54 (loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8B60: 8033B580 (DCInvalidateRange)
//	802D8B80: 804513C8 (sAramObject__7JKRAram)
//	802D8B8C: 802D2FBC (alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode)
//	802D8BD4: 802DA874 (loadToAram__16JKRDvdAramRipperFlUl15JKRExpandSwitchUlUlPUl)
//	802D8C4C: 80451370 (sSystemHeap__7JKRHeap)
//	802D8C5C: 802CE4D4 (alloc__7JKRHeapFUli)
//	802D8C9C: 802D9C54 (loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8CA8: 8033B580 (DCInvalidateRange)
//	802D8CE0: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D8D0C: 802DB988 (orderSync__9JKRDecompFPUcPUcUlUl)
//	802D8D10: 80451370 (sSystemHeap__7JKRHeap)
//	802D8D18: 802CE548 (free__7JKRHeapFPv)
//	802D8D30: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D8D60: 802CEB18 (copyMemory__7JKRHeapFPvPvUl)
//	802D8D80: 804513C8 (sAramObject__7JKRAram)
//	802D8D8C: 802D2FBC (alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode)
//	802D8DE0: 802D233C (mainRamToAram__7JKRAramFPUcUlUl15JKRExpandSwitchUlP7JKRHeapiPUl)
//	802D8E80: 803650D0 (abs)
//	802D8E98: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D8EAC: 80451370 (sSystemHeap__7JKRHeap)
//	802D8EB4: 802CE548 (free__7JKRHeapFPv)
//	802D8ED4: 80003458 (memset)
//	802D8EE0: 80451370 (sSystemHeap__7JKRHeap)
//	802D8EE8: 802CE548 (free__7JKRHeapFPv)
//	802D8F2C: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s32 False
asm void JKRCompArchive::open(s32 param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/open__14JKRCompArchiveFl.s"
}
#pragma pop


/* 802D8F40-802D90C0 0180+00 s=1 e=0 z=0  None .text      fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl */
//	802D8F50: 803621D8 (_savegpr_28)
//	802D8FF8: 802D7914 (fetchResource_subroutine__14JKRAramArchiveFUlUlP7JKRHeapiPPUc)
//	802D9058: 802D8474 (fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc)
//	802D90AC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32* False
// 	 u32 False
asm void JKRCompArchive::fetchResource(JKRArchive::SDIFileEntry* param_0, u32* param_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039D220-8039D260 0039+07 s=2 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8039D220 = "JKRCompArchive.cpp";
SECTION_DEAD char const* const stringBase_8039D233 = "%s";
SECTION_DEAD char const* const stringBase_8039D236 = "illegal archive.";
SECTION_DEAD char const* const stringBase_8039D247 = "illegal resource.";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039D259 = "\0\0\0\0\0\0";
#pragma pop

/* 802D90C0-802D9260 01A0+00 s=1 e=0 z=0  None .text      fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl */
//	802D90D0: 803621D0 (_savegpr_26)
//	802D9174: 802CEB18 (copyMemory__7JKRHeapFPvPvUl)
//	802D91A4: 802D6F5C (fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli)
//	802D91E0: 802D7858 (fetchResource_subroutine__14JKRAramArchiveFUlUlPUcUli)
//	802D9210: 802D826C (fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii)
//	802D921C: 8039D220 (JKRCompArchive__stringBase0)
//	802D9220: 8039D220 (JKRCompArchive__stringBase0)
//	802D9234: 802E21FC (panic_f__12JUTExceptionFPCciPCce)
//	802D924C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
//  u32 False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32* False
// 	 u32 False
asm void JKRCompArchive::fetchResource(void* param_0, u32 param_1, JKRArchive::SDIFileEntry* param_2, u32* param_3) {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop


/* 802D9260-802D92F4 0094+00 s=1 e=0 z=0  None .text      removeResourceAll__14JKRCompArchiveFv                        */
//	802D9270: 803621D8 (_savegpr_28)
//	802D92C0: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D92E0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JKRCompArchive::removeResourceAll() {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/removeResourceAll__14JKRCompArchiveFv.s"
}
#pragma pop


/* 802D92F4-802D9360 006C+00 s=1 e=0 z=0  None .text      removeResource__14JKRCompArchiveFPv                          */
//	802D9304: 803621DC (_savegpr_29)
//	802D9310: 802D6734 (findPtrResource__10JKRArchiveCFPCv)
//	802D9338: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D934C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void JKRCompArchive::removeResource(void* param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/removeResource__14JKRCompArchiveFPv.s"
}
#pragma pop


/* 802D9360-802D9518 01B8+00 s=1 e=0 z=0  None .text      getExpandedResSize__14JKRCompArchiveCFPCv                    */
//	802D9370: 803621DC (_savegpr_29)
//	802D939C: 802D6734 (findPtrResource__10JKRArchiveCFPCv)
//	802D9444: 802D25B4 (aramToMainRam__7JKRAramFUlPUcUl15JKRExpandSwitchUlP7JKRHeapiPUl)
//	802D9450: 8033B580 (DCInvalidateRange)
//	802D9490: 802D9C54 (loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D949C: 8033B580 (DCInvalidateRange)
//	802D94A4: 8039D220 (JKRCompArchive__stringBase0)
//	802D94A8: 8039D220 (JKRCompArchive__stringBase0)
//	802D94BC: 802E21FC (panic_f__12JUTExceptionFPCciPCce)
//	802D9504: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void const* False
// 	 void const False
// 		 void False
asm void JKRCompArchive::getExpandedResSize(void const* param_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRCompArchive/getExpandedResSize__14JKRCompArchiveCFPCv.s"
}
#pragma pop


