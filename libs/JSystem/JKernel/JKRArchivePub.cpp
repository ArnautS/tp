// 
// Generated By: dol2asm
// Translation Unit: JKRArchivePub
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JKernel/JKRArchivePub.h"

// 
// Types:
// 

struct JKRMemBreakFlag {
};

struct JKRHeap {
	/* 802CE500 */ // False False
//  void* False
// 	 void False
//  JKRHeap* False
// 	 JKRHeap False
void free(void*, JKRHeap*);
};

struct JKRArchive {
	struct EMountMode {
	};

	struct EMountDirection {
	};

	struct SDirEntry {
	};

	struct SDIFileEntry {
	};

	/* 801CC284 */ // False False
//  void const* False
// 	 void const False
// 		 void False
void getExpandedResSize(void const*) const;
	/* 802D5778 */ // True False
//  s32 False
//  JKRHeap* False
// 	 JKRHeap False
void check_mount_already(s32, JKRHeap*);
	/* 802D5840 */ // False False
//  void* False
// 	 void False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
void mount(void*, JKRHeap*, JKRArchive::EMountDirection);
	/* 802D58C8 */ // False False
//  s32 False
//  JKRArchive::EMountMode False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
void mount(s32, JKRArchive::EMountMode, JKRHeap*, JKRArchive::EMountDirection);
	/* 802D57E4 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  JKRArchive::EMountMode False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
void mount(char const*, JKRArchive::EMountMode, JKRHeap*, JKRArchive::EMountDirection);
	/* 802D5A38 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void becomeCurrent(char const*);
	/* 802D5AC0 */ // False False
//  JKRArchive::SDirEntry* False
// 	 JKRArchive::SDirEntry False
//  u32 False
void getDirEntry(JKRArchive::SDirEntry*, u32) const;
	/* 802D5B38 */ // False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
//  JKRArchive* False
// 	 JKRArchive False
void getGlbResource(u32, char const*, JKRArchive*);
	/* 802D5D38 */ // False False
//  u16 False
void getResource(u16);
	/* 802D5C64 */ // False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
void getResource(u32, char const*);
	/* 802D5BE8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void getResource(char const*);
	/* 802D5CE4 */ // False False
//  u32 False
void getIdxResource(u32);
	/* 802D5D8C */ // False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
void readResource(void*, u32, u32, char const*);
	/* 802D5E30 */ // False False
//  void* False
// 	 void False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
void readResource(void*, u32, char const*);
	/* 802D5F40 */ // False False
//  void* False
// 	 void False
//  u32 False
//  u16 False
void readResource(void*, u32, u16);
	/* 802D5ECC */ // False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
void readIdxResource(void*, u32, u32);
	/* 802D5FB4 */ // False False
void removeResourceAll();
	/* 802D603C */ // False False
//  void* False
// 	 void False
void removeResource(void*);
	/* 802D609C */ // False False
//  void* False
// 	 void False
void detachResource(void*);
	/* 802D60D8 */ // False False
//  void const* False
// 	 void const False
// 		 void False
void getResSize(void const*) const;
	/* 802D610C */ // False False
void countResource() const;
	/* 802D6150 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void countFile(char const*) const;
	/* 802D61B0 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void getFirstFile(char const*) const;
	/* 802D625C */ // False False
//  u32 False
void getFileAttribute(u32) const;
	/* 802D6334 */ // False False
~JKRArchive();
	/* 802D641C */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
void findDirectory(char const*, u32) const;
	/* 802D64F4 */ // False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
void findTypeResource(u32, char const*) const;
	/* 802D65A4 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
void findFsResource(char const*, u32) const;
	/* 802D6684 */ // False False
//  u32 False
void findIdxResource(u32) const;
	/* 802D66AC */ // False False
//  char const* False
// 	 char const False
// 		 char False
void findNameResource(char const*) const;
	/* 802D6734 */ // False False
//  void const* False
// 	 void const False
// 		 void False
void findPtrResource(void const*) const;
	/* 802D6770 */ // False False
//  u16 False
void findIdResource(u16) const;
	/* 802D693C */ // False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32 False
void setExpandSize(JKRArchive::SDIFileEntry*, u32);
	/* 802D6978 */ // False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
void getExpandSize(JKRArchive::SDIFileEntry*) const;
};

struct JKRMemArchive {
	/* 802D69B8 */ // False False
//  s32 False
//  JKRArchive::EMountDirection False
JKRMemArchive(s32, JKRArchive::EMountDirection);
	/* 802D6A6C */ // False False
//  void* False
// 	 void False
//  u32 False
//  JKRMemBreakFlag False
JKRMemArchive(void*, u32, JKRMemBreakFlag);
};

struct JKRFileLoader {
	/* 802D41D4 */ // False False
void unmount();
};

struct JKRDvdArchive {
	/* 802D7BF0 */ // False False
//  s32 False
//  JKRArchive::EMountDirection False
JKRDvdArchive(s32, JKRArchive::EMountDirection);
};

struct JKRCompArchive {
	/* 802D87D4 */ // False False
//  s32 False
//  JKRArchive::EMountDirection False
JKRCompArchive(s32, JKRArchive::EMountDirection);
};

struct JKRArcFinder {
	/* 802D4638 */ // False False
//  JKRArchive* False
// 	 JKRArchive False
//  s32 False
//  s32 False
JKRArcFinder(JKRArchive*, s32, s32);
};

struct JKRAramArchive {
	/* 802D70C0 */ // False False
//  s32 False
//  JKRArchive::EMountDirection False
JKRAramArchive(s32, JKRArchive::EMountDirection);
};

// 
// Forward References:
// 


// True False
//  s32 False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void check_mount_already__10JKRArchiveFlP7JKRHeap();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  JKRArchive::EMountMode False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
extern "C" void mount__10JKRArchiveFPCcQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection();
// False False
//  void* False
// 	 void False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
extern "C" void mount__10JKRArchiveFPvP7JKRHeapQ210JKRArchive15EMountDirection();
// False False
//  s32 False
//  JKRArchive::EMountMode False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
extern "C" void mount__10JKRArchiveFlQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void becomeCurrent__10JKRArchiveFPCc();
// False False
//  JKRArchive::SDirEntry* False
// 	 JKRArchive::SDirEntry False
//  u32 False
extern "C" void getDirEntry__10JKRArchiveCFPQ210JKRArchive9SDirEntryUl();
// False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void getGlbResource__10JKRArchiveFUlPCcP10JKRArchive();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getResource__10JKRArchiveFPCc();
// False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getResource__10JKRArchiveFUlPCc();
// False False
//  u32 False
extern "C" void getIdxResource__10JKRArchiveFUl();
// False False
//  u16 False
extern "C" void getResource__10JKRArchiveFUs();
// False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void readResource__10JKRArchiveFPvUlUlPCc();
// False False
//  void* False
// 	 void False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void readResource__10JKRArchiveFPvUlPCc();
// False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
extern "C" void readIdxResource__10JKRArchiveFPvUlUl();
// False False
//  void* False
// 	 void False
//  u32 False
//  u16 False
extern "C" void readResource__10JKRArchiveFPvUlUs();
// False False
extern "C" void removeResourceAll__10JKRArchiveFv();
// False False
//  void* False
// 	 void False
extern "C" void removeResource__10JKRArchiveFPv();
// False False
//  void* False
// 	 void False
extern "C" void detachResource__10JKRArchiveFPv();
// False False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void getResSize__10JKRArchiveCFPCv();
// False False
extern "C" void countResource__10JKRArchiveCFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void countFile__10JKRArchiveCFPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void getFirstFile__10JKRArchiveCFPCc();
// False False
//  u32 False
extern "C" void getFileAttribute__10JKRArchiveCFUl();
extern "C" extern void* __vt__10JKRArchive[20];

// 
// External References:
// 

// False False
//  void* False
// 	 void False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
void* operator new(u32, JKRHeap*, int);

// False False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void getExpandedResSize__10JKRArchiveCFPCv();
// False False
//  void* False
// 	 void False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void free__7JKRHeapFPvP7JKRHeap();
// False False
//  void* False
// 	 void False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
extern "C" void* __nw__FUlP7JKRHeapi();
// False False
extern "C" void unmount__13JKRFileLoaderFv();
// False False
//  JKRArchive* False
// 	 JKRArchive False
//  s32 False
//  s32 False
extern "C" void __ct__12JKRArcFinderFP10JKRArchivell();
// False False
extern "C" void __dt__10JKRArchiveFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
extern "C" void findDirectory__10JKRArchiveCFPCcUl();
// False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void findTypeResource__10JKRArchiveCFUlPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
extern "C" void findFsResource__10JKRArchiveCFPCcUl();
// False False
//  u32 False
extern "C" void findIdxResource__10JKRArchiveCFUl();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void findNameResource__10JKRArchiveCFPCc();
// False False
//  void const* False
// 	 void const False
// 		 void False
extern "C" void findPtrResource__10JKRArchiveCFPCv();
// False False
//  u16 False
extern "C" void findIdResource__10JKRArchiveCFUs();
// False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
//  u32 False
extern "C" void setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl();
// False False
//  JKRArchive::SDIFileEntry* False
// 	 JKRArchive::SDIFileEntry False
extern "C" void getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry();
// False False
//  s32 False
//  JKRArchive::EMountDirection False
extern "C" void __ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection();
// False False
//  void* False
// 	 void False
//  u32 False
//  JKRMemBreakFlag False
extern "C" void __ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag();
// False False
//  s32 False
//  JKRArchive::EMountDirection False
extern "C" void __ct__14JKRAramArchiveFlQ210JKRArchive15EMountDirection();
// False False
//  s32 False
//  JKRArchive::EMountDirection False
extern "C" void __ct__13JKRDvdArchiveFlQ210JKRArchive15EMountDirection();
// False False
//  s32 False
//  JKRArchive::EMountDirection False
extern "C" void __ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection();
// False False
extern "C" void DVDConvertPathToEntrynum();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 sVolumeList__13JKRFileLoader[12];
extern "C" extern u8 sSystemHeap__7JKRHeap[4];
extern "C" extern u8 sCurrentHeap__7JKRHeap[4];
extern "C" extern u8 sCurrentVolume__13JKRFileLoader[4 + 4 /* padding */];
extern "C" extern u8 sCurrentDirID__10JKRArchive[4 + 4 /* padding */];

// 
// Declarations:
// 

/* 802D5778-802D57E4 006C+00 s=2 e=0 z=0  None .text      check_mount_already__10JKRArchiveFlP7JKRHeap                 */
//	802D5780: 80451374 (sCurrentHeap__7JKRHeap)
//	802D5784: 80434354 (sVolumeList__13JKRFileLoader)
//	802D5788: 80434354 (sVolumeList__13JKRFileLoader)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  s32 False
//  JKRHeap* False
// 	 JKRHeap False
asm void JKRArchive::check_mount_already(s32 param_0, JKRHeap* param_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/check_mount_already__10JKRArchiveFlP7JKRHeap.s"
}
#pragma pop


/* 802D57E4-802D5840 005C+00 s=0 e=1 z=0  None .text      mount__10JKRArchiveFPCcQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection */
//	802D57F4: 803621DC (_savegpr_29)
//	802D5804: 80348528 (DVDConvertPathToEntrynum)
//	802D5824: 802D58C8 (mount__10JKRArchiveFlQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection)
//	802D582C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
//  JKRArchive::EMountMode False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
asm void JKRArchive::mount(char const* param_0, JKRArchive::EMountMode param_1, JKRHeap* param_2, JKRArchive::EMountDirection param_3) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/func_802D57E4.s"
}
#pragma pop


/* 802D5840-802D58C8 0088+00 s=0 e=1 z=0  None .text      mount__10JKRArchiveFPvP7JKRHeapQ210JKRArchive15EMountDirection */
//	802D5850: 803621DC (_savegpr_29)
//	802D5860: 802D5778 (check_mount_already__10JKRArchiveFlP7JKRHeap)
//	802D5888: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D58A4: 802D6A6C (__ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag)
//	802D58B4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
asm void JKRArchive::mount(void* param_0, JKRHeap* param_1, JKRArchive::EMountDirection param_2) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/mount__10JKRArchiveFPvP7JKRHeapQ210JKRArchive15EMountDirection.s"
}
#pragma pop


/* 802D58C8-802D5A38 0170+00 s=1 e=1 z=0  None .text      mount__10JKRArchiveFlQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection */
//	802D58D8: 803621D4 (_savegpr_27)
//	802D58F0: 802D5778 (check_mount_already__10JKRArchiveFlP7JKRHeap)
//	802D5940: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D5954: 802D69B8 (__ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection)
//	802D596C: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D5980: 802D70C0 (__ct__14JKRAramArchiveFlQ210JKRArchive15EMountDirection)
//	802D5998: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D59AC: 802D7BF0 (__ct__13JKRDvdArchiveFlQ210JKRArchive15EMountDirection)
//	802D59C4: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D59D8: 802D87D4 (__ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection)
//	802D5A24: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s32 False
//  JKRArchive::EMountMode False
//  JKRHeap* False
// 	 JKRHeap False
//  JKRArchive::EMountDirection False
asm void JKRArchive::mount(s32 param_0, JKRArchive::EMountMode param_1, JKRHeap* param_2, JKRArchive::EMountDirection param_3) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/func_802D58C8.s"
}
#pragma pop


/* 802D5A38-802D5AC0 0088+00 s=1 e=4 z=0  None .text      becomeCurrent__10JKRArchiveFPCc                              */
//	802D5A70: 802D641C (findDirectory__10JKRArchiveCFPCcUl)
//	802D5A78: 80451420 (sCurrentDirID__10JKRArchive)
//	802D5A7C: 802D641C (findDirectory__10JKRArchiveCFPCcUl)
//	802D5A90: 80451418 (sCurrentVolume__13JKRFileLoader)
//	802D5AA4: 80451420 (sCurrentDirID__10JKRArchive)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JKRArchive::becomeCurrent(char const* param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/becomeCurrent__10JKRArchiveFPCc.s"
}
#pragma pop


/* 802D5AC0-802D5B38 0078+00 s=0 e=1 z=0  None .text      getDirEntry__10JKRArchiveCFPQ210JKRArchive9SDirEntryUl       */
//	802D5AE0: 802D6684 (findIdxResource__10JKRArchiveCFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JKRArchive::SDirEntry* False
// 	 JKRArchive::SDirEntry False
//  u32 False
asm void JKRArchive::getDirEntry(JKRArchive::SDirEntry* param_0, u32 param_1) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getDirEntry__10JKRArchiveCFPQ210JKRArchive9SDirEntryUl.s"
}
#pragma pop


/* 802D5B38-802D5BE8 00B0+00 s=0 e=9 z=0  None .text      getGlbResource__10JKRArchiveFUlPCcP10JKRArchive              */
//	802D5B48: 803621DC (_savegpr_29)
//	802D5B80: 80434354 (sVolumeList__13JKRFileLoader)
//	802D5B84: 80434354 (sVolumeList__13JKRFileLoader)
//	802D5BD4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
//  JKRArchive* False
// 	 JKRArchive False
asm void JKRArchive::getGlbResource(u32 param_0, char const* param_1, JKRArchive* param_2) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getGlbResource__10JKRArchiveFUlPCcP10JKRArchive.s"
}
#pragma pop


/* 802D5BE8-802D5C64 007C+00 s=1 e=4 z=0  None .text      getResource__10JKRArchiveFPCc                                */
//	802D5C10: 802D65A4 (findFsResource__10JKRArchiveCFPCcUl)
//	802D5C1C: 80451420 (sCurrentDirID__10JKRArchive)
//	802D5C20: 802D65A4 (findFsResource__10JKRArchiveCFPCcUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JKRArchive::getResource(char const* param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getResource__10JKRArchiveFPCc.s"
}
#pragma pop


/* 802D5C64-802D5CE4 0080+00 s=1 e=4 z=0  None .text      getResource__10JKRArchiveFUlPCc                              */
//	802D5C94: 802D66AC (findNameResource__10JKRArchiveCFPCc)
//	802D5CA0: 802D64F4 (findTypeResource__10JKRArchiveCFUlPCc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
asm void JKRArchive::getResource(u32 param_0, char const* param_1) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getResource__10JKRArchiveFUlPCc.s"
}
#pragma pop


/* 802D5CE4-802D5D38 0054+00 s=0 e=1 z=0  None .text      getIdxResource__10JKRArchiveFUl                              */
//	802D5CF8: 802D6684 (findIdxResource__10JKRArchiveCFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JKRArchive::getIdxResource(u32 param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getIdxResource__10JKRArchiveFUl.s"
}
#pragma pop


/* 802D5D38-802D5D8C 0054+00 s=0 e=1 z=0  None .text      getResource__10JKRArchiveFUs                                 */
//	802D5D4C: 802D6770 (findIdResource__10JKRArchiveCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u16 False
asm void JKRArchive::getResource(u16 param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getResource__10JKRArchiveFUs.s"
}
#pragma pop


/* 802D5D8C-802D5E30 00A4+00 s=1 e=4 z=0  None .text      readResource__10JKRArchiveFPvUlUlPCc                         */
//	802D5D9C: 803621DC (_savegpr_29)
//	802D5DC8: 802D66AC (findNameResource__10JKRArchiveCFPCc)
//	802D5DDC: 802D64F4 (findTypeResource__10JKRArchiveCFUlPCc)
//	802D5E1C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
asm void JKRArchive::readResource(void* param_0, u32 param_1, u32 param_2, char const* param_3) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/readResource__10JKRArchiveFPvUlUlPCc.s"
}
#pragma pop


/* 802D5E30-802D5ECC 009C+00 s=1 e=4 z=0  None .text      readResource__10JKRArchiveFPvUlPCc                           */
//	802D5E40: 803621DC (_savegpr_29)
//	802D5E64: 802D65A4 (findFsResource__10JKRArchiveCFPCcUl)
//	802D5E74: 80451420 (sCurrentDirID__10JKRArchive)
//	802D5E78: 802D65A4 (findFsResource__10JKRArchiveCFPCcUl)
//	802D5EB8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
//  u32 False
//  char const* False
// 	 char const False
// 		 char False
asm void JKRArchive::readResource(void* param_0, u32 param_1, char const* param_2) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/readResource__10JKRArchiveFPvUlPCc.s"
}
#pragma pop


/* 802D5ECC-802D5F40 0074+00 s=0 e=7 z=1  None .text      readIdxResource__10JKRArchiveFPvUlUl                         */
//	802D5EDC: 803621DC (_savegpr_29)
//	802D5EF0: 802D6684 (findIdxResource__10JKRArchiveCFUl)
//	802D5F2C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
//  u32 False
//  u32 False
asm void JKRArchive::readIdxResource(void* param_0, u32 param_1, u32 param_2) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/readIdxResource__10JKRArchiveFPvUlUl.s"
}
#pragma pop


/* 802D5F40-802D5FB4 0074+00 s=0 e=1 z=0  None .text      readResource__10JKRArchiveFPvUlUs                            */
//	802D5F50: 803621DC (_savegpr_29)
//	802D5F64: 802D6770 (findIdResource__10JKRArchiveCFUs)
//	802D5FA0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
//  u32 False
//  u16 False
asm void JKRArchive::readResource(void* param_0, u32 param_1, u16 param_2) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/readResource__10JKRArchiveFPvUlUs.s"
}
#pragma pop


/* 802D5FB4-802D603C 0088+00 s=1 e=2 z=0  None .text      removeResourceAll__10JKRArchiveFv                            */
//	802D5FC4: 803621D8 (_savegpr_28)
//	802D6004: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D6028: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JKRArchive::removeResourceAll() {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/removeResourceAll__10JKRArchiveFv.s"
}
#pragma pop


/* 802D603C-802D609C 0060+00 s=1 e=2 z=0  None .text      removeResource__10JKRArchiveFPv                              */
//	802D6058: 802D6734 (findPtrResource__10JKRArchiveCFPCv)
//	802D607C: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
asm void JKRArchive::removeResource(void* param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/removeResource__10JKRArchiveFPv.s"
}
#pragma pop


/* 802D609C-802D60D8 003C+00 s=1 e=4 z=0  None .text      detachResource__10JKRArchiveFPv                              */
//	802D60A8: 802D6734 (findPtrResource__10JKRArchiveCFPCv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
asm void JKRArchive::detachResource(void* param_0) {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/detachResource__10JKRArchiveFPv.s"
}
#pragma pop


/* 802D60D8-802D610C 0034+00 s=1 e=4 z=0  None .text      getResSize__10JKRArchiveCFPCv                                */
//	802D60E4: 802D6734 (findPtrResource__10JKRArchiveCFPCv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void const* False
// 	 void const False
// 		 void False
asm void JKRArchive::getResSize(void const* param_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getResSize__10JKRArchiveCFPCv.s"
}
#pragma pop


/* 802D610C-802D6150 0044+00 s=0 e=1 z=0  None .text      countResource__10JKRArchiveCFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JKRArchive::countResource() const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/countResource__10JKRArchiveCFv.s"
}
#pragma pop


/* 802D6150-802D61B0 0060+00 s=1 e=4 z=0  None .text      countFile__10JKRArchiveCFPCc                                 */
//	802D617C: 802D641C (findDirectory__10JKRArchiveCFPCcUl)
//	802D6184: 80451420 (sCurrentDirID__10JKRArchive)
//	802D6188: 802D641C (findDirectory__10JKRArchiveCFPCcUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JKRArchive::countFile(char const* param_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/countFile__10JKRArchiveCFPCc.s"
}
#pragma pop


/* 802D61B0-802D625C 00AC+00 s=1 e=4 z=0  None .text      getFirstFile__10JKRArchiveCFPCc                              */
//	802D61EC: 802D641C (findDirectory__10JKRArchiveCFPCcUl)
//	802D61F8: 80451420 (sCurrentDirID__10JKRArchive)
//	802D61FC: 802D641C (findDirectory__10JKRArchiveCFPCcUl)
//	802D6210: 80451370 (sSystemHeap__7JKRHeap)
//	802D6218: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D6230: 802D4638 (__ct__12JKRArcFinderFP10JKRArchivell)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JKRArchive::getFirstFile(char const* param_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getFirstFile__10JKRArchiveCFPCc.s"
}
#pragma pop


/* 802D625C-802D6294 0038+00 s=0 e=2 z=0  None .text      getFileAttribute__10JKRArchiveCFUl                           */
//	802D6268: 802D6684 (findIdxResource__10JKRArchiveCFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JKRArchive::getFileAttribute(u32 param_0) const {
	nofralloc
#include "asm/JSystem/JKernel/JKRArchivePub/getFileAttribute__10JKRArchiveCFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CC288-803CC2D8 0050+00 s=0 e=2 z=0  None .data      __vt__10JKRArchive                                           */
SECTION_DATA void* __vt__10JKRArchive[20] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__10JKRArchiveFv,
	(void*)unmount__13JKRFileLoaderFv,
	(void*)becomeCurrent__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFPCc,
	(void*)getResource__10JKRArchiveFUlPCc,
	(void*)readResource__10JKRArchiveFPvUlPCc,
	(void*)readResource__10JKRArchiveFPvUlUlPCc,
	(void*)removeResourceAll__10JKRArchiveFv,
	(void*)removeResource__10JKRArchiveFPv,
	(void*)detachResource__10JKRArchiveFPv,
	(void*)getResSize__10JKRArchiveCFPCv,
	(void*)countFile__10JKRArchiveCFPCc,
	(void*)getFirstFile__10JKRArchiveCFPCc,
	(void*)getExpandedResSize__10JKRArchiveCFPCv,
	(void*)NULL,
	(void*)NULL,
	(void*)setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl,
	(void*)getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry,
};

