//
// Generated By: dol2asm
// Translation Unit: JKRDvdArchive
//

#include "JSystem/JKernel/JKRDvdArchive.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct JUTException {
    /* 802E21FC */ void panic_f(char const*, int, char const*, ...);
};

struct JSUPtrLink {};

struct JSUPtrList {
    /* 802DBFF0 */ void prepend(JSUPtrLink*);
    /* 802DC15C */ void remove(JSUPtrLink*);
};

struct JKRHeap {
    /* 802CE4D4 */ void alloc(u32, int);
    /* 802CE474 */ void alloc(u32, int, JKRHeap*);
    /* 802CE500 */ void free(void*, JKRHeap*);
    /* 802CE548 */ void free(void*);
    /* 802CEB18 */ void copyMemory(void*, void*, u32);
};

struct JKRFileLoader {
    /* 802D41D4 */ void unmount();
};

struct JKRExpandSwitch {};

struct JKRDvdRipper {
    struct EAllocDirection {};

    /* 802D9C54 */ void loadToMainRAM(s32, u8*, JKRExpandSwitch, u32, JKRHeap*,
                                      JKRDvdRipper::EAllocDirection, u32, int*, u32*);
};

struct JKRDvdFile {
    /* 802D96A0 */ JKRDvdFile(s32);
};

struct JKRArchive {
    struct EMountDirection {};

    struct SDIFileEntry {};

    struct EMountMode {};

    /* 802D5A38 */ void becomeCurrent(char const*);
    /* 802D5C64 */ void getResource(u32, char const*);
    /* 802D5BE8 */ void getResource(char const*);
    /* 802D5D8C */ void readResource(void*, u32, u32, char const*);
    /* 802D5E30 */ void readResource(void*, u32, char const*);
    /* 802D5FB4 */ void removeResourceAll();
    /* 802D603C */ void removeResource(void*);
    /* 802D609C */ void detachResource(void*);
    /* 802D60D8 */ void getResSize(void const*) const;
    /* 802D6150 */ void countFile(char const*) const;
    /* 802D61B0 */ void getFirstFile(char const*) const;
    /* 802D6294 */ JKRArchive(s32, JKRArchive::EMountMode);
    /* 802D6334 */ ~JKRArchive();
    /* 802D6734 */ void findPtrResource(void const*) const;
    /* 802D693C */ void setExpandSize(JKRArchive::SDIFileEntry*, u32);
    /* 802D6978 */ void getExpandSize(JKRArchive::SDIFileEntry*) const;
};

struct JKRDvdArchive {
    /* 802D7BF0 */ JKRDvdArchive(s32, JKRArchive::EMountDirection);
    /* 802D7C98 */ ~JKRDvdArchive();
    /* 802D7DB4 */ void open(s32);
    /* 802D8168 */ void fetchResource(void*, u32, JKRArchive::SDIFileEntry*, u32*);
    /* 802D8050 */ void fetchResource(JKRArchive::SDIFileEntry*, u32*);
    /* 802D826C */ void fetchResource_subroutine(s32, u32, u32, u8*, u32, int, int);
    /* 802D8474 */ void fetchResource_subroutine(s32, u32, u32, JKRHeap*, int, int, u8**);
    /* 802D8698 */ void getExpandedResSize(void const*) const;
};

//
// Forward References:
//

extern "C" void __ct__13JKRDvdArchiveFlQ210JKRArchive15EMountDirection();
extern "C" void __dt__13JKRDvdArchiveFv();
extern "C" void open__13JKRDvdArchiveFl();
extern "C" void fetchResource__13JKRDvdArchiveFPQ210JKRArchive12SDIFileEntryPUl();
extern "C" void fetchResource__13JKRDvdArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl();
extern "C" void fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii();
extern "C" void fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc();
extern "C" void getExpandedResSize__13JKRDvdArchiveCFPCv();
extern "C" extern char const* const JKRDvdArchive__stringBase0;
extern "C" extern void* __vt__13JKRDvdArchive[20];

//
// External References:
//

void* operator new(u32, JKRHeap*, int);
void operator delete(void*);

SECTION_INIT void memset();
extern "C" void alloc__7JKRHeapFUliP7JKRHeap();
extern "C" void alloc__7JKRHeapFUli();
extern "C" void free__7JKRHeapFPvP7JKRHeap();
extern "C" void free__7JKRHeapFPv();
extern "C" void copyMemory__7JKRHeapFPvPvUl();
extern "C" void* __nw__FUlP7JKRHeapi();
extern "C" void __dl__FPv();
extern "C" void unmount__13JKRFileLoaderFv();
extern "C" void becomeCurrent__10JKRArchiveFPCc();
extern "C" void getResource__10JKRArchiveFPCc();
extern "C" void getResource__10JKRArchiveFUlPCc();
extern "C" void readResource__10JKRArchiveFPvUlUlPCc();
extern "C" void readResource__10JKRArchiveFPvUlPCc();
extern "C" void removeResourceAll__10JKRArchiveFv();
extern "C" void removeResource__10JKRArchiveFPv();
extern "C" void detachResource__10JKRArchiveFPv();
extern "C" void getResSize__10JKRArchiveCFPCv();
extern "C" void countFile__10JKRArchiveCFPCc();
extern "C" void getFirstFile__10JKRArchiveCFPCc();
extern "C" void __ct__10JKRArchiveFlQ210JKRArchive10EMountMode();
extern "C" void __dt__10JKRArchiveFv();
extern "C" void findPtrResource__10JKRArchiveCFPCv();
extern "C" void setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl();
extern "C" void getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry();
extern "C" void __ct__10JKRDvdFileFl();
extern "C" void
loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl();
extern "C" void prepend__10JSUPtrListFP10JSUPtrLink();
extern "C" void remove__10JSUPtrListFP10JSUPtrLink();
extern "C" void panic_f__12JUTExceptionFPCciPCce();
extern "C" void DCInvalidateRange();
extern "C" void _savegpr_25();
extern "C" void _savegpr_26();
extern "C" void _savegpr_27();
extern "C" void _savegpr_28();
extern "C" void _savegpr_29();
extern "C" void _restgpr_25();
extern "C" void _restgpr_26();
extern "C" void _restgpr_27();
extern "C" void _restgpr_28();
extern "C" void _restgpr_29();
extern "C" void abs();
extern "C" extern u8 sVolumeList__13JKRFileLoader[12];
extern "C" extern u8 sSystemHeap__7JKRHeap[4];

//
// Declarations:
//

/* ############################################################################################## */
/* 803CC398-803CC3E8 0050+00 s=2 e=0 z=0  None .data      __vt__13JKRDvdArchive */
SECTION_DATA void* __vt__13JKRDvdArchive[20] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__13JKRDvdArchiveFv,
    (void*)unmount__13JKRFileLoaderFv,
    (void*)becomeCurrent__10JKRArchiveFPCc,
    (void*)getResource__10JKRArchiveFPCc,
    (void*)getResource__10JKRArchiveFUlPCc,
    (void*)readResource__10JKRArchiveFPvUlPCc,
    (void*)readResource__10JKRArchiveFPvUlUlPCc,
    (void*)removeResourceAll__10JKRArchiveFv,
    (void*)removeResource__10JKRArchiveFPv,
    (void*)detachResource__10JKRArchiveFPv,
    (void*)getResSize__10JKRArchiveCFPCv,
    (void*)countFile__10JKRArchiveCFPCc,
    (void*)getFirstFile__10JKRArchiveCFPCc,
    (void*)getExpandedResSize__13JKRDvdArchiveCFPCv,
    (void*)fetchResource__13JKRDvdArchiveFPQ210JKRArchive12SDIFileEntryPUl,
    (void*)fetchResource__13JKRDvdArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl,
    (void*)setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl,
    (void*)getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry,
};

/* 802D7BF0-802D7C98 00A8+00 s=0 e=1 z=0  None .text
 * __ct__13JKRDvdArchiveFlQ210JKRArchive15EMountDirection       */
//	802D7C00: 803621DC (_savegpr_29)
//	802D7C14: 802D6294 (__ct__10JKRArchiveFlQ210JKRArchive10EMountMode)
//	802D7C18: 803CC398 (__vt__13JKRDvdArchive)
//	802D7C1C: 803CC398 (__vt__13JKRDvdArchive)
//	802D7C30: 802D7DB4 (open__13JKRDvdArchiveFl)
//	802D7C64: 80434354 (sVolumeList__13JKRFileLoader)
//	802D7C68: 80434354 (sVolumeList__13JKRFileLoader)
//	802D7C70: 802DBFF0 (prepend__10JSUPtrListFP10JSUPtrLink)
//	802D7C84: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JKRDvdArchive::JKRDvdArchive(s32 param_0, JKRArchive::EMountDirection param_1) {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/__ct__13JKRDvdArchiveFlQ210JKRArchive15EMountDirection.s"
}
#pragma pop

/* 802D7C98-802D7DB4 011C+00 s=1 e=0 z=0  None .text      __dt__13JKRDvdArchiveFv */
//	802D7CA8: 803621D8 (_savegpr_28)
//	802D7CB8: 803CC398 (__vt__13JKRDvdArchive)
//	802D7CBC: 803CC398 (__vt__13JKRDvdArchive)
//	802D7CF8: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D7D18: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D7D34: 802CE500 (free__7JKRHeapFPvP7JKRHeap)
//	802D7D64: 80434354 (sVolumeList__13JKRFileLoader)
//	802D7D68: 80434354 (sVolumeList__13JKRFileLoader)
//	802D7D70: 802DC15C (remove__10JSUPtrListFP10JSUPtrLink)
//	802D7D84: 802D6334 (__dt__10JKRArchiveFv)
//	802D7D94: 802CED3C (__dl__FPv)
//	802D7DA0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JKRDvdArchive::~JKRDvdArchive() {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/__dt__13JKRDvdArchiveFv.s"
}
#pragma pop

/* 802D7DB4-802D8050 029C+00 s=1 e=0 z=0  None .text      open__13JKRDvdArchiveFl */
//	802D7DC4: 803621D8 (_savegpr_28)
//	802D7DEC: 80451370 (sSystemHeap__7JKRHeap)
//	802D7DF4: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802D7E04: 802D96A0 (__ct__10JKRDvdFileFl)
//	802D7E2C: 80451370 (sSystemHeap__7JKRHeap)
//	802D7E38: 802CE4D4 (alloc__7JKRHeapFUli)
//	802D7E78: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D7E84: 8033B580 (DCInvalidateRange)
//	802D7EA8: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D7EEC: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D7EF8: 8033B580 (DCInvalidateRange)
//	802D7F80: 803650D0 (abs)
//	802D7F98: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D7FAC: 80451370 (sSystemHeap__7JKRHeap)
//	802D7FB4: 802CE548 (free__7JKRHeapFPv)
//	802D7FD4: 80003458 (memset)
//	802D7FF0: 80451370 (sSystemHeap__7JKRHeap)
//	802D7FF8: 802CE548 (free__7JKRHeapFPv)
//	802D803C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRDvdArchive::open(s32 param_0) {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/open__13JKRDvdArchiveFl.s"
}
#pragma pop

/* 802D8050-802D8168 0118+00 s=1 e=0 z=0  None .text
 * fetchResource__13JKRDvdArchiveFPQ210JKRArchive12SDIFileEntryPUl */
//	802D8060: 803621D8 (_savegpr_28)
//	802D80D4: 802D8474 (fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc)
//	802D8154: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRDvdArchive::fetchResource(JKRArchive::SDIFileEntry* param_0, u32* param_1) {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/fetchResource__13JKRDvdArchiveFPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop

/* 802D8168-802D826C 0104+00 s=1 e=0 z=0  None .text
 * fetchResource__13JKRDvdArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl */
//	802D8178: 803621D4 (_savegpr_27)
//	802D81F0: 802D826C (fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii)
//	802D8240: 802CEB18 (copyMemory__7JKRHeapFPvPvUl)
//	802D8258: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRDvdArchive::fetchResource(void* param_0, u32 param_1, JKRArchive::SDIFileEntry* param_2,
                                      u32* param_3) {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/fetchResource__13JKRDvdArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl.s"
}
#pragma pop

/* ############################################################################################## */
/* 8039D1B0-8039D220 006D+03 s=2 e=0 z=0  None .rodata    @stringBase0 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8039D1B0 = "JKRDvdArchive.cpp";
SECTION_DEAD char const* const stringBase_8039D1C2 = "%s";
SECTION_DEAD char const* const stringBase_8039D1C5 = "Sorry, not applied for SZP archive.\n";
SECTION_DEAD char const* const stringBase_8039D1EA = "??? bad sequence\n";
SECTION_DEAD char const* const stringBase_8039D1FC = "Sorry, not applied SZP archive.\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039D21D = "\0\0";
#pragma pop

/* 802D826C-802D8474 0208+00 s=1 e=1 z=0  None .text
 * fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii       */
//	802D827C: 803621D0 (_savegpr_26)
//	802D830C: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8318: 8033B580 (DCInvalidateRange)
//	802D8350: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D835C: 8033B580 (DCInvalidateRange)
//	802D83BC: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D83C8: 8033B580 (DCInvalidateRange)
//	802D8408: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8414: 8033B580 (DCInvalidateRange)
//	802D8420: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D8424: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D8438: 802E21FC (panic_f__12JUTExceptionFPCciPCce)
//	802D843C: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D8440: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D8454: 802E21FC (panic_f__12JUTExceptionFPCciPCce)
//	802D8460: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRDvdArchive::fetchResource_subroutine(s32 param_0, u32 param_1, u32 param_2, u8* param_3,
                                                 u32 param_4, int param_5, int param_6) {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii.s"
}
#pragma pop

/* 802D8474-802D8698 0224+00 s=1 e=1 z=0  None .text
 * fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc */
//	802D8484: 803621CC (_savegpr_25)
//	802D84EC: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D851C: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8528: 8033B580 (DCInvalidateRange)
//	802D8564: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8570: 8033B580 (DCInvalidateRange)
//	802D85A0: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D85D0: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D85DC: 8033B580 (DCInvalidateRange)
//	802D85F8: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802D8628: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8634: 8033B580 (DCInvalidateRange)
//	802D8644: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D8648: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D865C: 802E21FC (panic_f__12JUTExceptionFPCciPCce)
//	802D8660: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D8664: 8039D1B0 (JKRDvdArchive__stringBase0)
//	802D8678: 802E21FC (panic_f__12JUTExceptionFPCciPCce)
//	802D8684: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRDvdArchive::fetchResource_subroutine(s32 param_0, u32 param_1, u32 param_2,
                                                 JKRHeap* param_3, int param_4, int param_5,
                                                 u8** param_6) {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc.s"
}
#pragma pop

/* 802D8698-802D87D4 013C+00 s=1 e=0 z=0  None .text      getExpandedResSize__13JKRDvdArchiveCFPCv
 */
//	802D86A8: 803621DC (_savegpr_29)
//	802D86D4: 802D6734 (findPtrResource__10JKRArchiveCFPCv)
//	802D876C: 802D9C54
//(loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl)
//	802D8778: 8033B580 (DCInvalidateRange)
//	802D87C0: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JKRDvdArchive::getExpandedResSize(void const* param_0) const {
    nofralloc
#include "asm/JSystem/JKernel/JKRDvdArchive/getExpandedResSize__13JKRDvdArchiveCFPCv.s"
}
#pragma pop
