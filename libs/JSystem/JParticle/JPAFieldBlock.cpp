//
// Generated By: dol2asm
// Translation Unit: JPAFieldBlock
//

#include "JSystem/JParticle/JPAFieldBlock.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Types:
//

struct JKRHeap {};

struct JPAFieldBlock {
    /* 8027D088 */ JPAFieldBlock(u8 const*, JKRHeap*);
    /* 8027D0C0 */ void init(JKRHeap*);
};

struct JPAEmitterWorkData {};

struct JPABaseParticle {};

struct JPAFieldVortex {
    /* 8027C56C */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027C674 */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D564 */ ~JPAFieldVortex();
};

struct JPAFieldSpin {
    /* 8027CE64 */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027CFA8 */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D3F4 */ ~JPAFieldSpin();
};

struct JPAFieldRandom {
    /* 8027CCCC */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D4AC */ ~JPAFieldRandom();
};

struct JPAFieldNewton {
    /* 8027C36C */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027C3E0 */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D5C0 */ ~JPAFieldNewton();
};

struct JPAFieldMagnet {
    /* 8027C24C */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027C29C */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D61C */ ~JPAFieldMagnet();
};

struct JPAFieldGravity {
    /* 8027BFB4 */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027C054 */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D6D4 */ ~JPAFieldGravity();
};

struct JPAFieldDrag {
    /* 8027CDE4 */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D450 */ ~JPAFieldDrag();
};

struct JPAFieldConvection {
    /* 8027C814 */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027CA94 */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D508 */ ~JPAFieldConvection();
};

struct JPAFieldBase {
    /* 80276A8C */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027BDEC */ void calcAffect(JPAFieldBlock*, JPABaseParticle*);
    /* 8027BF18 */ void calcFadeAffect(JPAFieldBlock*, f32) const;
    /* 8027D3AC */ ~JPAFieldBase();
};

struct JPAFieldAir {
    /* 8027C07C */ void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
    /* 8027C1B8 */ void calc(JPAEmitterWorkData*, JPAFieldBlock*, JPABaseParticle*);
    /* 8027D678 */ ~JPAFieldAir();
};

//
// Forward References:
//

extern "C" void calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle();
extern "C" void calcFadeAffect__12JPAFieldBaseCFP13JPAFieldBlockf();
extern "C" void prepare__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void calc__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void prepare__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void calc__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void prepare__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void calc__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void prepare__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void calc__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void prepare__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void calc__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void prepare__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void
calc__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void calc__14JPAFieldRandomFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void calc__12JPAFieldDragFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void prepare__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void calc__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle();
extern "C" void __ct__13JPAFieldBlockFPCUcP7JKRHeap();
extern "C" void init__13JPAFieldBlockFP7JKRHeap();
extern "C" void __dt__12JPAFieldBaseFv();
extern "C" void __dt__12JPAFieldSpinFv();
extern "C" void __dt__12JPAFieldDragFv();
extern "C" void __dt__14JPAFieldRandomFv();
extern "C" void __dt__18JPAFieldConvectionFv();
extern "C" void __dt__14JPAFieldVortexFv();
extern "C" void __dt__14JPAFieldNewtonFv();
extern "C" void __dt__14JPAFieldMagnetFv();
extern "C" void __dt__11JPAFieldAirFv();
extern "C" void __dt__15JPAFieldGravityFv();
extern "C" extern void* __vt__12JPAFieldBase[5];
extern "C" extern void* __vt__12JPAFieldSpin[5];
extern "C" extern void* __vt__12JPAFieldDrag[5];
extern "C" extern void* __vt__14JPAFieldRandom[5];
extern "C" extern void* __vt__18JPAFieldConvection[5];
extern "C" extern void* __vt__14JPAFieldVortex[5];
extern "C" extern void* __vt__14JPAFieldNewton[5];
extern "C" extern void* __vt__14JPAFieldMagnet[5];
extern "C" extern void* __vt__11JPAFieldAir[5];
extern "C" extern void* __vt__15JPAFieldGravity[5 + 1 /* padding */];

//
// External References:
//

void* operator new(u32, JKRHeap*, int);
void operator delete(void*);

extern "C" void prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock();
extern "C" void* __nw__FUlP7JKRHeapi();
extern "C" void __dl__FPv();
extern "C" void PSMTXRotAxisRad();
extern "C" void PSMTXMultVecSR();
extern "C" void PSVECMag();
extern "C" void PSVECCrossProduct();
extern "C" void _savegpr_29();
extern "C" void _restgpr_29();
extern "C" extern u32 __float_epsilon;

//
// Declarations:
//

/* 8027BDEC-8027BF18 012C+00 s=8 e=0 z=0  None .text
 * calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle */
//	8027BE40: 8027BF18 (calcFadeAffect__12JPAFieldBaseCFP13JPAFieldBlockf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldBase::calcAffect(JPAFieldBlock* param_0, JPABaseParticle* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455338-8045533C 0004+00 s=6 e=0 z=0  None .sdata2    @2353 */
SECTION_SDATA2 static f32 lit_2353 = 1.0f;

/* 8045533C-80455340 0004+00 s=11 e=0 z=0  None .sdata2    @2354 */
SECTION_SDATA2 static u8 lit_2354[4] = {
    0x00,
    0x00,
    0x00,
    0x00,
};

/* 8027BF18-8027BFB4 009C+00 s=2 e=0 z=0  None .text
 * calcFadeAffect__12JPAFieldBaseCFP13JPAFieldBlockf            */
//	8027BF18: 80455338 (lit_2353)
//	8027BF54: 8045533C (lit_2354)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldBase::calcFadeAffect(JPAFieldBlock* param_0, f32 param_1) const {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calcFadeAffect__12JPAFieldBaseCFP13JPAFieldBlockf.s"
}
#pragma pop

/* 8027BFB4-8027C054 00A0+00 s=1 e=0 z=0  None .text
 * prepare__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlock */
//	8027C014: 80346E4C (PSMTXMultVecSR)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldGravity::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/prepare__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlock.s"
}
#pragma pop

/* 8027C054-8027C07C 0028+00 s=1 e=0 z=0  None .text
 * calc__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027C068: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldGravity::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                               JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* ############################################################################################## */
/* 80455340-80455344 0004+00 s=8 e=0 z=0  None .sdata2    @2459 */
SECTION_SDATA2 static f32 lit_2459 = 32.0f;

/* 80455344-80455348 0004+00 s=9 e=0 z=0  None .sdata2    @2460 */
SECTION_SDATA2 static f32 lit_2460 = 0.5f;

/* 80455348-8045534C 0004+00 s=8 e=0 z=0  None .sdata2    @2461 */
SECTION_SDATA2 static f32 lit_2461 = 3.0f;

/* 8027C07C-8027C1B8 013C+00 s=1 e=0 z=0  None .text
 * prepare__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlock */
//	8027C0B4: 80455340 (lit_2459)
//	8027C0B8: 80450AEC (__float_epsilon)
//	8027C0BC: 80450AEC (__float_epsilon)
//	8027C0D0: 8045533C (lit_2354)
//	8027C0E4: 8045533C (lit_2354)
//	8027C104: 80455344 (lit_2460)
//	8027C10C: 80455348 (lit_2461)
//	8027C178: 80346E4C (PSMTXMultVecSR)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldAir::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/prepare__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlock.s"
}
#pragma pop

/* 8027C1B8-8027C24C 0094+00 s=1 e=0 z=0  None .text
 * calc__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027C1E4: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
//	8027C1FC: 80347150 (PSVECMag)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldAir::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                           JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027C24C-8027C29C 0050+00 s=1 e=0 z=0  None .text
 * prepare__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlock */
//	8027C288: 80346E4C (PSMTXMultVecSR)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldMagnet::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/prepare__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlock.s"
}
#pragma pop

/* 8027C29C-8027C36C 00D0+00 s=1 e=0 z=0  None .text
 * calc__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027C2E0: 80455340 (lit_2459)
//	8027C2E4: 80450AEC (__float_epsilon)
//	8027C2E8: 80450AEC (__float_epsilon)
//	8027C2FC: 8045533C (lit_2354)
//	8027C318: 80455344 (lit_2460)
//	8027C320: 80455348 (lit_2461)
//	8027C358: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldMagnet::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                              JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027C36C-8027C3E0 0074+00 s=1 e=0 z=0  None .text
 * prepare__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlock */
//	8027C3B4: 80346E4C (PSMTXMultVecSR)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldNewton::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/prepare__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlock.s"
}
#pragma pop

/* ############################################################################################## */
/* 8045534C-80455350 0004+00 s=1 e=0 z=0  None .sdata2    @2656 */
SECTION_SDATA2 static f32 lit_2656 = 10.0f;

/* 8027C3E0-8027C56C 018C+00 s=1 e=0 z=0  None .text
 * calc__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027C42C: 8045534C (lit_2656)
//	8027C450: 80455340 (lit_2459)
//	8027C454: 80450AEC (__float_epsilon)
//	8027C458: 80450AEC (__float_epsilon)
//	8027C46C: 8045533C (lit_2354)
//	8027C488: 80455344 (lit_2460)
//	8027C490: 80455348 (lit_2461)
//	8027C4C4: 8045534C (lit_2656)
//	8027C4E0: 80455340 (lit_2459)
//	8027C4E4: 80450AEC (__float_epsilon)
//	8027C4E8: 80450AEC (__float_epsilon)
//	8027C4FC: 8045533C (lit_2354)
//	8027C518: 80455344 (lit_2460)
//	8027C520: 80455348 (lit_2461)
//	8027C558: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldNewton::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                              JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027C56C-8027C674 0108+00 s=1 e=0 z=0  None .text
 * prepare__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlock */
//	8027C5A4: 80346E4C (PSMTXMultVecSR)
//	8027C5BC: 80455340 (lit_2459)
//	8027C5C0: 80450AEC (__float_epsilon)
//	8027C5C4: 80450AEC (__float_epsilon)
//	8027C5D8: 8045533C (lit_2354)
//	8027C5F8: 80455344 (lit_2460)
//	8027C600: 80455348 (lit_2461)
//	8027C63C: 80455338 (lit_2353)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldVortex::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/prepare__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlock.s"
}
#pragma pop

/* 8027C674-8027C814 01A0+00 s=1 e=0 z=0  None .text
 * calc__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027C68C: 803621DC (_savegpr_29)
//	8027C714: 80455338 (lit_2353)
//	8027C748: 80455340 (lit_2459)
//	8027C74C: 80450AEC (__float_epsilon)
//	8027C750: 80450AEC (__float_epsilon)
//	8027C764: 8045533C (lit_2354)
//	8027C784: 80455344 (lit_2460)
//	8027C78C: 80455348 (lit_2461)
//	8027C7C8: 803471B4 (PSVECCrossProduct)
//	8027C7F0: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
//	8027C800: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldVortex::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                              JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027C814-8027CA94 0280+00 s=1 e=0 z=0  None .text
 * prepare__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlock */
//	8027C854: 803621DC (_savegpr_29)
//	8027C870: 803471B4 (PSVECCrossProduct)
//	8027C880: 803471B4 (PSVECCrossProduct)
//	8027C890: 80346E4C (PSMTXMultVecSR)
//	8027C8A0: 80346E4C (PSMTXMultVecSR)
//	8027C8B0: 80346E4C (PSMTXMultVecSR)
//	8027C8C8: 80455340 (lit_2459)
//	8027C8CC: 80450AEC (__float_epsilon)
//	8027C8D0: 80450AEC (__float_epsilon)
//	8027C8E4: 8045533C (lit_2354)
//	8027C904: 80455344 (lit_2460)
//	8027C90C: 80455348 (lit_2461)
//	8027C950: 80455340 (lit_2459)
//	8027C954: 80450AEC (__float_epsilon)
//	8027C958: 80450AEC (__float_epsilon)
//	8027C96C: 8045533C (lit_2354)
//	8027C98C: 80455344 (lit_2460)
//	8027C994: 80455348 (lit_2461)
//	8027C9D8: 80455340 (lit_2459)
//	8027C9DC: 80450AEC (__float_epsilon)
//	8027C9E0: 80450AEC (__float_epsilon)
//	8027C9F4: 8045533C (lit_2354)
//	8027CA14: 80455344 (lit_2460)
//	8027CA1C: 80455348 (lit_2461)
//	8027CA80: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldConvection::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/prepare__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlock.s"
}
#pragma pop

/* 8027CA94-8027CCCC 0238+00 s=1 e=0 z=0  None .text
 * calc__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027CAB4: 803621DC (_savegpr_29)
//	8027CB48: 80455340 (lit_2459)
//	8027CB4C: 80450AEC (__float_epsilon)
//	8027CB50: 80450AEC (__float_epsilon)
//	8027CB64: 8045533C (lit_2354)
//	8027CB78: 8045533C (lit_2354)
//	8027CB94: 80455344 (lit_2460)
//	8027CB9C: 80455348 (lit_2461)
//	8027CBF8: 803471B4 (PSVECCrossProduct)
//	8027CC08: 803471B4 (PSVECCrossProduct)
//	8027CC24: 80455340 (lit_2459)
//	8027CC28: 80450AEC (__float_epsilon)
//	8027CC2C: 80450AEC (__float_epsilon)
//	8027CC40: 8045533C (lit_2354)
//	8027CC5C: 80455344 (lit_2460)
//	8027CC64: 80455348 (lit_2461)
//	8027CCA0: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
//	8027CCB8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldConvection::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                                  JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027CCCC-8027CDE4 0118+00 s=1 e=0 z=0  None .text
 * calc__14JPAFieldRandomFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027CD38: 80455338 (lit_2353)
//	8027CD40: 80455344 (lit_2460)
//	8027CDD0: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldRandom::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                              JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__14JPAFieldRandomFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027CDE4-8027CE64 0080+00 s=1 e=0 z=0  None .text
 * calc__12JPAFieldDragFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027CE14: 8027BF18 (calcFadeAffect__12JPAFieldBaseCFP13JPAFieldBlockf)
//	8027CE1C: 80455338 (lit_2353)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldDrag::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                            JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__12JPAFieldDragFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027CE64-8027CFA8 0144+00 s=1 e=0 z=0  None .text
 * prepare__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlock */
//	8027CE9C: 80346E4C (PSMTXMultVecSR)
//	8027CEB4: 80455340 (lit_2459)
//	8027CEB8: 80450AEC (__float_epsilon)
//	8027CEBC: 80450AEC (__float_epsilon)
//	8027CED0: 8045533C (lit_2354)
//	8027CEF0: 80455344 (lit_2460)
//	8027CEF8: 80455348 (lit_2461)
//	8027CF34: 80346878 (PSMTXRotAxisRad)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldSpin::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/prepare__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlock.s"
}
#pragma pop

/* 8027CFA8-8027D088 00E0+00 s=1 e=0 z=0  None .text
 * calc__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle */
//	8027CFB8: 803621DC (_savegpr_29)
//	8027D010: 8045533C (lit_2354)
//	8027D02C: 80346E4C (PSMTXMultVecSR)
//	8027D06C: 8027BDEC (calcAffect__12JPAFieldBaseFP13JPAFieldBlockP15JPABaseParticle)
//	8027D074: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldSpin::calc(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1,
                            JPABaseParticle* param_2) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/calc__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle.s"
}
#pragma pop

/* 8027D088-8027D0C0 0038+00 s=0 e=1 z=0  None .text      __ct__13JPAFieldBlockFPCUcP7JKRHeap */
//	8027D0A4: 8027D0C0 (init__13JPAFieldBlockFP7JKRHeap)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldBlock::JPAFieldBlock(u8 const* param_0, JKRHeap* param_1) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__ct__13JPAFieldBlockFPCUcP7JKRHeap.s"
}
#pragma pop

/* ############################################################################################## */
/* 803C44A8-803C44CC 0024+00 s=1 e=0 z=0  None .data      @3259 */
SECTION_DATA static void* lit_3259[9] = {
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0xFC),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x130),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x164),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x198),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x1CC),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x200),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x234),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x268),
    (void*)(((char*)init__13JPAFieldBlockFP7JKRHeap) + 0x29C),
};

/* 803C44CC-803C44E0 0014+00 s=11 e=0 z=0  None .data      __vt__12JPAFieldBase */
SECTION_DATA void* __vt__12JPAFieldBase[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12JPAFieldBaseFv,
    (void*)prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)NULL,
};

/* 803C44E0-803C44F4 0014+00 s=2 e=0 z=0  None .data      __vt__12JPAFieldSpin */
SECTION_DATA void* __vt__12JPAFieldSpin[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12JPAFieldSpinFv,
    (void*)prepare__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__12JPAFieldSpinFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C44F4-803C4508 0014+00 s=2 e=0 z=0  None .data      __vt__12JPAFieldDrag */
SECTION_DATA void* __vt__12JPAFieldDrag[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__12JPAFieldDragFv,
    (void*)prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__12JPAFieldDragFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C4508-803C451C 0014+00 s=2 e=0 z=0  None .data      __vt__14JPAFieldRandom */
SECTION_DATA void* __vt__14JPAFieldRandom[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14JPAFieldRandomFv,
    (void*)prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__14JPAFieldRandomFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C451C-803C4530 0014+00 s=2 e=0 z=0  None .data      __vt__18JPAFieldConvection */
SECTION_DATA void* __vt__18JPAFieldConvection[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__18JPAFieldConvectionFv,
    (void*)prepare__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__18JPAFieldConvectionFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C4530-803C4544 0014+00 s=2 e=0 z=0  None .data      __vt__14JPAFieldVortex */
SECTION_DATA void* __vt__14JPAFieldVortex[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14JPAFieldVortexFv,
    (void*)prepare__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__14JPAFieldVortexFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C4544-803C4558 0014+00 s=2 e=0 z=0  None .data      __vt__14JPAFieldNewton */
SECTION_DATA void* __vt__14JPAFieldNewton[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14JPAFieldNewtonFv,
    (void*)prepare__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__14JPAFieldNewtonFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C4558-803C456C 0014+00 s=2 e=0 z=0  None .data      __vt__14JPAFieldMagnet */
SECTION_DATA void* __vt__14JPAFieldMagnet[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__14JPAFieldMagnetFv,
    (void*)prepare__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__14JPAFieldMagnetFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C456C-803C4580 0014+00 s=2 e=0 z=0  None .data      __vt__11JPAFieldAir */
SECTION_DATA void* __vt__11JPAFieldAir[5] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__11JPAFieldAirFv,
    (void*)prepare__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__11JPAFieldAirFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
};

/* 803C4580-803C4598 0014+04 s=2 e=0 z=0  None .data      __vt__15JPAFieldGravity */
SECTION_DATA void* __vt__15JPAFieldGravity[5 + 1 /* padding */] = {
    (void*)NULL /* RTTI */,
    (void*)NULL,
    (void*)__dt__15JPAFieldGravityFv,
    (void*)prepare__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlock,
    (void*)calc__15JPAFieldGravityFP18JPAEmitterWorkDataP13JPAFieldBlockP15JPABaseParticle,
    /* padding */
    NULL,
};

/* 8027D0C0-8027D3AC 02EC+00 s=2 e=0 z=0  None .text      init__13JPAFieldBlockFP7JKRHeap */
//	8027D0E8: 8045533C (lit_2354)
//	8027D0F8: 80455338 (lit_2353)
//	8027D104: 80455338 (lit_2353)
//	8027D124: 8045533C (lit_2354)
//	8027D134: 80455338 (lit_2353)
//	8027D140: 80455338 (lit_2353)
//	8027D1A4: 803C44A8 (lit_3259)
//	8027D1A8: 803C44A8 (lit_3259)
//	8027D1C4: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D1D0: 803C44CC (__vt__12JPAFieldBase)
//	8027D1D4: 803C44CC (__vt__12JPAFieldBase)
//	8027D1DC: 803C4580 (__vt__15JPAFieldGravity)
//	8027D1E0: 803C4580 (__vt__15JPAFieldGravity)
//	8027D1F8: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D204: 803C44CC (__vt__12JPAFieldBase)
//	8027D208: 803C44CC (__vt__12JPAFieldBase)
//	8027D210: 803C456C (__vt__11JPAFieldAir)
//	8027D214: 803C456C (__vt__11JPAFieldAir)
//	8027D22C: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D238: 803C44CC (__vt__12JPAFieldBase)
//	8027D23C: 803C44CC (__vt__12JPAFieldBase)
//	8027D244: 803C4558 (__vt__14JPAFieldMagnet)
//	8027D248: 803C4558 (__vt__14JPAFieldMagnet)
//	8027D260: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D26C: 803C44CC (__vt__12JPAFieldBase)
//	8027D270: 803C44CC (__vt__12JPAFieldBase)
//	8027D278: 803C4544 (__vt__14JPAFieldNewton)
//	8027D27C: 803C4544 (__vt__14JPAFieldNewton)
//	8027D294: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D2A0: 803C44CC (__vt__12JPAFieldBase)
//	8027D2A4: 803C44CC (__vt__12JPAFieldBase)
//	8027D2AC: 803C4530 (__vt__14JPAFieldVortex)
//	8027D2B0: 803C4530 (__vt__14JPAFieldVortex)
//	8027D2C8: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D2D4: 803C44CC (__vt__12JPAFieldBase)
//	8027D2D8: 803C44CC (__vt__12JPAFieldBase)
//	8027D2E0: 803C4508 (__vt__14JPAFieldRandom)
//	8027D2E4: 803C4508 (__vt__14JPAFieldRandom)
//	8027D2FC: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D308: 803C44CC (__vt__12JPAFieldBase)
//	8027D30C: 803C44CC (__vt__12JPAFieldBase)
//	8027D314: 803C44F4 (__vt__12JPAFieldDrag)
//	8027D318: 803C44F4 (__vt__12JPAFieldDrag)
//	8027D330: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D33C: 803C44CC (__vt__12JPAFieldBase)
//	8027D340: 803C44CC (__vt__12JPAFieldBase)
//	8027D348: 803C451C (__vt__18JPAFieldConvection)
//	8027D34C: 803C451C (__vt__18JPAFieldConvection)
//	8027D364: 802CEC98 (__nw__FUlP7JKRHeapi)
//	8027D370: 803C44CC (__vt__12JPAFieldBase)
//	8027D374: 803C44CC (__vt__12JPAFieldBase)
//	8027D37C: 803C44E0 (__vt__12JPAFieldSpin)
//	8027D380: 803C44E0 (__vt__12JPAFieldSpin)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void JPAFieldBlock::init(JKRHeap* param_0) {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/init__13JPAFieldBlockFP7JKRHeap.s"
}
#pragma pop

/* 8027D3AC-8027D3F4 0048+00 s=1 e=0 z=0  None .text      __dt__12JPAFieldBaseFv */
//	8027D3C4: 803C44CC (__vt__12JPAFieldBase)
//	8027D3C8: 803C44CC (__vt__12JPAFieldBase)
//	8027D3D8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldBase::~JPAFieldBase() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__12JPAFieldBaseFv.s"
}
#pragma pop

/* 8027D3F4-8027D450 005C+00 s=1 e=0 z=0  None .text      __dt__12JPAFieldSpinFv */
//	8027D40C: 803C44E0 (__vt__12JPAFieldSpin)
//	8027D410: 803C44E0 (__vt__12JPAFieldSpin)
//	8027D41C: 803C44CC (__vt__12JPAFieldBase)
//	8027D420: 803C44CC (__vt__12JPAFieldBase)
//	8027D434: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldSpin::~JPAFieldSpin() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__12JPAFieldSpinFv.s"
}
#pragma pop

/* 8027D450-8027D4AC 005C+00 s=1 e=0 z=0  None .text      __dt__12JPAFieldDragFv */
//	8027D468: 803C44F4 (__vt__12JPAFieldDrag)
//	8027D46C: 803C44F4 (__vt__12JPAFieldDrag)
//	8027D478: 803C44CC (__vt__12JPAFieldBase)
//	8027D47C: 803C44CC (__vt__12JPAFieldBase)
//	8027D490: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldDrag::~JPAFieldDrag() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__12JPAFieldDragFv.s"
}
#pragma pop

/* 8027D4AC-8027D508 005C+00 s=1 e=0 z=0  None .text      __dt__14JPAFieldRandomFv */
//	8027D4C4: 803C4508 (__vt__14JPAFieldRandom)
//	8027D4C8: 803C4508 (__vt__14JPAFieldRandom)
//	8027D4D4: 803C44CC (__vt__12JPAFieldBase)
//	8027D4D8: 803C44CC (__vt__12JPAFieldBase)
//	8027D4EC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldRandom::~JPAFieldRandom() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__14JPAFieldRandomFv.s"
}
#pragma pop

/* 8027D508-8027D564 005C+00 s=1 e=0 z=0  None .text      __dt__18JPAFieldConvectionFv */
//	8027D520: 803C451C (__vt__18JPAFieldConvection)
//	8027D524: 803C451C (__vt__18JPAFieldConvection)
//	8027D530: 803C44CC (__vt__12JPAFieldBase)
//	8027D534: 803C44CC (__vt__12JPAFieldBase)
//	8027D548: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldConvection::~JPAFieldConvection() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__18JPAFieldConvectionFv.s"
}
#pragma pop

/* 8027D564-8027D5C0 005C+00 s=1 e=0 z=0  None .text      __dt__14JPAFieldVortexFv */
//	8027D57C: 803C4530 (__vt__14JPAFieldVortex)
//	8027D580: 803C4530 (__vt__14JPAFieldVortex)
//	8027D58C: 803C44CC (__vt__12JPAFieldBase)
//	8027D590: 803C44CC (__vt__12JPAFieldBase)
//	8027D5A4: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldVortex::~JPAFieldVortex() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__14JPAFieldVortexFv.s"
}
#pragma pop

/* 8027D5C0-8027D61C 005C+00 s=1 e=0 z=0  None .text      __dt__14JPAFieldNewtonFv */
//	8027D5D8: 803C4544 (__vt__14JPAFieldNewton)
//	8027D5DC: 803C4544 (__vt__14JPAFieldNewton)
//	8027D5E8: 803C44CC (__vt__12JPAFieldBase)
//	8027D5EC: 803C44CC (__vt__12JPAFieldBase)
//	8027D600: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldNewton::~JPAFieldNewton() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__14JPAFieldNewtonFv.s"
}
#pragma pop

/* 8027D61C-8027D678 005C+00 s=1 e=0 z=0  None .text      __dt__14JPAFieldMagnetFv */
//	8027D634: 803C4558 (__vt__14JPAFieldMagnet)
//	8027D638: 803C4558 (__vt__14JPAFieldMagnet)
//	8027D644: 803C44CC (__vt__12JPAFieldBase)
//	8027D648: 803C44CC (__vt__12JPAFieldBase)
//	8027D65C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldMagnet::~JPAFieldMagnet() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__14JPAFieldMagnetFv.s"
}
#pragma pop

/* 8027D678-8027D6D4 005C+00 s=1 e=0 z=0  None .text      __dt__11JPAFieldAirFv */
//	8027D690: 803C456C (__vt__11JPAFieldAir)
//	8027D694: 803C456C (__vt__11JPAFieldAir)
//	8027D6A0: 803C44CC (__vt__12JPAFieldBase)
//	8027D6A4: 803C44CC (__vt__12JPAFieldBase)
//	8027D6B8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldAir::~JPAFieldAir() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__11JPAFieldAirFv.s"
}
#pragma pop

/* 8027D6D4-8027D730 005C+00 s=1 e=0 z=0  None .text      __dt__15JPAFieldGravityFv */
//	8027D6EC: 803C4580 (__vt__15JPAFieldGravity)
//	8027D6F0: 803C4580 (__vt__15JPAFieldGravity)
//	8027D6FC: 803C44CC (__vt__12JPAFieldBase)
//	8027D700: 803C44CC (__vt__12JPAFieldBase)
//	8027D714: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm JPAFieldGravity::~JPAFieldGravity() {
    nofralloc
#include "asm/JSystem/JParticle/JPAFieldBlock/__dt__15JPAFieldGravityFv.s"
}
#pragma pop
