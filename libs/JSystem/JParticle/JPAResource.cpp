// 
// Generated By: dol2asm
// Translation Unit: JPAResource
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JParticle/JPAResource.h"

// 
// Types:
// 

struct _GXTexMapID {
};

struct JUTTexture {
	/* 802DE840 */ // False False
//  _GXTexMapID False
void load(_GXTexMapID);
};

struct JPAEmitterWorkData {
};

struct JKRHeap {
	/* 802CE474 */ // False False
//  u32 False
//  int False
//  JKRHeap* False
// 	 JKRHeap False
void alloc(u32, int, JKRHeap*);
};

struct JPABaseEmitter {
	/* 8027EDD4 */ // False False
void processTillStartFrame();
	/* 8027EE14 */ // False False
void processTermination();
};

struct JPABaseParticle {
	/* 8027FFD0 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void calc_p(JPAEmitterWorkData*);
	/* 80280260 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void calc_c(JPAEmitterWorkData*);
};

struct JPAResource {
	/* 80274010 */ // False False
JPAResource();
	/* 80274080 */ // False False
//  JKRHeap* False
// 	 JKRHeap False
void init(JKRHeap*);
	/* 802755E8 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void calc(JPAEmitterWorkData*, JPABaseEmitter*);
	/* 80275A94 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
void draw(JPAEmitterWorkData*, JPABaseEmitter*);
	/* 80275B74 */ // True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void drawP(JPAEmitterWorkData*);
	/* 80275EB0 */ // True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void drawC(JPAEmitterWorkData*);
	/* 802761A8 */ // True False
void setPTev();
	/* 8027642C */ // True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void setCTev(JPAEmitterWorkData*);
	/* 8027658C */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void calc_p(JPAEmitterWorkData*, JPABaseParticle*);
	/* 80276608 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void calc_c(JPAEmitterWorkData*, JPABaseParticle*);
	/* 80276684 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void calcField(JPAEmitterWorkData*, JPABaseParticle*);
	/* 80276700 */ // True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void calcKey(JPAEmitterWorkData*);
	/* 80276840 */ // True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void calcWorkData_c(JPAEmitterWorkData*);
	/* 80276A0C */ // True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void calcWorkData_d(JPAEmitterWorkData*);
};

struct JPAKeyBlock {
	/* 8027D740 */ // False False
//  f32 False
void calc(f32);
};

struct JPAFieldBlock {
};

struct JPAFieldBase {
	/* 80276A8C */ // False False
//  void False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPAFieldBlock* False
// 	 JPAFieldBlock False
void prepare(JPAEmitterWorkData*, JPAFieldBlock*);
};

struct JPADynamicsBlock {
	/* 8027BBE8 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void create(JPAEmitterWorkData*);
};

struct JPABaseShape {
	/* 8027A7E8 */ // False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void setGX(JPAEmitterWorkData*) const;
};

struct JGeometry {
	template <typename A1>
	struct TVec3 { };
	/* TVec3<f32> */
	struct TVec3__template0 {
	};

};

// 
// Forward References:
// 


// False False
extern "C" void __ct__11JPAResourceFv();
// False False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void init__11JPAResourceFP7JKRHeap();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
extern "C" void calc__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
extern "C" void draw__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter();
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void drawP__11JPAResourceFP18JPAEmitterWorkData();
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void drawC__11JPAResourceFP18JPAEmitterWorkData();
// True False
extern "C" void setPTev__11JPAResourceFv();
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void setCTev__11JPAResourceFP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void calc_p__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void calc_c__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void calcField__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle();
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void calcKey__11JPAResourceFP18JPAEmitterWorkData();
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData();
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData();
// False False
//  void False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPAFieldBlock* False
// 	 JPAFieldBlock False
extern "C" void prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock();

// 
// External References:
// 

// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPASetPointSize(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPASetLineWidth(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPASetPointSize(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPASetLineWidth(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPARegistPrm(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPARegistEnv(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPARegistPrmEnv(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPARegistAlpha(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPARegistPrmAlpha(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPARegistPrmAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPARegistAlphaEnv(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPARegistEnv(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcClrIdxNormal(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcClrIdxNormal(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcClrIdxRepeat(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcClrIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcClrIdxReverse(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcClrIdxReverse(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcClrIdxMerge(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcClrIdxMerge(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcClrIdxRandom(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcClrIdxRandom(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcPrm(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcPrm(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcEnv(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcEnv(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcColorCopy(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPAGenTexCrdMtxIdt(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPAGenTexCrdMtxAnm(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPAGenTexCrdMtxPrj(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPAGenCalcTexCrdMtxAnm(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPALoadCalcTexCrdMtxAnm(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPALoadTex(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPALoadTexAnm(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPALoadTexAnm(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcTexIdxNormal(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcTexIdxNormal(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcTexIdxRepeat(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcTexIdxRepeat(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcTexIdxReverse(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcTexIdxReverse(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcTexIdxMerge(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcTexIdxMerge(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPACalcTexIdxRandom(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcTexIdxRandom(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPALoadPosMtxCam(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawBillboard(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawRotBillboard(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawYBillboard(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawRotYBillboard(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawDirection(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawRotDirection(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawDBillboard(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawRotation(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawPoint(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawLine(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPADrawStripe(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPADrawStripeX(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPADrawEmitterCallBackB(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPADrawParticleCallBack(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleX(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleY(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleCopy(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleAnmNormal(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleAnmRepeatX(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleAnmRepeatY(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleAnmReverseX(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcScaleAnmReverseY(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcAlphaAnm(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcAlphaFlickAnm(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPARegistChildPrmEnv(JPAEmitterWorkData*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcChildAlphaOut(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
void JPACalcChildScaleOut(JPAEmitterWorkData*, JPABaseParticle*);
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
void JPALoadExTex(JPAEmitterWorkData*);
// False True
//  JGeometry::TVec3<f32> const& False
// 	 JGeometry::TVec3<f32> const False
// 		 JGeometry::TVec3<f32> True
// 			 f32 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
void JPAGetDirMtx(JGeometry::TVec3__template0 const&, f32 (* )[4]);
// False False
//  s16 False
//  s16 False
//  s16 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
void JPAGetXYZRotateMtx(s16, s16, s16, f32 (* )[4]);

// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPASetPointSize__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPASetLineWidth__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPARegistPrm__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPARegistEnv__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPARegistPrmEnv__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcClrIdxNormal__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcClrIdxRepeat__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcClrIdxReverse__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcClrIdxMerge__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcClrIdxRandom__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcPrm__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcEnv__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPALoadTex__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPALoadTexAnm__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcTexIdxNormal__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcTexIdxRepeat__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcTexIdxReverse__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcTexIdxMerge__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPACalcTexIdxRandom__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPALoadPosMtxCam__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPADrawStripe__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPADrawStripeX__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPADrawEmitterCallBackB__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void setGX__12JPABaseShapeCFP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleX__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleY__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleCopy__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleAnmNormal__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleAnmRepeatX__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleAnmRepeatY__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleAnmReverseX__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcScaleAnmReverseY__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcAlphaAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcAlphaFlickAnm__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPARegistChildPrmEnv__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
extern "C" void JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void JPALoadExTex__FP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void create__16JPADynamicsBlockFP18JPAEmitterWorkData();
// False False
//  f32 False
extern "C" void calc__11JPAKeyBlockFf();
// False False
extern "C" void processTillStartFrame__14JPABaseEmitterFv();
// False False
extern "C" void processTermination__14JPABaseEmitterFv();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void calc_p__15JPABaseParticleFP18JPAEmitterWorkData();
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
extern "C" void calc_c__15JPABaseParticleFP18JPAEmitterWorkData();
// False True
//  JGeometry::TVec3<f32> const& False
// 	 JGeometry::TVec3<f32> const False
// 		 JGeometry::TVec3<f32> True
// 			 f32 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void func_80280588();
// False False
//  s16 False
//  s16 False
//  s16 False
//  f32 (* )[4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void JPAGetXYZRotateMtx__FsssPA4_f();
// False False
//  u32 False
//  int False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void alloc__7JKRHeapFUliP7JKRHeap();
// False False
//  _GXTexMapID False
extern "C" void load__10JUTTextureF11_GXTexMapID();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXConcat();
// False False
extern "C" void PSMTXScale();
// False False
extern "C" void PSMTXMultVec();
// False False
extern "C" void PSMTXMultVecSR();
// False False
extern "C" void GXSetArray();
// False False
extern "C" void GXSetTexCoordGen2();
// False False
extern "C" void GXSetNumTexGens();
// False False
extern "C" void GXSetMisc();
// False False
extern "C" void GXSetTevIndirect();
// False False
extern "C" void GXSetIndTexMtx();
// False False
extern "C" void GXSetIndTexCoordScale();
// False False
extern "C" void GXSetIndTexOrder();
// False False
extern "C" void GXSetNumIndStages();
// False False
extern "C" void GXSetTevDirect();
// False False
extern "C" void GXSetTevColorIn();
// False False
extern "C" void GXSetTevAlphaIn();
// False False
extern "C" void GXSetTevColorOp();
// False False
extern "C" void GXSetTevAlphaOp();
// False False
extern "C" void GXSetTevOrder();
// False False
extern "C" void GXSetNumTevStages();
// False False
extern "C" void GXSetClipMode();
// False False
extern "C" void __save_gpr();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void __restore_gpr();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();

// 
// Declarations:
// 

/* 80274010-80274080 0070+00 s=0 e=1 z=0  None .text      __ct__11JPAResourceFv                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JPAResource::JPAResource() {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/__ct__11JPAResourceFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803C40C0-803C4220 0144+1C s=2 e=0 z=0  None .data      jpa_pos                                                      */
SECTION_DATA static u8 jpa_pos[324 + 28 /* padding */] = {
	0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x32, 0xCE, 0x00, 0x00, 0xCE, 0x00, 0xE7, 0x00, 0x00, 0x19,
	0x00, 0x00, 0x19, 0xCE, 0x00, 0xE7, 0xCE, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE,
	0x00, 0xCE, 0xCE, 0x00, 0x00, 0x19, 0x00, 0x32, 0x19, 0x00, 0x32, 0xE7, 0x00, 0x00, 0xE7, 0x00,
	0xE7, 0x19, 0x00, 0x19, 0x19, 0x00, 0x19, 0xE7, 0x00, 0xE7, 0xE7, 0x00, 0xCE, 0x19, 0x00, 0x00,
	0x19, 0x00, 0x00, 0xE7, 0x00, 0xCE, 0xE7, 0x00, 0x00, 0x32, 0x00, 0x32, 0x32, 0x00, 0x32, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xE7, 0x32, 0x00, 0x19, 0x32, 0x00, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x00,
	0xCE, 0x32, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32,
	0x00, 0x00, 0x32, 0x00, 0x32, 0x00, 0x00, 0x32, 0xE7, 0x00, 0x00, 0x19, 0x00, 0x00, 0x19, 0x00,
	0x32, 0xE7, 0x00, 0x32, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0xCE, 0x00, 0x32,
	0x00, 0x00, 0xE7, 0x32, 0x00, 0xE7, 0x32, 0x00, 0x19, 0x00, 0x00, 0x19, 0xE7, 0x00, 0xE7, 0x19,
	0x00, 0xE7, 0x19, 0x00, 0x19, 0xE7, 0x00, 0x19, 0xCE, 0x00, 0xE7, 0x00, 0x00, 0xE7, 0x00, 0x00,
	0x19, 0xCE, 0x00, 0x19, 0x00, 0x00, 0xCE, 0x32, 0x00, 0xCE, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xE7, 0x00, 0xCE, 0x19, 0x00, 0xCE, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x00, 0xCE, 0x00, 0xCE, 0x00,
	0x00, 0xCE, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0xCE,
	0x32, 0x00, 0xCE, 0x00, 0x00, 0x00, 0xE7, 0x00, 0x00, 0x19, 0x00, 0xCE, 0x19, 0x00, 0xCE, 0xE7,
	0x00, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0xCE, 0x00, 0x00, 0xCE, 0xCE, 0x00, 0x19, 0x00, 0x00,
	0x19, 0x32, 0x00, 0xE7, 0x32, 0x00, 0xE7, 0x00, 0x00, 0x19, 0xE7, 0x00, 0x19, 0x19, 0x00, 0xE7,
	0x19, 0x00, 0xE7, 0xE7, 0x00, 0x19, 0xCE, 0x00, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x00, 0xE7, 0xCE,
	0x00, 0x32, 0x00, 0x00, 0x32, 0x32, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00, 0x32, 0xE7, 0x00,
	0x32, 0x19, 0x00, 0x00, 0x19, 0x00, 0x00, 0xE7, 0x00, 0x32, 0xCE, 0x00, 0x32, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xCE,
	/* padding */
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803C4220-803C4240 0020+00 s=2 e=0 z=0  None .data      jpa_crd                                                      */
SECTION_DATA static u8 jpa_crd[32] = {
	0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x02, 0x01, 0x00, 0x01,
	0x00, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x02, 0x02, 0x00, 0x02,
};

/* 803C4240-803C426C 002C+00 s=1 e=0 z=0  None .data      @2829                                                        */
SECTION_DATA static void* lit_2829[11] = {
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1488),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x149C),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x13D0),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1430),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1430),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x14AC),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x14AC),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1474),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1474),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1460),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1400),
};

/* 803C426C-803C4298 002C+00 s=1 e=0 z=0  None .data      @2828                                                        */
SECTION_DATA static void* lit_2828[11] = {
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x112C),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1140),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1074),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x10D4),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x10D4),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1150),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1150),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1118),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1118),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x1104),
	(void*)(((char*)init__11JPAResourceFP7JKRHeap)+0x10A4),
};

/* 80274080-802755E8 1568+00 s=2 e=1 z=0  None .text      init__11JPAResourceFP7JKRHeap                                */
//	80274090: 803621A0 (__save_gpr)
//	8027434C: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802743A4: 802779DC (JPACalcTexIdxNormal__FP18JPAEmitterWorkData)
//	802743A8: 802779DC (JPACalcTexIdxNormal__FP18JPAEmitterWorkData)
//	802743B8: 80277A50 (JPACalcTexIdxRepeat__FP18JPAEmitterWorkData)
//	802743BC: 80277A50 (JPACalcTexIdxRepeat__FP18JPAEmitterWorkData)
//	802743CC: 80277ACC (JPACalcTexIdxReverse__FP18JPAEmitterWorkData)
//	802743D0: 80277ACC (JPACalcTexIdxReverse__FP18JPAEmitterWorkData)
//	802743E0: 80277B78 (JPACalcTexIdxMerge__FP18JPAEmitterWorkData)
//	802743E4: 80277B78 (JPACalcTexIdxMerge__FP18JPAEmitterWorkData)
//	802743F4: 80277C0C (JPACalcTexIdxRandom__FP18JPAEmitterWorkData)
//	802743F8: 80277C0C (JPACalcTexIdxRandom__FP18JPAEmitterWorkData)
//	80274418: 802773C4 (JPACalcPrm__FP18JPAEmitterWorkData)
//	8027441C: 802773C4 (JPACalcPrm__FP18JPAEmitterWorkData)
//	80274438: 80277440 (JPACalcEnv__FP18JPAEmitterWorkData)
//	8027443C: 80277440 (JPACalcEnv__FP18JPAEmitterWorkData)
//	8027449C: 802771BC (JPACalcClrIdxNormal__FP18JPAEmitterWorkData)
//	802744A0: 802771BC (JPACalcClrIdxNormal__FP18JPAEmitterWorkData)
//	802744B4: 80277210 (JPACalcClrIdxRepeat__FP18JPAEmitterWorkData)
//	802744B8: 80277210 (JPACalcClrIdxRepeat__FP18JPAEmitterWorkData)
//	802744CC: 8027727C (JPACalcClrIdxReverse__FP18JPAEmitterWorkData)
//	802744D0: 8027727C (JPACalcClrIdxReverse__FP18JPAEmitterWorkData)
//	802744E4: 80277308 (JPACalcClrIdxMerge__FP18JPAEmitterWorkData)
//	802744E8: 80277308 (JPACalcClrIdxMerge__FP18JPAEmitterWorkData)
//	802744FC: 80277384 (JPACalcClrIdxRandom__FP18JPAEmitterWorkData)
//	80274500: 80277384 (JPACalcClrIdxRandom__FP18JPAEmitterWorkData)
//	80274654: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802746AC: 80277A18 (JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746B0: 80277A18 (JPACalcTexIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746C0: 80277A88 (JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746C4: 80277A88 (JPACalcTexIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746D4: 80277B1C (JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746D8: 80277B1C (JPACalcTexIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746E8: 80277B94 (JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746EC: 80277B94 (JPACalcTexIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802746FC: 80277C28 (JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274700: 80277C28 (JPACalcTexIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274730: 8027AC98 (JPACalcAlphaFlickAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274734: 8027AC98 (JPACalcAlphaFlickAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027474C: 8027AC10 (JPACalcAlphaAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274750: 8027AC10 (JPACalcAlphaAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274774: 80277404 (JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274778: 80277404 (JPACalcPrm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274794: 80277480 (JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274798: 80277480 (JPACalcEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802747F8: 802771E8 (JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802747FC: 802771E8 (JPACalcClrIdxNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274810: 80277240 (JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274814: 80277240 (JPACalcClrIdxRepeat__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274828: 802772BC (JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027482C: 802772BC (JPACalcClrIdxReverse__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274840: 80277314 (JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274844: 80277314 (JPACalcClrIdxMerge__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274858: 80277390 (JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027485C: 80277390 (JPACalcClrIdxRandom__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274874: 802774BC (JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274878: 802774BC (JPACalcColorCopy__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802748BC: 8027A990 (JPACalcScaleY__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802748C0: 8027A990 (JPACalcScaleY__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274914: 8027AA14 (JPACalcScaleAnmNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274918: 8027AA14 (JPACalcScaleAnmNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027492C: 8027AA84 (JPACalcScaleAnmRepeatY__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274930: 8027AA84 (JPACalcScaleAnmRepeatY__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274944: 8027AB7C (JPACalcScaleAnmReverseY__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274948: 8027AB7C (JPACalcScaleAnmReverseY__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274960: 8027AA08 (JPACalcScaleCopy__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274964: 8027AA08 (JPACalcScaleCopy__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274978: 8027A918 (JPACalcScaleX__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027497C: 8027A918 (JPACalcScaleX__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802749C0: 8027AA14 (JPACalcScaleAnmNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802749C4: 8027AA14 (JPACalcScaleAnmNormal__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802749DC: 8027AA20 (JPACalcScaleAnmRepeatX__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802749E0: 8027AA20 (JPACalcScaleAnmRepeatX__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802749F8: 8027AAE8 (JPACalcScaleAnmReverseX__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802749FC: 8027AAE8 (JPACalcScaleAnmReverseX__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274A78: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	80274AA0: 8027B008 (JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274AA4: 8027B008 (JPACalcChildScaleOut__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274AD0: 8027AFDC (JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274AD4: 8027AFDC (JPACalcChildAlphaOut__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80274BC0: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	80274BF4: 80279374 (JPADrawStripe__FP18JPAEmitterWorkData)
//	80274BF8: 80279374 (JPADrawStripe__FP18JPAEmitterWorkData)
//	80274C0C: 8027996C (JPADrawStripeX__FP18JPAEmitterWorkData)
//	80274C10: 8027996C (JPADrawStripeX__FP18JPAEmitterWorkData)
//	80274C20: 8027A3D8 (JPADrawEmitterCallBackB__FP18JPAEmitterWorkData)
//	80274C24: 8027A3D8 (JPADrawEmitterCallBackB__FP18JPAEmitterWorkData)
//	80274C44: 8027B040 (JPALoadExTex__FP18JPAEmitterWorkData)
//	80274C48: 8027B040 (JPALoadExTex__FP18JPAEmitterWorkData)
//	80274C64: 802778EC (JPALoadTex__FP18JPAEmitterWorkData)
//	80274C68: 802778EC (JPALoadTex__FP18JPAEmitterWorkData)
//	80274C88: 80277940 (JPALoadTexAnm__FP18JPAEmitterWorkData)
//	80274C8C: 80277940 (JPALoadTexAnm__FP18JPAEmitterWorkData)
//	80274CA8: 80277504 (JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData)
//	80274CAC: 80277504 (JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData)
//	80274CD0: 80277574 (JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData)
//	80274CD4: 80277574 (JPAGenTexCrdMtxPrj__FP18JPAEmitterWorkData)
//	80274D00: 802775AC (JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData)
//	80274D04: 802775AC (JPAGenCalcTexCrdMtxAnm__FP18JPAEmitterWorkData)
//	80274D1C: 8027753C (JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData)
//	80274D20: 8027753C (JPAGenTexCrdMtxAnm__FP18JPAEmitterWorkData)
//	80274D38: 80277504 (JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData)
//	80274D3C: 80277504 (JPAGenTexCrdMtxIdt__FP18JPAEmitterWorkData)
//	80274D58: 80277C64 (JPALoadPosMtxCam__FP18JPAEmitterWorkData)
//	80274D5C: 80277C64 (JPALoadPosMtxCam__FP18JPAEmitterWorkData)
//	80274D8C: 80276A90 (JPASetPointSize__FP18JPAEmitterWorkData)
//	80274D90: 80276A90 (JPASetPointSize__FP18JPAEmitterWorkData)
//	80274DA8: 80276ACC (JPASetLineWidth__FP18JPAEmitterWorkData)
//	80274DAC: 80276ACC (JPASetLineWidth__FP18JPAEmitterWorkData)
//	80274DD8: 80276CB0 (JPARegistPrmEnv__FP18JPAEmitterWorkData)
//	80274DDC: 80276CB0 (JPARegistPrmEnv__FP18JPAEmitterWorkData)
//	80274DF4: 80276C2C (JPARegistEnv__FP18JPAEmitterWorkData)
//	80274DF8: 80276C2C (JPARegistEnv__FP18JPAEmitterWorkData)
//	80274E24: 80276CB0 (JPARegistPrmEnv__FP18JPAEmitterWorkData)
//	80274E28: 80276CB0 (JPARegistPrmEnv__FP18JPAEmitterWorkData)
//	80274E3C: 80276B90 (JPARegistPrm__FP18JPAEmitterWorkData)
//	80274E40: 80276B90 (JPARegistPrm__FP18JPAEmitterWorkData)
//	80274E5C: 80276C2C (JPARegistEnv__FP18JPAEmitterWorkData)
//	80274E60: 80276C2C (JPARegistEnv__FP18JPAEmitterWorkData)
//	80274EFC: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	80274F30: 80279374 (JPADrawStripe__FP18JPAEmitterWorkData)
//	80274F34: 80279374 (JPADrawStripe__FP18JPAEmitterWorkData)
//	80274F48: 8027996C (JPADrawStripeX__FP18JPAEmitterWorkData)
//	80274F4C: 8027996C (JPADrawStripeX__FP18JPAEmitterWorkData)
//	80274F5C: 8027A3D8 (JPADrawEmitterCallBackB__FP18JPAEmitterWorkData)
//	80274F60: 8027A3D8 (JPADrawEmitterCallBackB__FP18JPAEmitterWorkData)
//	80274F7C: 80277C64 (JPALoadPosMtxCam__FP18JPAEmitterWorkData)
//	80274F80: 80277C64 (JPALoadPosMtxCam__FP18JPAEmitterWorkData)
//	80274FC0: 8027AEBC (JPARegistChildPrmEnv__FP18JPAEmitterWorkData)
//	80274FC4: 8027AEBC (JPARegistChildPrmEnv__FP18JPAEmitterWorkData)
//	802750A8: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	802750DC: 803C426C (lit_2828)
//	802750E0: 803C426C (lit_2828)
//	802750FC: 80277F70 (JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275100: 80277F70 (JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275110: 80277E88 (JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275114: 80277E88 (JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027512C: 80278184 (JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275130: 80278184 (JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275140: 80278088 (JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275144: 80278088 (JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027515C: 80278994 (JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275160: 80278994 (JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275170: 802785F8 (JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275174: 802785F8 (JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275184: 80278DA8 (JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275188: 80278DA8 (JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275198: 80278FC8 (JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027519C: 80278FC8 (JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802751AC: 80279110 (JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802751B0: 80279110 (JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802751C0: 802791B0 (JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802751C4: 802791B0 (JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802751D4: 8027A414 (JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802751D8: 8027A414 (JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802751FC: 80277990 (JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275200: 80277990 (JPALoadTexAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275230: 80276B08 (JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275234: 80276B08 (JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027524C: 80276B4C (JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275250: 80276B4C (JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275280: 80277758 (JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275284: 80277758 (JPALoadCalcTexCrdMtxAnm__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802752B0: 80276F10 (JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802752B4: 80276F10 (JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802752C8: 80276E60 (JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802752CC: 80276E60 (JPARegistPrmAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802752F0: 80277024 (JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802752F4: 80277024 (JPARegistAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275308: 80276DB0 (JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027530C: 80276DB0 (JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275328: 80277138 (JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027532C: 80277138 (JPARegistEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275350: 80276DB0 (JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275354: 80276DB0 (JPARegistAlpha__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802753FC: 802CE474 (alloc__7JKRHeapFUliP7JKRHeap)
//	80275438: 803C4240 (lit_2829)
//	8027543C: 803C4240 (lit_2829)
//	80275458: 80277F70 (JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027545C: 80277F70 (JPADrawRotBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027546C: 80277E88 (JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275470: 80277E88 (JPADrawBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275488: 80278184 (JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027548C: 80278184 (JPADrawRotYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027549C: 80278088 (JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754A0: 80278088 (JPADrawYBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754B8: 80278994 (JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754BC: 80278994 (JPADrawRotDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754CC: 802785F8 (JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754D0: 802785F8 (JPADrawDirection__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754E0: 80278DA8 (JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754E4: 80278DA8 (JPADrawDBillboard__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754F4: 80278FC8 (JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802754F8: 80278FC8 (JPADrawRotation__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275508: 80279110 (JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027550C: 80279110 (JPADrawPoint__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027551C: 802791B0 (JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275520: 802791B0 (JPADrawLine__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275530: 8027A414 (JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275534: 8027A414 (JPADrawParticleCallBack__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027555C: 80276B08 (JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275560: 80276B08 (JPASetPointSize__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	80275578: 80276B4C (JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	8027557C: 80276B4C (JPASetLineWidth__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802755BC: 80276F10 (JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802755C0: 80276F10 (JPARegistPrmAlphaEnv__FP18JPAEmitterWorkDataP15JPABaseParticle)
//	802755D4: 803621EC (__restore_gpr)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JKRHeap* False
// 	 JKRHeap False
asm void JPAResource::init(JKRHeap* param_0) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/init__11JPAResourceFP7JKRHeap.s"
}
#pragma pop


/* 802755E8-80275A94 04AC+00 s=0 e=1 z=0  None .text      calc__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter   */
//	802755F8: 803621D4 (_savegpr_27)
//	8027561C: 8027EDD4 (processTillStartFrame__14JPABaseEmitterFv)
//	80275634: 8027EE14 (processTermination__14JPABaseEmitterFv)
//	802756BC: 80276700 (calcKey__11JPAResourceFP18JPAEmitterWorkData)
//	80275768: 80276840 (calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData)
//	802757F4: 8027BBE8 (create__16JPADynamicsBlockFP18JPAEmitterWorkData)
//	80275840: 8027FFD0 (calc_p__15JPABaseParticleFP18JPAEmitterWorkData)
//	80275960: 80280260 (calc_c__15JPABaseParticleFP18JPAEmitterWorkData)
//	80275A80: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
asm void JPAResource::calc(JPAEmitterWorkData* param_0, JPABaseEmitter* param_1) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/calc__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter.s"
}
#pragma pop


/* 80275A94-80275B74 00E0+00 s=0 e=1 z=0  None .text      draw__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter   */
//	80275AA4: 803621D8 (_savegpr_28)
//	80275AC4: 80276A0C (calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData)
//	80275AD0: 8027A7E8 (setGX__12JPABaseShapeCFP18JPAEmitterWorkData)
//	80275B10: 80275EB0 (drawC__11JPAResourceFP18JPAEmitterWorkData)
//	80275B1C: 80275B74 (drawP__11JPAResourceFP18JPAEmitterWorkData)
//	80275B48: 80275EB0 (drawC__11JPAResourceFP18JPAEmitterWorkData)
//	80275B60: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseEmitter* False
// 	 JPABaseEmitter False
asm void JPAResource::draw(JPAEmitterWorkData* param_0, JPABaseEmitter* param_1) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/draw__11JPAResourceFP18JPAEmitterWorkDataP14JPABaseEmitter.s"
}
#pragma pop


/* ############################################################################################## */
/* 80455290-80455294 0004+00 s=2 e=0 z=0  None .sdata2    @3189                                                        */
SECTION_SDATA2 static f32 lit_3189 = 51.0f / 50.0f;

/* 80455294-80455298 0004+00 s=2 e=0 z=0  None .sdata2    @3190                                                        */
SECTION_SDATA2 static f32 lit_3190 = 2.0f / 5.0f;

/* 80455298-8045529C 0004+00 s=1 e=0 z=0  None .sdata2    @3191                                                        */
SECTION_SDATA2 static f32 lit_3191 = 1.0f;

/* 8045529C-804552A0 0004+00 s=2 e=0 z=0  None .sdata2    @3192                                                        */
SECTION_SDATA2 static u8 lit_3192[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 804552A0-804552A8 0008+00 s=3 e=0 z=0  None .sdata2    @3194                                                        */
SECTION_SDATA2 static f64 lit_3194 = 4503599627370496.0 /* cast u32 to float */;

/* 80275B74-80275EB0 033C+00 s=1 e=0 z=0  None .text      drawP__11JPAResourceFP18JPAEmitterWorkData                   */
//	80275B84: 803621D4 (_savegpr_27)
//	80275BF0: 80455290 (lit_3189)
//	80275C0C: 80455290 (lit_3189)
//	80275C1C: 80455294 (lit_3190)
//	80275C48: 804552A0 (lit_3194)
//	80275C60: 80455298 (lit_3191)
//	80275C98: 8045529C (lit_3192)
//	80275D5C: 802761A8 (setPTev__11JPAResourceFv)
//	80275E74: 8035BE38 (GXSetMisc)
//	80275E9C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
asm void JPAResource::drawP(JPAEmitterWorkData* param_0) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/drawP__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop


/* 80275EB0-802761A8 02F8+00 s=1 e=0 z=0  None .text      drawC__11JPAResourceFP18JPAEmitterWorkData                   */
//	80275EC0: 803621D4 (_savegpr_27)
//	80275F74: 80455290 (lit_3189)
//	80275F90: 80455290 (lit_3189)
//	80275FA0: 80455294 (lit_3190)
//	80275FAC: 8045529C (lit_3192)
//	80276054: 8027642C (setCTev__11JPAResourceFP18JPAEmitterWorkData)
//	8027616C: 8035BE38 (GXSetMisc)
//	80276194: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
asm void JPAResource::drawC(JPAEmitterWorkData* param_0) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/drawC__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop


/* 802761A8-8027642C 0284+00 s=1 e=0 z=0  None .text      setPTev__11JPAResourceFv                                     */
//	802761B8: 803621CC (_savegpr_25)
//	8027624C: 803C40C0 (jpa_pos)
//	80276250: 803C40C0 (jpa_pos)
//	80276260: 8035BB28 (GXSetArray)
//	80276274: 803C4220 (jpa_crd)
//	80276278: 803C4220 (jpa_crd)
//	80276284: 8035BB28 (GXSetArray)
//	80276298: 8035F6F4 (GXSetTevOrder)
//	802762C4: 8035EFE8 (GXSetIndTexOrder)
//	802762D4: 8035EEA4 (GXSetIndTexCoordScale)
//	802762F0: 8035ED2C (GXSetIndTexMtx)
//	80276320: 8035ECC0 (GXSetTevIndirect)
//	80276354: 8035F6F4 (GXSetTevOrder)
//	8027636C: 8035F224 (GXSetTevColorIn)
//	80276384: 8035F268 (GXSetTevAlphaIn)
//	802763A0: 8035F2AC (GXSetTevColorOp)
//	802763BC: 8035F314 (GXSetTevAlphaOp)
//	802763CC: 8035F890 (GXSetNumTevStages)
//	802763D4: 8035F0D4 (GXSetNumIndStages)
//	802763F4: 8035BE38 (GXSetMisc)
//	802763FC: 803605D0 (GXSetClipMode)
//	80276408: 803605D0 (GXSetClipMode)
//	80276410: 8035BDFC (GXSetNumTexGens)
//	80276418: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JPAResource::setPTev() {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/setPTev__11JPAResourceFv.s"
}
#pragma pop


/* 8027642C-8027658C 0160+00 s=1 e=0 z=0  None .text      setCTev__11JPAResourceFP18JPAEmitterWorkData                 */
//	8027648C: 803C40C0 (jpa_pos)
//	80276490: 803C40C0 (jpa_pos)
//	802764A0: 8035BB28 (GXSetArray)
//	802764A8: 803C4220 (jpa_crd)
//	802764AC: 803C4220 (jpa_crd)
//	802764B4: 8035BB28 (GXSetArray)
//	802764C8: 8035F6F4 (GXSetTevOrder)
//	802764E4: 8035BB7C (GXSetTexCoordGen2)
//	802764EC: 8035F0F8 (GXSetTevDirect)
//	802764F4: 8035F890 (GXSetNumTevStages)
//	802764FC: 8035F0D4 (GXSetNumIndStages)
//	8027651C: 8035BE38 (GXSetMisc)
//	80276524: 803605D0 (GXSetClipMode)
//	80276530: 803605D0 (GXSetClipMode)
//	80276538: 8035BDFC (GXSetNumTexGens)
//	80276570: 802DE840 (load__10JUTTextureF11_GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
asm void JPAResource::setCTev(JPAEmitterWorkData* param_0) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/setCTev__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop


/* 8027658C-80276608 007C+00 s=0 e=1 z=0  None .text      calc_p__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle */
//	8027659C: 803621D4 (_savegpr_27)
//	802765F4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
asm void JPAResource::calc_p(JPAEmitterWorkData* param_0, JPABaseParticle* param_1) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/calc_p__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop


/* 80276608-80276684 007C+00 s=0 e=1 z=0  None .text      calc_c__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle */
//	80276618: 803621D4 (_savegpr_27)
//	80276670: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
asm void JPAResource::calc_c(JPAEmitterWorkData* param_0, JPABaseParticle* param_1) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/calc_c__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop


/* 80276684-80276700 007C+00 s=0 e=2 z=0  None .text      calcField__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle */
//	80276694: 803621D4 (_savegpr_27)
//	802766EC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPABaseParticle* False
// 	 JPABaseParticle False
asm void JPAResource::calcField(JPAEmitterWorkData* param_0, JPABaseParticle* param_1) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/calcField__11JPAResourceFP18JPAEmitterWorkDataP15JPABaseParticle.s"
}
#pragma pop


/* ############################################################################################## */
/* 803C4298-803C42E0 002C+1C s=1 e=0 z=0  None .data      @3454                                                        */
SECTION_DATA static void* lit_3454[11 + 7 /* padding */] = {
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0x90),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0x9C),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0x110),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0xB4),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0xC0),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0x110),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0xD8),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0xE4),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0xF0),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0xFC),
	(void*)(((char*)calcKey__11JPAResourceFP18JPAEmitterWorkData)+0x108),
	/* padding */
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
};

/* 80276700-80276840 0140+00 s=2 e=0 z=0  None .text      calcKey__11JPAResourceFP18JPAEmitterWorkData                 */
//	80276718: 803621D4 (_savegpr_27)
//	8027672C: 804552A0 (lit_3194)
//	8027675C: 8027D740 (calc__11JPAKeyBlockFf)
//	80276778: 803C4298 (lit_3454)
//	8027677C: 803C4298 (lit_3454)
//	8027682C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
asm void JPAResource::calcKey(JPAEmitterWorkData* param_0) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/calcKey__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop


/* 80276840-80276A0C 01CC+00 s=1 e=0 z=0  None .text      calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData          */
//	8027685C: 804552A0 (lit_3194)
//	802768D0: 80346968 (PSMTXScale)
//	80276900: 80280734 (JPAGetXYZRotateMtx__FsssPA4_f)
//	80276918: 80346968 (PSMTXScale)
//	8027692C: 803464E4 (PSMTXConcat)
//	80276954: 803464B0 (PSMTXCopy)
//	80276964: 803464E4 (PSMTXConcat)
//	80276974: 803464E4 (PSMTXConcat)
//	802769C4: 80280588 (func_80280588)
//	802769F4: 80346D6C (PSMTXMultVec)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
asm void JPAResource::calcWorkData_c(JPAEmitterWorkData* param_0) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/calcWorkData_c__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop


/* 80276A0C-80276A8C 0080+00 s=1 e=0 z=0  None .text      calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData          */
//	80276A4C: 80280734 (JPAGetXYZRotateMtx__FsssPA4_f)
//	80276A60: 803464E4 (PSMTXConcat)
//	80276A74: 80346E4C (PSMTXMultVecSR)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
asm void JPAResource::calcWorkData_d(JPAEmitterWorkData* param_0) {
	nofralloc
#include "asm/JSystem/JParticle/JPAResource/calcWorkData_d__11JPAResourceFP18JPAEmitterWorkData.s"
}
#pragma pop


/* 80276A8C-80276A90 0004+00 s=0 e=3 z=0  None .text      prepare__12JPAFieldBaseFP18JPAEmitterWorkDataP13JPAFieldBlock */
// False False
//  void False
//  JPAEmitterWorkData* False
// 	 JPAEmitterWorkData False
//  JPAFieldBlock* False
// 	 JPAFieldBlock False
void JPAFieldBase::prepare(JPAEmitterWorkData* param_0, JPAFieldBlock* param_1) {
	/* empty function */
}


