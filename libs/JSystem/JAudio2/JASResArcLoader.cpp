// 
// Generated By: dol2asm
// Translation Unit: JASResArcLoader
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JAudio2/JASResArcLoader.h"

// 
// Types:
// 

struct JKRArchive {
	/* 802D5F40 */ // False False
//  void* False
// 	 void False
//  u32 False
//  u16 False
void readResource(void*, u32, u16);
	/* 802D6684 */ // False False
//  u32 False
void findIdxResource(u32) const;
	/* 802D6770 */ // False False
//  u16 False
void findIdResource(u16) const;
};

struct JASTaskThread {
	/* 8028FB5C */ // False False
//  void (*)(void*) False
// 	 * False
// 		  False
// 	 void False
// 	 void* False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
void sendCmdMsg(void (*)(void*), void const*, u32);
};

struct JASResArcLoader {
	/* 80290BD0 */ // False False
//  JKRArchive const* False
// 	 JKRArchive const False
// 		 JKRArchive False
//  u16 False
void getResSize(JKRArchive const*, u16);
	/* 80290C04 */ // False False
//  JKRArchive const* False
// 	 JKRArchive const False
// 		 JKRArchive False
void getResMaxSize(JKRArchive const*);
	/* 80290C7C */ // True False
//  void* False
// 	 void False
void loadResourceCallback(void*);
	/* 80290D18 */ // False False
//  JKRArchive* False
// 	 JKRArchive False
//  u16 False
//  u8* False
// 	 u8 False
//  u32 False
//  void (*)(u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u32 False
// 	 u32 False
//  u32 False
void loadResourceAsync(JKRArchive*, u16, u8*, u32, void (*)(u32, u32), u32);
};

struct JASDvd {
	/* 8028FEFC */ // False False
void getThreadPointer();
};

// 
// Forward References:
// 


// False False
//  JKRArchive const* False
// 	 JKRArchive const False
// 		 JKRArchive False
//  u16 False
extern "C" void getResSize__15JASResArcLoaderFPC10JKRArchiveUs();
// False False
//  JKRArchive const* False
// 	 JKRArchive const False
// 		 JKRArchive False
extern "C" void getResMaxSize__15JASResArcLoaderFPC10JKRArchive();
// True False
//  void* False
// 	 void False
extern "C" void loadResourceCallback__15JASResArcLoaderFPv();
// False False
//  JKRArchive* False
// 	 JKRArchive False
//  u16 False
//  u8* False
// 	 u8 False
//  u32 False
//  void (*)(u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u32 False
// 	 u32 False
//  u32 False
extern "C" void loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl();

// 
// External References:
// 


// False False
//  void (*)(void*) False
// 	 * False
// 		  False
// 	 void False
// 	 void* False
// 		 void False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
extern "C" void sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl();
// False False
extern "C" void getThreadPointer__6JASDvdFv();
// False False
//  void* False
// 	 void False
//  u32 False
//  u16 False
extern "C" void readResource__10JKRArchiveFPvUlUs();
// False False
//  u32 False
extern "C" void findIdxResource__10JKRArchiveCFUl();
// False False
//  u16 False
extern "C" void findIdResource__10JKRArchiveCFUs();
// False False
extern "C" void OSSendMessage();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _restgpr_28();

// 
// Declarations:
// 

/* 80290BD0-80290C04 0034+00 s=0 e=2 z=0  None .text      getResSize__15JASResArcLoaderFPC10JKRArchiveUs               */
//	80290BDC: 802D6770 (findIdResource__10JKRArchiveCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JKRArchive const* False
// 	 JKRArchive const False
// 		 JKRArchive False
//  u16 False
asm void JASResArcLoader::getResSize(JKRArchive const* param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/getResSize__15JASResArcLoaderFPC10JKRArchiveUs.s"
}
#pragma pop


/* 80290C04-80290C7C 0078+00 s=0 e=1 z=0  None .text      getResMaxSize__15JASResArcLoaderFPC10JKRArchive              */
//	80290C14: 803621D8 (_savegpr_28)
//	80290C38: 802D6684 (findIdxResource__10JKRArchiveCFUl)
//	80290C68: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JKRArchive const* False
// 	 JKRArchive const False
// 		 JKRArchive False
asm void JASResArcLoader::getResMaxSize(JKRArchive const* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/getResMaxSize__15JASResArcLoaderFPC10JKRArchive.s"
}
#pragma pop


/* 80290C7C-80290D18 009C+00 s=1 e=0 z=0  None .text      loadResourceCallback__15JASResArcLoaderFPv                   */
//	80290CA4: 802D5F40 (readResource__10JKRArchiveFPvUlUs)
//	80290CE0: 8033E9F4 (OSSendMessage)
//	80290CFC: 8033E9F4 (OSSendMessage)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void JASResArcLoader::loadResourceCallback(void* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/loadResourceCallback__15JASResArcLoaderFPv.s"
}
#pragma pop


/* 80290D18-80290D74 005C+00 s=0 e=1 z=0  None .text      loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl */
//	80290D4C: 8028FEFC (getThreadPointer__6JASDvdFv)
//	80290D50: 80290C7C (loadResourceCallback__15JASResArcLoaderFPv)
//	80290D54: 80290C7C (loadResourceCallback__15JASResArcLoaderFPv)
//	80290D60: 8028FB5C (sendCmdMsg__13JASTaskThreadFPFPv_vPCvUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JKRArchive* False
// 	 JKRArchive False
//  u16 False
//  u8* False
// 	 u8 False
//  u32 False
//  void (*)(u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u32 False
// 	 u32 False
//  u32 False
asm void JASResArcLoader::loadResourceAsync(JKRArchive* param_0, u16 param_1, u8* param_2, u32 param_3, void (*)(u32, u32), u32 param_5) {
	nofralloc
#include "asm/JSystem/JAudio2/JASResArcLoader/loadResourceAsync__15JASResArcLoaderFP10JKRArchiveUsPUcUlPFUlUl_vUl.s"
}
#pragma pop


