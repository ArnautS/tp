// 
// Generated By: dol2asm
// Translation Unit: JASTrack
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JAudio2/JASTrack.h"

// 
// Types:
// 

namespace JGadget {
	struct TLinkListNode {
	};

	struct TNodeLinkList {
		struct iterator {
		};

		/* 802DCA1C */ // False False
~TNodeLinkList();
		/* 802DCBA8 */ // False False
//  JGadget::TNodeLinkList::iterator False
//  JGadget::TLinkListNode* False
// 	 JGadget::TLinkListNode False
void Insert(JGadget::TNodeLinkList::iterator, JGadget::TLinkListNode*);
		/* 802DCBF8 */ // False False
//  JGadget::TLinkListNode* False
// 	 JGadget::TLinkListNode False
void Remove(JGadget::TLinkListNode*);
	};

};

struct JASTrackPort {
	/* 8029354C */ // False False
void init();
	/* 8029357C */ // False False
//  u32 False
void readImport(u32);
	/* 802935A0 */ // False False
//  u32 False
void readExport(u32);
	/* 802935C4 */ // False False
//  u32 False
//  u16 False
void writeImport(u32, u16);
	/* 802935E8 */ // False False
//  u32 False
//  u16 False
void writeExport(u32, u16);
};

struct JASOscillator {
	struct Point {
	};

	struct Data {
	};

};

struct JASChannel {
	/* 8029AAD0 */ // False False
//  u16 False
void release(u16);
	/* 8029AB64 */ // False False
//  u32 False
//  JASOscillator::Data const* False
// 	 JASOscillator::Data const False
// 		 JASOscillator::Data False
void setOscInit(u32, JASOscillator::Data const*);
	/* 8029AB98 */ // False False
//  u32 False
//  u16 False
void setMixConfig(u32, u16);
	/* 8029ACD4 */ // False False
//  s32 False
//  u32 False
void setKeySweepTarget(s32, u32);
	/* 8029BBFC */ // False False
void free();
};

struct JASSoundParams {
};

struct JASDsp {
	struct TChannel {
		/* 8029E00C */ // False False
//  u16 False
void setFilterMode(u16);
		/* 8029E044 */ // False False
//  s16* False
// 	 s16 False
void setIIRFilterParam(s16*);
		/* 8029E06C */ // False False
//  s16* False
// 	 s16 False
void setFIR8FilterParam(s16*);
		/* 8029E094 */ // False False
//  s16 False
void setDistFilter(s16);
	};

};

struct JASTrack {
	struct TChannelMgr {
		/* 802930DC */ // True False
//  JASTrack* False
// 	 JASTrack False
TChannelMgr(JASTrack*);
		/* 80293148 */ // True False
void init();
		/* 802931B0 */ // True False
void releaseAll();
		/* 80293220 */ // True False
//  u32 False
//  u16 False
void noteOff(u32, u16);
		/* 802932A0 */ // True False
//  bool False
void setPauseFlag(bool);
	};

	struct TList {
		/* 80292F6C */ // True False
//  void* False
// 	 void False
void cbSeqMain(void*);
		/* 80292F90 */ // True False
//  JASTrack* False
// 	 JASTrack False
void append(JASTrack*);
		/* 8029301C */ // True False
void seqMain();
		/* 8029345C */ // True False
~TList();
	};

	struct MoveParam_ {
		/* 802932C8 */ // True False
MoveParam_();
	};

	/* 80291228 */ // False False
JASTrack();
	/* 8029131C */ // False False
~JASTrack();
	/* 80291444 */ // False False
//  u32 False
void setChannelMgrCount(u32);
	/* 802915D4 */ // False False
void init();
	/* 802918FC */ // True False
void initTimed();
	/* 8029194C */ // True False
//  JASTrack const& False
// 	 JASTrack const False
// 		 JASTrack False
void inherit(JASTrack const&);
	/* 802919F4 */ // False False
//  u32 False
//  JASSoundParams* False
// 	 JASSoundParams False
void assignExtBuffer(u32, JASSoundParams*);
	/* 80291A08 */ // False False
//  void* False
// 	 void False
//  u32 False
void setSeqData(void*, u32);
	/* 80291A28 */ // False False
void startSeq();
	/* 80291A78 */ // False False
void stopSeq();
	/* 80291ABC */ // False False
void start();
	/* 80291AC8 */ // True False
void close();
	/* 80291B8C */ // False False
//  u32 False
//  JASTrack* False
// 	 JASTrack False
void connectChild(u32, JASTrack*);
	/* 80291BB8 */ // False False
//  u32 False
void closeChild(u32);
	/* 80291C30 */ // False False
//  u32 False
void openChild(u32);
	/* 80291DAC */ // False False
//  int False
//  int False
void connectBus(int, int);
	/* 80291DBC */ // False False
//  u8 False
void setLatestKey(u8);
	/* 80291DF8 */ // True False
//  JASTrack::TChannelMgr* False
// 	 JASTrack::TChannelMgr False
//  u32 False
//  u32 False
//  u32 False
void channelStart(JASTrack::TChannelMgr*, u32, u32, u32);
	/* 80291F38 */ // False False
//  u32 False
//  u32 False
//  u32 False
void noteOn(u32, u32, u32);
	/* 80292008 */ // False False
//  u32 False
//  u32 False
//  f32 False
//  u32 False
void gateOn(u32, u32, f32, u32);
	/* 80292198 */ // False False
//  u32 False
//  u16 False
void noteOff(u32, u16);
	/* 80292220 */ // False False
//  u32 False
void checkNoteStop(u32) const;
	/* 8029226C */ // True False
//  JASChannel* False
// 	 JASChannel False
void overwriteOsc(JASChannel*);
	/* 802922D8 */ // True False
void updateTimedParam();
	/* 80292348 */ // True False
//  f32 False
void updateTrack(f32);
	/* 802924E4 */ // True False
void updateTempo();
	/* 80292580 */ // True False
//  bool False
//  f32 False
void updateSeq(bool, f32);
	/* 80292644 */ // True False
//  f32 False
void seqTimeToDspTime(f32);
	/* 802926E0 */ // False False
//  u32 False
//  f32 False
//  u32 False
void setParam(u32, f32, u32);
	/* 80292708 */ // True False
//  u16 False
void noteOffAll(u16);
	/* 802927A0 */ // False False
//  bool False
void mute(bool);
	/* 802927D8 */ // False False
//  u32 False
//  f32 False
void setOscScale(u32, f32);
	/* 802927E8 */ // False False
//  u32 False
//  JASOscillator::Point const* False
// 	 JASOscillator::Point const False
// 		 JASOscillator::Point False
void setOscTable(u32, JASOscillator::Point const*);
	/* 80292808 */ // False False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
//  u16 False
void setOscAdsr(s16, s16, s16, s16, u16);
	/* 8029285C */ // False False
//  s16 const* False
// 	 s16 const False
// 		 s16 False
void setFIR(s16 const*);
	/* 8029289C */ // False False
//  s16 const* False
// 	 s16 const False
// 		 s16 False
void setIIR(s16 const*);
	/* 802928D0 */ // False False
//  u32 False
void readPortSelf(u32);
	/* 802928F4 */ // False False
//  u32 False
//  u16 False
void writePortSelf(u32, u16);
	/* 80292918 */ // False False
//  u32 False
//  u16 False
void writePort(u32, u16);
	/* 8029297C */ // False False
//  u32 False
void readPort(u32);
	/* 802929A0 */ // True False
//  bool False
void setChannelPauseFlag(bool);
	/* 80292A3C */ // False False
//  bool False
void pause(bool);
	/* 80292AA4 */ // True False
void getTransposeTotal() const;
	/* 80292AF4 */ // True False
void isMute() const;
	/* 80292B58 */ // False False
//  u16 False
void setTempo(u16);
	/* 80292B8C */ // False False
//  f32 False
void setTempoRate(f32);
	/* 80292BC0 */ // False False
//  u16 False
void setTimebase(u16);
	/* 80292BF4 */ // True False
//  JASChannel* False
// 	 JASChannel False
//  JASDsp::TChannel* False
// 	 JASDsp::TChannel False
void updateChannel(JASChannel*, JASDsp::TChannel*);
	/* 80292CA4 */ // True False
//  u32 False
//  JASChannel* False
// 	 JASChannel False
//  JASDsp::TChannel* False
// 	 JASDsp::TChannel False
//  void* False
// 	 void False
void channelUpdateCallback(u32, JASChannel*, JASDsp::TChannel*, void*);
	/* 80292D88 */ // True False
void getRootTrack();
	/* 80292DA0 */ // True False
void tickProc();
	/* 80292E9C */ // True False
void seqMain();
};

struct JASSeqCtrl {
	struct IntrType {
	};

	/* 802938BC */ // False False
JASSeqCtrl();
	/* 80293924 */ // False False
void init();
	/* 80293980 */ // False False
//  void* False
// 	 void False
//  u32 False
void start(void*, u32);
	/* 802939C4 */ // False False
//  JASTrack* False
// 	 JASTrack False
void tickProc(JASTrack*);
	/* 80293ABC */ // False False
//  JASSeqCtrl::IntrType False
void interrupt(JASSeqCtrl::IntrType);
};

struct JASRegisterParam {
	/* 80293644 */ // False False
JASRegisterParam();
	/* 80293664 */ // False False
void init();
};

template <typename A0>
struct JASMemPool_MultiThreaded { };
/* JASMemPool_MultiThreaded<JASTrack> */
struct JASMemPool_MultiThreaded__template0 {
	/* 802932E0 */ // False True
~JASMemPool_MultiThreaded__template0();
};

/* JASMemPool_MultiThreaded<JASTrack::TChannelMgr> */
struct JASMemPool_MultiThreaded__template1 {
	/* 80293334 */ // False True
~JASMemPool_MultiThreaded__template1();
};

struct JASGenericMemPool {
	/* 80290848 */ // False False
JASGenericMemPool();
	/* 80290860 */ // False False
~JASGenericMemPool();
	/* 80290948 */ // False False
//  u32 False
void alloc(u32);
	/* 80290994 */ // False False
//  void* False
// 	 void False
//  u32 False
void free(void*, u32);
};

struct JASDriver {
	/* 8029C9E8 */ // False False
void getDacRate();
	/* 8029C9F0 */ // False False
void getSubFrames();
	/* 8029E274 */ // False False
//  s32 (*)(void*) False
// 	 * False
// 		  False
// 	 s32 False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void registerSubFrameCallback(s32 (*)(void*), void*);
};

struct JASDefaultBankTable {
	/* 802934B4 */ // True False
~JASDefaultBankTable();
};

template <typename A0>
struct JASBankTable { };
/* JASBankTable<256> */
struct JASBankTable__template0 {
	/* 80293528 */ // False True
//  u32 False
void getBank(u32) const;
};

struct JASBank {
	/* 80297930 */ // False False
//  JASBank const* False
// 	 JASBank const False
// 		 JASBank False
//  int False
//  u8 False
//  u8 False
//  u16 False
//  void (*)(u32, JASChannel*, JASDsp::TChannel*, void*) False
// 	 * False
// 		  False
// 	 void False
// 	 u32 False
// 	 JASChannel* False
// 		 JASChannel False
// 	 JASDsp::TChannel* False
// 		 JASDsp::TChannel False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
void noteOn(JASBank const*, int, u8, u8, u16, void (*)(u32, JASChannel*, JASDsp::TChannel*, void*), void*);
};

// 
// Forward References:
// 


// False False
extern "C" void __ct__8JASTrackFv();
// False False
extern "C" void __dt__8JASTrackFv();
// False False
//  u32 False
extern "C" void setChannelMgrCount__8JASTrackFUl();
// False False
extern "C" void init__8JASTrackFv();
// True False
extern "C" void initTimed__8JASTrackFv();
// True False
//  JASTrack const& False
// 	 JASTrack const False
// 		 JASTrack False
extern "C" void inherit__8JASTrackFRC8JASTrack();
// False False
//  u32 False
//  JASSoundParams* False
// 	 JASSoundParams False
extern "C" void assignExtBuffer__8JASTrackFUlP14JASSoundParams();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void setSeqData__8JASTrackFPvUl();
// False False
extern "C" void startSeq__8JASTrackFv();
// False False
extern "C" void stopSeq__8JASTrackFv();
// False False
extern "C" void start__8JASTrackFv();
// True False
extern "C" void close__8JASTrackFv();
// False False
//  u32 False
//  JASTrack* False
// 	 JASTrack False
extern "C" void connectChild__8JASTrackFUlP8JASTrack();
// False False
//  u32 False
extern "C" void closeChild__8JASTrackFUl();
// False False
//  u32 False
extern "C" void openChild__8JASTrackFUl();
// False False
//  int False
//  int False
extern "C" void connectBus__8JASTrackFii();
// False False
//  u8 False
extern "C" void setLatestKey__8JASTrackFUc();
// True False
//  JASTrack::TChannelMgr* False
// 	 JASTrack::TChannelMgr False
//  u32 False
//  u32 False
//  u32 False
extern "C" void channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl();
// False False
//  u32 False
//  u32 False
//  u32 False
extern "C" void noteOn__8JASTrackFUlUlUl();
// False False
//  u32 False
//  u32 False
//  f32 False
//  u32 False
extern "C" void gateOn__8JASTrackFUlUlfUl();
// False False
//  u32 False
//  u16 False
extern "C" void noteOff__8JASTrackFUlUs();
// False False
//  u32 False
extern "C" void checkNoteStop__8JASTrackCFUl();
// True False
//  JASChannel* False
// 	 JASChannel False
extern "C" void overwriteOsc__8JASTrackFP10JASChannel();
// True False
extern "C" void updateTimedParam__8JASTrackFv();
// True False
//  f32 False
extern "C" void updateTrack__8JASTrackFf();
// True False
extern "C" void updateTempo__8JASTrackFv();
// True False
//  bool False
//  f32 False
extern "C" void updateSeq__8JASTrackFbf();
// True False
//  f32 False
extern "C" void seqTimeToDspTime__8JASTrackFf();
// False False
//  u32 False
//  f32 False
//  u32 False
extern "C" void setParam__8JASTrackFUlfUl();
// True False
//  u16 False
extern "C" void noteOffAll__8JASTrackFUs();
// False False
//  bool False
extern "C" void mute__8JASTrackFb();
// False False
//  u32 False
//  f32 False
extern "C" void setOscScale__8JASTrackFUlf();
// False False
//  u32 False
//  JASOscillator::Point const* False
// 	 JASOscillator::Point const False
// 		 JASOscillator::Point False
extern "C" void setOscTable__8JASTrackFUlPCQ213JASOscillator5Point();
// False False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
//  u16 False
extern "C" void setOscAdsr__8JASTrackFssssUs();
// False False
//  s16 const* False
// 	 s16 const False
// 		 s16 False
extern "C" void setFIR__8JASTrackFPCs();
// False False
//  s16 const* False
// 	 s16 const False
// 		 s16 False
extern "C" void setIIR__8JASTrackFPCs();
// False False
//  u32 False
extern "C" void readPortSelf__8JASTrackFUl();
// False False
//  u32 False
//  u16 False
extern "C" void writePortSelf__8JASTrackFUlUs();
// False False
//  u32 False
//  u16 False
extern "C" void writePort__8JASTrackFUlUs();
// False False
//  u32 False
extern "C" void readPort__8JASTrackFUl();
// True False
//  bool False
extern "C" void setChannelPauseFlag__8JASTrackFb();
// False False
//  bool False
extern "C" void pause__8JASTrackFb();
// True False
extern "C" void getTransposeTotal__8JASTrackCFv();
// True False
extern "C" void isMute__8JASTrackCFv();
// False False
//  u16 False
extern "C" void setTempo__8JASTrackFUs();
// False False
//  f32 False
extern "C" void setTempoRate__8JASTrackFf();
// False False
//  u16 False
extern "C" void setTimebase__8JASTrackFUs();
// True False
//  JASChannel* False
// 	 JASChannel False
//  JASDsp::TChannel* False
// 	 JASDsp::TChannel False
extern "C" void updateChannel__8JASTrackFP10JASChannelPQ26JASDsp8TChannel();
// True False
//  u32 False
//  JASChannel* False
// 	 JASChannel False
//  JASDsp::TChannel* False
// 	 JASDsp::TChannel False
//  void* False
// 	 void False
extern "C" void channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv();
// True False
extern "C" void getRootTrack__8JASTrackFv();
// True False
extern "C" void tickProc__8JASTrackFv();
// True False
extern "C" void seqMain__8JASTrackFv();
// True False
//  void* False
// 	 void False
extern "C" void cbSeqMain__Q28JASTrack5TListFPv();
// True False
//  JASTrack* False
// 	 JASTrack False
extern "C" void append__Q28JASTrack5TListFP8JASTrack();
// True False
extern "C" void seqMain__Q28JASTrack5TListFv();
// True False
//  JASTrack* False
// 	 JASTrack False
extern "C" void __ct__Q28JASTrack11TChannelMgrFP8JASTrack();
// True False
extern "C" void init__Q28JASTrack11TChannelMgrFv();
// True False
extern "C" void releaseAll__Q28JASTrack11TChannelMgrFv();
// True False
//  u32 False
//  u16 False
extern "C" void noteOff__Q28JASTrack11TChannelMgrFUlUs();
// True False
//  bool False
extern "C" void setPauseFlag__Q28JASTrack11TChannelMgrFb();
// True False
extern "C" void __ct__Q28JASTrack10MoveParam_Fv();
// False True
extern "C" void func_802932E0();
// False True
extern "C" void func_80293334();
// False False
extern "C" void __sinit_JASTrack_cpp();
// True False
extern "C" void __dt__Q28JASTrack5TListFv();
// True False
extern "C" void __dt__19JASDefaultBankTableFv();
// False True
//  u32 False
extern "C" void func_80293528();
extern "C" extern u8 const sPitchEnvOsc__8JASTrack[24];
extern "C" extern void* __vt__19JASDefaultBankTable[3];
extern "C" extern void* data_803C5B74[3];
extern "C" extern void* __vt__11JASBankList[3 + 1 /* padding */];
extern "C" extern u8 lit_433[12];
extern "C" extern u8 data_80431AF4[16];
extern "C" extern u8 data_80431B04[16 + 4 /* padding */];

// 
// External References:
// 

// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memset();
// False False
extern "C" void __ct__17JASGenericMemPoolFv();
// False False
extern "C" void __dt__17JASGenericMemPoolFv();
// False False
//  u32 False
extern "C" void alloc__17JASGenericMemPoolFUl();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void free__17JASGenericMemPoolFPvUl();
// False False
extern "C" void init__12JASTrackPortFv();
// False False
//  u32 False
extern "C" void readImport__12JASTrackPortFUl();
// False False
//  u32 False
extern "C" void readExport__12JASTrackPortFUl();
// False False
//  u32 False
//  u16 False
extern "C" void writeImport__12JASTrackPortFUlUs();
// False False
//  u32 False
//  u16 False
extern "C" void writeExport__12JASTrackPortFUlUs();
// False False
extern "C" void __ct__16JASRegisterParamFv();
// False False
extern "C" void init__16JASRegisterParamFv();
// False False
extern "C" void __ct__10JASSeqCtrlFv();
// False False
extern "C" void init__10JASSeqCtrlFv();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void start__10JASSeqCtrlFPvUl();
// False False
//  JASTrack* False
// 	 JASTrack False
extern "C" void tickProc__10JASSeqCtrlFP8JASTrack();
// False False
//  JASSeqCtrl::IntrType False
extern "C" void interrupt__10JASSeqCtrlFQ210JASSeqCtrl8IntrType();
// False False
//  JASBank const* False
// 	 JASBank const False
// 		 JASBank False
//  int False
//  u8 False
//  u8 False
//  u16 False
//  void (*)(u32, JASChannel*, JASDsp::TChannel*, void*) False
// 	 * False
// 		  False
// 	 void False
// 	 u32 False
// 	 JASChannel* False
// 		 JASChannel False
// 	 JASDsp::TChannel* False
// 		 JASDsp::TChannel False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void noteOn__7JASBankFPC7JASBankiUcUcUsPFUlP10JASChannelPQ26JASDsp8TChannelPv_vPv();
// False False
//  u16 False
extern "C" void release__10JASChannelFUs();
// False False
//  u32 False
//  JASOscillator::Data const* False
// 	 JASOscillator::Data const False
// 		 JASOscillator::Data False
extern "C" void setOscInit__10JASChannelFUlPCQ213JASOscillator4Data();
// False False
//  u32 False
//  u16 False
extern "C" void setMixConfig__10JASChannelFUlUs();
// False False
//  s32 False
//  u32 False
extern "C" void setKeySweepTarget__10JASChannelFlUl();
// False False
extern "C" void free__10JASChannelFv();
// False False
extern "C" void getDacRate__9JASDriverFv();
// False False
extern "C" void getSubFrames__9JASDriverFv();
// False False
//  u16 False
extern "C" void setFilterMode__Q26JASDsp8TChannelFUs();
// False False
//  s16* False
// 	 s16 False
extern "C" void setIIRFilterParam__Q26JASDsp8TChannelFPs();
// False False
//  s16* False
// 	 s16 False
extern "C" void setFIR8FilterParam__Q26JASDsp8TChannelFPs();
// False False
//  s16 False
extern "C" void setDistFilter__Q26JASDsp8TChannelFs();
// False False
//  s32 (*)(void*) False
// 	 * False
// 		  False
// 	 s32 False
// 	 void* False
// 		 void False
//  void* False
// 	 void False
extern "C" void registerSubFrameCallback__9JASDriverFPFPv_lPv();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void __dt__Q27JGadget13TNodeLinkListFv();
// False False
//  JGadget::TNodeLinkList::iterator False
//  JGadget::TLinkListNode* False
// 	 JGadget::TLinkListNode False
extern "C" void Insert__Q27JGadget13TNodeLinkListFQ37JGadget13TNodeLinkList8iteratorPQ27JGadget13TLinkListNode();
// False False
//  JGadget::TLinkListNode* False
// 	 JGadget::TLinkListNode False
extern "C" void Remove__Q27JGadget13TNodeLinkListFPQ27JGadget13TLinkListNode();
// False False
extern "C" void OSDisableInterrupts();
// False False
extern "C" void OSRestoreInterrupts();
// False False
extern "C" void __register_global_object();
// False False
extern "C" void __construct_array();
// False False
extern "C" void __cvt_fp2unsigned();
// False False
extern "C" void _savegpr_20();
// False False
extern "C" void _savegpr_23();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_20();
// False False
extern "C" void _restgpr_23();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 data_80450B90[4 + 4 /* padding */];
extern "C" extern u8 struct_80451230[8];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 804555A0-804555A4 0004+00 s=6 e=0 z=0  None .sdata2    @457                                                         */
SECTION_SDATA2 static u8 lit_457[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 80291228-8029131C 00F4+00 s=1 e=3 z=0  None .text      __ct__8JASTrackFv                                            */
//	8029123C: 802938BC (__ct__10JASSeqCtrlFv)
//	80291244: 80293644 (__ct__16JASRegisterParamFv)
//	80291248: 804555A0 (lit_457)
//	8029129C: 802932C8 (__ct__Q28JASTrack10MoveParam_Fv)
//	802912A0: 802932C8 (__ct__Q28JASTrack10MoveParam_Fv)
//	802912B0: 80361D60 (__construct_array)
//	802912BC: 802930DC (__ct__Q28JASTrack11TChannelMgrFP8JASTrack)
//	80291300: 802915D4 (init__8JASTrackFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JASTrack::JASTrack() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__ct__8JASTrackFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804316A8-804316B4 000C+00 s=1 e=0 z=0  None .bss       @431                                                         */
static u8 lit_431[12];

/* 804316B4-80431AC0 040C+00 s=1 e=0 z=0  None .bss       sDefaultBankTable__8JASTrack                                 */
static u8 sDefaultBankTable__8JASTrack[1036];

/* 80431AC0-80431ACC 000C+00 s=0 e=0 z=0  None .bss       @433                                                         */
u8 lit_433[12];

/* 80431ACC-80431ADC 0010+00 s=1 e=0 z=0  None .bss       sTrackList__8JASTrack                                        */
static u8 sTrackList__8JASTrack[16];

/* 80431ADC-80431AE8 000C+00 s=3 e=0 z=0  None .bss       @470                                                         */
static u8 lit_470[12];

/* 80431AE8-80431AF4 000C+00 s=2 e=0 z=0  None .bss       @476                                                         */
static u8 lit_476[12];

/* 80431AF4-80431B04 0010+00 s=3 e=1 z=0  None .bss       memPool_$localstatic3$getMemPool___58JASPoolAllocObject_MultiThreaded<Q28JASTrack11TChannelMgr>Fv */
u8 data_80431AF4[16];

/* 80431B04-80431B18 0010+04 s=2 e=2 z=0  None .bss       memPool_$localstatic3$getMemPool___43JASPoolAllocObject_MultiThreaded<8JASTrack>Fv */
u8 data_80431B04[16 + 4 /* padding */];

/* 8029131C-80291444 0128+00 s=4 e=4 z=0  None .text      __dt__8JASTrackFv                                            */
//	8029132C: 803621D0 (_savegpr_26)
//	80291344: 80431AF4 (data_80431AF4)
//	80291348: 80431AF4 (data_80431AF4)
//	80291354: 80451230 (struct_80451230)
//	80291360: 80431AF4 (data_80431AF4)
//	80291364: 80431AF4 (data_80431AF4)
//	80291368: 80290848 (__ct__17JASGenericMemPoolFv)
//	8029136C: 80431AF4 (data_80431AF4)
//	80291370: 80431AF4 (data_80431AF4)
//	80291374: 80293334 (func_80293334)
//	80291378: 80293334 (func_80293334)
//	8029137C: 80431ADC (lit_470)
//	80291380: 80431ADC (lit_470)
//	80291384: 80361C24 (__register_global_object)
//	8029138C: 80451230 (struct_80451230)
//	80291390: 8033D6F4 (OSDisableInterrupts)
//	802913A4: 80290994 (free__17JASGenericMemPoolFPvUl)
//	802913AC: 8033D71C (OSRestoreInterrupts)
//	802913C8: 80451231 (struct_80451230)
//	802913D4: 80431B04 (data_80431B04)
//	802913D8: 80431B04 (data_80431B04)
//	802913DC: 80290848 (__ct__17JASGenericMemPoolFv)
//	802913E0: 80431B04 (data_80431B04)
//	802913E4: 80431B04 (data_80431B04)
//	802913E8: 802932E0 (func_802932E0)
//	802913EC: 802932E0 (func_802932E0)
//	802913F0: 80431AE8 (lit_476)
//	802913F4: 80431AE8 (lit_476)
//	802913F8: 80361C24 (__register_global_object)
//	80291400: 80451231 (struct_80451230)
//	80291404: 8033D6F4 (OSDisableInterrupts)
//	8029140C: 80431B04 (data_80431B04)
//	80291410: 80431B04 (data_80431B04)
//	8029141C: 80290994 (free__17JASGenericMemPoolFPvUl)
//	80291424: 8033D71C (OSRestoreInterrupts)
//	80291430: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JASTrack::~JASTrack() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__dt__8JASTrackFv.s"
}
#pragma pop


/* 80291444-802915D4 0190+00 s=1 e=3 z=0  None .text      setChannelMgrCount__8JASTrackFUl                             */
//	80291454: 803621D0 (_savegpr_26)
//	80291484: 80451230 (struct_80451230)
//	80291490: 80431AF4 (data_80431AF4)
//	80291494: 80431AF4 (data_80431AF4)
//	80291498: 80290848 (__ct__17JASGenericMemPoolFv)
//	8029149C: 80431AF4 (data_80431AF4)
//	802914A0: 80431AF4 (data_80431AF4)
//	802914A4: 80293334 (func_80293334)
//	802914A8: 80293334 (func_80293334)
//	802914AC: 80431ADC (lit_470)
//	802914B0: 80431ADC (lit_470)
//	802914B4: 80361C24 (__register_global_object)
//	802914BC: 80451230 (struct_80451230)
//	802914C0: 8033D6F4 (OSDisableInterrupts)
//	802914C8: 80431AF4 (data_80431AF4)
//	802914CC: 80431AF4 (data_80431AF4)
//	802914D4: 80290948 (alloc__17JASGenericMemPoolFUl)
//	802914E0: 8033D71C (OSRestoreInterrupts)
//	802914F4: 802930DC (__ct__Q28JASTrack11TChannelMgrFP8JASTrack)
//	80291544: 80451230 (struct_80451230)
//	80291550: 80431AF4 (data_80431AF4)
//	80291554: 80431AF4 (data_80431AF4)
//	80291558: 80290848 (__ct__17JASGenericMemPoolFv)
//	8029155C: 80431AF4 (data_80431AF4)
//	80291560: 80431AF4 (data_80431AF4)
//	80291564: 80293334 (func_80293334)
//	80291568: 80293334 (func_80293334)
//	8029156C: 80431ADC (lit_470)
//	80291570: 80431ADC (lit_470)
//	80291574: 80361C24 (__register_global_object)
//	8029157C: 80451230 (struct_80451230)
//	80291580: 8033D6F4 (OSDisableInterrupts)
//	80291588: 80431AF4 (data_80431AF4)
//	8029158C: 80431AF4 (data_80431AF4)
//	80291598: 80290994 (free__17JASGenericMemPoolFPvUl)
//	802915A0: 8033D71C (OSRestoreInterrupts)
//	802915C0: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JASTrack::setChannelMgrCount(u32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setChannelMgrCount__8JASTrackFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039AFD0-8039AFE8 0018+00 s=1 e=0 z=0  None .rodata    sAdsTable__8JASTrack                                         */
SECTION_RODATA static u8 const sAdsTable__8JASTrack[24] = {
	0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
};

/* 804555A4-804555A8 0004+00 s=9 e=0 z=0  None .sdata2    @679                                                         */
SECTION_SDATA2 static f32 lit_679 = 1.0f;

/* 802915D4-802918FC 0328+00 s=2 e=1 z=0  None .text      init__8JASTrackFv                                            */
//	802915E4: 803621D4 (_savegpr_27)
//	802915EC: 8039AFD0 (sAdsTable__8JASTrack)
//	802915F0: 8039AFD0 (sAdsTable__8JASTrack)
//	802915F4: 80293924 (init__10JASSeqCtrlFv)
//	802915FC: 8029354C (init__12JASTrackPortFv)
//	80291604: 802918FC (initTimed__8JASTrackFv)
//	8029160C: 80293664 (init__16JASRegisterParamFv)
//	802916D8: 80293148 (init__Q28JASTrack11TChannelMgrFv)
//	802916FC: 80451230 (struct_80451230)
//	80291708: 80431AF4 (data_80431AF4)
//	8029170C: 80431AF4 (data_80431AF4)
//	80291710: 80290848 (__ct__17JASGenericMemPoolFv)
//	80291714: 80431AF4 (data_80431AF4)
//	80291718: 80431AF4 (data_80431AF4)
//	8029171C: 80293334 (func_80293334)
//	80291720: 80293334 (func_80293334)
//	80291724: 80431ADC (lit_470)
//	80291728: 80431ADC (lit_470)
//	8029172C: 80361C24 (__register_global_object)
//	80291734: 80451230 (struct_80451230)
//	80291738: 8033D6F4 (OSDisableInterrupts)
//	80291740: 80431AF4 (data_80431AF4)
//	80291744: 80431AF4 (data_80431AF4)
//	80291750: 80290994 (free__17JASGenericMemPoolFPvUl)
//	80291758: 8033D71C (OSRestoreInterrupts)
//	80291774: 804316B4 (sDefaultBankTable__8JASTrack)
//	80291778: 804316B4 (sDefaultBankTable__8JASTrack)
//	80291780: 804555A4 (lit_679)
//	8029178C: 804555A0 (lit_457)
//	802917D0: 802924E4 (updateTempo__8JASTrackFv)
//	802918E8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JASTrack::init() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/init__8JASTrackFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555A8-804555AC 0004+00 s=4 e=0 z=0  None .sdata2    @690                                                         */
SECTION_SDATA2 static f32 lit_690 = 0.5f;

/* 802918FC-8029194C 0050+00 s=1 e=0 z=0  None .text      initTimed__8JASTrackFv                                       */
//	802918FC: 804555A4 (lit_679)
//	80291904: 804555A0 (lit_457)
//	8029190C: 804555A8 (lit_690)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::initTimed() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/initTimed__8JASTrackFv.s"
}
#pragma pop


/* 8029194C-802919F4 00A8+00 s=1 e=0 z=0  None .text      inherit__8JASTrackFRC8JASTrack                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JASTrack const& False
// 	 JASTrack const False
// 		 JASTrack False
asm void JASTrack::inherit(JASTrack const& param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/inherit__8JASTrackFRC8JASTrack.s"
}
#pragma pop


/* 802919F4-80291A08 0014+00 s=0 e=5 z=0  None .text      assignExtBuffer__8JASTrackFUlP14JASSoundParams               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  JASSoundParams* False
// 	 JASSoundParams False
asm void JASTrack::assignExtBuffer(u32 param_0, JASSoundParams* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/assignExtBuffer__8JASTrackFUlP14JASSoundParams.s"
}
#pragma pop


/* 80291A08-80291A28 0020+00 s=0 e=3 z=0  None .text      setSeqData__8JASTrackFPvUl                                   */
//	80291A14: 80293980 (start__10JASSeqCtrlFPvUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
//  u32 False
asm void JASTrack::setSeqData(void* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setSeqData__8JASTrackFPvUl.s"
}
#pragma pop


/* 80291A28-80291A78 0050+00 s=0 e=2 z=0  None .text      startSeq__8JASTrackFv                                        */
//	80291A3C: 8033D6F4 (OSDisableInterrupts)
//	80291A44: 80431ACC (sTrackList__8JASTrack)
//	80291A48: 80431ACC (sTrackList__8JASTrack)
//	80291A50: 80292F90 (append__Q28JASTrack5TListFP8JASTrack)
//	80291A60: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JASTrack::startSeq() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/startSeq__8JASTrackFv.s"
}
#pragma pop


/* 80291A78-80291ABC 0044+00 s=0 e=2 z=0  None .text      stopSeq__8JASTrackFv                                         */
//	80291A8C: 8033D6F4 (OSDisableInterrupts)
//	80291AA4: 8033D71C (OSRestoreInterrupts)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JASTrack::stopSeq() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/stopSeq__8JASTrackFv.s"
}
#pragma pop


/* 80291ABC-80291AC8 000C+00 s=0 e=1 z=0  None .text      start__8JASTrackFv                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JASTrack::start() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/start__8JASTrackFv.s"
}
#pragma pop


/* 80291AC8-80291B8C 00C4+00 s=4 e=0 z=0  None .text      close__8JASTrackFv                                           */
//	80291AD8: 803621D0 (_savegpr_26)
//	80291B18: 8029131C (__dt__8JASTrackFv)
//	80291B4C: 802931B0 (releaseAll__Q28JASTrack11TChannelMgrFv)
//	80291B78: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::close() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/close__8JASTrackFv.s"
}
#pragma pop


/* 80291B8C-80291BB8 002C+00 s=1 e=1 z=0  None .text      connectChild__8JASTrackFUlP8JASTrack                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  JASTrack* False
// 	 JASTrack False
asm void JASTrack::connectChild(u32 param_0, JASTrack* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/connectChild__8JASTrackFUlP8JASTrack.s"
}
#pragma pop


/* 80291BB8-80291C30 0078+00 s=0 e=1 z=0  None .text      closeChild__8JASTrackFUl                                     */
//	80291BE0: 80292D88 (getRootTrack__8JASTrackFv)
//	80291BE8: 804555A4 (lit_679)
//	80291BEC: 80292580 (updateSeq__8JASTrackFbf)
//	80291BF4: 80291AC8 (close__8JASTrackFv)
//	80291C0C: 8029131C (__dt__8JASTrackFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JASTrack::closeChild(u32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/closeChild__8JASTrackFUl.s"
}
#pragma pop


/* 80291C30-80291DAC 017C+00 s=0 e=2 z=0  None .text      openChild__8JASTrackFUl                                      */
//	80291C40: 803621D4 (_savegpr_27)
//	80291C80: 80292D88 (getRootTrack__8JASTrackFv)
//	80291C88: 804555A4 (lit_679)
//	80291C8C: 80292580 (updateSeq__8JASTrackFbf)
//	80291C94: 80291AC8 (close__8JASTrackFv)
//	80291CA4: 802915D4 (init__8JASTrackFv)
//	80291CC8: 80291B8C (connectChild__8JASTrackFUlP8JASTrack)
//	80291CD0: 80451231 (struct_80451230)
//	80291CDC: 80431B04 (data_80431B04)
//	80291CE0: 80431B04 (data_80431B04)
//	80291CE4: 80290848 (__ct__17JASGenericMemPoolFv)
//	80291CE8: 80431B04 (data_80431B04)
//	80291CEC: 80431B04 (data_80431B04)
//	80291CF0: 802932E0 (func_802932E0)
//	80291CF4: 802932E0 (func_802932E0)
//	80291CF8: 80431AE8 (lit_476)
//	80291CFC: 80431AE8 (lit_476)
//	80291D00: 80361C24 (__register_global_object)
//	80291D08: 80451231 (struct_80451230)
//	80291D0C: 8033D6F4 (OSDisableInterrupts)
//	80291D14: 80431B04 (data_80431B04)
//	80291D18: 80431B04 (data_80431B04)
//	80291D20: 80290948 (alloc__17JASGenericMemPoolFUl)
//	80291D2C: 8033D71C (OSRestoreInterrupts)
//	80291D3C: 80291228 (__ct__8JASTrackFv)
//	80291D74: 80291B8C (connectChild__8JASTrackFUlP8JASTrack)
//	80291D80: 80291444 (setChannelMgrCount__8JASTrackFUl)
//	80291D8C: 8029194C (inherit__8JASTrackFRC8JASTrack)
//	80291D98: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JASTrack::openChild(u32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/openChild__8JASTrackFUl.s"
}
#pragma pop


/* 80291DAC-80291DBC 0010+00 s=0 e=1 z=0  None .text      connectBus__8JASTrackFii                                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  int False
//  int False
asm void JASTrack::connectBus(int param_0, int param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/connectBus__8JASTrackFii.s"
}
#pragma pop


/* 80291DBC-80291DF8 003C+00 s=0 e=1 z=0  None .text      setLatestKey__8JASTrackFUc                                   */
//	80291DD4: 80292AA4 (getTransposeTotal__8JASTrackCFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
asm void JASTrack::setLatestKey(u8 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setLatestKey__8JASTrackFUc.s"
}
#pragma pop


/* 80291DF8-80291F38 0140+00 s=2 e=0 z=0  None .text      channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl      */
//	80291E08: 803621D4 (_savegpr_27)
//	80291E68: 80292CA4 (channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv)
//	80291E6C: 80292CA4 (channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv)
//	80291E74: 80297930 (noteOn__7JASBankFPC7JASBankiUcUcUsPFUlP10JASChannelPQ26JASDsp8TChannelPv_vPv)
//	80291EEC: 8029AB98 (setMixConfig__10JASChannelFUlUs)
//	80291F08: 8029226C (overwriteOsc__8JASTrackFP10JASChannel)
//	80291F24: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JASTrack::TChannelMgr* False
// 	 JASTrack::TChannelMgr False
//  u32 False
//  u32 False
//  u32 False
asm void JASTrack::channelStart(JASTrack::TChannelMgr* param_0, u32 param_1, u32 param_2, u32 param_3) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl.s"
}
#pragma pop


/* 80291F38-80292008 00D0+00 s=0 e=1 z=0  None .text      noteOn__8JASTrackFUlUlUl                                     */
//	80291F48: 803621C4 (_savegpr_23)
//	80291F5C: 80292AF4 (isMute__8JASTrackCFv)
//	80291F78: 80292AA4 (getTransposeTotal__8JASTrackCFv)
//	80291FA8: 80293220 (noteOff__Q28JASTrack11TChannelMgrFUlUs)
//	80291FC0: 80291DF8 (channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl)
//	80291FF4: 80362210 (_restgpr_23)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  u32 False
//  u32 False
asm void JASTrack::noteOn(u32 param_0, u32 param_1, u32 param_2) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOn__8JASTrackFUlUlUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555AC-804555B0 0004+00 s=1 e=0 z=0  None .sdata2    @952                                                         */
SECTION_SDATA2 static f32 lit_952 = 100.0f;

/* 804555B0-804555B8 0008+00 s=4 e=0 z=0  None .sdata2    @954                                                         */
SECTION_SDATA2 static f64 lit_954 = 4503599627370496.0 /* cast u32 to float */;

/* 80292008-80292198 0190+00 s=0 e=1 z=0  None .text      gateOn__8JASTrackFUlUlfUl                                    */
//	80292020: 803621B8 (_savegpr_20)
//	80292038: 80292AA4 (getTransposeTotal__8JASTrackCFv)
//	8029204C: 804555B0 (lit_954)
//	80292064: 804555AC (lit_952)
//	80292078: 80292644 (seqTimeToDspTime__8JASTrackFf)
//	802920DC: 80293220 (noteOff__Q28JASTrack11TChannelMgrFUlUs)
//	802920E4: 80292AF4 (isMute__8JASTrackCFv)
//	80292104: 80291DF8 (channelStart__8JASTrackFPQ28JASTrack11TChannelMgrUlUlUl)
//	8029214C: 8029ACD4 (setKeySweepTarget__10JASChannelFlUl)
//	80292184: 80362204 (_restgpr_20)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  u32 False
//  f32 False
//  u32 False
asm void JASTrack::gateOn(u32 param_0, u32 param_1, f32 param_2, u32 param_3) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/gateOn__8JASTrackFUlUlfUl.s"
}
#pragma pop


/* 80292198-80292220 0088+00 s=1 e=1 z=0  None .text      noteOff__8JASTrackFUlUs                                      */
//	802921A8: 803621D0 (_savegpr_26)
//	802921E0: 80293220 (noteOff__Q28JASTrack11TChannelMgrFUlUs)
//	8029220C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  u16 False
asm void JASTrack::noteOff(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOff__8JASTrackFUlUs.s"
}
#pragma pop


/* 80292220-8029226C 004C+00 s=0 e=1 z=0  None .text      checkNoteStop__8JASTrackCFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JASTrack::checkNoteStop(u32 param_0) const {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/checkNoteStop__8JASTrackCFUl.s"
}
#pragma pop


/* 8029226C-802922D8 006C+00 s=1 e=0 z=0  None .text      overwriteOsc__8JASTrackFP10JASChannel                        */
//	8029227C: 803621D8 (_savegpr_28)
//	802922AC: 8029AB64 (setOscInit__10JASChannelFUlPCQ213JASOscillator4Data)
//	802922C4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JASChannel* False
// 	 JASChannel False
asm void JASTrack::overwriteOsc(JASChannel* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/overwriteOsc__8JASTrackFP10JASChannel.s"
}
#pragma pop


/* 802922D8-80292348 0070+00 s=1 e=0 z=0  None .text      updateTimedParam__8JASTrackFv                                */
//	802922E0: 804555B0 (lit_954)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::updateTimedParam() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateTimedParam__8JASTrackFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555B8-804555BC 0004+00 s=1 e=0 z=0  None .sdata2    @1032                                                        */
SECTION_SDATA2 static f32 lit_1032 = 1.0f / 3.0f;

/* 80292348-802924E4 019C+00 s=1 e=0 z=0  None .text      updateTrack__8JASTrackFf                                     */
//	80292368: 802924E4 (updateTempo__8JASTrackFv)
//	80292390: 804555A4 (lit_679)
//	80292394: 804555B8 (lit_1032)
//	802923A0: 804555B0 (lit_954)
//	802923C4: 804555A8 (lit_690)
//	80292470: 804555A8 (lit_690)
//	802924A8: 804555A8 (lit_690)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void JASTrack::updateTrack(f32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateTrack__8JASTrackFf.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555BC-804555C0 0004+00 s=1 e=0 z=0  None .sdata2    @1042                                                        */
SECTION_SDATA2 static f32 lit_1042 = 4.0f / 3.0f;

/* 804555C0-804555C8 0008+00 s=1 e=0 z=0  None .sdata2    @1044                                                        */
SECTION_SDATA2 static f64 lit_1044 = 4503601774854144.0 /* cast s32 to float */;

/* 802924E4-80292580 009C+00 s=5 e=0 z=0  None .text      updateTempo__8JASTrackFv                                     */
//	80292504: 8029C9E8 (getDacRate__9JASDriverFv)
//	80292508: 804555BC (lit_1042)
//	80292518: 804555C0 (lit_1044)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::updateTempo() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateTempo__8JASTrackFv.s"
}
#pragma pop


/* 80292580-80292644 00C4+00 s=4 e=0 z=0  None .text      updateSeq__8JASTrackFbf                                      */
//	80292598: 803621D8 (_savegpr_28)
//	802925D8: 80292348 (updateTrack__8JASTrackFf)
//	80292630: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool False
//  f32 False
asm void JASTrack::updateSeq(bool param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateSeq__8JASTrackFbf.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555C8-804555CC 0004+00 s=1 e=0 z=0  None .sdata2    @1069                                                        */
SECTION_SDATA2 static f32 lit_1069 = 120.0f;

/* 804555CC-804555D0 0004+00 s=1 e=0 z=0  None .sdata2    @1070                                                        */
SECTION_SDATA2 static f32 lit_1070 = 10.0f;

/* 80292644-802926E0 009C+00 s=1 e=0 z=0  None .text      seqTimeToDspTime__8JASTrackFf                                */
//	80292670: 804555C8 (lit_1069)
//	80292678: 804555B0 (lit_954)
//	80292698: 8029C9F0 (getSubFrames__9JASDriverFv)
//	8029269C: 804555B0 (lit_954)
//	802926B4: 804555CC (lit_1070)
//	802926C4: 803620AC (__cvt_fp2unsigned)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void JASTrack::seqTimeToDspTime(f32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/seqTimeToDspTime__8JASTrackFf.s"
}
#pragma pop


/* 802926E0-80292708 0028+00 s=0 e=4 z=0  None .text      setParam__8JASTrackFUlfUl                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  f32 False
//  u32 False
asm void JASTrack::setParam(u32 param_0, f32 param_1, u32 param_2) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setParam__8JASTrackFUlfUl.s"
}
#pragma pop


/* 80292708-802927A0 0098+00 s=1 e=0 z=0  None .text      noteOffAll__8JASTrackFUs                                     */
//	80292718: 803621D8 (_savegpr_28)
//	80292738: 80292198 (noteOff__8JASTrackFUlUs)
//	8029278C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void JASTrack::noteOffAll(u16 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOffAll__8JASTrackFUs.s"
}
#pragma pop


/* 802927A0-802927D8 0038+00 s=0 e=2 z=0  None .text      mute__8JASTrackFb                                            */
//	802927C4: 80292708 (noteOffAll__8JASTrackFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  bool False
asm void JASTrack::mute(bool param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/mute__8JASTrackFb.s"
}
#pragma pop


/* 802927D8-802927E8 0010+00 s=0 e=1 z=0  None .text      setOscScale__8JASTrackFUlf                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  f32 False
asm void JASTrack::setOscScale(u32 param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setOscScale__8JASTrackFUlf.s"
}
#pragma pop


/* 802927E8-80292808 0020+00 s=0 e=1 z=0  None .text      setOscTable__8JASTrackFUlPCQ213JASOscillator5Point           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  JASOscillator::Point const* False
// 	 JASOscillator::Point const False
// 		 JASOscillator::Point False
asm void JASTrack::setOscTable(u32 param_0, JASOscillator::Point const* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setOscTable__8JASTrackFUlPCQ213JASOscillator5Point.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039AFE8-8039B000 0018+00 s=1 e=0 z=0  None .rodata    sEnvOsc__8JASTrack                                           */
SECTION_RODATA static u8 const sEnvOsc__8JASTrack[24] = {
	0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80292808-8029285C 0054+00 s=0 e=1 z=0  None .text      setOscAdsr__8JASTrackFssssUs                                 */
//	80292808: 8039AFE8 (sEnvOsc__8JASTrack)
//	8029280C: 8039AFE8 (sEnvOsc__8JASTrack)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s16 False
//  s16 False
//  s16 False
//  s16 False
//  u16 False
asm void JASTrack::setOscAdsr(s16 param_0, s16 param_1, s16 param_2, s16 param_3, u16 param_4) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setOscAdsr__8JASTrackFssssUs.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555D0-804555D4 0004+00 s=2 e=0 z=0  None .sdata2    FILTER_MODE_IIR__6JASDsp                                     */
SECTION_SDATA2 static u32 FILTER_MODE_IIR__6JASDsp = 0x00000020;

/* 8029285C-8029289C 0040+00 s=0 e=2 z=0  None .text      setFIR__8JASTrackFPCs                                        */
//	80292880: 804555D0 (FILTER_MODE_IIR__6JASDsp)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s16 const* False
// 	 s16 const False
// 		 s16 False
asm void JASTrack::setFIR(s16 const* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setFIR__8JASTrackFPCs.s"
}
#pragma pop


/* 8029289C-802928D0 0034+00 s=0 e=4 z=0  None .text      setIIR__8JASTrackFPCs                                        */
//	802928C0: 804555D0 (FILTER_MODE_IIR__6JASDsp)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s16 const* False
// 	 s16 const False
// 		 s16 False
asm void JASTrack::setIIR(s16 const* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setIIR__8JASTrackFPCs.s"
}
#pragma pop


/* 802928D0-802928F4 0024+00 s=0 e=1 z=0  None .text      readPortSelf__8JASTrackFUl                                   */
//	802928E0: 8029357C (readImport__12JASTrackPortFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JASTrack::readPortSelf(u32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/readPortSelf__8JASTrackFUl.s"
}
#pragma pop


/* 802928F4-80292918 0024+00 s=0 e=1 z=0  None .text      writePortSelf__8JASTrackFUlUs                                */
//	80292904: 802935E8 (writeExport__12JASTrackPortFUlUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  u16 False
asm void JASTrack::writePortSelf(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/writePortSelf__8JASTrackFUlUs.s"
}
#pragma pop


/* 80292918-8029297C 0064+00 s=0 e=4 z=0  None .text      writePort__8JASTrackFUlUs                                    */
//	80292938: 802935C4 (writeImport__12JASTrackPortFUlUs)
//	80292960: 80293ABC (interrupt__10JASSeqCtrlFQ210JASSeqCtrl8IntrType)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  u16 False
asm void JASTrack::writePort(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/writePort__8JASTrackFUlUs.s"
}
#pragma pop


/* 8029297C-802929A0 0024+00 s=0 e=3 z=0  None .text      readPort__8JASTrackFUl                                       */
//	8029298C: 802935A0 (readExport__12JASTrackPortFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
asm void JASTrack::readPort(u32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/readPort__8JASTrackFUl.s"
}
#pragma pop


/* 802929A0-80292A3C 009C+00 s=1 e=0 z=0  None .text      setChannelPauseFlag__8JASTrackFb                             */
//	802929B0: 803621D8 (_savegpr_28)
//	802929DC: 802932A0 (setPauseFlag__Q28JASTrack11TChannelMgrFb)
//	80292A28: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool False
asm void JASTrack::setChannelPauseFlag(bool param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setChannelPauseFlag__8JASTrackFb.s"
}
#pragma pop


/* 80292A3C-80292AA4 0068+00 s=0 e=2 z=0  None .text      pause__8JASTrackFb                                           */
//	80292A74: 802929A0 (setChannelPauseFlag__8JASTrackFb)
//	80292A88: 80293ABC (interrupt__10JASSeqCtrlFQ210JASSeqCtrl8IntrType)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  bool False
asm void JASTrack::pause(bool param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/pause__8JASTrackFb.s"
}
#pragma pop


/* 80292AA4-80292AF4 0050+00 s=3 e=0 z=0  None .text      getTransposeTotal__8JASTrackCFv                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::getTransposeTotal() const {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/getTransposeTotal__8JASTrackCFv.s"
}
#pragma pop


/* 80292AF4-80292B58 0064+00 s=2 e=0 z=0  None .text      isMute__8JASTrackCFv                                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::isMute() const {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/isMute__8JASTrackCFv.s"
}
#pragma pop


/* 80292B58-80292B8C 0034+00 s=0 e=1 z=0  None .text      setTempo__8JASTrackFUs                                       */
//	80292B78: 802924E4 (updateTempo__8JASTrackFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u16 False
asm void JASTrack::setTempo(u16 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setTempo__8JASTrackFUs.s"
}
#pragma pop


/* 80292B8C-80292BC0 0034+00 s=0 e=2 z=0  None .text      setTempoRate__8JASTrackFf                                    */
//	80292BAC: 802924E4 (updateTempo__8JASTrackFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
asm void JASTrack::setTempoRate(f32 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setTempoRate__8JASTrackFf.s"
}
#pragma pop


/* 80292BC0-80292BF4 0034+00 s=0 e=1 z=0  None .text      setTimebase__8JASTrackFUs                                    */
//	80292BE0: 802924E4 (updateTempo__8JASTrackFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u16 False
asm void JASTrack::setTimebase(u16 param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setTimebase__8JASTrackFUs.s"
}
#pragma pop


/* ############################################################################################## */
/* 804555D4-804555D8 0004+00 s=1 e=0 z=0  None .sdata2    @1246                                                        */
SECTION_SDATA2 static f32 lit_1246 = 32767.0f;

/* 80292BF4-80292CA4 00B0+00 s=1 e=0 z=0  None .text      updateChannel__8JASTrackFP10JASChannelPQ26JASDsp8TChannel    */
//	80292C44: 8029E044 (setIIRFilterParam__Q26JASDsp8TChannelFPs)
//	80292C5C: 8029E06C (setFIR8FilterParam__Q26JASDsp8TChannelFPs)
//	80292C68: 8029E00C (setFilterMode__Q26JASDsp8TChannelFUs)
//	80292C70: 804555D4 (lit_1246)
//	80292C88: 8029E094 (setDistFilter__Q26JASDsp8TChannelFs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JASChannel* False
// 	 JASChannel False
//  JASDsp::TChannel* False
// 	 JASDsp::TChannel False
asm void JASTrack::updateChannel(JASChannel* param_0, JASDsp::TChannel* param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/updateChannel__8JASTrackFP10JASChannelPQ26JASDsp8TChannel.s"
}
#pragma pop


/* 80292CA4-80292D88 00E4+00 s=1 e=0 z=0  None .text      channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv */
//	80292D1C: 80292BF4 (updateChannel__8JASTrackFP10JASChannelPQ26JASDsp8TChannel)
//	80292D2C: 8029AAD0 (release__10JASChannelFUs)
//	80292D34: 8029BBFC (free__10JASChannelFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JASChannel* False
// 	 JASChannel False
//  JASDsp::TChannel* False
// 	 JASDsp::TChannel False
//  void* False
// 	 void False
asm void JASTrack::channelUpdateCallback(u32 param_0, JASChannel* param_1, JASDsp::TChannel* param_2, void* param_3) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/channelUpdateCallback__8JASTrackFUlP10JASChannelPQ26JASDsp8TChannelPv.s"
}
#pragma pop


/* 80292D88-80292DA0 0018+00 s=3 e=0 z=0  None .text      getRootTrack__8JASTrackFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::getRootTrack() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/getRootTrack__8JASTrackFv.s"
}
#pragma pop


/* 80292DA0-80292E9C 00FC+00 s=1 e=0 z=0  None .text      tickProc__8JASTrackFv                                        */
//	80292DB0: 803621D4 (_savegpr_27)
//	80292DD0: 802939C4 (tickProc__10JASSeqCtrlFP8JASTrack)
//	80292DDC: 802922D8 (updateTimedParam__8JASTrackFv)
//	80292E38: 80292D88 (getRootTrack__8JASTrackFv)
//	80292E40: 804555A4 (lit_679)
//	80292E44: 80292580 (updateSeq__8JASTrackFbf)
//	80292E4C: 80291AC8 (close__8JASTrackFv)
//	80292E64: 8029131C (__dt__8JASTrackFv)
//	80292E88: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::tickProc() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/tickProc__8JASTrackFv.s"
}
#pragma pop


/* 80292E9C-80292F6C 00D0+00 s=1 e=0 z=0  None .text      seqMain__8JASTrackFv                                         */
//	80292EC8: 804555A4 (lit_679)
//	80292ECC: 80292580 (updateSeq__8JASTrackFbf)
//	80292ED4: 80291AC8 (close__8JASTrackFv)
//	80292EF0: 80292DA0 (tickProc__8JASTrackFv)
//	80292F04: 804555A4 (lit_679)
//	80292F08: 80292580 (updateSeq__8JASTrackFbf)
//	80292F10: 80291AC8 (close__8JASTrackFv)
//	80292F1C: 804555A4 (lit_679)
//	80292F48: 80292580 (updateSeq__8JASTrackFbf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::seqMain() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/seqMain__8JASTrackFv.s"
}
#pragma pop


/* 80292F6C-80292F90 0024+00 s=1 e=0 z=0  None .text      cbSeqMain__Q28JASTrack5TListFPv                              */
//	80292F78: 8029301C (seqMain__Q28JASTrack5TListFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void* False
// 	 void False
asm void JASTrack::TList::cbSeqMain(void* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/cbSeqMain__Q28JASTrack5TListFPv.s"
}
#pragma pop


/* 80292F90-8029301C 008C+00 s=1 e=0 z=0  None .text      append__Q28JASTrack5TListFP8JASTrack                         */
//	80292FB8: 80292F6C (cbSeqMain__Q28JASTrack5TListFPv)
//	80292FBC: 80292F6C (cbSeqMain__Q28JASTrack5TListFPv)
//	80292FC4: 8029E274 (registerSubFrameCallback__9JASDriverFPFPv_lPv)
//	80293000: 802DCBA8 (Insert__Q27JGadget13TNodeLinkListFQ37JGadget13TNodeLinkList8iteratorPQ27JGadget13TLinkListNode)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JASTrack* False
// 	 JASTrack False
asm void JASTrack::TList::append(JASTrack* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/append__Q28JASTrack5TListFP8JASTrack.s"
}
#pragma pop


/* 8029301C-802930DC 00C0+00 s=1 e=0 z=0  None .text      seqMain__Q28JASTrack5TListFv                                 */
//	8029302C: 803621DC (_savegpr_29)
//	80293070: 80292E9C (seqMain__8JASTrackFv)
//	80293084: 802DCBF8 (Remove__Q27JGadget13TNodeLinkListFPQ27JGadget13TLinkListNode)
//	802930A0: 8029131C (__dt__8JASTrackFv)
//	802930C8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::TList::seqMain() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/seqMain__Q28JASTrack5TListFv.s"
}
#pragma pop


/* 802930DC-80293148 006C+00 s=2 e=0 z=0  None .text      __ct__Q28JASTrack11TChannelMgrFP8JASTrack                    */
//	802930DC: 804555A4 (lit_679)
//	802930E8: 804555A0 (lit_457)
//	802930F0: 804555A8 (lit_690)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JASTrack* False
// 	 JASTrack False
asm JASTrack::TChannelMgr::TChannelMgr(JASTrack* param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__ct__Q28JASTrack11TChannelMgrFP8JASTrack.s"
}
#pragma pop


/* 80293148-802931B0 0068+00 s=1 e=0 z=0  None .text      init__Q28JASTrack11TChannelMgrFv                             */
//	80293150: 804555A4 (lit_679)
//	8029315C: 804555A0 (lit_457)
//	80293164: 804555A8 (lit_690)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::TChannelMgr::init() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/init__Q28JASTrack11TChannelMgrFv.s"
}
#pragma pop


/* 802931B0-80293220 0070+00 s=1 e=0 z=0  None .text      releaseAll__Q28JASTrack11TChannelMgrFv                       */
//	802931C0: 803621D4 (_savegpr_27)
//	802931E8: 8029AAD0 (release__10JASChannelFUs)
//	802931F0: 8029BBFC (free__10JASChannelFv)
//	8029320C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JASTrack::TChannelMgr::releaseAll() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/releaseAll__Q28JASTrack11TChannelMgrFv.s"
}
#pragma pop


/* 80293220-802932A0 0080+00 s=3 e=0 z=0  None .text      noteOff__Q28JASTrack11TChannelMgrFUlUs                       */
//	80293230: 803621DC (_savegpr_29)
//	80293260: 8029AAD0 (release__10JASChannelFUs)
//	80293270: 8029AAD0 (release__10JASChannelFUs)
//	80293278: 8029BBFC (free__10JASChannelFv)
//	8029328C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
asm void JASTrack::TChannelMgr::noteOff(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/noteOff__Q28JASTrack11TChannelMgrFUlUs.s"
}
#pragma pop


/* 802932A0-802932C8 0028+00 s=1 e=0 z=0  None .text      setPauseFlag__Q28JASTrack11TChannelMgrFb                     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  bool False
asm void JASTrack::TChannelMgr::setPauseFlag(bool param_0) {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/setPauseFlag__Q28JASTrack11TChannelMgrFb.s"
}
#pragma pop


/* 802932C8-802932E0 0018+00 s=1 e=0 z=0  None .text      __ct__Q28JASTrack10MoveParam_Fv                              */
//	802932C8: 804555A0 (lit_457)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm JASTrack::MoveParam_::MoveParam_() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__ct__Q28JASTrack10MoveParam_Fv.s"
}
#pragma pop


/* 802932E0-80293334 0054+00 s=2 e=2 z=0  None .text      __dt__35JASMemPool_MultiThreaded<8JASTrack>Fv                */
//	80293304: 80290860 (__dt__17JASGenericMemPoolFv)
//	80293314: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
asm JASMemPool_MultiThreaded__template0::~JASMemPool_MultiThreaded__template0() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/func_802932E0.s"
}
#pragma pop


/* 80293334-80293388 0054+00 s=3 e=1 z=0  None .text      __dt__50JASMemPool_MultiThreaded<Q28JASTrack11TChannelMgr>Fv */
//	80293358: 80290860 (__dt__17JASGenericMemPoolFv)
//	80293368: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
asm JASMemPool_MultiThreaded__template1::~JASMemPool_MultiThreaded__template1() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/func_80293334.s"
}
#pragma pop


/* ############################################################################################## */
/* 803C5B68-803C5B74 000C+00 s=2 e=0 z=0  None .data      __vt__19JASDefaultBankTable                                  */
SECTION_DATA void* __vt__19JASDefaultBankTable[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)func_80293528,
};

/* 803C5B74-803C5B80 000C+00 s=1 e=0 z=0  None .data      __vt__17JASBankTable<256>                                    */
SECTION_DATA void* data_803C5B74[3] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)func_80293528,
};

/* 803C5B80-803C5B90 000C+04 s=1 e=1 z=0  None .data      __vt__11JASBankList                                          */
SECTION_DATA void* __vt__11JASBankList[3 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)NULL,
	/* padding */
	NULL,
};

/* 80293388-8029345C 00D4+00 s=0 e=0 z=0  None .text      __sinit_JASTrack_cpp                                         */
//	8029339C: 804316A8 (lit_431)
//	802933A0: 804316A8 (lit_431)
//	802933A8: 803C5B80 (__vt__11JASBankList)
//	802933AC: 803C5B80 (__vt__11JASBankList)
//	802933B4: 803C5B74 (data_803C5B74)
//	802933B8: 803C5B74 (data_803C5B74)
//	802933D8: 80003458 (memset)
//	802933EC: 80450B90 (data_80450B90)
//	802933F0: 803C5B68 (__vt__19JASDefaultBankTable)
//	802933F4: 803C5B68 (__vt__19JASDefaultBankTable)
//	80293400: 802934B4 (__dt__19JASDefaultBankTableFv)
//	80293404: 802934B4 (__dt__19JASDefaultBankTableFv)
//	8029340C: 80361C24 (__register_global_object)
//	80293434: 8029345C (__dt__Q28JASTrack5TListFv)
//	80293438: 8029345C (__dt__Q28JASTrack5TListFv)
//	80293440: 80361C24 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_JASTrack_cpp() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__sinit_JASTrack_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_80293388 = (void*)__sinit_JASTrack_cpp;
#pragma pop


/* 8029345C-802934B4 0058+00 s=1 e=0 z=0  None .text      __dt__Q28JASTrack5TListFv                                    */
//	80293484: 802DCA1C (__dt__Q27JGadget13TNodeLinkListFv)
//	80293494: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm JASTrack::TList::~TList() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__dt__Q28JASTrack5TListFv.s"
}
#pragma pop


/* 802934B4-80293528 0074+00 s=1 e=0 z=0  None .text      __dt__19JASDefaultBankTableFv                                */
//	802934CC: 803C5B68 (__vt__19JASDefaultBankTable)
//	802934D0: 803C5B68 (__vt__19JASDefaultBankTable)
//	802934EC: 80450B90 (data_80450B90)
//	802934FC: 80450B90 (data_80450B90)
//	8029350C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm JASDefaultBankTable::~JASDefaultBankTable() {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/__dt__19JASDefaultBankTableFv.s"
}
#pragma pop


/* 80293528-8029354C 0024+00 s=2 e=0 z=0  None .text      getBank__17JASBankTable<256>CFUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u32 False
asm void JASBankTable__template0::getBank(u32 param_0) const {
	nofralloc
#include "asm/JSystem/JAudio2/JASTrack/func_80293528.s"
}
#pragma pop


/* ############################################################################################## */
/* 8039B000-8039B018 0018+00 s=0 e=0 z=0  None .rodata    sPitchEnvOsc__8JASTrack                                      */
SECTION_RODATA u8 const sPitchEnvOsc__8JASTrack[24] = {
	0x00, 0x00, 0x00, 0x01, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

