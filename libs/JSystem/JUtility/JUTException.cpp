// 
// Generated By: dol2asm
// Translation Unit: JUTException
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JUtility/JUTException.h"

// 
// Types:
// 

struct __va_list_struct {
};

struct _GXRenderModeObj {
};

struct _GXGamma {
};

struct OSContext {
};

struct JUTGamePad {
	struct EPadPort {
	};

	/* 802E06DC */ // False False
//  JUTGamePad::EPadPort False
JUTGamePad(JUTGamePad::EPadPort);
	/* 802E07B0 */ // False False
~JUTGamePad();
	/* 802E08E4 */ // False False
void read();
	/* 802E0C6C */ // False False
//  s64 False
void checkResetCallback(s64);
};

struct JUTExternalFB {
	/* 802E40CC */ // True False
//  _GXRenderModeObj* False
// 	 _GXRenderModeObj False
//  _GXGamma False
//  void* False
// 	 void False
//  u32 False
JUTExternalFB(_GXRenderModeObj*, _GXGamma, void*, u32);
};

struct JUTDirectPrint {
	/* 802E456C */ // False False
//  void* False
// 	 void False
//  u16 False
//  u16 False
void changeFrameBuffer(void*, u16, u16);
};

struct JUTException {
	struct EInfoPage {
	};

	/* 802E1D5C */ // True False
//  JUTDirectPrint* False
// 	 JUTDirectPrint False
JUTException(JUTDirectPrint*);
	/* 802E1E40 */ // False False
//  JUTDirectPrint* False
// 	 JUTDirectPrint False
void create(JUTDirectPrint*);
	/* 802E1EA8 */ // True False
void run();
	/* 802E1FCC */ // True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
void errorHandler(u16, OSContext*, u32, u32);
	/* 802E20C0 */ // True False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  __va_list_struct* False
// 	 __va_list_struct False
void panic_f_va(char const*, int, char const*, __va_list_struct*);
	/* 802E21FC */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  ... False
void panic_f(char const*, int, char const*, ...);
	/* 802E227C */ // True False
//  u32 False
void setFPException(u32);
	/* 802E22C4 */ // True False
//  int False
//  f32 False
void showFloatSub(int, f32);
	/* 802E2454 */ // True False
//  OSContext* False
// 	 OSContext False
void showFloat(OSContext*);
	/* 802E2578 */ // True False
//  u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
void searchPartialModule(u32, u32*, u32*, u32*, u32*);
	/* 802E26B0 */ // True False
//  OSContext* False
// 	 OSContext False
void showStack(OSContext*);
	/* 802E27B0 */ // True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
void showMainInfo(u16, OSContext*, u32, u32);
	/* 802E2A84 */ // True False
//  OSContext* False
// 	 OSContext False
void showGPR(OSContext*);
	/* 802E2B44 */ // True False
//  u32 False
//  bool False
void showMapInfo_subroutine(u32, bool);
	/* 802E2CA0 */ // True False
//  OSContext* False
// 	 OSContext False
void showGPRMap(OSContext*);
	/* 802E2DAC */ // True False
//  OSContext* False
// 	 OSContext False
void showSRR0Map(OSContext*);
	/* 802E2E70 */ // True False
//  JUTException::EInfoPage False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
void printDebugInfo(JUTException::EInfoPage, u16, OSContext*, u32, u32);
	/* 802E2F18 */ // False False
void isEnablePad() const;
	/* 802E2F54 */ // False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
void readPad(u32*, u32*);
	/* 802E34C0 */ // True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
void printContext(u16, OSContext*, u32, u32);
	/* 802E3980 */ // False False
//  s32 False
void waitTime(s32);
	/* 802E3A08 */ // True False
void createFB();
	/* 802E3AEC */ // False False
//  void (*)(u16, OSContext*, u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u16 False
// 	 OSContext* False
// 		 OSContext False
// 	 u32 False
// 	 u32 False
void setPreUserCallback(void (*)(u16, OSContext*, u32, u32));
	/* 802E3AFC */ // False False
//  void (*)(u16, OSContext*, u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u16 False
// 	 OSContext* False
// 		 OSContext False
// 	 u32 False
// 	 u32 False
void setPostUserCallback(void (*)(u16, OSContext*, u32, u32));
	/* 802E3B0C */ // False False
//  char const* False
// 	 char const False
// 		 char False
void appendMapFile(char const*);
	/* 802E3BA0 */ // True False
//  char* False
// 	 char False
//  u32 False
//  s32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  char* False
// 	 char False
//  u32 False
//  bool False
//  bool False
void queryMapAddress(char*, u32, s32, u32*, u32*, char*, u32, bool, bool);
	/* 802E3C90 */ // True False
//  char* False
// 	 char False
//  u32 False
//  s32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  char* False
// 	 char False
//  u32 False
//  bool False
//  bool False
void queryMapAddress_single(char*, u32, s32, u32*, u32*, char*, u32, bool, bool);
	/* 802E3FEC */ // False False
//  void* False
// 	 void False
//  u32 False
void createConsole(void*, u32);
	/* 802E40EC */ // True False
~JUTException();
};

struct JUTDirectFile {
	/* 802E87F8 */ // False False
JUTDirectFile();
	/* 802E881C */ // False False
~JUTDirectFile();
	/* 802E8860 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void fopen(char const*);
	/* 802E88FC */ // False False
void fclose();
	/* 802E8958 */ // False False
//  void* False
// 	 void False
//  int False
void fgets(void*, int);
};

struct JUTConsole {
	/* 802E73E4 */ // False False
//  unsigned int False
//  void* False
// 	 void False
//  u32 False
void create(unsigned int, void*, u32);
	/* 802E75DC */ // False False
//  u32 False
//  unsigned int False
void getLineFromObjectSize(u32, unsigned int);
	/* 802E7BB8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
//  ... False
void print_f(char const*, ...);
	/* 802E7C38 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void print(char const*);
	/* 802E80A8 */ // False False
//  int False
void scroll(int);
	/* 802E8184 */ // False False
void getUsedLine() const;
	/* 802E81A8 */ // False False
void getLineOffset() const;
};

struct JUTConsoleManager {
	/* 802E8450 */ // False False
//  bool False
void drawDirect(bool) const;
	/* 802E84C4 */ // False False
//  JUTConsole* False
// 	 JUTConsole False
void setDirectConsole(JUTConsole*);
};

struct JSUPtrLink {
	/* 802DBDFC */ // False False
//  void* False
// 	 void False
JSUPtrLink(void*);
};

struct JSUPtrList {
	/* 802DBE74 */ // False False
//  bool False
JSUPtrList(bool);
	/* 802DBEAC */ // False False
~JSUPtrList();
	/* 802DBF4C */ // False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
void append(JSUPtrLink*);
};

template <typename A0>
struct JSUList { };
/* JSUList<JUTException::JUTExMapFile> */
struct JSUList__template13 {
	/* 802E4194 */ // False True
~JSUList__template13();
};

struct JKRThread {
	/* 802D1568 */ // False False
//  u32 False
//  int False
//  int False
JKRThread(u32, int, int);
	/* 802D1758 */ // False False
~JKRThread();
};

struct JKRHeap {
};

// 
// Forward References:
// 

// True False
//  u8* False
// 	 u8 False
//  u8* False
// 	 u8 False
//  int False
static void search_name_part(u8*, u8*, int);

// True False
//  JUTDirectPrint* False
// 	 JUTDirectPrint False
extern "C" void __ct__12JUTExceptionFP14JUTDirectPrint();
// False False
//  JUTDirectPrint* False
// 	 JUTDirectPrint False
extern "C" void create__12JUTExceptionFP14JUTDirectPrint();
// True False
extern "C" void run__12JUTExceptionFv();
// True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
extern "C" void errorHandler__12JUTExceptionFUsP9OSContextUlUl();
// True False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  __va_list_struct* False
// 	 __va_list_struct False
extern "C" void panic_f_va__12JUTExceptionFPCciPCcP16__va_list_struct();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  ... False
extern "C" void panic_f__12JUTExceptionFPCciPCce();
// True False
//  u32 False
extern "C" void setFPException__12JUTExceptionFUl();
// True False
//  int False
//  f32 False
extern "C" void showFloatSub__12JUTExceptionFif();
// True False
//  OSContext* False
// 	 OSContext False
extern "C" void showFloat__12JUTExceptionFP9OSContext();
// True False
//  u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
extern "C" void searchPartialModule__12JUTExceptionFUlPUlPUlPUlPUl();
// True False
//  u8* False
// 	 u8 False
//  u8* False
// 	 u8 False
//  int False
extern "C" static void search_name_part__FPUcPUci();
// True False
//  OSContext* False
// 	 OSContext False
extern "C" void showStack__12JUTExceptionFP9OSContext();
// True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
extern "C" void showMainInfo__12JUTExceptionFUsP9OSContextUlUl();
// True False
//  OSContext* False
// 	 OSContext False
extern "C" void showGPR__12JUTExceptionFP9OSContext();
// True False
//  u32 False
//  bool False
extern "C" void showMapInfo_subroutine__12JUTExceptionFUlb();
// True False
//  OSContext* False
// 	 OSContext False
extern "C" void showGPRMap__12JUTExceptionFP9OSContext();
// True False
//  OSContext* False
// 	 OSContext False
extern "C" void showSRR0Map__12JUTExceptionFP9OSContext();
// True False
//  JUTException::EInfoPage False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
extern "C" void printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl();
// False False
extern "C" void isEnablePad__12JUTExceptionCFv();
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
extern "C" void readPad__12JUTExceptionFPUlPUl();
// True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
extern "C" void printContext__12JUTExceptionFUsP9OSContextUlUl();
// False False
//  s32 False
extern "C" void waitTime__12JUTExceptionFl();
// True False
extern "C" void createFB__12JUTExceptionFv();
// False False
//  void (*)(u16, OSContext*, u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u16 False
// 	 OSContext* False
// 		 OSContext False
// 	 u32 False
// 	 u32 False
extern "C" void setPreUserCallback__12JUTExceptionFPFUsP9OSContextUlUl_v();
// False False
//  void (*)(u16, OSContext*, u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u16 False
// 	 OSContext* False
// 		 OSContext False
// 	 u32 False
// 	 u32 False
extern "C" void setPostUserCallback__12JUTExceptionFPFUsP9OSContextUlUl_v();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void appendMapFile__12JUTExceptionFPCc();
// True False
//  char* False
// 	 char False
//  u32 False
//  s32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  char* False
// 	 char False
//  u32 False
//  bool False
//  bool False
extern "C" void queryMapAddress__12JUTExceptionFPcUllPUlPUlPcUlbb();
// True False
//  char* False
// 	 char False
//  u32 False
//  s32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  char* False
// 	 char False
//  u32 False
//  bool False
//  bool False
extern "C" void queryMapAddress_single__12JUTExceptionFPcUllPUlPUlPcUlbb();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void createConsole__12JUTExceptionFPvUl();
// True False
//  _GXRenderModeObj* False
// 	 _GXRenderModeObj False
//  _GXGamma False
//  void* False
// 	 void False
//  u32 False
extern "C" void __ct__13JUTExternalFBFP16_GXRenderModeObj8_GXGammaPvUl();
// True False
extern "C" void __dt__12JUTExceptionFv();
// False False
extern "C" void __sinit_JUTException_cpp();
// False True
extern "C" void func_802E4194();
extern "C" extern char const* const JUTException__stringBase0;
extern "C" extern void* __vt__12JUTException[4 + 1 /* padding */];
extern "C" extern u8 data_804508F8[8];
extern "C" extern u8 sErrorManager__12JUTException[4];
extern "C" extern u8 sConsole__12JUTException[4];

// 
// External References:
// 

// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void* False
// 	 void False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
void* operator new(u32, JKRHeap*, int);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
SECTION_INIT void memcpy();
// False False
extern "C" void OSReport();
// False False
extern "C" void OSPanic();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void* False
// 	 void False
//  u32 False
//  JKRHeap* False
// 	 JKRHeap False
//  int False
extern "C" void* __nw__FUlP7JKRHeapi();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  u32 False
//  int False
//  int False
extern "C" void __ct__9JKRThreadFUlii();
// False False
extern "C" void __dt__9JKRThreadFv();
// False False
//  void* False
// 	 void False
extern "C" void __ct__10JSUPtrLinkFPv();
// False False
//  bool False
extern "C" void __ct__10JSUPtrListFb();
// False False
extern "C" void __dt__10JSUPtrListFv();
// False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
extern "C" void append__10JSUPtrListFP10JSUPtrLink();
// False False
//  JUTGamePad::EPadPort False
extern "C" void __ct__10JUTGamePadFQ210JUTGamePad8EPadPort();
// False False
extern "C" void __dt__10JUTGamePadFv();
// False False
extern "C" void read__10JUTGamePadFv();
// False False
//  s64 False
extern "C" void checkResetCallback__10JUTGamePadFx();
// False False
//  void* False
// 	 void False
//  u16 False
//  u16 False
extern "C" void changeFrameBuffer__14JUTDirectPrintFPvUsUs();
// False False
//  unsigned int False
//  void* False
// 	 void False
//  u32 False
extern "C" void create__10JUTConsoleFUiPvUl();
// False False
//  u32 False
//  unsigned int False
extern "C" void getLineFromObjectSize__10JUTConsoleFUlUi();
// False False
//  char const* False
// 	 char const False
// 		 char False
//  ... False
extern "C" void print_f__10JUTConsoleFPCce();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void print__10JUTConsoleFPCc();
// False False
//  int False
extern "C" void scroll__10JUTConsoleFi();
// False False
extern "C" void getUsedLine__10JUTConsoleCFv();
// False False
extern "C" void getLineOffset__10JUTConsoleCFv();
// False False
//  bool False
extern "C" void drawDirect__17JUTConsoleManagerCFb();
// False False
//  JUTConsole* False
// 	 JUTConsole False
extern "C" void setDirectConsole__17JUTConsoleManagerFP10JUTConsole();
// False False
extern "C" void __ct__13JUTDirectFileFv();
// False False
extern "C" void __dt__13JUTDirectFileFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void fopen__13JUTDirectFileFPCc();
// False False
extern "C" void fclose__13JUTDirectFileFv();
// False False
//  void* False
// 	 void False
//  int False
extern "C" void fgets__13JUTDirectFileFPvi();
// False False
extern "C" void PPCMfmsr();
// False False
extern "C" void PPCMtmsr();
// False False
extern "C" void OSGetArenaHi();
// False False
extern "C" void OSGetCurrentContext();
// False False
extern "C" void OSGetStackPointer();
// False False
extern "C" void OSFillFPUContext();
// False False
extern "C" void OSSetErrorHandler();
// False False
extern "C" void OSDisableInterrupts();
// False False
extern "C" void OSEnableInterrupts();
// False False
extern "C" void OSRestoreInterrupts();
// False False
extern "C" void OSInitMessageQueue();
// False False
extern "C" void OSSendMessage();
// False False
extern "C" void OSReceiveMessage();
// False False
extern "C" void OSProtectRange();
// False False
extern "C" void OSGetCurrentThread();
// False False
extern "C" void OSEnableScheduler();
// False False
extern "C" void OSYieldThread();
// False False
extern "C" void OSResumeThread();
// False False
extern "C" void OSSuspendThread();
// False False
extern "C" void OSGetTime();
// False False
extern "C" void VISetPreRetraceCallback();
// False False
extern "C" void VISetPostRetraceCallback();
// False False
extern "C" void VIConfigure();
// False False
extern "C" void VIFlush();
// False False
extern "C" void VISetNextFrameBuffer();
// False False
extern "C" void VIGetCurrentFrameBuffer();
// False False
extern "C" void VISetBlack();
// False False
extern "C" void VIGetRetraceCount();
// False False
extern "C" void __register_global_object();
// False False
extern "C" void _savegpr_16();
// False False
extern "C" void _savegpr_22();
// False False
extern "C" void _savegpr_24();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _restgpr_16();
// False False
extern "C" void _restgpr_22();
// False False
extern "C" void _restgpr_24();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void __div2i();
// False False
extern "C" void vsnprintf();
// False False
extern "C" void strcmp();
// False False
extern "C" void strcat();
// False False
extern "C" void strcpy();
// False False
extern "C" void strtol();
extern "C" extern u8 GXNtsc480Int[60];
extern "C" extern u32 __OSFpscrEnableBits;
extern "C" extern u8 sSystemHeap__7JKRHeap[4];
extern "C" extern u8 sManager__17JUTConsoleManager[4];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 8039D490-8039D9A0 050E+02 s=14 e=0 z=0  None .rodata    @stringBase0                                                 */
#pragma push
#pragma force_active on
#pragma section ".dead"
SECTION_DEAD char const* const stringBase_8039D490 = "SYSTEM RESET";
SECTION_DEAD char const* const stringBase_8039D49D = "MACHINE CHECK";
SECTION_DEAD char const* const stringBase_8039D4AB = "DSI";
SECTION_DEAD char const* const stringBase_8039D4AF = "ISI";
SECTION_DEAD char const* const stringBase_8039D4B3 = "EXTERNAL INTERRUPT";
SECTION_DEAD char const* const stringBase_8039D4C6 = "ALIGNMENT";
SECTION_DEAD char const* const stringBase_8039D4D0 = "PROGRAM";
SECTION_DEAD char const* const stringBase_8039D4D8 = "FLOATING POINT";
SECTION_DEAD char const* const stringBase_8039D4E7 = "DECREMENTER";
SECTION_DEAD char const* const stringBase_8039D4F3 = "SYSTEM CALL";
SECTION_DEAD char const* const stringBase_8039D4FF = "TRACE";
SECTION_DEAD char const* const stringBase_8039D505 = "PERFORMACE MONITOR";
SECTION_DEAD char const* const stringBase_8039D518 = "BREAK POINT";
SECTION_DEAD char const* const stringBase_8039D524 = "SYSTEM INTERRUPT";
SECTION_DEAD char const* const stringBase_8039D535 = "THERMAL INTERRUPT";
SECTION_DEAD char const* const stringBase_8039D547 = "PROTECTION";
SECTION_DEAD char const* const stringBase_8039D552 = "%s in \"%s\" on line %d\n";
SECTION_DEAD char const* const stringBase_8039D569 = "F%02d: Nan      ";
SECTION_DEAD char const* const stringBase_8039D57A = "F%02d:+Inf     ";
SECTION_DEAD char const* const stringBase_8039D58A = "F%02d:-Inf     ";
SECTION_DEAD char const* const stringBase_8039D59A = "F%02d: 0.0      ";
SECTION_DEAD char const* const stringBase_8039D5AB = "F%02d:%+.3E";
SECTION_DEAD char const* const stringBase_8039D5B7 = 
    "-------------------------------- FPR\n";
SECTION_DEAD char const* const stringBase_8039D5DD = " ";
SECTION_DEAD char const* const stringBase_8039D5DF = "\n";
SECTION_DEAD char const* const stringBase_8039D5E1 = 
    "-------------------------------- TRACE\n";
SECTION_DEAD char const* const stringBase_8039D609 = "Address:   BackChain   LR save\n";
SECTION_DEAD char const* const stringBase_8039D629 = "Suppress trace.\n";
SECTION_DEAD char const* const stringBase_8039D63A = "%08X:  %08X    %08X\n";
SECTION_DEAD char const* const stringBase_8039D64F = "CONTEXT:%08XH  (%s EXCEPTION)\n";
SECTION_DEAD char const* const stringBase_8039D66E = "CONTEXT:%08XH\n";
SECTION_DEAD char const* const stringBase_8039D67D = " FPE: Invalid operation\n";
SECTION_DEAD char const* const stringBase_8039D696 = " SNaN\n";
SECTION_DEAD char const* const stringBase_8039D69D = " Infinity - Infinity\n";
SECTION_DEAD char const* const stringBase_8039D6B3 = " Infinity / Infinity\n";
SECTION_DEAD char const* const stringBase_8039D6C9 = " 0 / 0\n";
SECTION_DEAD char const* const stringBase_8039D6D1 = " Infinity * 0\n";
SECTION_DEAD char const* const stringBase_8039D6E0 = " Invalid compare\n";
SECTION_DEAD char const* const stringBase_8039D6F2 = " Software request\n";
SECTION_DEAD char const* const stringBase_8039D705 = " Invalid square root\n";
SECTION_DEAD char const* const stringBase_8039D71B = " Invalid integer convert\n";
SECTION_DEAD char const* const stringBase_8039D735 = " FPE: Overflow\n";
SECTION_DEAD char const* const stringBase_8039D745 = " FPE: Underflow\n";
SECTION_DEAD char const* const stringBase_8039D756 = " FPE: Zero division\n";
SECTION_DEAD char const* const stringBase_8039D76B = " FPE: Inexact result\n";
SECTION_DEAD char const* const stringBase_8039D781 = "SRR0:   %08XH   SRR1:%08XH\n";
SECTION_DEAD char const* const stringBase_8039D79D = "DSISR:  %08XH   DAR: %08XH\n";
SECTION_DEAD char const* const stringBase_8039D7B9 = 
    "-------------------------------- GPR\n";
SECTION_DEAD char const* const stringBase_8039D7DF = 
    "R%02d:%08XH  R%02d:%08XH  R%02d:%08XH\n";
SECTION_DEAD char const* const stringBase_8039D806 = "R%02d:%08XH  R%02d:%08XH\n";
SECTION_DEAD char const* const stringBase_8039D820 = "";
SECTION_DEAD char const* const stringBase_8039D821 = "%s %s:%x section:%d\n";
SECTION_DEAD char const* const stringBase_8039D836 = 
    "-------------------------------- GPRMAP\n";
SECTION_DEAD char const* const stringBase_8039D85F = "R%02d: %08XH";
SECTION_DEAD char const* const stringBase_8039D86C = "  no information\n";
SECTION_DEAD char const* const stringBase_8039D87E = 
    "  no register which seem to address.\n";
SECTION_DEAD char const* const stringBase_8039D8A4 = 
    "-------------------------------- SRR0MAP\n";
SECTION_DEAD char const* const stringBase_8039D8CE = "SRR0: %08XH";
SECTION_DEAD char const* const stringBase_8039D8DA = " MSR:%08XH\t FPSCR:%08XH\n";
SECTION_DEAD char const* const stringBase_8039D8F3 = 
    "******** EXCEPTION OCCURRED! ********\nFrameMemor"
    "y:%XH\n";
SECTION_DEAD char const* const stringBase_8039D92A = 
    "******** USER HALT ********\nFrameMemory:%XH\n";
SECTION_DEAD char const* const stringBase_8039D957 = 
    "--------------------------------\n";
SECTION_DEAD char const* const stringBase_8039D979 = ".map";
SECTION_DEAD char const* const stringBase_8039D97E = "  [%08X]: .%s [%08X: %XH]\n  %s\n";
/* @stringBase0 padding */
SECTION_DEAD static char const* const pad_8039D99E = "\0";
#pragma pop

/* 803CC620-803CC640 0020+00 s=3 e=0 z=0  None .data      sMessageQueue__12JUTException                                */
SECTION_DATA static u8 sMessageQueue__12JUTException[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803CC640-803CC660 0020+00 s=1 e=0 z=0  None .data      c3bcnt                                                       */
SECTION_DATA static u8 c3bcnt[32] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803CC660-803CC6A4 0044+00 s=1 e=0 z=0  None .data      sCpuExpName__12JUTException                                  */
SECTION_DATA static void* sCpuExpName__12JUTException[17] = {
	(void*)&JUTException__stringBase0,
	(void*)(((char*)&JUTException__stringBase0)+0xD),
	(void*)(((char*)&JUTException__stringBase0)+0x1B),
	(void*)(((char*)&JUTException__stringBase0)+0x1F),
	(void*)(((char*)&JUTException__stringBase0)+0x23),
	(void*)(((char*)&JUTException__stringBase0)+0x36),
	(void*)(((char*)&JUTException__stringBase0)+0x40),
	(void*)(((char*)&JUTException__stringBase0)+0x48),
	(void*)(((char*)&JUTException__stringBase0)+0x57),
	(void*)(((char*)&JUTException__stringBase0)+0x63),
	(void*)(((char*)&JUTException__stringBase0)+0x6F),
	(void*)(((char*)&JUTException__stringBase0)+0x75),
	(void*)(((char*)&JUTException__stringBase0)+0x88),
	(void*)(((char*)&JUTException__stringBase0)+0x94),
	(void*)(((char*)&JUTException__stringBase0)+0xA5),
	(void*)(((char*)&JUTException__stringBase0)+0xB7),
	(void*)(((char*)&JUTException__stringBase0)+0x48),
};

/* 803CC6A4-803CC6B8 0010+04 s=2 e=0 z=0  None .data      __vt__12JUTException                                         */
SECTION_DATA void* __vt__12JUTException[4 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__12JUTExceptionFv,
	(void*)run__12JUTExceptionFv,
	/* padding */
	NULL,
};

/* 80451508-8045150C 0004+00 s=4 e=3 z=0  None .sbss      sErrorManager__12JUTException                                */
u8 sErrorManager__12JUTException[4];

/* 8045150C-80451510 0004+00 s=4 e=0 z=0  None .sbss      sPreUserCallback__12JUTException                             */
static u8 sPreUserCallback__12JUTException[4];

/* 80451510-80451514 0004+00 s=3 e=0 z=0  None .sbss      sPostUserCallback__12JUTException                            */
static u8 sPostUserCallback__12JUTException[4];

/* 802E1D5C-802E1E40 00E4+00 s=1 e=0 z=0  None .text      __ct__12JUTExceptionFP14JUTDirectPrint                       */
//	802E1D84: 802D1568 (__ct__9JKRThreadFUlii)
//	802E1D88: 803CC6A4 (__vt__12JUTException)
//	802E1D8C: 803CC6A4 (__vt__12JUTException)
//	802E1D9C: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DA0: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DA4: 8033C580 (OSSetErrorHandler)
//	802E1DAC: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DB0: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DB4: 8033C580 (OSSetErrorHandler)
//	802E1DBC: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DC0: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DC4: 8033C580 (OSSetErrorHandler)
//	802E1DCC: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DD0: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DD4: 8033C580 (OSSetErrorHandler)
//	802E1DDC: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DE0: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E1DE4: 8033C580 (OSSetErrorHandler)
//	802E1DEC: 802E227C (setFPException__12JUTExceptionFUl)
//	802E1DF4: 8045150C (sPreUserCallback__12JUTException)
//	802E1DF8: 80451510 (sPostUserCallback__12JUTException)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTDirectPrint* False
// 	 JUTDirectPrint False
asm JUTException::JUTException(JUTDirectPrint* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/__ct__12JUTExceptionFP14JUTDirectPrint.s"
}
#pragma pop


/* 802E1E40-802E1EA8 0068+00 s=0 e=1 z=0  None .text      create__12JUTExceptionFP14JUTDirectPrint                     */
//	802E1E54: 80451508 (sErrorManager__12JUTException)
//	802E1E64: 80451370 (sSystemHeap__7JKRHeap)
//	802E1E6C: 802CEC98 (__nw__FUlP7JKRHeapi)
//	802E1E7C: 802E1D5C (__ct__12JUTExceptionFP14JUTDirectPrint)
//	802E1E84: 80451508 (sErrorManager__12JUTException)
//	802E1E8C: 803417B4 (OSResumeThread)
//	802E1E90: 80451508 (sErrorManager__12JUTException)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JUTDirectPrint* False
// 	 JUTDirectPrint False
asm void JUTException::create(JUTDirectPrint* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/create__12JUTExceptionFP14JUTDirectPrint.s"
}
#pragma pop


/* ############################################################################################## */
/* 804508F0-804508F8 0004+04 s=1 e=0 z=0  None .sdata     sMessageBuffer__12JUTException                               */
SECTION_SDATA static u8 sMessageBuffer__12JUTException[4 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 802E1EA8-802E1FCC 0124+00 s=1 e=0 z=0  None .text      run__12JUTExceptionFv                                        */
//	802E1EB8: 803621CC (_savegpr_25)
//	802E1EC0: 80339CC0 (PPCMfmsr)
//	802E1ECC: 80339CC8 (PPCMtmsr)
//	802E1ED0: 803CC620 (sMessageQueue__12JUTException)
//	802E1ED4: 803CC620 (sMessageQueue__12JUTException)
//	802E1ED8: 804508F0 (sMessageBuffer__12JUTException)
//	802E1EE0: 8033E994 (OSInitMessageQueue)
//	802E1EE4: 803CC620 (sMessageQueue__12JUTException)
//	802E1EE8: 803CC620 (sMessageQueue__12JUTException)
//	802E1EF8: 8033EABC (OSReceiveMessage)
//	802E1F00: 8034C1E0 (VISetPreRetraceCallback)
//	802E1F08: 8034C224 (VISetPostRetraceCallback)
//	802E1F34: 8034D838 (VIGetCurrentFrameBuffer)
//	802E1F48: 80451508 (sErrorManager__12JUTException)
//	802E1F4C: 802E3A08 (createFB__12JUTExceptionFv)
//	802E1F50: 80451508 (sErrorManager__12JUTException)
//	802E1F64: 802E456C (changeFrameBuffer__14JUTDirectPrintFPvUsUs)
//	802E1F8C: 8033D6F4 (OSDisableInterrupts)
//	802E1F90: 8034D838 (VIGetCurrentFrameBuffer)
//	802E1F98: 80451508 (sErrorManager__12JUTException)
//	802E1FAC: 802E456C (changeFrameBuffer__14JUTDirectPrintFPvUsUs)
//	802E1FB0: 80451508 (sErrorManager__12JUTException)
//	802E1FC4: 802E34C0 (printContext__12JUTExceptionFUsP9OSContextUlUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JUTException::run() {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/run__12JUTExceptionFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80434578-8043458C 0014+00 s=2 e=0 z=0  None .bss       exCallbackObject                                             */
static u8 exCallbackObject[20];

/* 80451514-80451518 0004+00 s=1 e=0 z=0  None .sbss      sConsoleBuffer__12JUTException                               */
static u8 sConsoleBuffer__12JUTException[4];

/* 80451518-8045151C 0004+00 s=1 e=0 z=0  None .sbss      sConsoleBufferSize__12JUTException                           */
static u8 sConsoleBufferSize__12JUTException[4];

/* 8045151C-80451520 0004+00 s=13 e=1 z=0  None .sbss      sConsole__12JUTException                                     */
u8 sConsole__12JUTException[4];

/* 80451520-80451524 0004+00 s=2 e=0 z=0  None .sbss      msr__12JUTException                                          */
static u8 msr__12JUTException[4];

/* 80451524-80451528 0004+00 s=3 e=0 z=0  None .sbss      fpscr__12JUTException                                        */
static u8 fpscr__12JUTException[4];

/* 802E1FCC-802E20C0 00F4+00 s=2 e=0 z=0  None .text      errorHandler__12JUTExceptionFUsP9OSContextUlUl               */
//	802E1FDC: 803621D8 (_savegpr_28)
//	802E1FF0: 80339CC0 (PPCMfmsr)
//	802E1FF4: 80451520 (msr__12JUTException)
//	802E1FFC: 80451524 (fpscr__12JUTException)
//	802E2004: 8033C454 (OSFillFPUContext)
//	802E2010: 8033C580 (OSSetErrorHandler)
//	802E2030: 8033ED14 (OSProtectRange)
//	802E2044: 8033ED14 (OSProtectRange)
//	802E2058: 8033ED14 (OSProtectRange)
//	802E206C: 8033ED14 (OSProtectRange)
//	802E2070: 8045150C (sPreUserCallback__12JUTException)
//	802E2074: 80434578 (exCallbackObject)
//	802E2078: 80434578 (exCallbackObject)
//	802E2090: 803CC620 (sMessageQueue__12JUTException)
//	802E2094: 803CC620 (sMessageQueue__12JUTException)
//	802E209C: 8033E9F4 (OSSendMessage)
//	802E20A0: 80340D04 (OSEnableScheduler)
//	802E20A4: 80341250 (OSYieldThread)
//	802E20AC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
asm void JUTException::errorHandler(u16 param_0, OSContext* param_1, u32 param_2, u32 param_3) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/errorHandler__12JUTExceptionFUsP9OSContextUlUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 8043458C-80434598 000C+00 s=1 e=0 z=0  None .bss       @2182                                                        */
static u8 lit_2182[12];

/* 80434598-804345A8 000C+04 s=4 e=0 z=0  None .bss       sMapFileList__12JUTException                                 */
static u8 sMapFileList__12JUTException[12 + 4 /* padding */];

/* 804345A8-80434870 02C8+00 s=1 e=0 z=0  None .bss       context$2230                                                 */
static u8 context[712];

/* 802E20C0-802E21FC 013C+00 s=1 e=0 z=0  None .text      panic_f_va__12JUTExceptionFPCciPCcP16__va_list_struct        */
//	802E20E4: 80366690 (vsnprintf)
//	802E20E8: 80451508 (sErrorManager__12JUTException)
//	802E2104: 80006E7C (OSPanic)
//	802E2108: 8033BE94 (OSGetCurrentContext)
//	802E2110: 804345A8 (context)
//	802E2114: 804345A8 (context)
//	802E211C: 80003540 (memcpy)
//	802E2120: 8033BFF8 (OSGetStackPointer)
//	802E2124: 80451508 (sErrorManager__12JUTException)
//	802E212C: 8045150C (sPreUserCallback__12JUTException)
//	802E2130: 80434578 (exCallbackObject)
//	802E2134: 80434578 (exCallbackObject)
//	802E2144: 804345A8 (context)
//	802E2148: 804345A8 (context)
//	802E215C: 8045151C (sConsole__12JUTException)
//	802E2178: 8039D490 (JUTException__stringBase0)
//	802E217C: 8039D490 (JUTException__stringBase0)
//	802E2194: 80006ABC (OSReport)
//	802E2198: 8045151C (sConsole__12JUTException)
//	802E21A4: 8039D490 (JUTException__stringBase0)
//	802E21A8: 8039D490 (JUTException__stringBase0)
//	802E21C0: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E21C4: 803CC620 (sMessageQueue__12JUTException)
//	802E21C8: 803CC620 (sMessageQueue__12JUTException)
//	802E21CC: 80434578 (exCallbackObject)
//	802E21D0: 80434578 (exCallbackObject)
//	802E21D8: 8033E9F4 (OSSendMessage)
//	802E21DC: 80340C84 (OSGetCurrentThread)
//	802E21E0: 80341A3C (OSSuspendThread)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  __va_list_struct* False
// 	 __va_list_struct False
asm void JUTException::panic_f_va(char const* param_0, int param_1, char const* param_2, __va_list_struct* param_3) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/panic_f_va__12JUTExceptionFPCciPCcP16__va_list_struct.s"
}
#pragma pop


/* 802E21FC-802E227C 0080+00 s=0 e=16 z=0  None .text      panic_f__12JUTExceptionFPCciPCce                             */
//	802E2268: 802E20C0 (panic_f_va__12JUTExceptionFPCciPCcP16__va_list_struct)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
//  int False
//  char const* False
// 	 char const False
// 		 char False
//  ... False
asm void JUTException::panic_f(char const* param_0, int param_1, char const* param_2, ...) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/panic_f__12JUTExceptionFPCciPCce.s"
}
#pragma pop


/* 802E227C-802E22C4 0048+00 s=1 e=0 z=0  None .text      setFPException__12JUTExceptionFUl                            */
//	802E2288: 804509A0 (__OSFpscrEnableBits)
//	802E2298: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E229C: 802E1FCC (errorHandler__12JUTExceptionFUsP9OSContextUlUl)
//	802E22A0: 8033C580 (OSSetErrorHandler)
//	802E22B0: 8033C580 (OSSetErrorHandler)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void JUTException::setFPException(u32 param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/setFPException__12JUTExceptionFUl.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456050-80456054 0004+00 s=1 e=0 z=0  None .sdata2    @2293                                                        */
SECTION_SDATA2 static u8 lit_2293[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 802E22C4-802E2454 0190+00 s=1 e=0 z=0  None .text      showFloatSub__12JUTExceptionFif                              */
//	802E2340: 8045151C (sConsole__12JUTException)
//	802E2344: 8039D490 (JUTException__stringBase0)
//	802E2348: 8039D490 (JUTException__stringBase0)
//	802E2354: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E23CC: 8045151C (sConsole__12JUTException)
//	802E23D0: 8039D490 (JUTException__stringBase0)
//	802E23D4: 8039D490 (JUTException__stringBase0)
//	802E23E0: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E23E8: 8045151C (sConsole__12JUTException)
//	802E23EC: 8039D490 (JUTException__stringBase0)
//	802E23F0: 8039D490 (JUTException__stringBase0)
//	802E23FC: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2404: 80456050 (lit_2293)
//	802E2410: 8045151C (sConsole__12JUTException)
//	802E2414: 8039D490 (JUTException__stringBase0)
//	802E2418: 8039D490 (JUTException__stringBase0)
//	802E2424: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E242C: 8045151C (sConsole__12JUTException)
//	802E2430: 8039D490 (JUTException__stringBase0)
//	802E2434: 8039D490 (JUTException__stringBase0)
//	802E2440: 802E7BB8 (print_f__10JUTConsoleFPCce)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  int False
//  f32 False
asm void JUTException::showFloatSub(int param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showFloatSub__12JUTExceptionFif.s"
}
#pragma pop


/* 802E2454-802E2578 0124+00 s=1 e=0 z=0  None .text      showFloat__12JUTExceptionFP9OSContext                        */
//	802E2464: 803621D0 (_savegpr_26)
//	802E2470: 8045151C (sConsole__12JUTException)
//	802E247C: 8039D490 (JUTException__stringBase0)
//	802E2480: 8039D490 (JUTException__stringBase0)
//	802E2488: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2494: 8039D490 (JUTException__stringBase0)
//	802E2498: 8039D490 (JUTException__stringBase0)
//	802E24B0: 802E22C4 (showFloatSub__12JUTExceptionFif)
//	802E24B4: 8045151C (sConsole__12JUTException)
//	802E24BC: 802E7C38 (print__10JUTConsoleFPCc)
//	802E24D0: 802E22C4 (showFloatSub__12JUTExceptionFif)
//	802E24D4: 8045151C (sConsole__12JUTException)
//	802E24DC: 802E7C38 (print__10JUTConsoleFPCc)
//	802E24F0: 802E22C4 (showFloatSub__12JUTExceptionFif)
//	802E24F4: 8045151C (sConsole__12JUTException)
//	802E24FC: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2520: 802E22C4 (showFloatSub__12JUTExceptionFif)
//	802E2524: 8045151C (sConsole__12JUTException)
//	802E2528: 8039D490 (JUTException__stringBase0)
//	802E252C: 8039D490 (JUTException__stringBase0)
//	802E2534: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2548: 802E22C4 (showFloatSub__12JUTExceptionFif)
//	802E254C: 8045151C (sConsole__12JUTException)
//	802E2550: 8039D490 (JUTException__stringBase0)
//	802E2554: 8039D490 (JUTException__stringBase0)
//	802E255C: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2564: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  OSContext* False
// 	 OSContext False
asm void JUTException::showFloat(OSContext* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showFloat__12JUTExceptionFP9OSContext.s"
}
#pragma pop


/* 802E2578-802E2638 00C0+00 s=1 e=0 z=0  None .text      searchPartialModule__12JUTExceptionFUlPUlPUlPUlPUl           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
asm void JUTException::searchPartialModule(u32 param_0, u32* param_1, u32* param_2, u32* param_3, u32* param_4) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/searchPartialModule__12JUTExceptionFUlPUlPUlPUlPUl.s"
}
#pragma pop


/* 802E2638-802E26B0 0078+00 s=1 e=0 z=0  None .text      search_name_part__FPUcPUci                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8* False
// 	 u8 False
//  u8* False
// 	 u8 False
//  int False
asm static void search_name_part(u8* param_0, u8* param_1, int param_2) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/search_name_part__FPUcPUci.s"
}
#pragma pop


/* 802E26B0-802E27B0 0100+00 s=1 e=0 z=0  None .text      showStack__12JUTExceptionFP9OSContext                        */
//	802E26C0: 803621D8 (_savegpr_28)
//	802E26C8: 8045151C (sConsole__12JUTException)
//	802E26D4: 8039D490 (JUTException__stringBase0)
//	802E26D8: 8039D490 (JUTException__stringBase0)
//	802E26E0: 802E7C38 (print__10JUTConsoleFPCc)
//	802E26E8: 8045151C (sConsole__12JUTException)
//	802E26EC: 8039D490 (JUTException__stringBase0)
//	802E26F0: 8039D490 (JUTException__stringBase0)
//	802E26FC: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2704: 8039D490 (JUTException__stringBase0)
//	802E2708: 8039D490 (JUTException__stringBase0)
//	802E271C: 8045151C (sConsole__12JUTException)
//	802E2720: 8039D490 (JUTException__stringBase0)
//	802E2724: 8039D490 (JUTException__stringBase0)
//	802E272C: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2734: 8045151C (sConsole__12JUTException)
//	802E274C: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E275C: 802E2B44 (showMapInfo_subroutine__12JUTExceptionFUlb)
//	802E2760: 80451570 (sManager__17JUTConsoleManager)
//	802E2768: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E2770: 802E3980 (waitTime__12JUTExceptionFl)
//	802E279C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  OSContext* False
// 	 OSContext False
asm void JUTException::showStack(OSContext* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showStack__12JUTExceptionFP9OSContext.s"
}
#pragma pop


/* 802E27B0-802E2A84 02D4+00 s=1 e=0 z=0  None .text      showMainInfo__12JUTExceptionFUsP9OSContextUlUl               */
//	802E27C0: 803621D8 (_savegpr_28)
//	802E27D4: 8045151C (sConsole__12JUTException)
//	802E27EC: 8039D490 (JUTException__stringBase0)
//	802E27F0: 8039D490 (JUTException__stringBase0)
//	802E27FC: 803CC660 (sCpuExpName__12JUTException)
//	802E2800: 803CC660 (sCpuExpName__12JUTException)
//	802E280C: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2814: 8039D490 (JUTException__stringBase0)
//	802E2818: 8039D490 (JUTException__stringBase0)
//	802E2824: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2834: 80451524 (fpscr__12JUTException)
//	802E2850: 8045151C (sConsole__12JUTException)
//	802E2854: 8039D490 (JUTException__stringBase0)
//	802E2858: 8039D490 (JUTException__stringBase0)
//	802E2864: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2868: 80451524 (fpscr__12JUTException)
//	802E2874: 8045151C (sConsole__12JUTException)
//	802E2878: 8039D490 (JUTException__stringBase0)
//	802E287C: 8039D490 (JUTException__stringBase0)
//	802E2888: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E288C: 80451524 (fpscr__12JUTException)
//	802E2898: 8045151C (sConsole__12JUTException)
//	802E289C: 8039D490 (JUTException__stringBase0)
//	802E28A0: 8039D490 (JUTException__stringBase0)
//	802E28AC: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E28B0: 80451524 (fpscr__12JUTException)
//	802E28BC: 8045151C (sConsole__12JUTException)
//	802E28C0: 8039D490 (JUTException__stringBase0)
//	802E28C4: 8039D490 (JUTException__stringBase0)
//	802E28D0: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E28D4: 80451524 (fpscr__12JUTException)
//	802E28E0: 8045151C (sConsole__12JUTException)
//	802E28E4: 8039D490 (JUTException__stringBase0)
//	802E28E8: 8039D490 (JUTException__stringBase0)
//	802E28F4: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E28F8: 80451524 (fpscr__12JUTException)
//	802E2904: 8045151C (sConsole__12JUTException)
//	802E2908: 8039D490 (JUTException__stringBase0)
//	802E290C: 8039D490 (JUTException__stringBase0)
//	802E2918: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E291C: 80451524 (fpscr__12JUTException)
//	802E2928: 8045151C (sConsole__12JUTException)
//	802E292C: 8039D490 (JUTException__stringBase0)
//	802E2930: 8039D490 (JUTException__stringBase0)
//	802E293C: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2940: 80451524 (fpscr__12JUTException)
//	802E294C: 8045151C (sConsole__12JUTException)
//	802E2950: 8039D490 (JUTException__stringBase0)
//	802E2954: 8039D490 (JUTException__stringBase0)
//	802E2960: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2964: 80451524 (fpscr__12JUTException)
//	802E2970: 8045151C (sConsole__12JUTException)
//	802E2974: 8039D490 (JUTException__stringBase0)
//	802E2978: 8039D490 (JUTException__stringBase0)
//	802E2984: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2988: 80451524 (fpscr__12JUTException)
//	802E2994: 8045151C (sConsole__12JUTException)
//	802E2998: 8039D490 (JUTException__stringBase0)
//	802E299C: 8039D490 (JUTException__stringBase0)
//	802E29A8: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E29B4: 8045151C (sConsole__12JUTException)
//	802E29B8: 8039D490 (JUTException__stringBase0)
//	802E29BC: 8039D490 (JUTException__stringBase0)
//	802E29C8: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E29D4: 8045151C (sConsole__12JUTException)
//	802E29D8: 8039D490 (JUTException__stringBase0)
//	802E29DC: 8039D490 (JUTException__stringBase0)
//	802E29E8: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E29F4: 8045151C (sConsole__12JUTException)
//	802E29F8: 8039D490 (JUTException__stringBase0)
//	802E29FC: 8039D490 (JUTException__stringBase0)
//	802E2A08: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2A14: 8045151C (sConsole__12JUTException)
//	802E2A18: 8039D490 (JUTException__stringBase0)
//	802E2A1C: 8039D490 (JUTException__stringBase0)
//	802E2A28: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2A2C: 8045151C (sConsole__12JUTException)
//	802E2A30: 8039D490 (JUTException__stringBase0)
//	802E2A34: 8039D490 (JUTException__stringBase0)
//	802E2A48: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2A4C: 8045151C (sConsole__12JUTException)
//	802E2A50: 8039D490 (JUTException__stringBase0)
//	802E2A54: 8039D490 (JUTException__stringBase0)
//	802E2A68: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2A70: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
asm void JUTException::showMainInfo(u16 param_0, OSContext* param_1, u32 param_2, u32 param_3) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showMainInfo__12JUTExceptionFUsP9OSContextUlUl.s"
}
#pragma pop


/* 802E2A84-802E2B44 00C0+00 s=1 e=0 z=0  None .text      showGPR__12JUTExceptionFP9OSContext                          */
//	802E2A94: 803621D8 (_savegpr_28)
//	802E2A9C: 8045151C (sConsole__12JUTException)
//	802E2AA8: 8039D490 (JUTException__stringBase0)
//	802E2AAC: 8039D490 (JUTException__stringBase0)
//	802E2AB4: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2AC0: 8039D490 (JUTException__stringBase0)
//	802E2AC4: 8039D490 (JUTException__stringBase0)
//	802E2ACC: 8045151C (sConsole__12JUTException)
//	802E2AF0: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2B04: 8045151C (sConsole__12JUTException)
//	802E2B08: 8039D490 (JUTException__stringBase0)
//	802E2B0C: 8039D490 (JUTException__stringBase0)
//	802E2B28: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2B30: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  OSContext* False
// 	 OSContext False
asm void JUTException::showGPR(OSContext* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showGPR__12JUTExceptionFP9OSContext.s"
}
#pragma pop


/* 802E2B44-802E2CA0 015C+00 s=3 e=0 z=0  None .text      showMapInfo_subroutine__12JUTExceptionFUlb                   */
//	802E2B54: 803621D8 (_savegpr_28)
//	802E2B84: 8039D490 (JUTException__stringBase0)
//	802E2B88: 8039D490 (JUTException__stringBase0)
//	802E2BB0: 802E2578 (searchPartialModule__12JUTExceptionFUlPUlPUlPUlPUl)
//	802E2BD0: 802E2638 (search_name_part__FPUcPUci)
//	802E2BD4: 8045151C (sConsole__12JUTException)
//	802E2BD8: 8039D490 (JUTException__stringBase0)
//	802E2BDC: 8039D490 (JUTException__stringBase0)
//	802E2BF8: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2C00: 80434598 (sMapFileList__12JUTException)
//	802E2C04: 80434598 (sMapFileList__12JUTException)
//	802E2C40: 802E3BA0 (queryMapAddress__12JUTExceptionFPcUllPUlPUlPcUlbb)
//	802E2C6C: 802E3BA0 (queryMapAddress__12JUTExceptionFPcUllPUlPUlPcUlbb)
//	802E2C8C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  bool False
asm void JUTException::showMapInfo_subroutine(u32 param_0, bool param_1) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showMapInfo_subroutine__12JUTExceptionFUlb.s"
}
#pragma pop


/* 802E2CA0-802E2DAC 010C+00 s=1 e=0 z=0  None .text      showGPRMap__12JUTExceptionFP9OSContext                       */
//	802E2CB0: 803621CC (_savegpr_25)
//	802E2CBC: 8045151C (sConsole__12JUTException)
//	802E2CCC: 8039D490 (JUTException__stringBase0)
//	802E2CD0: 8039D490 (JUTException__stringBase0)
//	802E2CD8: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2D08: 8045151C (sConsole__12JUTException)
//	802E2D0C: 8039D490 (JUTException__stringBase0)
//	802E2D10: 8039D490 (JUTException__stringBase0)
//	802E2D24: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2D34: 802E2B44 (showMapInfo_subroutine__12JUTExceptionFUlb)
//	802E2D40: 8045151C (sConsole__12JUTException)
//	802E2D44: 8039D490 (JUTException__stringBase0)
//	802E2D48: 8039D490 (JUTException__stringBase0)
//	802E2D50: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2D54: 80451570 (sManager__17JUTConsoleManager)
//	802E2D5C: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E2D64: 802E3980 (waitTime__12JUTExceptionFl)
//	802E2D80: 8045151C (sConsole__12JUTException)
//	802E2D84: 8039D490 (JUTException__stringBase0)
//	802E2D88: 8039D490 (JUTException__stringBase0)
//	802E2D90: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2D98: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  OSContext* False
// 	 OSContext False
asm void JUTException::showGPRMap(OSContext* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showGPRMap__12JUTExceptionFP9OSContext.s"
}
#pragma pop


/* 802E2DAC-802E2E70 00C4+00 s=1 e=0 z=0  None .text      showSRR0Map__12JUTExceptionFP9OSContext                      */
//	802E2DC8: 8045151C (sConsole__12JUTException)
//	802E2DD4: 8039D490 (JUTException__stringBase0)
//	802E2DD8: 8039D490 (JUTException__stringBase0)
//	802E2DE0: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2E04: 8045151C (sConsole__12JUTException)
//	802E2E08: 8039D490 (JUTException__stringBase0)
//	802E2E0C: 8039D490 (JUTException__stringBase0)
//	802E2E1C: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2E2C: 802E2B44 (showMapInfo_subroutine__12JUTExceptionFUlb)
//	802E2E38: 8045151C (sConsole__12JUTException)
//	802E2E3C: 8039D490 (JUTException__stringBase0)
//	802E2E40: 8039D490 (JUTException__stringBase0)
//	802E2E48: 802E7C38 (print__10JUTConsoleFPCc)
//	802E2E4C: 80451570 (sManager__17JUTConsoleManager)
//	802E2E54: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  OSContext* False
// 	 OSContext False
asm void JUTException::showSRR0Map(OSContext* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/showSRR0Map__12JUTExceptionFP9OSContext.s"
}
#pragma pop


/* 802E2E70-802E2F18 00A8+00 s=1 e=0 z=0  None .text      printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl */
//	802E2EAC: 802E2A84 (showGPR__12JUTExceptionFP9OSContext)
//	802E2EB8: 802E2454 (showFloat__12JUTExceptionFP9OSContext)
//	802E2EBC: 8045151C (sConsole__12JUTException)
//	802E2EC8: 8039D490 (JUTException__stringBase0)
//	802E2ECC: 8039D490 (JUTException__stringBase0)
//	802E2ED4: 80451520 (msr__12JUTException)
//	802E2ED8: 80451524 (fpscr__12JUTException)
//	802E2EE0: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E2EEC: 802E26B0 (showStack__12JUTExceptionFP9OSContext)
//	802E2EF8: 802E2CA0 (showGPRMap__12JUTExceptionFP9OSContext)
//	802E2F04: 802E2DAC (showSRR0Map__12JUTExceptionFP9OSContext)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTException::EInfoPage False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
asm void JUTException::printDebugInfo(JUTException::EInfoPage param_0, u16 param_1, OSContext* param_2, u32 param_3, u32 param_4) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl.s"
}
#pragma pop


/* 802E2F18-802E2F54 003C+00 s=1 e=1 z=0  None .text      isEnablePad__12JUTExceptionCFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JUTException::isEnablePad() const {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/isEnablePad__12JUTExceptionCFv.s"
}
#pragma pop


/* 802E2F54-802E34C0 056C+00 s=1 e=1 z=0  None .text      readPad__12JUTExceptionFPUlPUl                               */
//	802E2F64: 803621C0 (_savegpr_22)
//	802E2F78: 803426FC (OSGetTime)
//	802E2F88: 803426FC (OSGetTime)
//	802E2FA8: 80362324 (__div2i)
//	802E2FE8: 802E06DC (__ct__10JUTGamePadFQ210JUTGamePad8EPadPort)
//	802E2FF4: 802E06DC (__ct__10JUTGamePadFQ210JUTGamePad8EPadPort)
//	802E3000: 802E06DC (__ct__10JUTGamePadFQ210JUTGamePad8EPadPort)
//	802E300C: 802E06DC (__ct__10JUTGamePadFQ210JUTGamePad8EPadPort)
//	802E3010: 802E08E4 (read__10JUTGamePadFv)
//	802E303C: 803CC640 (c3bcnt)
//	802E3040: 803CC640 (c3bcnt)
//	802E3064: 803426FC (OSGetTime)
//	802E3074: 803CC640 (c3bcnt)
//	802E3078: 803CC640 (c3bcnt)
//	802E30AC: 803CC640 (c3bcnt)
//	802E30B0: 803CC640 (c3bcnt)
//	802E30D4: 803426FC (OSGetTime)
//	802E30E4: 803CC640 (c3bcnt)
//	802E30E8: 803CC640 (c3bcnt)
//	802E311C: 803CC640 (c3bcnt)
//	802E3120: 803CC640 (c3bcnt)
//	802E3144: 803426FC (OSGetTime)
//	802E3154: 803CC640 (c3bcnt)
//	802E3158: 803CC640 (c3bcnt)
//	802E318C: 803CC640 (c3bcnt)
//	802E3190: 803CC640 (c3bcnt)
//	802E31B4: 803426FC (OSGetTime)
//	802E31C4: 803CC640 (c3bcnt)
//	802E31C8: 803CC640 (c3bcnt)
//	802E31F0: 803426FC (OSGetTime)
//	802E31F4: 803CC640 (c3bcnt)
//	802E31F8: 803CC640 (c3bcnt)
//	802E322C: 803426FC (OSGetTime)
//	802E3264: 803426FC (OSGetTime)
//	802E329C: 803426FC (OSGetTime)
//	802E32C4: 802E0C6C (checkResetCallback__10JUTGamePadFx)
//	802E32D4: 802E0C6C (checkResetCallback__10JUTGamePadFx)
//	802E32E4: 802E0C6C (checkResetCallback__10JUTGamePadFx)
//	802E32F4: 802E0C6C (checkResetCallback__10JUTGamePadFx)
//	802E3354: 802E07B0 (__dt__10JUTGamePadFv)
//	802E3360: 802E07B0 (__dt__10JUTGamePadFv)
//	802E336C: 802E07B0 (__dt__10JUTGamePadFv)
//	802E3378: 802E07B0 (__dt__10JUTGamePadFv)
//	802E3390: 802E06DC (__ct__10JUTGamePadFQ210JUTGamePad8EPadPort)
//	802E3394: 803CC640 (c3bcnt)
//	802E3398: 803CC640 (c3bcnt)
//	802E33E4: 803426FC (OSGetTime)
//	802E3410: 803426FC (OSGetTime)
//	802E3430: 802E0C6C (checkResetCallback__10JUTGamePadFx)
//	802E3434: 802E08E4 (read__10JUTGamePadFv)
//	802E3464: 802E07B0 (__dt__10JUTGamePadFv)
//	802E3474: 802E08E4 (read__10JUTGamePadFv)
//	802E34AC: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
asm void JUTException::readPad(u32* param_0, u32* param_1) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/readPad__12JUTExceptionFPUlPUl.s"
}
#pragma pop


/* 802E34C0-802E3980 04C0+00 s=1 e=0 z=0  None .text      printContext__12JUTExceptionFUsP9OSContextUlUl               */
//	802E34D0: 803621C0 (_savegpr_22)
//	802E34E8: 802E2F18 (isEnablePad__12JUTExceptionCFv)
//	802E34F8: 80451508 (sErrorManager__12JUTException)
//	802E3510: 8034C1E0 (VISetPreRetraceCallback)
//	802E3518: 8034C224 (VISetPostRetraceCallback)
//	802E3520: 8034D840 (VISetBlack)
//	802E3524: 8034D694 (VIFlush)
//	802E3528: 8045151C (sConsole__12JUTException)
//	802E3540: 8039D490 (JUTException__stringBase0)
//	802E3544: 8039D490 (JUTException__stringBase0)
//	802E3554: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E355C: 8039D490 (JUTException__stringBase0)
//	802E3560: 8039D490 (JUTException__stringBase0)
//	802E3570: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E3578: 8039D490 (JUTException__stringBase0)
//	802E357C: 8039D490 (JUTException__stringBase0)
//	802E3598: 802E27B0 (showMainInfo__12JUTExceptionFUsP9OSContextUlUl)
//	802E359C: 80451570 (sManager__17JUTConsoleManager)
//	802E35A4: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E35AC: 802E3980 (waitTime__12JUTExceptionFl)
//	802E35D4: 802E2E70 (printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl)
//	802E35D8: 80451570 (sManager__17JUTConsoleManager)
//	802E35E0: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E35E8: 802E3980 (waitTime__12JUTExceptionFl)
//	802E3610: 802E2E70 (printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl)
//	802E3614: 80451570 (sManager__17JUTConsoleManager)
//	802E361C: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E3624: 802E3980 (waitTime__12JUTExceptionFl)
//	802E364C: 802E2E70 (printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl)
//	802E3650: 80451570 (sManager__17JUTConsoleManager)
//	802E3658: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E3660: 802E3980 (waitTime__12JUTExceptionFl)
//	802E3688: 802E2E70 (printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl)
//	802E368C: 80451570 (sManager__17JUTConsoleManager)
//	802E3694: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E369C: 802E3980 (waitTime__12JUTExceptionFl)
//	802E36C4: 802E2E70 (printDebugInfo__12JUTExceptionFQ212JUTException9EInfoPageUsP9OSContextUlUl)
//	802E36C8: 80451570 (sManager__17JUTConsoleManager)
//	802E36D0: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E36D8: 802E3980 (waitTime__12JUTExceptionFl)
//	802E36DC: 8045151C (sConsole__12JUTException)
//	802E36E4: 802E7C38 (print__10JUTConsoleFPCc)
//	802E36E8: 80451570 (sManager__17JUTConsoleManager)
//	802E36F0: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E36FC: 80451510 (sPostUserCallback__12JUTException)
//	802E3708: 8033D708 (OSEnableInterrupts)
//	802E3724: 80451510 (sPostUserCallback__12JUTException)
//	802E3734: 8033D71C (OSRestoreInterrupts)
//	802E374C: 8045151C (sConsole__12JUTException)
//	802E3768: 8033D708 (OSEnableInterrupts)
//	802E3780: 802E2F54 (readPad__12JUTExceptionFPUlPUl)
//	802E3794: 8045151C (sConsole__12JUTException)
//	802E379C: 802E80A8 (scroll__10JUTConsoleFi)
//	802E37B0: 8045151C (sConsole__12JUTException)
//	802E37BC: 802E80A8 (scroll__10JUTConsoleFi)
//	802E37D0: 8045151C (sConsole__12JUTException)
//	802E3804: 802E80A8 (scroll__10JUTConsoleFi)
//	802E3820: 8045151C (sConsole__12JUTException)
//	802E3854: 802E80A8 (scroll__10JUTConsoleFi)
//	802E387C: 8034D8BC (VIGetRetraceCount)
//	802E3884: 8034D8BC (VIGetRetraceCount)
//	802E3890: 80451570 (sManager__17JUTConsoleManager)
//	802E3898: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E38A0: 802E3980 (waitTime__12JUTExceptionFl)
//	802E38A8: 8045151C (sConsole__12JUTException)
//	802E38B4: 802E80A8 (scroll__10JUTConsoleFi)
//	802E38B8: 80451570 (sManager__17JUTConsoleManager)
//	802E38C0: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E38C8: 802E3980 (waitTime__12JUTExceptionFl)
//	802E38CC: 8045151C (sConsole__12JUTException)
//	802E38D8: 8045151C (sConsole__12JUTException)
//	802E38E0: 802E80A8 (scroll__10JUTConsoleFi)
//	802E38E4: 80451570 (sManager__17JUTConsoleManager)
//	802E38EC: 802E8450 (drawDirect__17JUTConsoleManagerCFb)
//	802E38F0: 8045151C (sConsole__12JUTException)
//	802E38FC: 802E81A8 (getLineOffset__10JUTConsoleCFv)
//	802E3908: 802E8184 (getUsedLine__10JUTConsoleCFv)
//	802E3920: 802E3980 (waitTime__12JUTExceptionFl)
//	802E3934: 802E3980 (waitTime__12JUTExceptionFl)
//	802E3938: 8045151C (sConsole__12JUTException)
//	802E3944: 802E81A8 (getLineOffset__10JUTConsoleCFv)
//	802E3950: 802E8184 (getUsedLine__10JUTConsoleCFv)
//	802E396C: 8036220C (_restgpr_22)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
//  OSContext* False
// 	 OSContext False
//  u32 False
//  u32 False
asm void JUTException::printContext(u16 param_0, OSContext* param_1, u32 param_2, u32 param_3) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/printContext__12JUTExceptionFUsP9OSContextUlUl.s"
}
#pragma pop


/* 802E3980-802E3A08 0088+00 s=3 e=2 z=0  None .text      waitTime__12JUTExceptionFl                                   */
//	802E3990: 803621D0 (_savegpr_26)
//	802E399C: 803426FC (OSGetTime)
//	802E39B4: 803426FC (OSGetTime)
//	802E39D0: 80362324 (__div2i)
//	802E39F4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  s32 False
asm void JUTException::waitTime(s32 param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/waitTime__12JUTExceptionFl.s"
}
#pragma pop


/* 802E3A08-802E3AEC 00E4+00 s=1 e=0 z=0  None .text      createFB__12JUTExceptionFv                                   */
//	802E3A18: 803621D8 (_savegpr_28)
//	802E3A20: 803D2484 (GXNtsc480Int)
//	802E3A24: 803D2484 (GXNtsc480Int)
//	802E3A2C: 8033B28C (OSGetArenaHi)
//	802E3A30: 803D2484 (GXNtsc480Int)
//	802E3A34: 803D2484 (GXNtsc480Int)
//	802E3A74: 802E40CC (__ct__13JUTExternalFBFP16_GXRenderModeObj8_GXGammaPvUl)
//	802E3A88: 802E456C (changeFrameBuffer__14JUTDirectPrintFPvUsUs)
//	802E3A90: 8034CE8C (VIConfigure)
//	802E3A98: 8034D7C4 (VISetNextFrameBuffer)
//	802E3AA0: 8034D840 (VISetBlack)
//	802E3AA4: 8034D694 (VIFlush)
//	802E3AA8: 8034D694 (VIFlush)
//	802E3AB0: 8034D8BC (VIGetRetraceCount)
//	802E3AB8: 8034D8BC (VIGetRetraceCount)
//	802E3AD8: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JUTException::createFB() {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/createFB__12JUTExceptionFv.s"
}
#pragma pop


/* 802E3AEC-802E3AFC 0010+00 s=0 e=1 z=0  None .text      setPreUserCallback__12JUTExceptionFPFUsP9OSContextUlUl_v     */
//	802E3AEC: 8045150C (sPreUserCallback__12JUTException)
//	802E3AF0: 8045150C (sPreUserCallback__12JUTException)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void (*)(u16, OSContext*, u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u16 False
// 	 OSContext* False
// 		 OSContext False
// 	 u32 False
// 	 u32 False
asm void JUTException::setPreUserCallback(void (*)(u16, OSContext*, u32, u32)) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/setPreUserCallback__12JUTExceptionFPFUsP9OSContextUlUl_v.s"
}
#pragma pop


/* 802E3AFC-802E3B0C 0010+00 s=0 e=1 z=0  None .text      setPostUserCallback__12JUTExceptionFPFUsP9OSContextUlUl_v    */
//	802E3AFC: 80451510 (sPostUserCallback__12JUTException)
//	802E3B00: 80451510 (sPostUserCallback__12JUTException)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void (*)(u16, OSContext*, u32, u32) False
// 	 * False
// 		  False
// 	 void False
// 	 u16 False
// 	 OSContext* False
// 		 OSContext False
// 	 u32 False
// 	 u32 False
asm void JUTException::setPostUserCallback(void (*)(u16, OSContext*, u32, u32)) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/setPostUserCallback__12JUTExceptionFPFUsP9OSContextUlUl_v.s"
}
#pragma pop


/* 802E3B0C-802E3BA0 0094+00 s=0 e=1 z=0  None .text      appendMapFile__12JUTExceptionFPCc                            */
//	802E3B28: 80434598 (sMapFileList__12JUTException)
//	802E3B2C: 80434598 (sMapFileList__12JUTException)
//	802E3B40: 80368994 (strcmp)
//	802E3B5C: 802CEC4C (__nw__FUl)
//	802E3B70: 802DBDFC (__ct__10JSUPtrLinkFPv)
//	802E3B78: 80434598 (sMapFileList__12JUTException)
//	802E3B7C: 80434598 (sMapFileList__12JUTException)
//	802E3B84: 802DBF4C (append__10JSUPtrListFP10JSUPtrLink)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JUTException::appendMapFile(char const* param_0) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/appendMapFile__12JUTExceptionFPCc.s"
}
#pragma pop


/* 802E3BA0-802E3C90 00F0+00 s=1 e=0 z=0  None .text      queryMapAddress__12JUTExceptionFPcUllPUlPUlPcUlbb            */
//	802E3BB0: 803621C8 (_savegpr_24)
//	802E3BE4: 80368B2C (strcpy)
//	802E3BEC: 8039D490 (JUTException__stringBase0)
//	802E3BF0: 8039D490 (JUTException__stringBase0)
//	802E3BF8: 80368ABC (strcat)
//	802E3C20: 802E3C90 (queryMapAddress_single__12JUTExceptionFPcUllPUlPUlPcUlbb)
//	802E3C38: 80434598 (sMapFileList__12JUTException)
//	802E3C3C: 80434598 (sMapFileList__12JUTException)
//	802E3C5C: 802E3C90 (queryMapAddress_single__12JUTExceptionFPcUllPUlPUlPcUlbb)
//	802E3C7C: 80362214 (_restgpr_24)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  char* False
// 	 char False
//  u32 False
//  s32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  char* False
// 	 char False
//  u32 False
//  bool False
//  bool False
asm void JUTException::queryMapAddress(char* param_0, u32 param_1, s32 param_2, u32* param_3, u32* param_4, char* param_5, u32 param_6, bool param_7, bool param_8) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/queryMapAddress__12JUTExceptionFPcUllPUlPUlPcUlbb.s"
}
#pragma pop


/* 802E3C90-802E3FEC 035C+00 s=1 e=0 z=0  None .text      queryMapAddress_single__12JUTExceptionFPcUllPUlPUlPcUlbb     */
//	802E3CA0: 803621A8 (_savegpr_16)
//	802E3CD8: 802E87F8 (__ct__13JUTDirectFileFv)
//	802E3CE8: 802E8860 (fopen__13JUTDirectFileFPCc)
//	802E3CFC: 802E881C (__dt__13JUTDirectFileFv)
//	802E3D30: 802E8958 (fgets__13JUTDirectFileFPvi)
//	802E3DF8: 802E8958 (fgets__13JUTDirectFileFPvi)
//	802E3E24: 80368C00 (strtol)
//	802E3E48: 80368C00 (strtol)
//	802E3F2C: 8045151C (sConsole__12JUTException)
//	802E3F30: 8039D490 (JUTException__stringBase0)
//	802E3F34: 8039D490 (JUTException__stringBase0)
//	802E3F3C: 802E7C38 (print__10JUTConsoleFPCc)
//	802E3F40: 8045151C (sConsole__12JUTException)
//	802E3F44: 8039D490 (JUTException__stringBase0)
//	802E3F48: 8039D490 (JUTException__stringBase0)
//	802E3F68: 802E7BB8 (print_f__10JUTConsoleFPCce)
//	802E3F9C: 8045151C (sConsole__12JUTException)
//	802E3FA0: 8039D490 (JUTException__stringBase0)
//	802E3FA4: 8039D490 (JUTException__stringBase0)
//	802E3FAC: 802E7C38 (print__10JUTConsoleFPCc)
//	802E3FB4: 802E88FC (fclose__13JUTDirectFileFv)
//	802E3FCC: 802E881C (__dt__13JUTDirectFileFv)
//	802E3FD8: 803621F4 (_restgpr_16)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  char* False
// 	 char False
//  u32 False
//  s32 False
//  u32* False
// 	 u32 False
//  u32* False
// 	 u32 False
//  char* False
// 	 char False
//  u32 False
//  bool False
//  bool False
asm void JUTException::queryMapAddress_single(char* param_0, u32 param_1, s32 param_2, u32* param_3, u32* param_4, char* param_5, u32 param_6, bool param_7, bool param_8) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/queryMapAddress_single__12JUTExceptionFPcUllPUlPUlPcUlbb.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456054-80456058 0004+00 s=1 e=0 z=0  None .sdata2    @3034                                                        */
SECTION_SDATA2 static f32 lit_3034 = 10.0f;

/* 80456058-80456060 0004+04 s=1 e=0 z=0  None .sdata2    @3035                                                        */
SECTION_SDATA2 static f32 lit_3035[1 + 1 /* padding */] = {
	6.0f,
	/* padding */
	0.0f,
};

/* 802E3FEC-802E40CC 00E0+00 s=0 e=1 z=0  None .text      createConsole__12JUTExceptionFPvUl                           */
//	802E4020: 802E75DC (getLineFromObjectSize__10JUTConsoleFUlUi)
//	802E402C: 80451514 (sConsoleBuffer__12JUTException)
//	802E4030: 80451518 (sConsoleBufferSize__12JUTException)
//	802E4040: 802E73E4 (create__10JUTConsoleFUiPvUl)
//	802E4048: 8045151C (sConsole__12JUTException)
//	802E404C: 80451570 (sManager__17JUTConsoleManager)
//	802E4050: 802E84C4 (setDirectConsole__17JUTConsoleManagerFP10JUTConsole)
//	802E4054: 8045151C (sConsole__12JUTException)
//	802E4058: 80456054 (lit_3034)
//	802E4060: 80456058 (lit_3035)
//	802E4068: 8045151C (sConsole__12JUTException)
//	802E407C: 8045151C (sConsole__12JUTException)
//	802E40A0: 8045151C (sConsole__12JUTException)
//	802E40AC: 8045151C (sConsole__12JUTException)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  void* False
// 	 void False
//  u32 False
asm void JUTException::createConsole(void* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/createConsole__12JUTExceptionFPvUl.s"
}
#pragma pop


/* 802E40CC-802E40EC 0020+00 s=1 e=0 z=0  None .text      __ct__13JUTExternalFBFP16_GXRenderModeObj8_GXGammaPvUl       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  _GXRenderModeObj* False
// 	 _GXRenderModeObj False
//  _GXGamma False
//  void* False
// 	 void False
//  u32 False
asm JUTExternalFB::JUTExternalFB(_GXRenderModeObj* param_0, _GXGamma param_1, void* param_2, u32 param_3) {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/__ct__13JUTExternalFBFP16_GXRenderModeObj8_GXGammaPvUl.s"
}
#pragma pop


/* 802E40EC-802E414C 0060+00 s=1 e=0 z=0  None .text      __dt__12JUTExceptionFv                                       */
//	802E410C: 803CC6A4 (__vt__12JUTException)
//	802E4110: 803CC6A4 (__vt__12JUTException)
//	802E411C: 802D1758 (__dt__9JKRThreadFv)
//	802E412C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm JUTException::~JUTException() {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/__dt__12JUTExceptionFv.s"
}
#pragma pop


/* 802E414C-802E4194 0048+00 s=0 e=0 z=0  None .text      __sinit_JUTException_cpp                                     */
//	802E4158: 80434598 (sMapFileList__12JUTException)
//	802E415C: 80434598 (sMapFileList__12JUTException)
//	802E4164: 802DBE74 (__ct__10JSUPtrListFb)
//	802E4168: 80434598 (sMapFileList__12JUTException)
//	802E416C: 80434598 (sMapFileList__12JUTException)
//	802E4170: 802E4194 (func_802E4194)
//	802E4174: 802E4194 (func_802E4194)
//	802E4178: 8043458C (lit_2182)
//	802E417C: 8043458C (lit_2182)
//	802E4180: 80361C24 (__register_global_object)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_JUTException_cpp() {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/__sinit_JUTException_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_802E414C = (void*)__sinit_JUTException_cpp;
#pragma pop


/* 802E4194-802E41E8 0054+00 s=1 e=0 z=0  None .text      __dt__39JSUList<Q212JUTException12JUTExMapFile>Fv            */
//	802E41B8: 802DBEAC (__dt__10JSUPtrListFv)
//	802E41C8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
asm JSUList__template13::~JSUList__template13() {
	nofralloc
#include "asm/JSystem/JUtility/JUTException/func_802E4194.s"
}
#pragma pop


/* ############################################################################################## */
/* 804508F8-80450900 0008+00 s=0 e=3 z=0  None .sdata     None                                                         */
SECTION_SDATA u8 data_804508F8[8] = {
	0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

