// 
// Generated By: dol2asm
// Translation Unit: J2DWindow
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/J2DGraph/J2DWindow.h"

// 
// Types:
// 

struct _GXTlut {
};

struct _GXTexMapID {
};

struct _GXCullMode {
};

struct ResTLUT {
};

struct ResTIMG {
};

struct ResFONT {
};

struct JUtility {
	struct TColor {
	};

};

struct JUTTexture {
	/* 802DE234 */ // False False
~JUTTexture();
	/* 802DE2A8 */ // False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  u8 False
void storeTIMG(ResTIMG const*, u8);
	/* 802DE840 */ // False False
//  _GXTexMapID False
void load(_GXTexMapID);
};

struct JUTPalette {
	/* 802DE890 */ // False False
//  _GXTlut False
//  ResTLUT* False
// 	 ResTLUT False
void storeTLUT(_GXTlut, ResTLUT*);
};

struct JSUStreamSeekFrom {
};

struct JSURandomInputStream {
	/* 802DC458 */ // False False
//  void* False
// 	 void False
//  s32 False
void peek(void*, s32);
	/* 802DC4DC */ // False False
//  s32 False
//  JSUStreamSeekFrom False
void seek(s32, JSUStreamSeekFrom);
};

struct JSUInputStream {
	/* 802DC298 */ // False False
//  void* False
// 	 void False
//  s32 False
void read(void*, s32);
};

struct JKRArchive {
};

struct JGeometry {
	template <typename A1>
	struct TBox2 { };
	/* TBox2<f32> */
	struct TBox2__template0 {
	};

};

struct J2DMaterial {
};

struct J2DAnmColor {
};

struct J2DAnmTransform {
};

struct J2DAnmTevRegKey {
};

struct J2DAnmTexPattern {
};

struct J2DAnmBase {
};

struct J2DAnmTextureSRTKey {
};

struct J2DAnmVtxColor {
};

struct J2DAnmVisibilityFull {
};

struct J2DPane {
	/* 80020158 */ // False False
//  u8 False
void setAlpha(u8);
	/* 80053BC0 */ // False False
void calcMtx();
	/* 80053C00 */ // False False
//  f32 False
//  f32 False
void makeMatrix(f32, f32);
	/* 802F7540 */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void makeMatrix(f32, f32, f32, f32);
	/* 80256018 */ // False False
//  void False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
void setAnimation(J2DAnmVtxColor*);
	/* 8025601C */ // False False
//  void False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
void setAnimation(J2DAnmVisibilityFull*);
	/* 80256020 */ // False False
//  void False
//  J2DAnmTexPattern* False
// 	 J2DAnmTexPattern False
void setAnimation(J2DAnmTexPattern*);
	/* 8018BF28 */ // False False
//  void False
//  J2DAnmTextureSRTKey* False
// 	 J2DAnmTextureSRTKey False
void setAnimation(J2DAnmTextureSRTKey*);
	/* 802F7FC4 */ // False False
//  J2DAnmTransform* False
// 	 J2DAnmTransform False
void setAnimation(J2DAnmTransform*);
	/* 80126350 */ // False False
//  void False
//  J2DAnmTevRegKey* False
// 	 J2DAnmTevRegKey False
void setAnimation(J2DAnmTevRegKey*);
	/* 80126354 */ // False False
//  void False
//  J2DAnmColor* False
// 	 J2DAnmColor False
void setAnimation(J2DAnmColor*);
	/* 802F7EF4 */ // False False
//  J2DAnmBase* False
// 	 J2DAnmBase False
void setAnimation(J2DAnmBase*);
	/* 802F5BF8 */ // False False
J2DPane();
	/* 802F60C4 */ // False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
void makePaneStream(J2DPane*, JSURandomInputStream*);
	/* 802F658C */ // False False
~J2DPane();
	/* 802F6F60 */ // False False
//  f32 False
//  f32 False
void move(f32, f32);
	/* 802F6FB4 */ // False False
//  f32 False
//  f32 False
void add(f32, f32);
	/* 802F6FF8 */ // False False
//  f32 False
//  f32 False
void resize(f32, f32);
	/* 802F7264 */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void clip(JGeometry::TBox2<f32> const&);
	/* 802F72E0 */ // False False
//  u64 False
void search(u64);
	/* 802F7388 */ // False False
//  u64 False
void searchUserInfo(u64);
	/* 802F7430 */ // False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void isUsed(ResTIMG const*);
	/* 802F74B8 */ // False False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
void isUsed(ResFONT const*);
	/* 802F7680 */ // False False
//  _GXCullMode False
void setCullBack(_GXCullMode);
	/* 802F8428 */ // False False
//  bool False
void setCullBack(bool);
	/* 802F7B18 */ // False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
void makePaneExStream(J2DPane*, JSURandomInputStream*);
	/* 802F7DB8 */ // False False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
void getPointer(JSURandomInputStream*, u32, JKRArchive*);
	/* 802F8004 */ // False False
void clearAnmTransform();
	/* 802F8080 */ // False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
void animationTransform(J2DAnmTransform const*);
	/* 802F8118 */ // False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
void setVisibileAnimation(J2DAnmVisibilityFull*);
	/* 802F81A0 */ // False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
void setVtxColorAnimation(J2DAnmVtxColor*);
	/* 802F8228 */ // False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
void animationPane(J2DAnmTransform const*);
	/* 802F83D0 */ // False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
void setAnimationVF(J2DAnmVisibilityFull*);
	/* 802F83FC */ // False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
void setAnimationVC(J2DAnmVtxColor*);
	/* 802F8464 */ // False False
//  bool False
void setConnectParent(bool);
	/* 802F8474 */ // False False
//  void False
void update();
};

struct J2DWindow {
	struct TMaterial {
	};

	/* 80254000 */ // False False
void getBlack() const;
	/* 8025400C */ // False False
void getWhite() const;
	/* 802543E0 */ // False False
//  JUtility::TColor False
void setWhite(JUtility::TColor);
	/* 80254430 */ // False False
//  JUtility::TColor False
void setBlack(JUtility::TColor);
	/* 80254568 */ // False False
//  JUtility::TColor False
//  JUtility::TColor False
void setBlackWhite(JUtility::TColor, JUtility::TColor);
	/* 802F9C10 */ // False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  J2DMaterial* False
// 	 J2DMaterial False
J2DWindow(J2DPane*, JSURandomInputStream*, J2DMaterial*);
	/* 802F9B74 */ // False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  JKRArchive* False
// 	 JKRArchive False
J2DWindow(J2DPane*, JSURandomInputStream*, JKRArchive*);
	/* 802F9A7C */ // False False
J2DWindow();
	/* 802FA118 */ // True False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  JKRArchive* False
// 	 JKRArchive False
void private_readStream(J2DPane*, JSURandomInputStream*, JKRArchive*);
	/* 802FA604 */ // True False
void initinfo2();
	/* 802FA880 */ // False False
~J2DWindow();
	/* 802FBFA0 */ // True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void draw(f32, f32, f32, f32);
	/* 802FA928 */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void draw(JGeometry::TBox2<f32> const&);
	/* 802FAED0 */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void draw(JGeometry::TBox2<f32> const&, JGeometry::TBox2<f32> const&);
	/* 802FAA5C */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void draw_private(JGeometry::TBox2<f32> const&, JGeometry::TBox2<f32> const&);
	/* 802FB000 */ // False False
//  f32 False
//  f32 False
void resize(f32, f32);
	/* 802FB12C */ // True False
//  JUtility::TColor False
//  JUtility::TColor False
//  JUtility::TColor False
//  JUtility::TColor False
void setContentsColor(JUtility::TColor, JUtility::TColor, JUtility::TColor, JUtility::TColor);
	/* 802FB240 */ // True False
//  f32 False
//  f32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void drawSelf(f32, f32, f32 (* )[3][4]);
	/* 802FB1D8 */ // False False
//  f32 False
//  f32 False
void drawSelf(f32, f32);
	/* 802FB338 */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void drawContents(JGeometry::TBox2<f32> const&);
	/* 802FB634 */ // True False
//  JUTTexture* False
// 	 JUTTexture False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u16 False
//  u16 False
//  u16 False
//  u16 False
//  bool False
void drawFrameTexture(JUTTexture*, f32, f32, f32, f32, u16, u16, u16, u16, bool);
	/* 802FB7C8 */ // True False
//  JUTTexture* False
// 	 JUTTexture False
//  f32 False
//  f32 False
//  bool False
//  bool False
//  bool False
void drawFrameTexture(JUTTexture*, f32, f32, bool, bool, bool);
	/* 802FB868 */ // True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void drawContentsTexture(f32, f32, f32, f32);
	/* 802FBB90 */ // True False
//  JUTTexture* False
// 	 JUTTexture False
//  JUtility::TColor False
//  JUtility::TColor False
void setTevMode(JUTTexture*, JUtility::TColor, JUtility::TColor);
	/* 802FBE60 */ // True False
//  u8 False
//  u8 False
void getFrameTexture(u8, u8) const;
	/* 802FC02C */ // True False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
void isUsed(ResFONT const*);
	/* 802FBEDC */ // True False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void isUsed(ResTIMG const*);
	/* 802FBF98 */ // False False
//  s32 False
s32 getTypeID() const;
	/* 802FBFE8 */ // True False
//  u8 False
void getContentsTexture(u8) const;
	/* 802FC000 */ // True False
//  J2DWindow::TMaterial& False
// 	 J2DWindow::TMaterial False
void getMaterial(J2DWindow::TMaterial&) const;
	/* 802FC01C */ // True False
//  bool False
//  u8 False
bool getFrameMaterial(u8) const;
	/* 802FC024 */ // True False
//  bool False
bool getContentsMaterial() const;
	/* 802FC04C */ // True False
//  void False
void rewriteAlpha();
};

// 
// Forward References:
// 


// False False
extern "C" void __ct__9J2DWindowFv();
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void __ct__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP10JKRArchive();
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  J2DMaterial* False
// 	 J2DMaterial False
extern "C" void __ct__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP11J2DMaterial();
// True False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void private_readStream__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP10JKRArchive();
// True False
extern "C" void initinfo2__9J2DWindowFv();
// False False
extern "C" void __dt__9J2DWindowFv();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802FA928();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802FAA5C();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802FAED0();
// False False
//  f32 False
//  f32 False
extern "C" void resize__9J2DWindowFff();
// True False
//  JUtility::TColor False
//  JUtility::TColor False
//  JUtility::TColor False
//  JUtility::TColor False
extern "C" void setContentsColor__9J2DWindowFQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColor();
// False False
//  f32 False
//  f32 False
extern "C" void drawSelf__9J2DWindowFff();
// True False
//  f32 False
//  f32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void drawSelf__9J2DWindowFffPA3_A4_f();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802FB338();
// True False
//  JUTTexture* False
// 	 JUTTexture False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u16 False
//  u16 False
//  u16 False
//  u16 False
//  bool False
extern "C" void drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb();
// True False
//  JUTTexture* False
// 	 JUTTexture False
//  f32 False
//  f32 False
//  bool False
//  bool False
//  bool False
extern "C" void drawFrameTexture__9J2DWindowFP10JUTTextureffbbb();
// True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void drawContentsTexture__9J2DWindowFffff();
// True False
//  JUTTexture* False
// 	 JUTTexture False
//  JUtility::TColor False
//  JUtility::TColor False
extern "C" void setTevMode__9J2DWindowFP10JUTTextureQ28JUtility6TColorQ28JUtility6TColor();
// True False
//  u8 False
//  u8 False
extern "C" void getFrameTexture__9J2DWindowCFUcUc();
// True False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void isUsed__9J2DWindowFPC7ResTIMG();
// False False
//  s32 False
extern "C" s32 getTypeID__9J2DWindowCFv();
// True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void draw__9J2DWindowFffff();
// True False
//  u8 False
extern "C" void getContentsTexture__9J2DWindowCFUc();
// True False
//  J2DWindow::TMaterial& False
// 	 J2DWindow::TMaterial False
extern "C" void getMaterial__9J2DWindowCFRQ29J2DWindow9TMaterial();
// True False
//  bool False
//  u8 False
extern "C" bool getFrameMaterial__9J2DWindowCFUc();
// True False
//  bool False
extern "C" bool getContentsMaterial__9J2DWindowCFv();
// True False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
extern "C" void isUsed__9J2DWindowFPC7ResFONT();
// True False
//  void False
extern "C" void rewriteAlpha__9J2DWindowFv();
extern "C" extern void* __vt__9J2DWindow[51 + 1 /* padding */];

// 
// External References:
// 

// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  u8 False
extern "C" void setAlpha__7J2DPaneFUc();
// False False
extern "C" void calcMtx__7J2DPaneFv();
// False False
//  f32 False
//  f32 False
extern "C" void makeMatrix__7J2DPaneFff();
// False False
//  void False
//  J2DAnmTevRegKey* False
// 	 J2DAnmTevRegKey False
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTevRegKey();
// False False
//  void False
//  J2DAnmColor* False
// 	 J2DAnmColor False
extern "C" void setAnimation__7J2DPaneFP11J2DAnmColor();
// False False
//  void False
//  J2DAnmTextureSRTKey* False
// 	 J2DAnmTextureSRTKey False
extern "C" void setAnimation__7J2DPaneFP19J2DAnmTextureSRTKey();
// False False
extern "C" void getBlack__9J2DWindowCFv();
// False False
extern "C" void getWhite__9J2DWindowCFv();
// False False
//  JUtility::TColor False
extern "C" void setWhite__9J2DWindowFQ28JUtility6TColor();
// False False
//  JUtility::TColor False
extern "C" void setBlack__9J2DWindowFQ28JUtility6TColor();
// False False
//  JUtility::TColor False
//  JUtility::TColor False
extern "C" void setBlackWhite__9J2DWindowFQ28JUtility6TColorQ28JUtility6TColor();
// False False
//  void False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
extern "C" void setAnimation__7J2DPaneFP14J2DAnmVtxColor();
// False False
//  void False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
extern "C" void setAnimation__7J2DPaneFP20J2DAnmVisibilityFull();
// False False
//  void False
//  J2DAnmTexPattern* False
// 	 J2DAnmTexPattern False
extern "C" void setAnimation__7J2DPaneFP16J2DAnmTexPattern();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  void* False
// 	 void False
//  s32 False
extern "C" void read__14JSUInputStreamFPvl();
// False False
//  void* False
// 	 void False
//  s32 False
extern "C" void peek__20JSURandomInputStreamFPvl();
// False False
//  s32 False
//  JSUStreamSeekFrom False
extern "C" void seek__20JSURandomInputStreamFl17JSUStreamSeekFrom();
// False False
extern "C" void __dt__10JUTTextureFv();
// False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  u8 False
extern "C" void storeTIMG__10JUTTextureFPC7ResTIMGUc();
// False False
//  _GXTexMapID False
extern "C" void load__10JUTTextureF11_GXTexMapID();
// False False
//  _GXTlut False
//  ResTLUT* False
// 	 ResTLUT False
extern "C" void storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT();
// False False
extern "C" void __ct__7J2DPaneFv();
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
extern "C" void makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream();
// False False
extern "C" void __dt__7J2DPaneFv();
// False False
//  f32 False
//  f32 False
extern "C" void move__7J2DPaneFff();
// False False
//  f32 False
//  f32 False
extern "C" void add__7J2DPaneFff();
// False False
//  f32 False
//  f32 False
extern "C" void resize__7J2DPaneFff();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802F7264();
// False False
//  u64 False
extern "C" void search__7J2DPaneFUx();
// False False
//  u64 False
extern "C" void searchUserInfo__7J2DPaneFUx();
// False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void isUsed__7J2DPaneFPC7ResTIMG();
// False False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
extern "C" void isUsed__7J2DPaneFPC7ResFONT();
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void makeMatrix__7J2DPaneFffff();
// False False
//  _GXCullMode False
extern "C" void setCullBack__7J2DPaneF11_GXCullMode();
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
extern "C" void makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream();
// False False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive();
// False False
//  J2DAnmBase* False
// 	 J2DAnmBase False
extern "C" void setAnimation__7J2DPaneFP10J2DAnmBase();
// False False
//  J2DAnmTransform* False
// 	 J2DAnmTransform False
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTransform();
// False False
extern "C" void clearAnmTransform__7J2DPaneFv();
// False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
extern "C" void animationTransform__7J2DPaneFPC15J2DAnmTransform();
// False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
extern "C" void setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull();
// False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
extern "C" void setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor();
// False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
extern "C" void animationPane__7J2DPaneFPC15J2DAnmTransform();
// False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
extern "C" void setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull();
// False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
extern "C" void setAnimationVC__7J2DPaneFP14J2DAnmVtxColor();
// False False
//  bool False
extern "C" void setCullBack__7J2DPaneFb();
// False False
//  bool False
extern "C" void setConnectParent__7J2DPaneFb();
// False False
//  void False
extern "C" void update__7J2DPaneFv();
// False False
extern "C" void PSMTXIdentity();
// False False
extern "C" void PSMTXConcat();
// False False
extern "C" void GXSetVtxDesc();
// False False
extern "C" void GXClearVtxDesc();
// False False
extern "C" void GXSetVtxAttrFmt();
// False False
extern "C" void GXSetTexCoordGen2();
// False False
extern "C" void GXSetNumTexGens();
// False False
extern "C" void GXBegin();
// False False
extern "C" void GXSetNumChans();
// False False
extern "C" void GXSetChanCtrl();
// False False
extern "C" void GXSetNumIndStages();
// False False
extern "C" void GXSetTevDirect();
// False False
extern "C" void GXSetTevOp();
// False False
extern "C" void GXSetTevColorIn();
// False False
extern "C" void GXSetTevAlphaIn();
// False False
extern "C" void GXSetTevColorOp();
// False False
extern "C" void GXSetTevAlphaOp();
// False False
extern "C" void GXSetTevColor();
// False False
extern "C" void GXSetTevOrder();
// False False
extern "C" void GXSetNumTevStages();
// False False
extern "C" void GXSetBlendMode();
// False False
extern "C" void GXLoadPosMtxImm();
// False False
extern "C" void GXSetCurrentMtx();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CD108-803CD1D8 00CC+04 s=4 e=0 z=0  None .data      __vt__9J2DWindow                                             */
SECTION_DATA void* __vt__9J2DWindow[51 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__9J2DWindowFv,
	(void*)getTypeID__9J2DWindowCFv,
	(void*)move__7J2DPaneFff,
	(void*)add__7J2DPaneFff,
	(void*)resize__9J2DWindowFff,
	(void*)setCullBack__7J2DPaneFb,
	(void*)setCullBack__7J2DPaneF11_GXCullMode,
	(void*)setAlpha__7J2DPaneFUc,
	(void*)setConnectParent__7J2DPaneFb,
	(void*)calcMtx__7J2DPaneFv,
	(void*)update__7J2DPaneFv,
	(void*)drawSelf__9J2DWindowFff,
	(void*)drawSelf__9J2DWindowFffPA3_A4_f,
	(void*)search__7J2DPaneFUx,
	(void*)searchUserInfo__7J2DPaneFUx,
	(void*)makeMatrix__7J2DPaneFff,
	(void*)makeMatrix__7J2DPaneFffff,
	(void*)isUsed__9J2DWindowFPC7ResTIMG,
	(void*)isUsed__9J2DWindowFPC7ResFONT,
	(void*)clearAnmTransform__7J2DPaneFv,
	(void*)rewriteAlpha__9J2DWindowFv,
	(void*)setAnimation__7J2DPaneFP10J2DAnmBase,
	(void*)setAnimation__7J2DPaneFP15J2DAnmTransform,
	(void*)setAnimation__7J2DPaneFP11J2DAnmColor,
	(void*)setAnimation__7J2DPaneFP16J2DAnmTexPattern,
	(void*)setAnimation__7J2DPaneFP19J2DAnmTextureSRTKey,
	(void*)setAnimation__7J2DPaneFP15J2DAnmTevRegKey,
	(void*)setAnimation__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setAnimation__7J2DPaneFP14J2DAnmVtxColor,
	(void*)animationTransform__7J2DPaneFPC15J2DAnmTransform,
	(void*)setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor,
	(void*)setAnimationVC__7J2DPaneFP14J2DAnmVtxColor,
	(void*)animationPane__7J2DPaneFPC15J2DAnmTransform,
	(void*)func_802FA928,
	(void*)func_802FAED0,
	(void*)draw__9J2DWindowFffff,
	(void*)setBlack__9J2DWindowFQ28JUtility6TColor,
	(void*)setWhite__9J2DWindowFQ28JUtility6TColor,
	(void*)setBlackWhite__9J2DWindowFQ28JUtility6TColorQ28JUtility6TColor,
	(void*)getBlack__9J2DWindowCFv,
	(void*)getWhite__9J2DWindowCFv,
	(void*)getFrameTexture__9J2DWindowCFUcUc,
	(void*)getContentsTexture__9J2DWindowCFUc,
	(void*)getMaterial__9J2DWindowCFRQ29J2DWindow9TMaterial,
	(void*)getFrameMaterial__9J2DWindowCFUc,
	(void*)getContentsMaterial__9J2DWindowCFv,
	(void*)func_802FB338,
	/* padding */
	NULL,
};

/* 802F9A7C-802F9B74 00F8+00 s=0 e=1 z=0  None .text      __ct__9J2DWindowFv                                           */
//	802F9A90: 802F5BF8 (__ct__7J2DPaneFv)
//	802F9A94: 803CD108 (__vt__9J2DWindow)
//	802F9A98: 803CD108 (__vt__9J2DWindow)
//	802F9B08: 802FB12C (setContentsColor__9J2DWindowFQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DWindow::J2DWindow() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/__ct__9J2DWindowFv.s"
}
#pragma pop


/* 802F9B74-802F9C10 009C+00 s=0 e=1 z=0  None .text      __ct__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP10JKRArchive */
//	802F9B84: 803621D8 (_savegpr_28)
//	802F9B98: 802F5BF8 (__ct__7J2DPaneFv)
//	802F9B9C: 803CD108 (__vt__9J2DWindow)
//	802F9BA0: 803CD108 (__vt__9J2DWindow)
//	802F9BF0: 802FA118 (private_readStream__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP10JKRArchive)
//	802F9BFC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  JKRArchive* False
// 	 JKRArchive False
asm J2DWindow::J2DWindow(J2DPane* param_0, JSURandomInputStream* param_1, JKRArchive* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/__ct__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP10JKRArchive.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A1C10-803A1C20 0010+00 s=1 e=0 z=0  None .rodata    @1831                                                        */
SECTION_RODATA static u8 const lit_1831[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 803A1C20-803A1C30 0010+00 s=1 e=0 z=0  None .rodata    @1849                                                        */
SECTION_RODATA static u8 const lit_1849[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 80456240-80456248 0008+00 s=7 e=0 z=0  None .sdata2    @1971                                                        */
SECTION_SDATA2 static f64 lit_1971 = 4503601774854144.0 /* cast s32 to float */;

/* 80456248-80456250 0008+00 s=2 e=0 z=0  None .sdata2    @1974                                                        */
SECTION_SDATA2 static f64 lit_1974 = 4503599627370496.0 /* cast u32 to float */;

/* 802F9C10-802FA118 0508+00 s=0 e=1 z=0  None .text      __ct__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP11J2DMaterial */
//	802F9C20: 803621D0 (_savegpr_26)
//	802F9C34: 802F5BF8 (__ct__7J2DPaneFv)
//	802F9C38: 803CD108 (__vt__9J2DWindow)
//	802F9C3C: 803CD108 (__vt__9J2DWindow)
//	802F9CA0: 802DC298 (read__14JSUInputStreamFPvl)
//	802F9CD4: 802DC458 (peek__20JSURandomInputStreamFPvl)
//	802F9CE4: 802F7B18 (makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream)
//	802F9CF8: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802F9D08: 802DC298 (read__14JSUInputStreamFPvl)
//	802F9D0C: 803A1C10 (lit_1831)
//	802F9D10: 803A1C10 (lit_1831)
//	802F9DF0: 80456240 (lit_1971)
//	802F9E2C: 80456248 (lit_1974)
//	802F9E88: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802F9FE4: 803A1C20 (lit_1849)
//	802F9FE8: 803A1C20 (lit_1849)
//	802FA0F8: 802FA604 (initinfo2__9J2DWindowFv)
//	802FA104: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  J2DMaterial* False
// 	 J2DMaterial False
asm J2DWindow::J2DWindow(J2DPane* param_0, JSURandomInputStream* param_1, J2DMaterial* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/__ct__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP11J2DMaterial.s"
}
#pragma pop


/* 802FA118-802FA604 04EC+00 s=1 e=0 z=0  None .text      private_readStream__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP10JKRArchive */
//	802FA140: 803621CC (_savegpr_25)
//	802FA178: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA190: 802F60C4 (makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream)
//	802FA1A0: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA1B4: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA1BC: 80456248 (lit_1974)
//	802FA1E0: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA1E8: 80456248 (lit_1974)
//	802FA20C: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA214: 80456248 (lit_1974)
//	802FA23C: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA244: 80456248 (lit_1974)
//	802FA284: 802F7DB8 (getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive)
//	802FA294: 802CEC4C (__nw__FUl)
//	802FA2B0: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802FA2D8: 802F7DB8 (getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive)
//	802FA2E8: 802CEC4C (__nw__FUl)
//	802FA304: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802FA32C: 802F7DB8 (getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive)
//	802FA33C: 802CEC4C (__nw__FUl)
//	802FA358: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802FA380: 802F7DB8 (getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive)
//	802FA390: 802CEC4C (__nw__FUl)
//	802FA3AC: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802FA3D4: 802F7DB8 (getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive)
//	802FA3E4: 802CEC4C (__nw__FUl)
//	802FA3F8: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802FA40C: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA424: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA43C: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA454: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA46C: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA4A0: 802F7DB8 (getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive)
//	802FA4B0: 802CEC4C (__nw__FUl)
//	802FA4CC: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802FA548: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA58C: 802DC298 (read__14JSUInputStreamFPvl)
//	802FA5C8: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802FA5D0: 802FA604 (initinfo2__9J2DWindowFv)
//	802FA5F0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  JKRArchive* False
// 	 JKRArchive False
asm void J2DWindow::private_readStream(J2DPane* param_0, JSURandomInputStream* param_1, JKRArchive* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/private_readStream__9J2DWindowFP7J2DPaneP20JSURandomInputStreamP10JKRArchive.s"
}
#pragma pop


/* 802FA604-802FA880 027C+00 s=2 e=0 z=0  None .text      initinfo2__9J2DWindowFv                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DWindow::initinfo2() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/initinfo2__9J2DWindowFv.s"
}
#pragma pop


/* 802FA880-802FA928 00A8+00 s=1 e=1 z=0  None .text      __dt__9J2DWindowFv                                           */
//	802FA8A0: 803CD108 (__vt__9J2DWindow)
//	802FA8A4: 803CD108 (__vt__9J2DWindow)
//	802FA8B4: 802DE234 (__dt__10JUTTextureFv)
//	802FA8C0: 802DE234 (__dt__10JUTTextureFv)
//	802FA8CC: 802DE234 (__dt__10JUTTextureFv)
//	802FA8D8: 802DE234 (__dt__10JUTTextureFv)
//	802FA8E0: 802CED3C (__dl__FPv)
//	802FA8EC: 802DE234 (__dt__10JUTTextureFv)
//	802FA8F8: 802F658C (__dt__7J2DPaneFv)
//	802FA908: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DWindow::~J2DWindow() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/__dt__9J2DWindowFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456250-80456254 0004+00 s=5 e=0 z=0  None .sdata2    @2156                                                        */
SECTION_SDATA2 static u8 lit_2156[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 802FA928-802FAA5C 0134+00 s=1 e=0 z=0  None .text      draw__9J2DWindowFRCQ29JGeometry8TBox2<f>                     */
//	802FA978: 80456240 (lit_1971)
//	802FAA24: 80456250 (lit_2156)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DWindow::draw(JGeometry::TBox2<f32> const& param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/func_802FA928.s"
}
#pragma pop


/* 802FAA5C-802FAED0 0474+00 s=2 e=0 z=0  None .text      draw_private__9J2DWindowFRCQ29JGeometry8TBox2<f>RCQ29JGeometry8TBox2<f> */
//	802FAB04: 8035B58C (GXClearVtxDesc)
//	802FAB10: 8035AEB8 (GXSetVtxDesc)
//	802FAB1C: 8035AEB8 (GXSetVtxDesc)
//	802FAB28: 8035AEB8 (GXSetVtxDesc)
//	802FAB30: 8035BDFC (GXSetNumTexGens)
//	802FAB78: 80456240 (lit_1971)
//	802FAC10: 802FB7C8 (drawFrameTexture__9J2DWindowFP10JUTTextureffbbb)
//	802FAC38: 802FB7C8 (drawFrameTexture__9J2DWindowFP10JUTTextureffbbb)
//	802FAC88: 80456240 (lit_1971)
//	802FACAC: 802FB634 (drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb)
//	802FACD4: 802FB7C8 (drawFrameTexture__9J2DWindowFP10JUTTextureffbbb)
//	802FAD20: 80456240 (lit_1971)
//	802FAD44: 802FB634 (drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb)
//	802FAD8C: 80456240 (lit_1971)
//	802FADB8: 802FB634 (drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb)
//	802FADE0: 802FB7C8 (drawFrameTexture__9J2DWindowFP10JUTTextureffbbb)
//	802FAE28: 80456240 (lit_1971)
//	802FAE50: 802FB634 (drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb)
//	802FAE5C: 8035F198 (GXSetTevOp)
//	802FAE70: 8035F6F4 (GXSetTevOrder)
//	802FAE78: 8035BDFC (GXSetNumTexGens)
//	802FAE84: 8035AEB8 (GXSetVtxDesc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DWindow::draw_private(JGeometry::TBox2<f32> const& param_0, JGeometry::TBox2<f32> const& param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/func_802FAA5C.s"
}
#pragma pop


/* 802FAED0-802FB000 0130+00 s=1 e=0 z=0  None .text      draw__9J2DWindowFRCQ29JGeometry8TBox2<f>RCQ29JGeometry8TBox2<f> */
//	802FAEE0: 803621DC (_savegpr_29)
//	802FAF00: 80456240 (lit_1971)
//	802FAF64: 80456250 (lit_2156)
//	802FAF84: 8036024C (GXLoadPosMtxImm)
//	802FAF8C: 803602EC (GXSetCurrentMtx)
//	802FAFB0: 80456250 (lit_2156)
//	802FAFD0: 802FAA5C (func_802FAA5C)
//	802FAFD8: 80346484 (PSMTXIdentity)
//	802FAFE4: 8036024C (GXLoadPosMtxImm)
//	802FAFEC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DWindow::draw(JGeometry::TBox2<f32> const& param_0, JGeometry::TBox2<f32> const& param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/func_802FAED0.s"
}
#pragma pop


/* 802FB000-802FB12C 012C+00 s=1 e=1 z=0  None .text      resize__9J2DWindowFff                                        */
//	802FB054: 802F6FF8 (resize__7J2DPaneFff)
//	802FB0DC: 802F6FF8 (resize__7J2DPaneFff)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
asm void J2DWindow::resize(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/resize__9J2DWindowFff.s"
}
#pragma pop


/* 802FB12C-802FB1D8 00AC+00 s=1 e=0 z=0  None .text      setContentsColor__9J2DWindowFQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColor */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUtility::TColor False
//  JUtility::TColor False
//  JUtility::TColor False
//  JUtility::TColor False
asm void J2DWindow::setContentsColor(JUtility::TColor param_0, JUtility::TColor param_1, JUtility::TColor param_2, JUtility::TColor param_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/func_802FB12C.s"
}
#pragma pop


/* 802FB1D8-802FB240 0068+00 s=1 e=1 z=0  None .text      drawSelf__9J2DWindowFff                                      */
//	802FB200: 80346484 (PSMTXIdentity)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
asm void J2DWindow::drawSelf(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/drawSelf__9J2DWindowFff.s"
}
#pragma pop


/* 802FB240-802FB338 00F8+00 s=1 e=0 z=0  None .text      drawSelf__9J2DWindowFffPA3_A4_f                              */
//	802FB29C: 80456240 (lit_1971)
//	802FB2F8: 803464E4 (PSMTXConcat)
//	802FB304: 8036024C (GXLoadPosMtxImm)
//	802FB314: 802FAA5C (func_802FAA5C)
//	802FB320: 802F7264 (func_802F7264)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
asm void J2DWindow::drawSelf(f32 param_0, f32 param_1, f32 (* param_2)[3][4]) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/drawSelf__9J2DWindowFffPA3_A4_f.s"
}
#pragma pop


/* 802FB338-802FB634 02FC+00 s=1 e=0 z=0  None .text      drawContents__9J2DWindowFRCQ29JGeometry8TBox2<f>             */
//	802FB348: 803621DC (_savegpr_29)
//	802FB390: 8035DB30 (GXSetNumChans)
//	802FB398: 8035BDFC (GXSetNumTexGens)
//	802FB3A0: 8035F890 (GXSetNumTevStages)
//	802FB3AC: 8035F198 (GXSetTevOp)
//	802FB3C0: 8035F6F4 (GXSetTevOrder)
//	802FB420: 8035FBF0 (GXSetBlendMode)
//	802FB438: 8035FBF0 (GXSetBlendMode)
//	802FB43C: 8035B58C (GXClearVtxDesc)
//	802FB448: 8035AEB8 (GXSetVtxDesc)
//	802FB454: 8035AEB8 (GXSetVtxDesc)
//	802FB474: 8035DB6C (GXSetChanCtrl)
//	802FB47C: 8035F0D4 (GXSetNumIndStages)
//	802FB488: 8035F0F8 (GXSetTevDirect)
//	802FB528: 8035B5C4 (GXSetVtxAttrFmt)
//	802FB538: 8035C764 (GXBegin)
//	802FB550: 80456250 (lit_2156)
//	802FB56C: 80456250 (lit_2156)
//	802FB588: 80456250 (lit_2156)
//	802FB5A0: 80456250 (lit_2156)
//	802FB5C4: 8035B5C4 (GXSetVtxAttrFmt)
//	802FB5CC: 8035B58C (GXClearVtxDesc)
//	802FB5D8: 8035AEB8 (GXSetVtxDesc)
//	802FB5E4: 8035AEB8 (GXSetVtxDesc)
//	802FB5F0: 8035AEB8 (GXSetVtxDesc)
//	802FB5F8: 8035BDFC (GXSetNumTexGens)
//	802FB618: 802FB868 (drawContentsTexture__9J2DWindowFffff)
//	802FB620: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DWindow::drawContents(JGeometry::TBox2<f32> const& param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/func_802FB338.s"
}
#pragma pop


/* 802FB634-802FB7C8 0194+00 s=2 e=0 z=0  None .text      drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb      */
//	802FB664: 803621D0 (_savegpr_26)
//	802FB6A0: 802DE840 (load__10JUTTextureF11_GXTexMapID)
//	802FB6C4: 802FBB90 (setTevMode__9J2DWindowFP10JUTTextureQ28JUtility6TColorQ28JUtility6TColor)
//	802FB6EC: 8035B5C4 (GXSetVtxAttrFmt)
//	802FB6FC: 8035C764 (GXBegin)
//	802FB70C: 80456250 (lit_2156)
//	802FB72C: 80456250 (lit_2156)
//	802FB748: 80456250 (lit_2156)
//	802FB764: 80456250 (lit_2156)
//	802FB78C: 8035B5C4 (GXSetVtxAttrFmt)
//	802FB7B4: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTTexture* False
// 	 JUTTexture False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
//  u16 False
//  u16 False
//  u16 False
//  u16 False
//  bool False
asm void J2DWindow::drawFrameTexture(JUTTexture* param_0, f32 param_1, f32 param_2, f32 param_3, f32 param_4, u16 param_5, u16 param_6, u16 param_7, u16 param_8, bool param_9) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb.s"
}
#pragma pop


/* 802FB7C8-802FB868 00A0+00 s=1 e=0 z=0  None .text      drawFrameTexture__9J2DWindowFP10JUTTextureffbbb              */
//	802FB820: 80456240 (lit_1971)
//	802FB854: 802FB634 (drawFrameTexture__9J2DWindowFP10JUTTextureffffUsUsUsUsb)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTTexture* False
// 	 JUTTexture False
//  f32 False
//  f32 False
//  bool False
//  bool False
//  bool False
asm void J2DWindow::drawFrameTexture(JUTTexture* param_0, f32 param_1, f32 param_2, bool param_3, bool param_4, bool param_5) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/drawFrameTexture__9J2DWindowFP10JUTTextureffbbb.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456254-80456258 0004+00 s=1 e=0 z=0  None .sdata2    @2984                                                        */
SECTION_SDATA2 static f32 lit_2984 = 1.0f;

/* 80456258-80456260 0004+04 s=1 e=0 z=0  None .sdata2    @2985                                                        */
SECTION_SDATA2 static f32 lit_2985[1 + 1 /* padding */] = {
	0.5f,
	/* padding */
	0.0f,
};

/* 802FB868-802FBB90 0328+00 s=1 e=0 z=0  None .text      drawContentsTexture__9J2DWindowFffff                         */
//	802FB8D8: 80456240 (lit_1971)
//	802FB910: 80456254 (lit_2984)
//	802FB91C: 80456258 (lit_2985)
//	802FBA18: 802DE840 (load__10JUTTextureF11_GXTexMapID)
//	802FBA44: 802FBB90 (setTevMode__9J2DWindowFP10JUTTextureQ28JUtility6TColorQ28JUtility6TColor)
//	802FBA5C: 8035B5C4 (GXSetVtxAttrFmt)
//	802FBA74: 8035B5C4 (GXSetVtxAttrFmt)
//	802FBA84: 8035C764 (GXBegin)
//	802FBA94: 80456250 (lit_2156)
//	802FBAB4: 80456250 (lit_2156)
//	802FBAD4: 80456250 (lit_2156)
//	802FBAF4: 80456250 (lit_2156)
//	802FBB20: 8035B5C4 (GXSetVtxAttrFmt)
//	802FBB38: 8035B5C4 (GXSetVtxAttrFmt)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
asm void J2DWindow::drawContentsTexture(f32 param_0, f32 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/drawContentsTexture__9J2DWindowFffff.s"
}
#pragma pop


/* 802FBB90-802FBE60 02D0+00 s=2 e=0 z=0  None .text      setTevMode__9J2DWindowFP10JUTTextureQ28JUtility6TColorQ28JUtility6TColor */
//	802FBBA0: 803621DC (_savegpr_29)
//	802FBBDC: 8035F6F4 (GXSetTevOrder)
//	802FBBF4: 8035F224 (GXSetTevColorIn)
//	802FBC1C: 8035F268 (GXSetTevAlphaIn)
//	802FBC38: 8035F37C (GXSetTevColor)
//	802FBC50: 8035F268 (GXSetTevAlphaIn)
//	802FBC6C: 8035F2AC (GXSetTevColorOp)
//	802FBC88: 8035F314 (GXSetTevAlphaOp)
//	802FBC90: 8035F890 (GXSetNumTevStages)
//	802FBCA4: 8035FBF0 (GXSetBlendMode)
//	802FBCBC: 8035F6F4 (GXSetTevOrder)
//	802FBCD0: 8035F37C (GXSetTevColor)
//	802FBCE4: 8035F37C (GXSetTevColor)
//	802FBCFC: 8035F224 (GXSetTevColorIn)
//	802FBD24: 8035F268 (GXSetTevAlphaIn)
//	802FBD40: 8035F37C (GXSetTevColor)
//	802FBD58: 8035F268 (GXSetTevAlphaIn)
//	802FBD74: 8035F2AC (GXSetTevColorOp)
//	802FBD90: 8035F314 (GXSetTevAlphaOp)
//	802FBDA4: 8035F6F4 (GXSetTevOrder)
//	802FBDBC: 8035F224 (GXSetTevColorIn)
//	802FBDD4: 8035F268 (GXSetTevAlphaIn)
//	802FBDF0: 8035F2AC (GXSetTevColorOp)
//	802FBE0C: 8035F314 (GXSetTevAlphaOp)
//	802FBE14: 8035F890 (GXSetNumTevStages)
//	802FBE30: 8035BB7C (GXSetTexCoordGen2)
//	802FBE44: 8035FBF0 (GXSetBlendMode)
//	802FBE4C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTTexture* False
// 	 JUTTexture False
//  JUtility::TColor False
//  JUtility::TColor False
asm void J2DWindow::setTevMode(JUTTexture* param_0, JUtility::TColor param_1, JUtility::TColor param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/setTevMode__9J2DWindowFP10JUTTextureQ28JUtility6TColorQ28JUtility6TColor.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A1C30-803A1C40 0010+00 s=1 e=0 z=0  None .rodata    @3028                                                        */
SECTION_RODATA static u8 const lit_3028[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

/* 802FBE60-802FBEDC 007C+00 s=1 e=0 z=0  None .text      getFrameTexture__9J2DWindowCFUcUc                            */
//	802FBE64: 803A1C30 (lit_3028)
//	802FBE68: 803A1C30 (lit_3028)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  u8 False
asm void J2DWindow::getFrameTexture(u8 param_0, u8 param_1) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/getFrameTexture__9J2DWindowCFUcUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A1C40-803A1C58 0014+04 s=1 e=0 z=0  None .rodata    @3037                                                        */
SECTION_RODATA static u8 const lit_3037[20 + 4 /* padding */] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	/* padding */
	0x00, 0x00, 0x00, 0x00,
};

/* 802FBEDC-802FBF98 00BC+00 s=1 e=0 z=0  None .text      isUsed__9J2DWindowFPC7ResTIMG                                */
//	802FBEEC: 803A1C40 (lit_3037)
//	802FBEF0: 803A1C40 (lit_3037)
//	802FBF84: 802F7430 (isUsed__7J2DPaneFPC7ResTIMG)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DWindow::isUsed(ResTIMG const* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/isUsed__9J2DWindowFPC7ResTIMG.s"
}
#pragma pop


/* 802FBF98-802FBFA0 0008+00 s=1 e=1 z=0  None .text      getTypeID__9J2DWindowCFv                                     */
// False False
//  s32 False
s32 J2DWindow::getTypeID() const {
	return 17;
}


/* 802FBFA0-802FBFE8 0048+00 s=1 e=0 z=0  None .text      draw__9J2DWindowFffff                                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
asm void J2DWindow::draw(f32 param_0, f32 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/draw__9J2DWindowFffff.s"
}
#pragma pop


/* 802FBFE8-802FC000 0018+00 s=1 e=0 z=0  None .text      getContentsTexture__9J2DWindowCFUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DWindow::getContentsTexture(u8 param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/getContentsTexture__9J2DWindowCFUc.s"
}
#pragma pop


/* 802FC000-802FC01C 001C+00 s=1 e=0 z=0  None .text      getMaterial__9J2DWindowCFRQ29J2DWindow9TMaterial             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J2DWindow::TMaterial& False
// 	 J2DWindow::TMaterial False
asm void J2DWindow::getMaterial(J2DWindow::TMaterial& param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/getMaterial__9J2DWindowCFRQ29J2DWindow9TMaterial.s"
}
#pragma pop


/* 802FC01C-802FC024 0008+00 s=1 e=0 z=0  None .text      getFrameMaterial__9J2DWindowCFUc                             */
// True False
//  bool False
//  u8 False
bool J2DWindow::getFrameMaterial(u8 param_0) const {
	return false;
}


/* 802FC024-802FC02C 0008+00 s=1 e=0 z=0  None .text      getContentsMaterial__9J2DWindowCFv                           */
// True False
//  bool False
bool J2DWindow::getContentsMaterial() const {
	return false;
}


/* 802FC02C-802FC04C 0020+00 s=1 e=0 z=0  None .text      isUsed__9J2DWindowFPC7ResFONT                                */
//	802FC038: 802F74B8 (isUsed__7J2DPaneFPC7ResFONT)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
asm void J2DWindow::isUsed(ResFONT const* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DWindow/isUsed__9J2DWindowFPC7ResFONT.s"
}
#pragma pop


/* 802FC04C-802FC050 0004+00 s=1 e=0 z=0  None .text      rewriteAlpha__9J2DWindowFv                                   */
// True False
//  void False
void J2DWindow::rewriteAlpha() {
	/* empty function */
}


