// 
// Generated By: dol2asm
// Translation Unit: J2DPane
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/J2DGraph/J2DPane.h"

// 
// Types:
// 

struct _GXCullMode {
};

struct ResTIMG {
};

struct ResFONT {
};

struct JKRArchive {
};

struct JSUInputStream {
	/* 802DC298 */ // False False
//  void* False
// 	 void False
//  s32 False
void read(void*, s32);
};

struct JUTResReference {
	/* 802DE078 */ // False False
//  JSUInputStream* False
// 	 JSUInputStream False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
void getResource(JSUInputStream*, u32, JKRArchive*);
};

struct JSUStreamSeekFrom {
};

struct JSURandomInputStream {
	/* 802DC370 */ // False False
//  s32 False
void align(s32);
	/* 802DC458 */ // False False
//  void* False
// 	 void False
//  s32 False
void peek(void*, s32);
	/* 802DC4DC */ // False False
//  s32 False
//  JSUStreamSeekFrom False
void seek(s32, JSUStreamSeekFrom);
};

struct JSUPtrLink {
	/* 802DBDFC */ // False False
//  void* False
// 	 void False
JSUPtrLink(void*);
	/* 802DBE14 */ // False False
~JSUPtrLink();
};

struct JSUPtrList {
	/* 802DBEAC */ // False False
~JSUPtrList();
	/* 802DBF14 */ // False False
void initiate();
	/* 802DBF4C */ // False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
void append(JSUPtrLink*);
	/* 802DC094 */ // False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
//  JSUPtrLink* False
// 	 JSUPtrLink False
void insert(JSUPtrLink*, JSUPtrLink*);
};

struct JGeometry {
	template <typename A1>
	struct TBox2 { };
	/* TBox2<f32> */
	struct TBox2__template0 {
	};

};

struct J2DRotateAxis {
};

struct J2DAnmTransform {
};

struct J2DAnmColor {
};

struct J2DAnmTevRegKey {
};

struct J2DAnmTextureSRTKey {
};

struct J2DBasePosition {
};

struct J2DGrafContext {
	/* 802E8E20 */ // False False
void setScissor();
	/* 802E90C0 */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void scissor(JGeometry::TBox2<f32> const&);
};

struct J2DAnmTexPattern {
};

struct J2DAnmBase {
};

struct J2DAnmVtxColor {
};

struct J2DAnmVisibilityFull {
};

struct J2DPane {
	/* 80020158 */ // False False
//  u8 False
void setAlpha(u8);
	/* 80053BC0 */ // False False
void calcMtx();
	/* 80053C00 */ // False False
//  f32 False
//  f32 False
void makeMatrix(f32, f32);
	/* 802F7540 */ // False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
void makeMatrix(f32, f32, f32, f32);
	/* 80053C3C */ // False False
//  s32 False
s32 getTypeID() const;
	/* 80256018 */ // False False
//  void False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
void setAnimation(J2DAnmVtxColor*);
	/* 8025601C */ // False False
//  void False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
void setAnimation(J2DAnmVisibilityFull*);
	/* 80256020 */ // False False
//  void False
//  J2DAnmTexPattern* False
// 	 J2DAnmTexPattern False
void setAnimation(J2DAnmTexPattern*);
	/* 8018BF28 */ // False False
//  void False
//  J2DAnmTextureSRTKey* False
// 	 J2DAnmTextureSRTKey False
void setAnimation(J2DAnmTextureSRTKey*);
	/* 802F7FC4 */ // False False
//  J2DAnmTransform* False
// 	 J2DAnmTransform False
void setAnimation(J2DAnmTransform*);
	/* 80126350 */ // False False
//  void False
//  J2DAnmTevRegKey* False
// 	 J2DAnmTevRegKey False
void setAnimation(J2DAnmTevRegKey*);
	/* 80126354 */ // False False
//  void False
//  J2DAnmColor* False
// 	 J2DAnmColor False
void setAnimation(J2DAnmColor*);
	/* 802F7EF4 */ // False False
//  J2DAnmBase* False
// 	 J2DAnmBase False
void setAnimation(J2DAnmBase*);
	/* 802F5E88 */ // False True
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
J2DPane(u64, JGeometry::TBox2<f32> const&);
	/* 802F5F9C */ // False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u8 False
J2DPane(J2DPane*, JSURandomInputStream*, u8);
	/* 802F5BF8 */ // False False
J2DPane();
	/* 802F5D40 */ // False True
//  J2DPane* False
// 	 J2DPane False
//  bool False
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
J2DPane(J2DPane*, bool, u64, JGeometry::TBox2<f32> const&);
	/* 802F5CB8 */ // True False
void initiate();
	/* 802F5F08 */ // False True
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void initialize(u64, JGeometry::TBox2<f32> const&);
	/* 802F5DD0 */ // False True
//  J2DPane* False
// 	 J2DPane False
//  bool False
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void initialize(J2DPane*, bool, u64, JGeometry::TBox2<f32> const&);
	/* 802F60C4 */ // False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
void makePaneStream(J2DPane*, JSURandomInputStream*);
	/* 802F63F8 */ // True False
//  J2DPane* False
// 	 J2DPane False
void changeUseTrans(J2DPane*);
	/* 802F658C */ // False False
~J2DPane();
	/* 802F666C */ // False False
//  J2DPane* False
// 	 J2DPane False
void appendChild(J2DPane*);
	/* 802F6714 */ // False False
//  J2DPane* False
// 	 J2DPane False
//  J2DPane* False
// 	 J2DPane False
void insertChild(J2DPane*, J2DPane*);
	/* 802F67E0 */ // False False
//  f32 False
//  f32 False
//  J2DGrafContext const* False
// 	 J2DGrafContext const False
// 		 J2DGrafContext False
//  bool False
//  bool False
void draw(f32, f32, J2DGrafContext const*, bool, bool);
	/* 802F6D18 */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void place(JGeometry::TBox2<f32> const&);
	/* 802F6F60 */ // False False
//  f32 False
//  f32 False
void move(f32, f32);
	/* 802F6FB4 */ // False False
//  f32 False
//  f32 False
void add(f32, f32);
	/* 802F6FF8 */ // False False
//  f32 False
//  f32 False
void resize(f32, f32);
	/* 802F7100 */ // False False
void getBounds();
	/* 802F720C */ // True False
//  f32 False
void rotate(f32);
	/* 802F71DC */ // False False
//  f32 False
//  f32 False
//  J2DRotateAxis False
//  f32 False
void rotate(f32, f32, J2DRotateAxis, f32);
	/* 802F7264 */ // False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void clip(JGeometry::TBox2<f32> const&);
	/* 802F72E0 */ // False False
//  u64 False
void search(u64);
	/* 802F7388 */ // False False
//  u64 False
void searchUserInfo(u64);
	/* 802F7430 */ // False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void isUsed(ResTIMG const*);
	/* 802F74B8 */ // False False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
void isUsed(ResFONT const*);
	/* 802F7680 */ // False False
//  _GXCullMode False
void setCullBack(_GXCullMode);
	/* 802F8428 */ // False False
//  bool False
void setCullBack(bool);
	/* 802F76F8 */ // False False
//  J2DBasePosition False
void setBasePosition(J2DBasePosition);
	/* 802F77D0 */ // False False
//  bool False
//  bool False
void setInfluencedAlpha(bool, bool);
	/* 802F79A8 */ // False False
//  u8 False
void getGlbVtx(u8) const;
	/* 802F7A8C */ // False False
void getFirstChildPane();
	/* 802F7AC4 */ // False False
void getNextChildPane();
	/* 802F7AFC */ // False False
void getParentPane();
	/* 802F7B18 */ // False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
void makePaneExStream(J2DPane*, JSURandomInputStream*);
	/* 802F7D00 */ // False False
//  f32 False
//  u8 False
void J2DCast_F32_to_S16(f32, u8);
	/* 802F7DB8 */ // False False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
void getPointer(JSURandomInputStream*, u32, JKRArchive*);
	/* 802F8080 */ // False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
void animationTransform(J2DAnmTransform const*);
	/* 802F7FCC */ // False False
void animationTransform();
	/* 802F8004 */ // False False
void clearAnmTransform();
	/* 802F8118 */ // False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
void setVisibileAnimation(J2DAnmVisibilityFull*);
	/* 802F81A0 */ // False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
void setVtxColorAnimation(J2DAnmVtxColor*);
	/* 802F8228 */ // False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
void animationPane(J2DAnmTransform const*);
	/* 802F82C0 */ // True False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
void updateTransform(J2DAnmTransform const*);
	/* 802F83C8 */ // True False
//  void False
//  f32 False
//  f32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void drawSelf(f32, f32, f32 (* )[3][4]);
	/* 802F8478 */ // False False
//  void False
//  f32 False
//  f32 False
void drawSelf(f32, f32);
	/* 802F83CC */ // False False
//  void False
void rewriteAlpha();
	/* 802F83D0 */ // False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
void setAnimationVF(J2DAnmVisibilityFull*);
	/* 802F83FC */ // False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
void setAnimationVC(J2DAnmVtxColor*);
	/* 802F8464 */ // False False
//  bool False
void setConnectParent(bool);
	/* 802F8474 */ // False False
//  void False
void update();
};

struct J2DOrthoGraph {
	/* 802E987C */ // False True
//  JGeometry::TBox2<f32>* False
// 	 JGeometry::TBox2<f32> True
// 		 f32 False
//  JGeometry::TBox2<f32> const* False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
void scissorBounds(JGeometry::TBox2<f32>*, JGeometry::TBox2<f32> const*);
};

struct J2DDataManage {
	/* 8030CE7C */ // False False
//  JSUInputStream* False
// 	 JSUInputStream False
void get(JSUInputStream*);
};

// 
// Forward References:
// 


// False False
extern "C" void __ct__7J2DPaneFv();
// True False
extern "C" void initiate__7J2DPaneFv();
// False True
//  J2DPane* False
// 	 J2DPane False
//  bool False
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802F5D40();
// False True
//  J2DPane* False
// 	 J2DPane False
//  bool False
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802F5DD0();
// False True
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802F5E88();
// False True
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802F5F08();
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u8 False
extern "C" void __ct__7J2DPaneFP7J2DPaneP20JSURandomInputStreamUc();
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
extern "C" void makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream();
// True False
//  J2DPane* False
// 	 J2DPane False
extern "C" void changeUseTrans__7J2DPaneFP7J2DPane();
// False False
extern "C" void __dt__7J2DPaneFv();
// False False
//  J2DPane* False
// 	 J2DPane False
extern "C" void appendChild__7J2DPaneFP7J2DPane();
// False False
//  J2DPane* False
// 	 J2DPane False
//  J2DPane* False
// 	 J2DPane False
extern "C" void insertChild__7J2DPaneFP7J2DPaneP7J2DPane();
// False False
//  f32 False
//  f32 False
//  J2DGrafContext const* False
// 	 J2DGrafContext const False
// 		 J2DGrafContext False
//  bool False
//  bool False
extern "C" void draw__7J2DPaneFffPC14J2DGrafContextbb();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802F6D18();
// False False
//  f32 False
//  f32 False
extern "C" void move__7J2DPaneFff();
// False False
//  f32 False
//  f32 False
extern "C" void add__7J2DPaneFff();
// False False
//  f32 False
//  f32 False
extern "C" void resize__7J2DPaneFff();
// False False
extern "C" void getBounds__7J2DPaneFv();
// False False
//  f32 False
//  f32 False
//  J2DRotateAxis False
//  f32 False
extern "C" void rotate__7J2DPaneFff13J2DRotateAxisf();
// True False
//  f32 False
extern "C" void rotate__7J2DPaneFf();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802F7264();
// False False
//  u64 False
extern "C" void search__7J2DPaneFUx();
// False False
//  u64 False
extern "C" void searchUserInfo__7J2DPaneFUx();
// False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void isUsed__7J2DPaneFPC7ResTIMG();
// False False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
extern "C" void isUsed__7J2DPaneFPC7ResFONT();
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
extern "C" void makeMatrix__7J2DPaneFffff();
// False False
//  _GXCullMode False
extern "C" void setCullBack__7J2DPaneF11_GXCullMode();
// False False
//  J2DBasePosition False
extern "C" void setBasePosition__7J2DPaneF15J2DBasePosition();
// False False
//  bool False
//  bool False
extern "C" void setInfluencedAlpha__7J2DPaneFbb();
// False False
//  u8 False
extern "C" void getGlbVtx__7J2DPaneCFUc();
// False False
extern "C" void getFirstChildPane__7J2DPaneFv();
// False False
extern "C" void getNextChildPane__7J2DPaneFv();
// False False
extern "C" void getParentPane__7J2DPaneFv();
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
extern "C" void makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream();
// False False
//  f32 False
//  u8 False
extern "C" void J2DCast_F32_to_S16__7J2DPaneFfUc();
// False False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive();
// False False
//  J2DAnmBase* False
// 	 J2DAnmBase False
extern "C" void setAnimation__7J2DPaneFP10J2DAnmBase();
// False False
//  J2DAnmTransform* False
// 	 J2DAnmTransform False
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTransform();
// False False
extern "C" void animationTransform__7J2DPaneFv();
// False False
extern "C" void clearAnmTransform__7J2DPaneFv();
// False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
extern "C" void animationTransform__7J2DPaneFPC15J2DAnmTransform();
// False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
extern "C" void setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull();
// False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
extern "C" void setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor();
// False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
extern "C" void animationPane__7J2DPaneFPC15J2DAnmTransform();
// True False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
extern "C" void updateTransform__7J2DPaneFPC15J2DAnmTransform();
// True False
//  void False
//  f32 False
//  f32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
extern "C" void drawSelf__7J2DPaneFffPA3_A4_f();
// False False
//  void False
extern "C" void rewriteAlpha__7J2DPaneFv();
// False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
extern "C" void setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull();
// False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
extern "C" void setAnimationVC__7J2DPaneFP14J2DAnmVtxColor();
// False False
//  bool False
extern "C" void setCullBack__7J2DPaneFb();
// False False
//  bool False
extern "C" void setConnectParent__7J2DPaneFb();
// False False
//  void False
extern "C" void update__7J2DPaneFv();
// False False
//  void False
//  f32 False
//  f32 False
extern "C" void drawSelf__7J2DPaneFff();
// False False
extern "C" void __sinit_J2DPane_cpp();
extern "C" extern void* __vt__7J2DPane[37 + 1 /* padding */];

// 
// External References:
// 

// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  u8 False
extern "C" void setAlpha__7J2DPaneFUc();
// False False
extern "C" void calcMtx__7J2DPaneFv();
// False False
//  f32 False
//  f32 False
extern "C" void makeMatrix__7J2DPaneFff();
// False False
//  s32 False
extern "C" s32 getTypeID__7J2DPaneCFv();
// False False
//  void False
//  J2DAnmTevRegKey* False
// 	 J2DAnmTevRegKey False
extern "C" void setAnimation__7J2DPaneFP15J2DAnmTevRegKey();
// False False
//  void False
//  J2DAnmColor* False
// 	 J2DAnmColor False
extern "C" void setAnimation__7J2DPaneFP11J2DAnmColor();
// False False
//  void False
//  J2DAnmTextureSRTKey* False
// 	 J2DAnmTextureSRTKey False
extern "C" void setAnimation__7J2DPaneFP19J2DAnmTextureSRTKey();
// False False
//  void False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
extern "C" void setAnimation__7J2DPaneFP14J2DAnmVtxColor();
// False False
//  void False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
extern "C" void setAnimation__7J2DPaneFP20J2DAnmVisibilityFull();
// False False
//  void False
//  J2DAnmTexPattern* False
// 	 J2DAnmTexPattern False
extern "C" void setAnimation__7J2DPaneFP16J2DAnmTexPattern();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
//  void* False
// 	 void False
extern "C" void __ct__10JSUPtrLinkFPv();
// False False
extern "C" void __dt__10JSUPtrLinkFv();
// False False
extern "C" void __dt__10JSUPtrListFv();
// False False
extern "C" void initiate__10JSUPtrListFv();
// False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
extern "C" void append__10JSUPtrListFP10JSUPtrLink();
// False False
//  JSUPtrLink* False
// 	 JSUPtrLink False
//  JSUPtrLink* False
// 	 JSUPtrLink False
extern "C" void insert__10JSUPtrListFP10JSUPtrLinkP10JSUPtrLink();
// False False
//  void* False
// 	 void False
//  s32 False
extern "C" void read__14JSUInputStreamFPvl();
// False False
//  s32 False
extern "C" void align__20JSURandomInputStreamFl();
// False False
//  void* False
// 	 void False
//  s32 False
extern "C" void peek__20JSURandomInputStreamFPvl();
// False False
//  s32 False
//  JSUStreamSeekFrom False
extern "C" void seek__20JSURandomInputStreamFl17JSUStreamSeekFrom();
// False False
//  JSUInputStream* False
// 	 JSUInputStream False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
extern "C" void getResource__15JUTResReferenceFP14JSUInputStreamUlP10JKRArchive();
// False False
extern "C" void setScissor__14J2DGrafContextFv();
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802E90C0();
// False True
//  JGeometry::TBox2<f32>* False
// 	 JGeometry::TBox2<f32> True
// 		 f32 False
//  JGeometry::TBox2<f32> const* False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
extern "C" void func_802E987C();
// False False
//  JSUInputStream* False
// 	 JSUInputStream False
extern "C" void get__13J2DDataManageFP14JSUInputStream();
// False False
extern "C" void PSMTXCopy();
// False False
extern "C" void PSMTXConcat();
// False False
extern "C" void PSMTXRotRad();
// False False
extern "C" void PSMTXTrans();
// False False
extern "C" void PSMTXTransApply();
// False False
extern "C" void PSMTXScaleApply();
// False False
extern "C" void GXSetCullMode();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern void* __vt__14J2DGrafContext[10];
extern "C" extern u8 mDataManage__9J2DScreen[4 + 4 /* padding */];

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803CCFB0-803CCFD0 0020+00 s=1 e=0 z=0  None .data      @2709                                                        */
SECTION_DATA static void* lit_2709[8] = {
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x38),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x4C),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x88),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0xC0),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x74),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0xB0),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x9C),
	(void*)(((char*)setAnimation__7J2DPaneFP10J2DAnmBase)+0x60),
};

/* 803CCFD0-803CD068 0094+04 s=5 e=0 z=0  None .data      __vt__7J2DPane                                               */
SECTION_DATA void* __vt__7J2DPane[37 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__7J2DPaneFv,
	(void*)getTypeID__7J2DPaneCFv,
	(void*)move__7J2DPaneFff,
	(void*)add__7J2DPaneFff,
	(void*)resize__7J2DPaneFff,
	(void*)setCullBack__7J2DPaneFb,
	(void*)setCullBack__7J2DPaneF11_GXCullMode,
	(void*)setAlpha__7J2DPaneFUc,
	(void*)setConnectParent__7J2DPaneFb,
	(void*)calcMtx__7J2DPaneFv,
	(void*)update__7J2DPaneFv,
	(void*)drawSelf__7J2DPaneFff,
	(void*)drawSelf__7J2DPaneFffPA3_A4_f,
	(void*)search__7J2DPaneFUx,
	(void*)searchUserInfo__7J2DPaneFUx,
	(void*)makeMatrix__7J2DPaneFff,
	(void*)makeMatrix__7J2DPaneFffff,
	(void*)isUsed__7J2DPaneFPC7ResTIMG,
	(void*)isUsed__7J2DPaneFPC7ResFONT,
	(void*)clearAnmTransform__7J2DPaneFv,
	(void*)rewriteAlpha__7J2DPaneFv,
	(void*)setAnimation__7J2DPaneFP10J2DAnmBase,
	(void*)setAnimation__7J2DPaneFP15J2DAnmTransform,
	(void*)setAnimation__7J2DPaneFP11J2DAnmColor,
	(void*)setAnimation__7J2DPaneFP16J2DAnmTexPattern,
	(void*)setAnimation__7J2DPaneFP19J2DAnmTextureSRTKey,
	(void*)setAnimation__7J2DPaneFP15J2DAnmTevRegKey,
	(void*)setAnimation__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setAnimation__7J2DPaneFP14J2DAnmVtxColor,
	(void*)animationTransform__7J2DPaneFPC15J2DAnmTransform,
	(void*)setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull,
	(void*)setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor,
	(void*)setAnimationVC__7J2DPaneFP14J2DAnmVtxColor,
	(void*)animationPane__7J2DPaneFPC15J2DAnmTransform,
	/* padding */
	NULL,
};

/* 804561F0-804561F4 0004+00 s=12 e=0 z=0  None .sdata2    @1469                                                        */
SECTION_SDATA2 static u8 lit_1469[4] = {
	0x00, 0x00, 0x00, 0x00,
};

/* 802F5BF8-802F5CB8 00C0+00 s=0 e=10 z=0  None .text      __ct__7J2DPaneFv                                             */
//	802F5C10: 803CCFD0 (__vt__7J2DPane)
//	802F5C14: 803CCFD0 (__vt__7J2DPane)
//	802F5C24: 802DBF14 (initiate__10JSUPtrListFv)
//	802F5C30: 802DBDFC (__ct__10JSUPtrLinkFPv)
//	802F5C60: 804561F0 (lit_1469)
//	802F5C78: 802F5CB8 (initiate__7J2DPaneFv)
//	802F5C84: 802F63F8 (changeUseTrans__7J2DPaneFP7J2DPane)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DPane::J2DPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__ct__7J2DPaneFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 804561F4-804561F8 0004+00 s=3 e=0 z=0  None .sdata2    @1489                                                        */
SECTION_SDATA2 static f32 lit_1489 = 1.0f;

/* 802F5CB8-802F5D40 0088+00 s=3 e=0 z=0  None .text      initiate__7J2DPaneFv                                         */
//	802F5CD0: 804561F0 (lit_1469)
//	802F5CF8: 804561F4 (lit_1489)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DPane::initiate() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/initiate__7J2DPaneFv.s"
}
#pragma pop


/* 802F5D40-802F5DD0 0090+00 s=0 e=1 z=0  None .text      __ct__7J2DPaneFP7J2DPanebUxRCQ29JGeometry8TBox2<f>           */
//	802F5D50: 803621CC (_savegpr_25)
//	802F5D6C: 803CCFD0 (__vt__7J2DPane)
//	802F5D70: 803CCFD0 (__vt__7J2DPane)
//	802F5D80: 802DBF14 (initiate__10JSUPtrListFv)
//	802F5D8C: 802DBDFC (__ct__10JSUPtrLinkFPv)
//	802F5DB0: 802F5DD0 (func_802F5DD0)
//	802F5DBC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  J2DPane* False
// 	 J2DPane False
//  bool False
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm J2DPane::J2DPane(J2DPane* param_0, bool param_1, u64 param_2, JGeometry::TBox2<f32> const& param_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5D40.s"
}
#pragma pop


/* 802F5DD0-802F5E88 00B8+00 s=1 e=0 z=0  None .text      initialize__7J2DPaneFP7J2DPanebUxRCQ29JGeometry8TBox2<f>     */
//	802F5E44: 802DBF4C (append__10JSUPtrListFP10JSUPtrLink)
//	802F5E4C: 802F5CB8 (initiate__7J2DPaneFv)
//	802F5E58: 802F63F8 (changeUseTrans__7J2DPaneFP7J2DPane)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  J2DPane* False
// 	 J2DPane False
//  bool False
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DPane::initialize(J2DPane* param_0, bool param_1, u64 param_2, JGeometry::TBox2<f32> const& param_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5DD0.s"
}
#pragma pop


/* 802F5E88-802F5F08 0080+00 s=0 e=3 z=0  None .text      __ct__7J2DPaneFUxRCQ29JGeometry8TBox2<f>                     */
//	802F5E98: 803621D4 (_savegpr_27)
//	802F5EAC: 803CCFD0 (__vt__7J2DPane)
//	802F5EB0: 803CCFD0 (__vt__7J2DPane)
//	802F5EC0: 802DBF14 (initiate__10JSUPtrListFv)
//	802F5ECC: 802DBDFC (__ct__10JSUPtrLinkFPv)
//	802F5EE8: 802F5F08 (func_802F5F08)
//	802F5EF4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm J2DPane::J2DPane(u64 param_0, JGeometry::TBox2<f32> const& param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5E88.s"
}
#pragma pop


/* 802F5F08-802F5F9C 0094+00 s=1 e=0 z=0  None .text      initialize__7J2DPaneFUxRCQ29JGeometry8TBox2<f>               */
//	802F5F64: 802F5CB8 (initiate__7J2DPaneFv)
//	802F5F70: 802F63F8 (changeUseTrans__7J2DPaneFP7J2DPane)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  u64 False
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DPane::initialize(u64 param_0, JGeometry::TBox2<f32> const& param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F5F08.s"
}
#pragma pop


/* 802F5F9C-802F60C4 0128+00 s=0 e=1 z=0  None .text      __ct__7J2DPaneFP7J2DPaneP20JSURandomInputStreamUc            */
//	802F5FAC: 803621D4 (_savegpr_27)
//	802F5FC0: 803CCFD0 (__vt__7J2DPane)
//	802F5FC4: 803CCFD0 (__vt__7J2DPane)
//	802F5FD4: 802DBF14 (initiate__10JSUPtrListFv)
//	802F5FE0: 802DBDFC (__ct__10JSUPtrLinkFPv)
//	802F6018: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6038: 802F60C4 (makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream)
//	802F6048: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802F6074: 802DC458 (peek__20JSURandomInputStreamFPvl)
//	802F6094: 802F7B18 (makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream)
//	802F60A4: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802F60B0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u8 False
asm J2DPane::J2DPane(J2DPane* param_0, JSURandomInputStream* param_1, u8 param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__ct__7J2DPaneFP7J2DPaneP20JSURandomInputStreamUc.s"
}
#pragma pop


/* ############################################################################################## */
/* 804561F8-80456200 0008+00 s=3 e=0 z=0  None .sdata2    @1651                                                        */
SECTION_SDATA2 static f64 lit_1651 = 4503601774854144.0 /* cast s32 to float */;

/* 80456200-80456208 0008+00 s=3 e=0 z=0  None .sdata2    @1655                                                        */
SECTION_SDATA2 static f64 lit_1655 = 4503599627370496.0 /* cast u32 to float */;

/* 802F60C4-802F63F8 0334+00 s=1 e=3 z=0  None .text      makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream    */
//	802F60EC: 803621DC (_savegpr_29)
//	802F6108: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6118: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6140: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6160: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6168: 804561F8 (lit_1651)
//	802F6190: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6198: 804561F8 (lit_1651)
//	802F61C0: 802DC298 (read__14JSUInputStreamFPvl)
//	802F61C8: 804561F8 (lit_1651)
//	802F61F4: 802DC298 (read__14JSUInputStreamFPvl)
//	802F61FC: 804561F8 (lit_1651)
//	802F6238: 804561F0 (lit_1469)
//	802F6260: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6268: 80456200 (lit_1655)
//	802F62A8: 802DC298 (read__14JSUInputStreamFPvl)
//	802F62F4: 802DC298 (read__14JSUInputStreamFPvl)
//	802F632C: 802DC298 (read__14JSUInputStreamFPvl)
//	802F6354: 802DC370 (align__20JSURandomInputStreamFl)
//	802F6370: 802DBF4C (append__10JSUPtrListFP10JSUPtrLink)
//	802F6394: 804561F4 (lit_1489)
//	802F63B0: 802F63F8 (changeUseTrans__7J2DPaneFP7J2DPane)
//	802F63E4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
asm void J2DPane::makePaneStream(J2DPane* param_0, JSURandomInputStream* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/makePaneStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456208-8045620C 0004+00 s=4 e=0 z=0  None .sdata2    @1725                                                        */
SECTION_SDATA2 static f32 lit_1725 = 0.5f;

/* 802F63F8-802F658C 0194+00 s=4 e=0 z=0  None .text      changeUseTrans__7J2DPaneFP7J2DPane                           */
//	802F63F8: 804561F0 (lit_1469)
//	802F6428: 80456208 (lit_1725)
//	802F6464: 80456208 (lit_1725)
//	802F6524: 80456208 (lit_1725)
//	802F6560: 80456208 (lit_1725)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J2DPane* False
// 	 J2DPane False
asm void J2DPane::changeUseTrans(J2DPane* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/changeUseTrans__7J2DPaneFP7J2DPane.s"
}
#pragma pop


/* 802F658C-802F666C 00E0+00 s=1 e=4 z=0  None .text      __dt__7J2DPaneFv                                             */
//	802F659C: 803621DC (_savegpr_29)
//	802F65AC: 803CCFD0 (__vt__7J2DPane)
//	802F65B0: 803CCFD0 (__vt__7J2DPane)
//	802F6628: 802DBE14 (__dt__10JSUPtrLinkFv)
//	802F663C: 802DBEAC (__dt__10JSUPtrListFv)
//	802F664C: 802CED3C (__dl__FPv)
//	802F6658: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DPane::~J2DPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__dt__7J2DPaneFv.s"
}
#pragma pop


/* 802F666C-802F6714 00A8+00 s=0 e=2 z=0  None .text      appendChild__7J2DPaneFP7J2DPane                              */
//	802F667C: 803621D8 (_savegpr_28)
//	802F6698: 802F7AFC (getParentPane__7J2DPaneFv)
//	802F66B0: 802DBF4C (append__10JSUPtrListFP10JSUPtrLink)
//	802F6700: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DPane* False
// 	 J2DPane False
asm void J2DPane::appendChild(J2DPane* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/appendChild__7J2DPaneFP7J2DPane.s"
}
#pragma pop


/* 802F6714-802F67E0 00CC+00 s=0 e=1 z=0  None .text      insertChild__7J2DPaneFP7J2DPaneP7J2DPane                     */
//	802F6724: 803621D8 (_savegpr_28)
//	802F6744: 802F7AFC (getParentPane__7J2DPaneFv)
//	802F677C: 802DC094 (insert__10JSUPtrListFP10JSUPtrLinkP10JSUPtrLink)
//	802F67CC: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DPane* False
// 	 J2DPane False
//  J2DPane* False
// 	 J2DPane False
asm void J2DPane::insertChild(J2DPane* param_0, J2DPane* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/insertChild__7J2DPaneFP7J2DPaneP7J2DPane.s"
}
#pragma pop


/* 802F67E0-802F6D18 0538+00 s=0 e=1 z=0  None .text      draw__7J2DPaneFffPC14J2DGrafContextbb                        */
//	802F6800: 803621D4 (_savegpr_27)
//	802F6990: 803464E4 (PSMTXConcat)
//	802F6AB0: 803464B0 (PSMTXCopy)
//	802F6ADC: 804561F0 (lit_1469)
//	802F6B0C: 802E987C (func_802E987C)
//	802F6B58: 803CC9B8 (__vt__14J2DGrafContext)
//	802F6B5C: 803CC9B8 (__vt__14J2DGrafContext)
//	802F6C68: 802E90C0 (func_802E90C0)
//	802F6C70: 802E8E20 (setScissor__14J2DGrafContextFv)
//	802F6C78: 8035C984 (GXSetCullMode)
//	802F6C9C: 803CC9B8 (__vt__14J2DGrafContext)
//	802F6CA0: 803CC9B8 (__vt__14J2DGrafContext)
//	802F6CC0: 804561F0 (lit_1469)
//	802F6D04: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  J2DGrafContext const* False
// 	 J2DGrafContext const False
// 		 J2DGrafContext False
//  bool False
//  bool False
asm void J2DPane::draw(f32 param_0, f32 param_1, J2DGrafContext const* param_2, bool param_3, bool param_4) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/draw__7J2DPaneFffPC14J2DGrafContextbb.s"
}
#pragma pop


/* 802F6D18-802F6F60 0248+00 s=2 e=4 z=0  None .text      place__7J2DPaneFRCQ29JGeometry8TBox2<f>                      */
//	802F6D48: 804561F0 (lit_1469)
//	802F6DAC: 80456208 (lit_1725)
//	802F6DCC: 804561F0 (lit_1469)
//	802F6E30: 80456208 (lit_1725)
//	802F6E6C: 802F7A8C (getFirstChildPane__7J2DPaneFv)
//	802F6E74: 804561F0 (lit_1469)
//	802F6EBC: 802F7AC4 (getNextChildPane__7J2DPaneFv)
//	802F6EF0: 802F7AFC (getParentPane__7J2DPaneFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DPane::place(JGeometry::TBox2<f32> const& param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F6D18.s"
}
#pragma pop


/* 802F6F60-802F6FB4 0054+00 s=1 e=7 z=0  None .text      move__7J2DPaneFff                                            */
//	802F6FA0: 802F6D18 (func_802F6D18)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
asm void J2DPane::move(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/move__7J2DPaneFff.s"
}
#pragma pop


/* 802F6FB4-802F6FF8 0044+00 s=1 e=7 z=0  None .text      add__7J2DPaneFff                                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
asm void J2DPane::add(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/add__7J2DPaneFff.s"
}
#pragma pop


/* 802F6FF8-802F7100 0108+00 s=1 e=5 z=0  None .text      resize__7J2DPaneFff                                          */
//	802F706C: 802F7AFC (getParentPane__7J2DPaneFv)
//	802F70D8: 802F6D18 (func_802F6D18)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
asm void J2DPane::resize(f32 param_0, f32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/resize__7J2DPaneFff.s"
}
#pragma pop


/* ############################################################################################## */
/* 804349B0-804349C0 0010+00 s=2 e=0 z=0  None .bss       static_mBounds__7J2DPane                                     */
static u8 static_mBounds__7J2DPane[16];

/* 802F7100-802F71DC 00DC+00 s=0 e=25 z=1  None .text      getBounds__7J2DPaneFv                                        */
//	802F7110: 804349B0 (static_mBounds__7J2DPane)
//	802F7114: 804349B0 (static_mBounds__7J2DPane)
//	802F7170: 802F7AFC (getParentPane__7J2DPaneFv)
//	802F718C: 804349B0 (static_mBounds__7J2DPane)
//	802F7190: 804349B0 (static_mBounds__7J2DPane)
//	802F71C0: 804349B0 (static_mBounds__7J2DPane)
//	802F71C4: 804349B0 (static_mBounds__7J2DPane)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPane::getBounds() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getBounds__7J2DPaneFv.s"
}
#pragma pop


/* 802F71DC-802F720C 0030+00 s=0 e=12 z=0  None .text      rotate__7J2DPaneFff13J2DRotateAxisf                          */
//	802F71F8: 802F720C (rotate__7J2DPaneFf)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  J2DRotateAxis False
//  f32 False
asm void J2DPane::rotate(f32 param_0, f32 param_1, J2DRotateAxis param_2, f32 param_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/rotate__7J2DPaneFff13J2DRotateAxisf.s"
}
#pragma pop


/* 802F720C-802F7264 0058+00 s=1 e=0 z=0  None .text      rotate__7J2DPaneFf                                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  f32 False
asm void J2DPane::rotate(f32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/rotate__7J2DPaneFf.s"
}
#pragma pop


/* 802F7264-802F72E0 007C+00 s=0 e=2 z=0  None .text      clip__7J2DPaneFRCQ29JGeometry8TBox2<f>                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False True
//  JGeometry::TBox2<f32> const& False
// 	 JGeometry::TBox2<f32> const False
// 		 JGeometry::TBox2<f32> True
// 			 f32 False
asm void J2DPane::clip(JGeometry::TBox2<f32> const& param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/func_802F7264.s"
}
#pragma pop


/* 802F72E0-802F7388 00A8+00 s=1 e=7 z=0  None .text      search__7J2DPaneFUx                                          */
//	802F72F0: 803621DC (_savegpr_29)
//	802F7374: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u64 False
asm void J2DPane::search(u64 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/search__7J2DPaneFUx.s"
}
#pragma pop


/* 802F7388-802F7430 00A8+00 s=1 e=7 z=0  None .text      searchUserInfo__7J2DPaneFUx                                  */
//	802F7398: 803621DC (_savegpr_29)
//	802F741C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u64 False
asm void J2DPane::searchUserInfo(u64 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/searchUserInfo__7J2DPaneFUx.s"
}
#pragma pop


/* 802F7430-802F74B8 0088+00 s=1 e=7 z=0  None .text      isUsed__7J2DPaneFPC7ResTIMG                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DPane::isUsed(ResTIMG const* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/isUsed__7J2DPaneFPC7ResTIMG.s"
}
#pragma pop


/* 802F74B8-802F7540 0088+00 s=1 e=7 z=0  None .text      isUsed__7J2DPaneFPC7ResFONT                                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
asm void J2DPane::isUsed(ResFONT const* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/isUsed__7J2DPaneFPC7ResFONT.s"
}
#pragma pop


/* ############################################################################################## */
/* 8045620C-80456210 0004+00 s=1 e=0 z=0  None .sdata2    @2466                                                        */
SECTION_SDATA2 static f32 lit_2466 = 0.01745329238474369f;

/* 802F7540-802F7680 0140+00 s=1 e=7 z=0  None .text      makeMatrix__7J2DPaneFffff                                    */
//	802F7598: 804561F0 (lit_1469)
//	802F759C: 803468E8 (PSMTXTrans)
//	802F75A8: 8045620C (lit_2466)
//	802F75B4: 803466A8 (PSMTXRotRad)
//	802F75C0: 8045620C (lit_2466)
//	802F75CC: 803466A8 (PSMTXRotRad)
//	802F75D8: 8045620C (lit_2466)
//	802F75E8: 803466A8 (PSMTXRotRad)
//	802F75F8: 803464E4 (PSMTXConcat)
//	802F7608: 803464E4 (PSMTXConcat)
//	802F761C: 804561F4 (lit_1489)
//	802F7620: 80346990 (PSMTXScaleApply)
//	802F7630: 803464E4 (PSMTXConcat)
//	802F7644: 804561F0 (lit_1469)
//	802F7648: 8034691C (PSMTXTransApply)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  f32 False
//  f32 False
//  f32 False
asm void J2DPane::makeMatrix(f32 param_0, f32 param_1, f32 param_2, f32 param_3) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/makeMatrix__7J2DPaneFffff.s"
}
#pragma pop


/* 802F7680-802F76F8 0078+00 s=1 e=7 z=0  None .text      setCullBack__7J2DPaneF11_GXCullMode                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  _GXCullMode False
asm void J2DPane::setCullBack(_GXCullMode param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setCullBack__7J2DPaneF11_GXCullMode.s"
}
#pragma pop


/* 802F76F8-802F77D0 00D8+00 s=0 e=8 z=0  None .text      setBasePosition__7J2DPaneF15J2DBasePosition                  */
//	802F7710: 804561F0 (lit_1469)
//	802F773C: 80456208 (lit_1725)
//	802F7764: 804561F0 (lit_1469)
//	802F7788: 80456208 (lit_1725)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DBasePosition False
asm void J2DPane::setBasePosition(J2DBasePosition param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setBasePosition__7J2DPaneF15J2DBasePosition.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456210-80456214 0004+00 s=1 e=0 z=0  None .sdata2    @2547                                                        */
SECTION_SDATA2 static f32 lit_2547 = 255.0f;

/* 802F77D0-802F79A8 01D8+00 s=0 e=1 z=0  None .text      setInfluencedAlpha__7J2DPaneFbb                              */
//	802F77F0: 803621D8 (_savegpr_28)
//	802F7814: 802F7AFC (getParentPane__7J2DPaneFv)
//	802F781C: 80456200 (lit_1655)
//	802F7824: 80456210 (lit_2547)
//	802F7888: 802F7AFC (getParentPane__7J2DPaneFv)
//	802F78C0: 80456210 (lit_2547)
//	802F78C8: 80456200 (lit_1655)
//	802F793C: 804561F8 (lit_1651)
//	802F7958: 80456210 (lit_2547)
//	802F7994: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  bool False
//  bool False
asm void J2DPane::setInfluencedAlpha(bool param_0, bool param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setInfluencedAlpha__7J2DPaneFbb.s"
}
#pragma pop


/* 802F79A8-802F7A8C 00E4+00 s=0 e=3 z=0  None .text      getGlbVtx__7J2DPaneCFUc                                      */
//	802F79B8: 804561F0 (lit_1469)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u8 False
asm void J2DPane::getGlbVtx(u8 param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getGlbVtx__7J2DPaneCFUc.s"
}
#pragma pop


/* 802F7A8C-802F7AC4 0038+00 s=1 e=15 z=0  None .text      getFirstChildPane__7J2DPaneFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPane::getFirstChildPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getFirstChildPane__7J2DPaneFv.s"
}
#pragma pop


/* 802F7AC4-802F7AFC 0038+00 s=1 e=8 z=0  None .text      getNextChildPane__7J2DPaneFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPane::getNextChildPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getNextChildPane__7J2DPaneFv.s"
}
#pragma pop


/* 802F7AFC-802F7B18 001C+00 s=6 e=11 z=0  None .text      getParentPane__7J2DPaneFv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPane::getParentPane() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getParentPane__7J2DPaneFv.s"
}
#pragma pop


/* 802F7B18-802F7D00 01E8+00 s=1 e=6 z=0  None .text      makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream  */
//	802F7B28: 803621DC (_savegpr_29)
//	802F7B58: 802DC298 (read__14JSUInputStreamFPvl)
//	802F7BEC: 804561F0 (lit_1469)
//	802F7C04: 80456208 (lit_1725)
//	802F7C2C: 804561F0 (lit_1469)
//	802F7C44: 80456208 (lit_1725)
//	802F7CBC: 802DBF4C (append__10JSUPtrListFP10JSUPtrLink)
//	802F7CEC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DPane* False
// 	 J2DPane False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
asm void J2DPane::makePaneExStream(J2DPane* param_0, JSURandomInputStream* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/makePaneExStream__7J2DPaneFP7J2DPaneP20JSURandomInputStream.s"
}
#pragma pop


/* 802F7D00-802F7DB8 00B8+00 s=0 e=1 z=0  None .text      J2DCast_F32_to_S16__7J2DPaneFfUc                             */
//	802F7D1C: 804561F0 (lit_1469)
//	802F7D38: 804561F8 (lit_1651)
//	802F7D74: 804561F0 (lit_1469)
//	802F7D90: 804561F0 (lit_1469)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  f32 False
//  u8 False
asm void J2DPane::J2DCast_F32_to_S16(f32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/J2DCast_F32_to_S16__7J2DPaneFfUc.s"
}
#pragma pop


/* 802F7DB8-802F7EF4 013C+00 s=0 e=3 z=0  None .text      getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive  */
//	802F7DC8: 803621D8 (_savegpr_28)
//	802F7DE4: 80451590 (mDataManage__9J2DScreen)
//	802F7DF8: 802DE078 (getResource__15JUTResReferenceFP14JSUInputStreamUlP10JKRArchive)
//	802F7E28: 802DE078 (getResource__15JUTResReferenceFP14JSUInputStreamUlP10JKRArchive)
//	802F7E40: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802F7E44: 80451590 (mDataManage__9J2DScreen)
//	802F7E4C: 8030CE7C (get__13J2DDataManageFP14JSUInputStream)
//	802F7E7C: 802DE078 (getResource__15JUTResReferenceFP14JSUInputStreamUlP10JKRArchive)
//	802F7E94: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802F7EA8: 802DE078 (getResource__15JUTResReferenceFP14JSUInputStreamUlP10JKRArchive)
//	802F7EB4: 80451590 (mDataManage__9J2DScreen)
//	802F7ECC: 802DC4DC (seek__20JSURandomInputStreamFl17JSUStreamSeekFrom)
//	802F7ED0: 80451590 (mDataManage__9J2DScreen)
//	802F7ED8: 8030CE7C (get__13J2DDataManageFP14JSUInputStream)
//	802F7EE0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JSURandomInputStream* False
// 	 JSURandomInputStream False
//  u32 False
//  JKRArchive* False
// 	 JKRArchive False
asm void J2DPane::getPointer(JSURandomInputStream* param_0, u32 param_1, JKRArchive* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/getPointer__7J2DPaneFP20JSURandomInputStreamUlP10JKRArchive.s"
}
#pragma pop


/* 802F7EF4-802F7FC4 00D0+00 s=2 e=7 z=0  None .text      setAnimation__7J2DPaneFP10J2DAnmBase                         */
//	802F7F14: 803CCFB0 (lit_2709)
//	802F7F18: 803CCFB0 (lit_2709)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmBase* False
// 	 J2DAnmBase False
asm void J2DPane::setAnimation(J2DAnmBase* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimation__7J2DPaneFP10J2DAnmBase.s"
}
#pragma pop


/* 802F7FC4-802F7FCC 0008+00 s=1 e=7 z=0  None .text      setAnimation__7J2DPaneFP15J2DAnmTransform                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmTransform* False
// 	 J2DAnmTransform False
asm void J2DPane::setAnimation(J2DAnmTransform* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimation__7J2DPaneFP15J2DAnmTransform.s"
}
#pragma pop


/* 802F7FCC-802F8004 0038+00 s=0 e=57 z=0  None .text      animationTransform__7J2DPaneFv                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPane::animationTransform() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/animationTransform__7J2DPaneFv.s"
}
#pragma pop


/* 802F8004-802F8080 007C+00 s=1 e=7 z=0  None .text      clearAnmTransform__7J2DPaneFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPane::clearAnmTransform() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/clearAnmTransform__7J2DPaneFv.s"
}
#pragma pop


/* 802F8080-802F8118 0098+00 s=1 e=7 z=0  None .text      animationTransform__7J2DPaneFPC15J2DAnmTransform             */
//	802F8090: 803621DC (_savegpr_29)
//	802F80F8: 802F82C0 (updateTransform__7J2DPaneFPC15J2DAnmTransform)
//	802F8104: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
asm void J2DPane::animationTransform(J2DAnmTransform const* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/animationTransform__7J2DPaneFPC15J2DAnmTransform.s"
}
#pragma pop


/* 802F8118-802F81A0 0088+00 s=1 e=8 z=0  None .text      setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
asm void J2DPane::setVisibileAnimation(J2DAnmVisibilityFull* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setVisibileAnimation__7J2DPaneFP20J2DAnmVisibilityFull.s"
}
#pragma pop


/* 802F81A0-802F8228 0088+00 s=1 e=8 z=0  None .text      setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
asm void J2DPane::setVtxColorAnimation(J2DAnmVtxColor* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setVtxColorAnimation__7J2DPaneFP14J2DAnmVtxColor.s"
}
#pragma pop


/* 802F8228-802F82C0 0098+00 s=1 e=7 z=0  None .text      animationPane__7J2DPaneFPC15J2DAnmTransform                  */
//	802F8238: 803621DC (_savegpr_29)
//	802F82A0: 802F82C0 (updateTransform__7J2DPaneFPC15J2DAnmTransform)
//	802F82AC: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
asm void J2DPane::animationPane(J2DAnmTransform const* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/animationPane__7J2DPaneFPC15J2DAnmTransform.s"
}
#pragma pop


/* ############################################################################################## */
/* 80456214-80456218 0004+00 s=1 e=0 z=0  None .sdata2    @2890                                                        */
SECTION_SDATA2 static f32 lit_2890 = 360.0f;

/* 80456218-80456220 0004+04 s=1 e=0 z=0  None .sdata2    @2891                                                        */
SECTION_SDATA2 static f32 lit_2891[1 + 1 /* padding */] = {
	65535.0f,
	/* padding */
	0.0f,
};

/* 802F82C0-802F83C8 0108+00 s=2 e=0 z=0  None .text      updateTransform__7J2DPaneFPC15J2DAnmTransform                */
//	802F8314: 80456214 (lit_2890)
//	802F8320: 80456200 (lit_1655)
//	802F833C: 80456218 (lit_2891)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  J2DAnmTransform const* False
// 	 J2DAnmTransform const False
// 		 J2DAnmTransform False
asm void J2DPane::updateTransform(J2DAnmTransform const* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/updateTransform__7J2DPaneFPC15J2DAnmTransform.s"
}
#pragma pop


/* 802F83C8-802F83CC 0004+00 s=1 e=0 z=0  None .text      drawSelf__7J2DPaneFffPA3_A4_f                                */
// True False
//  void False
//  f32 False
//  f32 False
//  f32 (* )[3][4] False
// 	 f32 False
// 	 * False
// 		  False
void J2DPane::drawSelf(f32 param_0, f32 param_1, f32 (* param_2)[3][4]) {
	/* empty function */
}


/* 802F83CC-802F83D0 0004+00 s=1 e=1 z=0  None .text      rewriteAlpha__7J2DPaneFv                                     */
// False False
//  void False
void J2DPane::rewriteAlpha() {
	/* empty function */
}


/* 802F83D0-802F83FC 002C+00 s=1 e=6 z=0  None .text      setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmVisibilityFull* False
// 	 J2DAnmVisibilityFull False
asm void J2DPane::setAnimationVF(J2DAnmVisibilityFull* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimationVF__7J2DPaneFP20J2DAnmVisibilityFull.s"
}
#pragma pop


/* 802F83FC-802F8428 002C+00 s=1 e=6 z=0  None .text      setAnimationVC__7J2DPaneFP14J2DAnmVtxColor                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DAnmVtxColor* False
// 	 J2DAnmVtxColor False
asm void J2DPane::setAnimationVC(J2DAnmVtxColor* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setAnimationVC__7J2DPaneFP14J2DAnmVtxColor.s"
}
#pragma pop


/* 802F8428-802F8464 003C+00 s=1 e=4 z=0  None .text      setCullBack__7J2DPaneFb                                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  bool False
asm void J2DPane::setCullBack(bool param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setCullBack__7J2DPaneFb.s"
}
#pragma pop


/* 802F8464-802F8474 0010+00 s=1 e=5 z=0  None .text      setConnectParent__7J2DPaneFb                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  bool False
asm void J2DPane::setConnectParent(bool param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/setConnectParent__7J2DPaneFb.s"
}
#pragma pop


/* 802F8474-802F8478 0004+00 s=1 e=7 z=0  None .text      update__7J2DPaneFv                                           */
// False False
//  void False
void J2DPane::update() {
	/* empty function */
}


/* 802F8478-802F847C 0004+00 s=1 e=1 z=0  None .text      drawSelf__7J2DPaneFff                                        */
// False False
//  void False
//  f32 False
//  f32 False
void J2DPane::drawSelf(f32 param_0, f32 param_1) {
	/* empty function */
}


/* 802F847C-802F8498 001C+00 s=0 e=0 z=0  None .text      __sinit_J2DPane_cpp                                          */
//	802F847C: 804561F0 (lit_1469)
//	802F8480: 804349B0 (static_mBounds__7J2DPane)
//	802F8484: 804349B0 (static_mBounds__7J2DPane)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
extern "C" asm void __sinit_J2DPane_cpp() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DPane/__sinit_J2DPane_cpp.s"
}
#pragma pop

#pragma push
#pragma force_active on
#pragma section ".ctors$15"
__declspec(section ".ctors$15") void* const _ctors_802F847C = (void*)__sinit_J2DPane_cpp;
#pragma pop


