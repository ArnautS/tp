// 
// Generated By: dol2asm
// Translation Unit: J2DMatBlock
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/J2DGraph/J2DMatBlock.h"

// 
// Types:
// 

struct _GXTlut {
};

struct _GXTexMapID {
};

struct ResTLUT {
};

struct ResTIMG {
};

struct ResFONT {
};

struct JUtility {
	struct TColor {
		/* 80193960 */ // False False
TColor();
	};

};

struct JUTPalette {
	/* 802DE890 */ // False False
//  _GXTlut False
//  ResTLUT* False
// 	 ResTLUT False
void storeTLUT(_GXTlut, ResTLUT*);
};

struct JUTTexture {
	/* 802DE234 */ // False False
~JUTTexture();
	/* 802DE2A8 */ // False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  u8 False
void storeTIMG(ResTIMG const*, u8);
	/* 802DE44C */ // False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
void storeTIMG(ResTIMG const*, JUTPalette*);
	/* 802DE5B0 */ // False False
//  JUTPalette* False
// 	 JUTPalette False
void attachPalette(JUTPalette*);
	/* 802DE840 */ // False False
//  _GXTexMapID False
void load(_GXTexMapID);
};

struct JKRHeap {
};

struct JUTResFont {
	/* 802DEF94 */ // False False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
//  JKRHeap* False
// 	 JKRHeap False
JUTResFont(ResFONT const*, JKRHeap*);
};

struct JUTFont {
};

struct J2DTexMtx {
	/* 802E9C90 */ // False False
//  u32 False
void load(u32);
	/* 802E9CC4 */ // False False
void calc();
};

struct J2DTexGenBlock {
	/* 802EB510 */ // False False
void initialize();
	/* 802EB570 */ // False False
void setGX();
	/* 802EB620 */ // False False
~J2DTexGenBlock();
	/* 802EB6A4 */ // False False
//  u32 False
//  J2DTexMtx& False
// 	 J2DTexMtx False
void setTexMtx(u32, J2DTexMtx&);
	/* 802EB7E0 */ // False False
//  u32 False
//  J2DTexMtx& False
// 	 J2DTexMtx False
void getTexMtx(u32, J2DTexMtx&);
};

struct J2DTevSwapModeTable {
	/* 802F1934 */ // True False
J2DTevSwapModeTable();
};

struct J2DTevSwapModeInfo {
};

struct J2DTevStageInfo {
};

struct J2DTevStage {
	/* 802F1940 */ // False False
J2DTevStage();
	/* 802F19A8 */ // False False
//  J2DTevStageInfo const& False
// 	 J2DTevStageInfo const False
// 		 J2DTevStageInfo False
void setTevStageInfo(J2DTevStageInfo const&);
};

struct J2DTevOrder {
	/* 802F1B70 */ // True False
J2DTevOrder();
};

struct J2DIndTevStage {
	/* 802EA044 */ // False False
//  u8 False
void load(u8);
	/* 802F18A0 */ // True False
J2DIndTevStage();
};

struct J2DGXColorS10 {
	/* 802F1B90 */ // True False
J2DGXColorS10();
};

struct J2DTevBlock8 {
	/* 802EED64 */ // False False
J2DTevBlock8();
	/* 802EEE8C */ // True False
~J2DTevBlock8();
	/* 802EEF6C */ // True False
void initialize();
	/* 802EF1E0 */ // True False
//  u8 False
void prepareTexture(u8);
	/* 802EF2B0 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
void insertTexture(u32, ResTIMG const*, JUTPalette*);
	/* 802F21C4 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void insertTexture(u32, ResTIMG const*);
	/* 802EF67C */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void insertTexture(u32, JUTTexture*);
	/* 802EF80C */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void setTexture(u32, ResTIMG const*);
	/* 802EFA98 */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void setTexture(u32, JUTTexture*);
	/* 802EFB48 */ // True False
//  u32 False
void removeTexture(u32);
	/* 802EFC40 */ // True False
//  ResFONT* False
// 	 ResFONT False
void setFont(ResFONT*);
	/* 802EFCEC */ // True False
//  JUTFont* False
// 	 JUTFont False
void setFont(JUTFont*);
	/* 802EFD68 */ // True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
void setPalette(u32, ResTLUT const*);
	/* 802EFE40 */ // True False
//  u8 False
//  bool False
void shiftDeleteFlag(u8, bool);
	/* 802EFEAC */ // True False
void setGX();
	/* 802F019C */ // True False
//  _GXTexMapID False
//  u32 False
void loadTexture(_GXTexMapID, u32);
	/* 802F1FB8 */ // True False
void getType();
	/* 802F1FC4 */ // True False
//  s32 False
s32 getMaxStage();
	/* 802F1FCC */ // True False
//  u32 False
//  u16 False
void setTexNo(u32, u16);
	/* 802F1FDC */ // True False
//  u32 False
void getTexNo(u32) const;
	/* 802F1FEC */ // True False
//  u16 False
void setFontNo(u16);
	/* 802F1FF4 */ // True False
void getFontNo() const;
	/* 802F1FFC */ // True False
//  u32 False
//  J2DTevOrder False
void setTevOrder(u32, J2DTevOrder);
	/* 802F2020 */ // True False
//  u32 False
void getTevOrder(u32);
	/* 802F2034 */ // True False
//  u32 False
//  J2DGXColorS10 False
void setTevColor(u32, J2DGXColorS10);
	/* 802F2060 */ // True False
//  u32 False
void getTevColor(u32);
	/* 802F2074 */ // True False
//  u32 False
//  JUtility::TColor False
void setTevKColor(u32, JUtility::TColor);
	/* 802F20A0 */ // True False
//  u32 False
void getTevKColor(u32);
	/* 802F20B4 */ // True False
//  u32 False
//  u8 False
void setTevKColorSel(u32, u8);
	/* 802F20C0 */ // True False
//  u32 False
void getTevKColorSel(u32);
	/* 802F20CC */ // True False
//  u32 False
//  u8 False
void setTevKAlphaSel(u32, u8);
	/* 802F20D8 */ // True False
//  u32 False
void getTevKAlphaSel(u32);
	/* 802F20E4 */ // True False
//  u8 False
void setTevStageNum(u8);
	/* 802F20EC */ // True False
void getTevStageNum() const;
	/* 802F20F4 */ // True False
//  u32 False
//  J2DTevStage False
void setTevStage(u32, J2DTevStage);
	/* 802F2130 */ // True False
//  u32 False
void getTevStage(u32);
	/* 802F2144 */ // True False
//  u32 False
//  J2DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J2DTevSwapModeInfo);
	/* 802F217C */ // True False
//  u32 False
//  J2DTevSwapModeTable False
void setTevSwapModeTable(u32, J2DTevSwapModeTable);
	/* 802F218C */ // True False
//  u32 False
void getTevSwapModeTable(u32);
	/* 802F219C */ // True False
//  u32 False
//  J2DIndTevStage False
void setIndTevStage(u32, J2DIndTevStage);
	/* 802F21B0 */ // True False
//  u32 False
void getIndTevStage(u32);
	/* 802F21F4 */ // True False
//  u32 False
void getTexture(u32);
	/* 802F2214 */ // True False
//  u32 False
void getPalette(u32);
	/* 802F2234 */ // True False
void getFont();
	/* 802F223C */ // True False
//  u8 False
void setUndeleteFlag(u8);
	/* 802F224C */ // True False
void setFontUndeleteFlag();
};

struct J2DTevBlock4 {
	/* 802ED8BC */ // False False
J2DTevBlock4();
	/* 802ED9E4 */ // True False
~J2DTevBlock4();
	/* 802EDAC4 */ // True False
void initialize();
	/* 802EDD34 */ // True False
//  u8 False
void prepareTexture(u8);
	/* 802EDE04 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
void insertTexture(u32, ResTIMG const*, JUTPalette*);
	/* 802EE1D4 */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void insertTexture(u32, JUTTexture*);
	/* 802F2464 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void insertTexture(u32, ResTIMG const*);
	/* 802EE364 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void setTexture(u32, ResTIMG const*);
	/* 802EE5F0 */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void setTexture(u32, JUTTexture*);
	/* 802EE6A0 */ // True False
//  u32 False
void removeTexture(u32);
	/* 802EE798 */ // True False
//  ResFONT* False
// 	 ResFONT False
void setFont(ResFONT*);
	/* 802EE84C */ // True False
//  JUTFont* False
// 	 JUTFont False
void setFont(JUTFont*);
	/* 802EE8CC */ // True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
void setPalette(u32, ResTLUT const*);
	/* 802EE9A4 */ // True False
//  u8 False
//  bool False
void shiftDeleteFlag(u8, bool);
	/* 802EEA2C */ // True False
void setGX();
	/* 802EED1C */ // True False
//  _GXTexMapID False
//  u32 False
void loadTexture(_GXTexMapID, u32);
	/* 802F2258 */ // True False
void getType();
	/* 802F2264 */ // True False
//  s32 False
s32 getMaxStage();
	/* 802F226C */ // True False
//  u32 False
//  u16 False
void setTexNo(u32, u16);
	/* 802F227C */ // True False
//  u32 False
void getTexNo(u32) const;
	/* 802F228C */ // True False
//  u16 False
void setFontNo(u16);
	/* 802F2294 */ // True False
void getFontNo() const;
	/* 802F229C */ // True False
//  u32 False
//  J2DTevOrder False
void setTevOrder(u32, J2DTevOrder);
	/* 802F22C0 */ // True False
//  u32 False
void getTevOrder(u32);
	/* 802F22D4 */ // True False
//  u32 False
//  J2DGXColorS10 False
void setTevColor(u32, J2DGXColorS10);
	/* 802F2300 */ // True False
//  u32 False
void getTevColor(u32);
	/* 802F2314 */ // True False
//  u32 False
//  JUtility::TColor False
void setTevKColor(u32, JUtility::TColor);
	/* 802F2340 */ // True False
//  u32 False
void getTevKColor(u32);
	/* 802F2354 */ // True False
//  u32 False
//  u8 False
void setTevKColorSel(u32, u8);
	/* 802F2360 */ // True False
//  u32 False
void getTevKColorSel(u32);
	/* 802F236C */ // True False
//  u32 False
//  u8 False
void setTevKAlphaSel(u32, u8);
	/* 802F2378 */ // True False
//  u32 False
void getTevKAlphaSel(u32);
	/* 802F2384 */ // True False
//  u8 False
void setTevStageNum(u8);
	/* 802F238C */ // True False
void getTevStageNum() const;
	/* 802F2394 */ // True False
//  u32 False
//  J2DTevStage False
void setTevStage(u32, J2DTevStage);
	/* 802F23D0 */ // True False
//  u32 False
void getTevStage(u32);
	/* 802F23E4 */ // True False
//  u32 False
//  J2DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J2DTevSwapModeInfo);
	/* 802F241C */ // True False
//  u32 False
//  J2DTevSwapModeTable False
void setTevSwapModeTable(u32, J2DTevSwapModeTable);
	/* 802F242C */ // True False
//  u32 False
void getTevSwapModeTable(u32);
	/* 802F243C */ // True False
//  u32 False
//  J2DIndTevStage False
void setIndTevStage(u32, J2DIndTevStage);
	/* 802F2450 */ // True False
//  u32 False
void getIndTevStage(u32);
	/* 802F2494 */ // True False
//  u32 False
void getTexture(u32);
	/* 802F24B4 */ // True False
//  u32 False
void getPalette(u32);
	/* 802F24D4 */ // True False
void getFont();
	/* 802F24DC */ // True False
//  u8 False
void setUndeleteFlag(u8);
	/* 802F24EC */ // True False
void setFontUndeleteFlag();
};

struct J2DTevBlock2 {
	/* 802EC5B8 */ // False False
J2DTevBlock2();
	/* 802EC6C8 */ // True False
~J2DTevBlock2();
	/* 802EC7A0 */ // True False
void initialize();
	/* 802ECA18 */ // True False
//  u8 False
void prepareTexture(u8);
	/* 802F2708 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void insertTexture(u32, ResTIMG const*);
	/* 802ECAE8 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
void insertTexture(u32, ResTIMG const*, JUTPalette*);
	/* 802ECDE8 */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void insertTexture(u32, JUTTexture*);
	/* 802ECF48 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void setTexture(u32, ResTIMG const*);
	/* 802ED16C */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void setTexture(u32, JUTTexture*);
	/* 802ED21C */ // True False
//  u32 False
void removeTexture(u32);
	/* 802ED3A4 */ // True False
//  JUTFont* False
// 	 JUTFont False
void setFont(JUTFont*);
	/* 802ED2F0 */ // True False
//  ResFONT* False
// 	 ResFONT False
void setFont(ResFONT*);
	/* 802ED424 */ // True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
void setPalette(u32, ResTLUT const*);
	/* 802ED4FC */ // True False
//  u8 False
//  bool False
void shiftDeleteFlag(u8, bool);
	/* 802ED584 */ // True False
void setGX();
	/* 802ED874 */ // True False
//  _GXTexMapID False
//  u32 False
void loadTexture(_GXTexMapID, u32);
	/* 802F24FC */ // True False
void getType();
	/* 802F2508 */ // True False
//  s32 False
s32 getMaxStage();
	/* 802F2510 */ // True False
//  u32 False
//  u16 False
void setTexNo(u32, u16);
	/* 802F2520 */ // True False
//  u32 False
void getTexNo(u32) const;
	/* 802F2530 */ // True False
//  u16 False
void setFontNo(u16);
	/* 802F2538 */ // True False
void getFontNo() const;
	/* 802F2540 */ // True False
//  u32 False
//  J2DTevOrder False
void setTevOrder(u32, J2DTevOrder);
	/* 802F2564 */ // True False
//  u32 False
void getTevOrder(u32);
	/* 802F2578 */ // True False
//  u32 False
//  J2DGXColorS10 False
void setTevColor(u32, J2DGXColorS10);
	/* 802F25A4 */ // True False
//  u32 False
void getTevColor(u32);
	/* 802F25B8 */ // True False
//  u32 False
//  JUtility::TColor False
void setTevKColor(u32, JUtility::TColor);
	/* 802F25E4 */ // True False
//  u32 False
void getTevKColor(u32);
	/* 802F25F8 */ // True False
//  u32 False
//  u8 False
void setTevKColorSel(u32, u8);
	/* 802F2604 */ // True False
//  u32 False
void getTevKColorSel(u32);
	/* 802F2610 */ // True False
//  u32 False
//  u8 False
void setTevKAlphaSel(u32, u8);
	/* 802F261C */ // True False
//  u32 False
void getTevKAlphaSel(u32);
	/* 802F2628 */ // True False
//  u8 False
void setTevStageNum(u8);
	/* 802F2630 */ // True False
void getTevStageNum() const;
	/* 802F2638 */ // True False
//  u32 False
//  J2DTevStage False
void setTevStage(u32, J2DTevStage);
	/* 802F2674 */ // True False
//  u32 False
void getTevStage(u32);
	/* 802F2688 */ // True False
//  u32 False
//  J2DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J2DTevSwapModeInfo);
	/* 802F26C0 */ // True False
//  u32 False
//  J2DTevSwapModeTable False
void setTevSwapModeTable(u32, J2DTevSwapModeTable);
	/* 802F26D0 */ // True False
//  u32 False
void getTevSwapModeTable(u32);
	/* 802F26E0 */ // True False
//  u32 False
//  J2DIndTevStage False
void setIndTevStage(u32, J2DIndTevStage);
	/* 802F26F4 */ // True False
//  u32 False
void getIndTevStage(u32);
	/* 802F2738 */ // True False
//  u32 False
void getTexture(u32);
	/* 802F2758 */ // True False
//  u32 False
void getPalette(u32);
	/* 802F2778 */ // True False
void getFont();
	/* 802F2780 */ // True False
//  u8 False
void setUndeleteFlag(u8);
	/* 802F2790 */ // True False
void setFontUndeleteFlag();
};

struct J2DTevBlock16 {
	/* 802F01E4 */ // False False
J2DTevBlock16();
	/* 802F030C */ // True False
~J2DTevBlock16();
	/* 802F03EC */ // True False
void initialize();
	/* 802F0660 */ // True False
//  u8 False
void prepareTexture(u8);
	/* 802F1F24 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void insertTexture(u32, ResTIMG const*);
	/* 802F0730 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
void insertTexture(u32, ResTIMG const*, JUTPalette*);
	/* 802F0AFC */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void insertTexture(u32, JUTTexture*);
	/* 802F0C8C */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void setTexture(u32, ResTIMG const*);
	/* 802F0F18 */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void setTexture(u32, JUTTexture*);
	/* 802F0FC8 */ // True False
//  u32 False
void removeTexture(u32);
	/* 802F10C0 */ // True False
//  ResFONT* False
// 	 ResFONT False
void setFont(ResFONT*);
	/* 802F116C */ // True False
//  JUTFont* False
// 	 JUTFont False
void setFont(JUTFont*);
	/* 802F11E8 */ // True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
void setPalette(u32, ResTLUT const*);
	/* 802F12C0 */ // True False
//  u8 False
//  bool False
void shiftDeleteFlag(u8, bool);
	/* 802F132C */ // True False
void setGX();
	/* 802F161C */ // True False
//  _GXTexMapID False
//  u32 False
void loadTexture(_GXTexMapID, u32);
	/* 802F1D18 */ // True False
void getType();
	/* 802F1D24 */ // True False
//  s32 False
s32 getMaxStage();
	/* 802F1D2C */ // True False
//  u32 False
//  u16 False
void setTexNo(u32, u16);
	/* 802F1D3C */ // True False
//  u32 False
void getTexNo(u32) const;
	/* 802F1D4C */ // True False
//  u16 False
void setFontNo(u16);
	/* 802F1D54 */ // True False
void getFontNo() const;
	/* 802F1D5C */ // True False
//  u32 False
//  J2DTevOrder False
void setTevOrder(u32, J2DTevOrder);
	/* 802F1D80 */ // True False
//  u32 False
void getTevOrder(u32);
	/* 802F1D94 */ // True False
//  u32 False
//  J2DGXColorS10 False
void setTevColor(u32, J2DGXColorS10);
	/* 802F1DC0 */ // True False
//  u32 False
void getTevColor(u32);
	/* 802F1DD4 */ // True False
//  u32 False
//  JUtility::TColor False
void setTevKColor(u32, JUtility::TColor);
	/* 802F1E00 */ // True False
//  u32 False
void getTevKColor(u32);
	/* 802F1E14 */ // True False
//  u32 False
//  u8 False
void setTevKColorSel(u32, u8);
	/* 802F1E20 */ // True False
//  u32 False
void getTevKColorSel(u32);
	/* 802F1E2C */ // True False
//  u32 False
//  u8 False
void setTevKAlphaSel(u32, u8);
	/* 802F1E38 */ // True False
//  u32 False
void getTevKAlphaSel(u32);
	/* 802F1E44 */ // True False
//  u8 False
void setTevStageNum(u8);
	/* 802F1E4C */ // True False
void getTevStageNum() const;
	/* 802F1E54 */ // True False
//  u32 False
//  J2DTevStage False
void setTevStage(u32, J2DTevStage);
	/* 802F1E90 */ // True False
//  u32 False
void getTevStage(u32);
	/* 802F1EA4 */ // True False
//  u32 False
//  J2DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J2DTevSwapModeInfo);
	/* 802F1EDC */ // True False
//  u32 False
//  J2DTevSwapModeTable False
void setTevSwapModeTable(u32, J2DTevSwapModeTable);
	/* 802F1EEC */ // True False
//  u32 False
void getTevSwapModeTable(u32);
	/* 802F1EFC */ // True False
//  u32 False
//  J2DIndTevStage False
void setIndTevStage(u32, J2DIndTevStage);
	/* 802F1F10 */ // True False
//  u32 False
void getIndTevStage(u32);
	/* 802F1F54 */ // True False
//  u32 False
void getTexture(u32);
	/* 802F1F74 */ // True False
//  u32 False
void getPalette(u32);
	/* 802F1F94 */ // True False
void getFont();
	/* 802F1F9C */ // True False
//  u8 False
void setUndeleteFlag(u8);
	/* 802F1FAC */ // True False
void setFontUndeleteFlag();
};

struct J2DTevBlock1 {
	/* 802EB88C */ // False False
J2DTevBlock1();
	/* 802EB998 */ // True False
~J2DTevBlock1();
	/* 802EBA50 */ // True False
void initialize();
	/* 802EBC0C */ // True False
//  u8 False
void prepareTexture(u8);
	/* 802F29A8 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void insertTexture(u32, ResTIMG const*);
	/* 802EBCC0 */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
void insertTexture(u32, ResTIMG const*, JUTPalette*);
	/* 802EBDE4 */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void insertTexture(u32, JUTTexture*);
	/* 802EBE8C */ // True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
void setTexture(u32, ResTIMG const*);
	/* 802EC01C */ // True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
void setTexture(u32, JUTTexture*);
	/* 802EC0A8 */ // True False
//  u32 False
void removeTexture(u32);
	/* 802EC124 */ // True False
//  ResFONT* False
// 	 ResFONT False
void setFont(ResFONT*);
	/* 802EC1D8 */ // True False
//  JUTFont* False
// 	 JUTFont False
void setFont(JUTFont*);
	/* 802EC258 */ // True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
void setPalette(u32, ResTLUT const*);
	/* 802EC318 */ // True False
//  u8 False
//  bool False
void shiftDeleteFlag(u8, bool);
	/* 802EC328 */ // True False
void setGX();
	/* 802EC570 */ // True False
//  _GXTexMapID False
//  u32 False
void loadTexture(_GXTexMapID, u32);
	/* 802F27A0 */ // True False
void getType();
	/* 802F27AC */ // True False
//  bool False
bool getMaxStage();
	/* 802F27B4 */ // True False
//  u32 False
//  u16 False
void setTexNo(u32, u16);
	/* 802F27C4 */ // True False
//  u32 False
void getTexNo(u32) const;
	/* 802F27D4 */ // True False
//  u16 False
void setFontNo(u16);
	/* 802F27DC */ // True False
void getFontNo() const;
	/* 802F27E4 */ // True False
//  u32 False
//  J2DTevOrder False
void setTevOrder(u32, J2DTevOrder);
	/* 802F2808 */ // True False
//  u32 False
void getTevOrder(u32);
	/* 802F281C */ // True False
//  u32 False
//  J2DGXColorS10 False
void setTevColor(u32, J2DGXColorS10);
	/* 802F2848 */ // True False
//  u32 False
void getTevColor(u32);
	/* 802F285C */ // True False
//  u32 False
//  JUtility::TColor False
void setTevKColor(u32, JUtility::TColor);
	/* 802F2888 */ // True False
//  u32 False
void getTevKColor(u32);
	/* 802F289C */ // True False
//  u32 False
//  u8 False
void setTevKColorSel(u32, u8);
	/* 802F28A8 */ // True False
//  u32 False
void getTevKColorSel(u32);
	/* 802F28B4 */ // True False
//  u32 False
//  u8 False
void setTevKAlphaSel(u32, u8);
	/* 802F28C0 */ // True False
//  u32 False
void getTevKAlphaSel(u32);
	/* 802F28CC */ // True False
//  void False
//  u8 False
void setTevStageNum(u8);
	/* 802F28D0 */ // True False
//  bool False
bool getTevStageNum() const;
	/* 802F28D8 */ // True False
//  u32 False
//  J2DTevStage False
void setTevStage(u32, J2DTevStage);
	/* 802F2914 */ // True False
//  u32 False
void getTevStage(u32);
	/* 802F2928 */ // True False
//  u32 False
//  J2DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J2DTevSwapModeInfo);
	/* 802F2960 */ // True False
//  u32 False
//  J2DTevSwapModeTable False
void setTevSwapModeTable(u32, J2DTevSwapModeTable);
	/* 802F2970 */ // True False
//  u32 False
void getTevSwapModeTable(u32);
	/* 802F2980 */ // True False
//  u32 False
//  J2DIndTevStage False
void setIndTevStage(u32, J2DIndTevStage);
	/* 802F2994 */ // True False
//  u32 False
void getIndTevStage(u32);
	/* 802F29D8 */ // True False
//  u32 False
void getTexture(u32);
	/* 802F29F8 */ // True False
//  u32 False
void getPalette(u32);
	/* 802F2A18 */ // True False
void getFont();
	/* 802F2A20 */ // True False
//  u8 False
void setUndeleteFlag(u8);
	/* 802F2A30 */ // True False
void setFontUndeleteFlag();
};

struct J2DTevBlock {
	/* 802EA12C */ // False False
//  bool False
//  u32 False
bool getTevSwapModeTable(u32);
	/* 802EA134 */ // False False
//  bool False
//  u32 False
bool getTevStage(u32);
	/* 802EA13C */ // False False
//  bool False
//  u32 False
bool getTevColor(u32);
	/* 802EA144 */ // False False
//  bool False
//  u32 False
bool getTevOrder(u32);
	/* 802EA14C */ // False False
//  bool False
//  u32 False
bool getTevKAlphaSel(u32);
	/* 802EA154 */ // False False
//  bool False
//  u32 False
bool getTevKColorSel(u32);
	/* 802EA15C */ // False False
//  bool False
//  u32 False
bool getTevKColor(u32);
	/* 802EA164 */ // False False
void getFontNo() const;
	/* 802EA170 */ // False False
//  u32 False
void getTexNo(u32) const;
	/* 802EA17C */ // False False
//  bool False
bool getTevStageNum() const;
	/* 802EA184 */ // False False
//  bool False
//  u32 False
bool getIndTevStage(u32);
	/* 802EB184 */ // False False
~J2DTevBlock();
	/* 802EB1D0 */ // False False
//  void False
void setGX();
	/* 802EB1D4 */ // False False
//  void False
//  u32 False
//  JUtility::TColor False
void setTevKColor(u32, JUtility::TColor);
	/* 802EB1D8 */ // False False
//  void False
//  u32 False
//  J2DGXColorS10 False
void setTevColor(u32, J2DGXColorS10);
	/* 802EB1DC */ // False False
//  void False
//  u32 False
//  u16 False
void setTexNo(u32, u16);
	/* 802EB87C */ // True False
//  bool False
//  u32 False
bool getTexture(u32);
	/* 802EB884 */ // True False
//  bool False
//  u32 False
bool getPalette(u32);
	/* 802F2A40 */ // True False
//  void False
void initialize();
	/* 802F2A44 */ // True False
//  void False
//  _GXTexMapID False
//  u32 False
void loadTexture(_GXTexMapID, u32);
	/* 802F2A48 */ // True False
//  void False
//  u16 False
void setFontNo(u16);
	/* 802F2A4C */ // True False
//  void False
//  u32 False
//  J2DTevOrder False
void setTevOrder(u32, J2DTevOrder);
	/* 802F2A50 */ // True False
//  void False
//  u32 False
//  u8 False
void setTevKColorSel(u32, u8);
	/* 802F2A54 */ // True False
//  void False
//  u32 False
//  u8 False
void setTevKAlphaSel(u32, u8);
	/* 802F2A58 */ // True False
//  void False
//  u8 False
void setTevStageNum(u8);
	/* 802F2A5C */ // True False
//  void False
//  u32 False
//  J2DTevStage False
void setTevStage(u32, J2DTevStage);
	/* 802F2A60 */ // True False
//  void False
//  u32 False
//  J2DTevSwapModeInfo False
void setTevSwapModeInfo(u32, J2DTevSwapModeInfo);
	/* 802F2A64 */ // True False
//  void False
//  u32 False
//  J2DTevSwapModeTable False
void setTevSwapModeTable(u32, J2DTevSwapModeTable);
	/* 802F2A68 */ // True False
//  void False
//  u32 False
//  J2DIndTevStage False
void setIndTevStage(u32, J2DIndTevStage);
	/* 802F2A6C */ // True False
//  bool False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
bool insertTexture(u32, JUTTexture*);
	/* 802F2A74 */ // True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
bool insertTexture(u32, ResTIMG const*, JUTPalette*);
	/* 802F2A7C */ // True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
bool insertTexture(u32, ResTIMG const*);
	/* 802F2A84 */ // True False
//  bool False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
bool setTexture(u32, JUTTexture*);
	/* 802F2A8C */ // True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
bool setTexture(u32, ResTIMG const*);
	/* 802F2A94 */ // True False
//  bool False
//  u32 False
bool removeTexture(u32);
	/* 802F2A9C */ // True False
//  bool False
//  JUTFont* False
// 	 JUTFont False
bool setFont(JUTFont*);
	/* 802F2AA4 */ // True False
//  bool False
//  ResFONT* False
// 	 ResFONT False
bool setFont(ResFONT*);
	/* 802F2AAC */ // True False
//  bool False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
bool setPalette(u32, ResTLUT const*);
	/* 802F2AB4 */ // True False
//  bool False
//  u8 False
bool prepareTexture(u8);
	/* 802F2ABC */ // True False
//  bool False
bool getFont();
	/* 802F2AC4 */ // True False
//  void False
//  u8 False
//  bool False
void shiftDeleteFlag(u8, bool);
	/* 802F2AC8 */ // True False
//  void False
//  u8 False
void setUndeleteFlag(u8);
	/* 802F2ACC */ // True False
//  void False
void setFontUndeleteFlag();
};

struct J2DPEBlock {
	/* 802F17FC */ // False False
void initialize();
	/* 802F1840 */ // False False
void setGX();
};

struct J2DIndTexOrder {
	/* 802EA0FC */ // False False
//  u8 False
void load(u8);
};

struct J2DIndTexMtx {
	/* 802EA098 */ // False False
//  u8 False
void load(u8);
	/* 802EB2E4 */ // False False
~J2DIndTexMtx();
};

struct J2DIndTexCoordScale {
	/* 802EA0CC */ // False False
//  u8 False
void load(u8);
	/* 802EB290 */ // False False
~J2DIndTexCoordScale();
};

struct J2DIndBlockFull {
	/* 802F1664 */ // True False
void initialize();
	/* 802F1730 */ // True False
void setGX();
	/* 802F1B94 */ // True False
void getType();
	/* 802F1BA0 */ // True False
//  u8 False
void setIndTexStageNum(u8);
	/* 802F1BA8 */ // True False
void getIndTexStageNum() const;
	/* 802F1BB0 */ // True False
//  u32 False
//  J2DIndTexOrder False
void setIndTexOrder(u32, J2DIndTexOrder);
	/* 802F1BCC */ // True False
//  u32 False
void getIndTexOrder(u32);
	/* 802F1BE0 */ // True False
//  u32 False
//  J2DIndTexMtx False
void setIndTexMtx(u32, J2DIndTexMtx);
	/* 802F1C38 */ // True False
//  u32 False
void getIndTexMtx(u32);
	/* 802F1C4C */ // True False
//  u32 False
//  J2DIndTexCoordScale False
void setIndTexCoordScale(u32, J2DIndTexCoordScale);
	/* 802F1C68 */ // True False
//  u32 False
void getIndTexCoordScale(u32);
	/* 802F1C7C */ // True False
~J2DIndBlockFull();
};

struct J2DColorBlock {
	/* 802EB394 */ // False False
void initialize();
	/* 802EB424 */ // False False
void setGX();
};

// 
// Forward References:
// 


// False False
extern "C" void initialize__13J2DColorBlockFv();
// False False
extern "C" void setGX__13J2DColorBlockFv();
// False False
extern "C" void initialize__14J2DTexGenBlockFv();
// False False
extern "C" void setGX__14J2DTexGenBlockFv();
// False False
extern "C" void __dt__14J2DTexGenBlockFv();
// False False
//  u32 False
//  J2DTexMtx& False
// 	 J2DTexMtx False
extern "C" void setTexMtx__14J2DTexGenBlockFUlR9J2DTexMtx();
// False False
//  u32 False
//  J2DTexMtx& False
// 	 J2DTexMtx False
extern "C" void getTexMtx__14J2DTexGenBlockFUlR9J2DTexMtx();
// True False
//  bool False
//  u32 False
extern "C" bool getTexture__11J2DTevBlockFUl();
// True False
//  bool False
//  u32 False
extern "C" bool getPalette__11J2DTevBlockFUl();
// False False
extern "C" void __ct__12J2DTevBlock1Fv();
// True False
extern "C" void __dt__12J2DTevBlock1Fv();
// True False
extern "C" void initialize__12J2DTevBlock1Fv();
// True False
//  u8 False
extern "C" void prepareTexture__12J2DTevBlock1FUc();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" void insertTexture__12J2DTevBlock1FUlPC7ResTIMGP10JUTPalette();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void insertTexture__12J2DTevBlock1FUlP10JUTTexture();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void setTexture__12J2DTevBlock1FUlPC7ResTIMG();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void setTexture__12J2DTevBlock1FUlP10JUTTexture();
// True False
//  u32 False
extern "C" void removeTexture__12J2DTevBlock1FUl();
// True False
//  ResFONT* False
// 	 ResFONT False
extern "C" void setFont__12J2DTevBlock1FP7ResFONT();
// True False
//  JUTFont* False
// 	 JUTFont False
extern "C" void setFont__12J2DTevBlock1FP7JUTFont();
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
extern "C" void setPalette__12J2DTevBlock1FUlPC7ResTLUT();
// True False
//  u8 False
//  bool False
extern "C" void shiftDeleteFlag__12J2DTevBlock1FUcb();
// True False
extern "C" void setGX__12J2DTevBlock1Fv();
// True False
//  _GXTexMapID False
//  u32 False
extern "C" void loadTexture__12J2DTevBlock1F11_GXTexMapIDUl();
// False False
extern "C" void __ct__12J2DTevBlock2Fv();
// True False
extern "C" void __dt__12J2DTevBlock2Fv();
// True False
extern "C" void initialize__12J2DTevBlock2Fv();
// True False
//  u8 False
extern "C" void prepareTexture__12J2DTevBlock2FUc();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" void insertTexture__12J2DTevBlock2FUlPC7ResTIMGP10JUTPalette();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void insertTexture__12J2DTevBlock2FUlP10JUTTexture();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void setTexture__12J2DTevBlock2FUlPC7ResTIMG();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void setTexture__12J2DTevBlock2FUlP10JUTTexture();
// True False
//  u32 False
extern "C" void removeTexture__12J2DTevBlock2FUl();
// True False
//  ResFONT* False
// 	 ResFONT False
extern "C" void setFont__12J2DTevBlock2FP7ResFONT();
// True False
//  JUTFont* False
// 	 JUTFont False
extern "C" void setFont__12J2DTevBlock2FP7JUTFont();
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
extern "C" void setPalette__12J2DTevBlock2FUlPC7ResTLUT();
// True False
//  u8 False
//  bool False
extern "C" void shiftDeleteFlag__12J2DTevBlock2FUcb();
// True False
extern "C" void setGX__12J2DTevBlock2Fv();
// True False
//  _GXTexMapID False
//  u32 False
extern "C" void loadTexture__12J2DTevBlock2F11_GXTexMapIDUl();
// False False
extern "C" void __ct__12J2DTevBlock4Fv();
// True False
extern "C" void __dt__12J2DTevBlock4Fv();
// True False
extern "C" void initialize__12J2DTevBlock4Fv();
// True False
//  u8 False
extern "C" void prepareTexture__12J2DTevBlock4FUc();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" void insertTexture__12J2DTevBlock4FUlPC7ResTIMGP10JUTPalette();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void insertTexture__12J2DTevBlock4FUlP10JUTTexture();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void setTexture__12J2DTevBlock4FUlPC7ResTIMG();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void setTexture__12J2DTevBlock4FUlP10JUTTexture();
// True False
//  u32 False
extern "C" void removeTexture__12J2DTevBlock4FUl();
// True False
//  ResFONT* False
// 	 ResFONT False
extern "C" void setFont__12J2DTevBlock4FP7ResFONT();
// True False
//  JUTFont* False
// 	 JUTFont False
extern "C" void setFont__12J2DTevBlock4FP7JUTFont();
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
extern "C" void setPalette__12J2DTevBlock4FUlPC7ResTLUT();
// True False
//  u8 False
//  bool False
extern "C" void shiftDeleteFlag__12J2DTevBlock4FUcb();
// True False
extern "C" void setGX__12J2DTevBlock4Fv();
// True False
//  _GXTexMapID False
//  u32 False
extern "C" void loadTexture__12J2DTevBlock4F11_GXTexMapIDUl();
// False False
extern "C" void __ct__12J2DTevBlock8Fv();
// True False
extern "C" void __dt__12J2DTevBlock8Fv();
// True False
extern "C" void initialize__12J2DTevBlock8Fv();
// True False
//  u8 False
extern "C" void prepareTexture__12J2DTevBlock8FUc();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" void insertTexture__12J2DTevBlock8FUlPC7ResTIMGP10JUTPalette();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void insertTexture__12J2DTevBlock8FUlP10JUTTexture();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void setTexture__12J2DTevBlock8FUlPC7ResTIMG();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void setTexture__12J2DTevBlock8FUlP10JUTTexture();
// True False
//  u32 False
extern "C" void removeTexture__12J2DTevBlock8FUl();
// True False
//  ResFONT* False
// 	 ResFONT False
extern "C" void setFont__12J2DTevBlock8FP7ResFONT();
// True False
//  JUTFont* False
// 	 JUTFont False
extern "C" void setFont__12J2DTevBlock8FP7JUTFont();
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
extern "C" void setPalette__12J2DTevBlock8FUlPC7ResTLUT();
// True False
//  u8 False
//  bool False
extern "C" void shiftDeleteFlag__12J2DTevBlock8FUcb();
// True False
extern "C" void setGX__12J2DTevBlock8Fv();
// True False
//  _GXTexMapID False
//  u32 False
extern "C" void loadTexture__12J2DTevBlock8F11_GXTexMapIDUl();
// False False
extern "C" void __ct__13J2DTevBlock16Fv();
// True False
extern "C" void __dt__13J2DTevBlock16Fv();
// True False
extern "C" void initialize__13J2DTevBlock16Fv();
// True False
//  u8 False
extern "C" void prepareTexture__13J2DTevBlock16FUc();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" void insertTexture__13J2DTevBlock16FUlPC7ResTIMGP10JUTPalette();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void insertTexture__13J2DTevBlock16FUlP10JUTTexture();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void setTexture__13J2DTevBlock16FUlPC7ResTIMG();
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" void setTexture__13J2DTevBlock16FUlP10JUTTexture();
// True False
//  u32 False
extern "C" void removeTexture__13J2DTevBlock16FUl();
// True False
//  ResFONT* False
// 	 ResFONT False
extern "C" void setFont__13J2DTevBlock16FP7ResFONT();
// True False
//  JUTFont* False
// 	 JUTFont False
extern "C" void setFont__13J2DTevBlock16FP7JUTFont();
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
extern "C" void setPalette__13J2DTevBlock16FUlPC7ResTLUT();
// True False
//  u8 False
//  bool False
extern "C" void shiftDeleteFlag__13J2DTevBlock16FUcb();
// True False
extern "C" void setGX__13J2DTevBlock16Fv();
// True False
//  _GXTexMapID False
//  u32 False
extern "C" void loadTexture__13J2DTevBlock16F11_GXTexMapIDUl();
// True False
extern "C" void initialize__15J2DIndBlockFullFv();
// True False
extern "C" void setGX__15J2DIndBlockFullFv();
// False False
extern "C" void initialize__10J2DPEBlockFv();
// False False
extern "C" void setGX__10J2DPEBlockFv();
// True False
extern "C" void __ct__14J2DIndTevStageFv();
// True False
extern "C" void __ct__19J2DTevSwapModeTableFv();
// False False
extern "C" void __ct__11J2DTevStageFv();
// False False
//  J2DTevStageInfo const& False
// 	 J2DTevStageInfo const False
// 		 J2DTevStageInfo False
extern "C" void setTevStageInfo__11J2DTevStageFRC15J2DTevStageInfo();
// True False
extern "C" void __ct__11J2DTevOrderFv();
// True False
extern "C" void __ct__13J2DGXColorS10Fv();
// True False
extern "C" void getType__15J2DIndBlockFullFv();
// True False
//  u8 False
extern "C" void setIndTexStageNum__15J2DIndBlockFullFUc();
// True False
extern "C" void getIndTexStageNum__15J2DIndBlockFullCFv();
// True False
//  u32 False
//  J2DIndTexOrder False
extern "C" void setIndTexOrder__15J2DIndBlockFullFUl14J2DIndTexOrder();
// True False
//  u32 False
extern "C" void getIndTexOrder__15J2DIndBlockFullFUl();
// True False
//  u32 False
//  J2DIndTexMtx False
extern "C" void setIndTexMtx__15J2DIndBlockFullFUl12J2DIndTexMtx();
// True False
//  u32 False
extern "C" void getIndTexMtx__15J2DIndBlockFullFUl();
// True False
//  u32 False
//  J2DIndTexCoordScale False
extern "C" void setIndTexCoordScale__15J2DIndBlockFullFUl19J2DIndTexCoordScale();
// True False
//  u32 False
extern "C" void getIndTexCoordScale__15J2DIndBlockFullFUl();
// True False
extern "C" void __dt__15J2DIndBlockFullFv();
// True False
extern "C" void getType__13J2DTevBlock16Fv();
// True False
//  s32 False
extern "C" s32 getMaxStage__13J2DTevBlock16Fv();
// True False
//  u32 False
//  u16 False
extern "C" void setTexNo__13J2DTevBlock16FUlUs();
// True False
//  u32 False
extern "C" void getTexNo__13J2DTevBlock16CFUl();
// True False
//  u16 False
extern "C" void setFontNo__13J2DTevBlock16FUs();
// True False
extern "C" void getFontNo__13J2DTevBlock16CFv();
// True False
//  u32 False
//  J2DTevOrder False
extern "C" void setTevOrder__13J2DTevBlock16FUl11J2DTevOrder();
// True False
//  u32 False
extern "C" void getTevOrder__13J2DTevBlock16FUl();
// True False
//  u32 False
//  J2DGXColorS10 False
extern "C" void setTevColor__13J2DTevBlock16FUl13J2DGXColorS10();
// True False
//  u32 False
extern "C" void getTevColor__13J2DTevBlock16FUl();
// True False
//  u32 False
//  JUtility::TColor False
extern "C" void setTevKColor__13J2DTevBlock16FUlQ28JUtility6TColor();
// True False
//  u32 False
extern "C" void getTevKColor__13J2DTevBlock16FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKColorSel__13J2DTevBlock16FUlUc();
// True False
//  u32 False
extern "C" void getTevKColorSel__13J2DTevBlock16FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKAlphaSel__13J2DTevBlock16FUlUc();
// True False
//  u32 False
extern "C" void getTevKAlphaSel__13J2DTevBlock16FUl();
// True False
//  u8 False
extern "C" void setTevStageNum__13J2DTevBlock16FUc();
// True False
extern "C" void getTevStageNum__13J2DTevBlock16CFv();
// True False
//  u32 False
//  J2DTevStage False
extern "C" void setTevStage__13J2DTevBlock16FUl11J2DTevStage();
// True False
//  u32 False
extern "C" void getTevStage__13J2DTevBlock16FUl();
// True False
//  u32 False
//  J2DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__13J2DTevBlock16FUl18J2DTevSwapModeInfo();
// True False
//  u32 False
//  J2DTevSwapModeTable False
extern "C" void setTevSwapModeTable__13J2DTevBlock16FUl19J2DTevSwapModeTable();
// True False
//  u32 False
extern "C" void getTevSwapModeTable__13J2DTevBlock16FUl();
// True False
//  u32 False
//  J2DIndTevStage False
extern "C" void setIndTevStage__13J2DTevBlock16FUl14J2DIndTevStage();
// True False
//  u32 False
extern "C" void getIndTevStage__13J2DTevBlock16FUl();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void insertTexture__13J2DTevBlock16FUlPC7ResTIMG();
// True False
//  u32 False
extern "C" void getTexture__13J2DTevBlock16FUl();
// True False
//  u32 False
extern "C" void getPalette__13J2DTevBlock16FUl();
// True False
extern "C" void getFont__13J2DTevBlock16Fv();
// True False
//  u8 False
extern "C" void setUndeleteFlag__13J2DTevBlock16FUc();
// True False
extern "C" void setFontUndeleteFlag__13J2DTevBlock16Fv();
// True False
extern "C" void getType__12J2DTevBlock8Fv();
// True False
//  s32 False
extern "C" s32 getMaxStage__12J2DTevBlock8Fv();
// True False
//  u32 False
//  u16 False
extern "C" void setTexNo__12J2DTevBlock8FUlUs();
// True False
//  u32 False
extern "C" void getTexNo__12J2DTevBlock8CFUl();
// True False
//  u16 False
extern "C" void setFontNo__12J2DTevBlock8FUs();
// True False
extern "C" void getFontNo__12J2DTevBlock8CFv();
// True False
//  u32 False
//  J2DTevOrder False
extern "C" void setTevOrder__12J2DTevBlock8FUl11J2DTevOrder();
// True False
//  u32 False
extern "C" void getTevOrder__12J2DTevBlock8FUl();
// True False
//  u32 False
//  J2DGXColorS10 False
extern "C" void setTevColor__12J2DTevBlock8FUl13J2DGXColorS10();
// True False
//  u32 False
extern "C" void getTevColor__12J2DTevBlock8FUl();
// True False
//  u32 False
//  JUtility::TColor False
extern "C" void setTevKColor__12J2DTevBlock8FUlQ28JUtility6TColor();
// True False
//  u32 False
extern "C" void getTevKColor__12J2DTevBlock8FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKColorSel__12J2DTevBlock8FUlUc();
// True False
//  u32 False
extern "C" void getTevKColorSel__12J2DTevBlock8FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKAlphaSel__12J2DTevBlock8FUlUc();
// True False
//  u32 False
extern "C" void getTevKAlphaSel__12J2DTevBlock8FUl();
// True False
//  u8 False
extern "C" void setTevStageNum__12J2DTevBlock8FUc();
// True False
extern "C" void getTevStageNum__12J2DTevBlock8CFv();
// True False
//  u32 False
//  J2DTevStage False
extern "C" void setTevStage__12J2DTevBlock8FUl11J2DTevStage();
// True False
//  u32 False
extern "C" void getTevStage__12J2DTevBlock8FUl();
// True False
//  u32 False
//  J2DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__12J2DTevBlock8FUl18J2DTevSwapModeInfo();
// True False
//  u32 False
//  J2DTevSwapModeTable False
extern "C" void setTevSwapModeTable__12J2DTevBlock8FUl19J2DTevSwapModeTable();
// True False
//  u32 False
extern "C" void getTevSwapModeTable__12J2DTevBlock8FUl();
// True False
//  u32 False
//  J2DIndTevStage False
extern "C" void setIndTevStage__12J2DTevBlock8FUl14J2DIndTevStage();
// True False
//  u32 False
extern "C" void getIndTevStage__12J2DTevBlock8FUl();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void insertTexture__12J2DTevBlock8FUlPC7ResTIMG();
// True False
//  u32 False
extern "C" void getTexture__12J2DTevBlock8FUl();
// True False
//  u32 False
extern "C" void getPalette__12J2DTevBlock8FUl();
// True False
extern "C" void getFont__12J2DTevBlock8Fv();
// True False
//  u8 False
extern "C" void setUndeleteFlag__12J2DTevBlock8FUc();
// True False
extern "C" void setFontUndeleteFlag__12J2DTevBlock8Fv();
// True False
extern "C" void getType__12J2DTevBlock4Fv();
// True False
//  s32 False
extern "C" s32 getMaxStage__12J2DTevBlock4Fv();
// True False
//  u32 False
//  u16 False
extern "C" void setTexNo__12J2DTevBlock4FUlUs();
// True False
//  u32 False
extern "C" void getTexNo__12J2DTevBlock4CFUl();
// True False
//  u16 False
extern "C" void setFontNo__12J2DTevBlock4FUs();
// True False
extern "C" void getFontNo__12J2DTevBlock4CFv();
// True False
//  u32 False
//  J2DTevOrder False
extern "C" void setTevOrder__12J2DTevBlock4FUl11J2DTevOrder();
// True False
//  u32 False
extern "C" void getTevOrder__12J2DTevBlock4FUl();
// True False
//  u32 False
//  J2DGXColorS10 False
extern "C" void setTevColor__12J2DTevBlock4FUl13J2DGXColorS10();
// True False
//  u32 False
extern "C" void getTevColor__12J2DTevBlock4FUl();
// True False
//  u32 False
//  JUtility::TColor False
extern "C" void setTevKColor__12J2DTevBlock4FUlQ28JUtility6TColor();
// True False
//  u32 False
extern "C" void getTevKColor__12J2DTevBlock4FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKColorSel__12J2DTevBlock4FUlUc();
// True False
//  u32 False
extern "C" void getTevKColorSel__12J2DTevBlock4FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKAlphaSel__12J2DTevBlock4FUlUc();
// True False
//  u32 False
extern "C" void getTevKAlphaSel__12J2DTevBlock4FUl();
// True False
//  u8 False
extern "C" void setTevStageNum__12J2DTevBlock4FUc();
// True False
extern "C" void getTevStageNum__12J2DTevBlock4CFv();
// True False
//  u32 False
//  J2DTevStage False
extern "C" void setTevStage__12J2DTevBlock4FUl11J2DTevStage();
// True False
//  u32 False
extern "C" void getTevStage__12J2DTevBlock4FUl();
// True False
//  u32 False
//  J2DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__12J2DTevBlock4FUl18J2DTevSwapModeInfo();
// True False
//  u32 False
//  J2DTevSwapModeTable False
extern "C" void setTevSwapModeTable__12J2DTevBlock4FUl19J2DTevSwapModeTable();
// True False
//  u32 False
extern "C" void getTevSwapModeTable__12J2DTevBlock4FUl();
// True False
//  u32 False
//  J2DIndTevStage False
extern "C" void setIndTevStage__12J2DTevBlock4FUl14J2DIndTevStage();
// True False
//  u32 False
extern "C" void getIndTevStage__12J2DTevBlock4FUl();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void insertTexture__12J2DTevBlock4FUlPC7ResTIMG();
// True False
//  u32 False
extern "C" void getTexture__12J2DTevBlock4FUl();
// True False
//  u32 False
extern "C" void getPalette__12J2DTevBlock4FUl();
// True False
extern "C" void getFont__12J2DTevBlock4Fv();
// True False
//  u8 False
extern "C" void setUndeleteFlag__12J2DTevBlock4FUc();
// True False
extern "C" void setFontUndeleteFlag__12J2DTevBlock4Fv();
// True False
extern "C" void getType__12J2DTevBlock2Fv();
// True False
//  s32 False
extern "C" s32 getMaxStage__12J2DTevBlock2Fv();
// True False
//  u32 False
//  u16 False
extern "C" void setTexNo__12J2DTevBlock2FUlUs();
// True False
//  u32 False
extern "C" void getTexNo__12J2DTevBlock2CFUl();
// True False
//  u16 False
extern "C" void setFontNo__12J2DTevBlock2FUs();
// True False
extern "C" void getFontNo__12J2DTevBlock2CFv();
// True False
//  u32 False
//  J2DTevOrder False
extern "C" void setTevOrder__12J2DTevBlock2FUl11J2DTevOrder();
// True False
//  u32 False
extern "C" void getTevOrder__12J2DTevBlock2FUl();
// True False
//  u32 False
//  J2DGXColorS10 False
extern "C" void setTevColor__12J2DTevBlock2FUl13J2DGXColorS10();
// True False
//  u32 False
extern "C" void getTevColor__12J2DTevBlock2FUl();
// True False
//  u32 False
//  JUtility::TColor False
extern "C" void setTevKColor__12J2DTevBlock2FUlQ28JUtility6TColor();
// True False
//  u32 False
extern "C" void getTevKColor__12J2DTevBlock2FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKColorSel__12J2DTevBlock2FUlUc();
// True False
//  u32 False
extern "C" void getTevKColorSel__12J2DTevBlock2FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKAlphaSel__12J2DTevBlock2FUlUc();
// True False
//  u32 False
extern "C" void getTevKAlphaSel__12J2DTevBlock2FUl();
// True False
//  u8 False
extern "C" void setTevStageNum__12J2DTevBlock2FUc();
// True False
extern "C" void getTevStageNum__12J2DTevBlock2CFv();
// True False
//  u32 False
//  J2DTevStage False
extern "C" void setTevStage__12J2DTevBlock2FUl11J2DTevStage();
// True False
//  u32 False
extern "C" void getTevStage__12J2DTevBlock2FUl();
// True False
//  u32 False
//  J2DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__12J2DTevBlock2FUl18J2DTevSwapModeInfo();
// True False
//  u32 False
//  J2DTevSwapModeTable False
extern "C" void setTevSwapModeTable__12J2DTevBlock2FUl19J2DTevSwapModeTable();
// True False
//  u32 False
extern "C" void getTevSwapModeTable__12J2DTevBlock2FUl();
// True False
//  u32 False
//  J2DIndTevStage False
extern "C" void setIndTevStage__12J2DTevBlock2FUl14J2DIndTevStage();
// True False
//  u32 False
extern "C" void getIndTevStage__12J2DTevBlock2FUl();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void insertTexture__12J2DTevBlock2FUlPC7ResTIMG();
// True False
//  u32 False
extern "C" void getTexture__12J2DTevBlock2FUl();
// True False
//  u32 False
extern "C" void getPalette__12J2DTevBlock2FUl();
// True False
extern "C" void getFont__12J2DTevBlock2Fv();
// True False
//  u8 False
extern "C" void setUndeleteFlag__12J2DTevBlock2FUc();
// True False
extern "C" void setFontUndeleteFlag__12J2DTevBlock2Fv();
// True False
extern "C" void getType__12J2DTevBlock1Fv();
// True False
//  bool False
extern "C" bool getMaxStage__12J2DTevBlock1Fv();
// True False
//  u32 False
//  u16 False
extern "C" void setTexNo__12J2DTevBlock1FUlUs();
// True False
//  u32 False
extern "C" void getTexNo__12J2DTevBlock1CFUl();
// True False
//  u16 False
extern "C" void setFontNo__12J2DTevBlock1FUs();
// True False
extern "C" void getFontNo__12J2DTevBlock1CFv();
// True False
//  u32 False
//  J2DTevOrder False
extern "C" void setTevOrder__12J2DTevBlock1FUl11J2DTevOrder();
// True False
//  u32 False
extern "C" void getTevOrder__12J2DTevBlock1FUl();
// True False
//  u32 False
//  J2DGXColorS10 False
extern "C" void setTevColor__12J2DTevBlock1FUl13J2DGXColorS10();
// True False
//  u32 False
extern "C" void getTevColor__12J2DTevBlock1FUl();
// True False
//  u32 False
//  JUtility::TColor False
extern "C" void setTevKColor__12J2DTevBlock1FUlQ28JUtility6TColor();
// True False
//  u32 False
extern "C" void getTevKColor__12J2DTevBlock1FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKColorSel__12J2DTevBlock1FUlUc();
// True False
//  u32 False
extern "C" void getTevKColorSel__12J2DTevBlock1FUl();
// True False
//  u32 False
//  u8 False
extern "C" void setTevKAlphaSel__12J2DTevBlock1FUlUc();
// True False
//  u32 False
extern "C" void getTevKAlphaSel__12J2DTevBlock1FUl();
// True False
//  void False
//  u8 False
extern "C" void setTevStageNum__12J2DTevBlock1FUc();
// True False
//  bool False
extern "C" bool getTevStageNum__12J2DTevBlock1CFv();
// True False
//  u32 False
//  J2DTevStage False
extern "C" void setTevStage__12J2DTevBlock1FUl11J2DTevStage();
// True False
//  u32 False
extern "C" void getTevStage__12J2DTevBlock1FUl();
// True False
//  u32 False
//  J2DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__12J2DTevBlock1FUl18J2DTevSwapModeInfo();
// True False
//  u32 False
//  J2DTevSwapModeTable False
extern "C" void setTevSwapModeTable__12J2DTevBlock1FUl19J2DTevSwapModeTable();
// True False
//  u32 False
extern "C" void getTevSwapModeTable__12J2DTevBlock1FUl();
// True False
//  u32 False
//  J2DIndTevStage False
extern "C" void setIndTevStage__12J2DTevBlock1FUl14J2DIndTevStage();
// True False
//  u32 False
extern "C" void getIndTevStage__12J2DTevBlock1FUl();
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" void insertTexture__12J2DTevBlock1FUlPC7ResTIMG();
// True False
//  u32 False
extern "C" void getTexture__12J2DTevBlock1FUl();
// True False
//  u32 False
extern "C" void getPalette__12J2DTevBlock1FUl();
// True False
extern "C" void getFont__12J2DTevBlock1Fv();
// True False
//  u8 False
extern "C" void setUndeleteFlag__12J2DTevBlock1FUc();
// True False
extern "C" void setFontUndeleteFlag__12J2DTevBlock1Fv();
// True False
//  void False
extern "C" void initialize__11J2DTevBlockFv();
// True False
//  void False
//  _GXTexMapID False
//  u32 False
extern "C" void loadTexture__11J2DTevBlockF11_GXTexMapIDUl();
// True False
//  void False
//  u16 False
extern "C" void setFontNo__11J2DTevBlockFUs();
// True False
//  void False
//  u32 False
//  J2DTevOrder False
extern "C" void setTevOrder__11J2DTevBlockFUl11J2DTevOrder();
// True False
//  void False
//  u32 False
//  u8 False
extern "C" void setTevKColorSel__11J2DTevBlockFUlUc();
// True False
//  void False
//  u32 False
//  u8 False
extern "C" void setTevKAlphaSel__11J2DTevBlockFUlUc();
// True False
//  void False
//  u8 False
extern "C" void setTevStageNum__11J2DTevBlockFUc();
// True False
//  void False
//  u32 False
//  J2DTevStage False
extern "C" void setTevStage__11J2DTevBlockFUl11J2DTevStage();
// True False
//  void False
//  u32 False
//  J2DTevSwapModeInfo False
extern "C" void setTevSwapModeInfo__11J2DTevBlockFUl18J2DTevSwapModeInfo();
// True False
//  void False
//  u32 False
//  J2DTevSwapModeTable False
extern "C" void setTevSwapModeTable__11J2DTevBlockFUl19J2DTevSwapModeTable();
// True False
//  void False
//  u32 False
//  J2DIndTevStage False
extern "C" void setIndTevStage__11J2DTevBlockFUl14J2DIndTevStage();
// True False
//  bool False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" bool insertTexture__11J2DTevBlockFUlP10JUTTexture();
// True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" bool insertTexture__11J2DTevBlockFUlPC7ResTIMGP10JUTPalette();
// True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" bool insertTexture__11J2DTevBlockFUlPC7ResTIMG();
// True False
//  bool False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
extern "C" bool setTexture__11J2DTevBlockFUlP10JUTTexture();
// True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
extern "C" bool setTexture__11J2DTevBlockFUlPC7ResTIMG();
// True False
//  bool False
//  u32 False
extern "C" bool removeTexture__11J2DTevBlockFUl();
// True False
//  bool False
//  JUTFont* False
// 	 JUTFont False
extern "C" bool setFont__11J2DTevBlockFP7JUTFont();
// True False
//  bool False
//  ResFONT* False
// 	 ResFONT False
extern "C" bool setFont__11J2DTevBlockFP7ResFONT();
// True False
//  bool False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
extern "C" bool setPalette__11J2DTevBlockFUlPC7ResTLUT();
// True False
//  bool False
//  u8 False
extern "C" bool prepareTexture__11J2DTevBlockFUc();
// True False
//  bool False
extern "C" bool getFont__11J2DTevBlockFv();
// True False
//  void False
//  u8 False
//  bool False
extern "C" void shiftDeleteFlag__11J2DTevBlockFUcb();
// True False
//  void False
//  u8 False
extern "C" void setUndeleteFlag__11J2DTevBlockFUc();
// True False
//  void False
extern "C" void setFontUndeleteFlag__11J2DTevBlockFv();
extern "C" extern void* __vt__15J2DIndBlockFull[14];
extern "C" extern void* __vt__13J2DTevBlock16[47];
extern "C" extern void* __vt__12J2DTevBlock8[47];
extern "C" extern void* __vt__12J2DTevBlock4[47];
extern "C" extern void* __vt__12J2DTevBlock2[47];
extern "C" extern void* __vt__12J2DTevBlock1[47];
extern "C" extern void* __vt__11J2DTevBlock[47];
extern "C" extern void* __vt__14J2DTexGenBlock[3 + 1 /* padding */];

// 
// External References:
// 

// False False
//  void* False
// 	 void False
//  u32 False
void* operator new(u32);
// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
extern "C" void __ct__Q28JUtility6TColorFv();
// False False
//  void* False
// 	 void False
//  u32 False
extern "C" void* __nw__FUl();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void __dt__10JUTTextureFv();
// False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  u8 False
extern "C" void storeTIMG__10JUTTextureFPC7ResTIMGUc();
// False False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" void storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette();
// False False
//  JUTPalette* False
// 	 JUTPalette False
extern "C" void attachPalette__10JUTTextureFP10JUTPalette();
// False False
//  _GXTexMapID False
extern "C" void load__10JUTTextureF11_GXTexMapID();
// False False
//  _GXTlut False
//  ResTLUT* False
// 	 ResTLUT False
extern "C" void storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT();
// False False
//  ResFONT const* False
// 	 ResFONT const False
// 		 ResFONT False
//  JKRHeap* False
// 	 JKRHeap False
extern "C" void __ct__10JUTResFontFPC7ResFONTP7JKRHeap();
// False False
//  u32 False
extern "C" void load__9J2DTexMtxFUl();
// False False
extern "C" void calc__9J2DTexMtxFv();
// False False
//  u8 False
extern "C" void load__14J2DIndTevStageFUc();
// False False
//  u8 False
extern "C" void load__12J2DIndTexMtxFUc();
// False False
//  u8 False
extern "C" void load__19J2DIndTexCoordScaleFUc();
// False False
//  u8 False
extern "C" void load__14J2DIndTexOrderFUc();
// False False
//  bool False
//  u32 False
extern "C" bool getTevSwapModeTable__11J2DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevStage__11J2DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevColor__11J2DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevOrder__11J2DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevKAlphaSel__11J2DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevKColorSel__11J2DTevBlockFUl();
// False False
//  bool False
//  u32 False
extern "C" bool getTevKColor__11J2DTevBlockFUl();
// False False
extern "C" void getFontNo__11J2DTevBlockCFv();
// False False
//  u32 False
extern "C" void getTexNo__11J2DTevBlockCFUl();
// False False
//  bool False
extern "C" bool getTevStageNum__11J2DTevBlockCFv();
// False False
//  bool False
//  u32 False
extern "C" bool getIndTevStage__11J2DTevBlockFUl();
// False False
extern "C" void __dt__11J2DTevBlockFv();
// False False
//  void False
extern "C" void setGX__11J2DTevBlockFv();
// False False
//  void False
//  u32 False
//  JUtility::TColor False
extern "C" void setTevKColor__11J2DTevBlockFUlQ28JUtility6TColor();
// False False
//  void False
//  u32 False
//  J2DGXColorS10 False
extern "C" void setTevColor__11J2DTevBlockFUl13J2DGXColorS10();
// False False
//  void False
//  u32 False
//  u16 False
extern "C" void setTexNo__11J2DTevBlockFUlUs();
// False False
extern "C" void __dt__19J2DIndTexCoordScaleFv();
// False False
extern "C" void __dt__12J2DIndTexMtxFv();
// False False
extern "C" void GXSetTexCoordGen2();
// False False
extern "C" void GXSetNumTexGens();
// False False
extern "C" void GXSetCullMode();
// False False
extern "C" void GXSetChanMatColor();
// False False
extern "C" void GXSetNumChans();
// False False
extern "C" void GXSetChanCtrl();
// False False
extern "C" void GXSetNumIndStages();
// False False
extern "C" void GXSetTevColorIn();
// False False
extern "C" void GXSetTevAlphaIn();
// False False
extern "C" void GXSetTevColorOp();
// False False
extern "C" void GXSetTevAlphaOp();
// False False
extern "C" void GXSetTevColorS10();
// False False
extern "C" void GXSetTevKColor();
// False False
extern "C" void GXSetTevKColorSel();
// False False
extern "C" void GXSetTevKAlphaSel();
// False False
extern "C" void GXSetTevSwapMode();
// False False
extern "C" void GXSetTevSwapModeTable();
// False False
extern "C" void GXSetAlphaCompare();
// False False
extern "C" void GXSetTevOrder();
// False False
extern "C" void GXSetNumTevStages();
// False False
extern "C" void GXSetBlendMode();
// False False
extern "C" void GXSetDither();
// False False
extern "C" void __destroy_arr();
// False False
extern "C" void __construct_array();
// False False
extern "C" void _savegpr_25();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_27();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_25();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_27();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();
extern "C" extern u8 const j2dDefaultTexCoordInfo[32];
extern "C" extern u8 const j2dDefaultIndTexMtxInfo[28];
extern "C" extern u8 const j2dDefaultTevStageInfo[20];
extern "C" extern u8 const j2dDefaultIndTevStageInfo[12];
extern "C" extern void* __vt__11J2DIndBlock[14];
extern "C" extern u32 j2dDefaultColInfo;
extern "C" extern u32 j2dDefaultTevOrderInfoNull;
extern "C" extern u16 j2dDefaultIndTexOrderNull[1 + 1 /* padding */];
extern "C" extern u8 j2dDefaultTevColor[8];
extern "C" extern u8 j2dDefaultIndTexCoordScaleInfo[2 + 2 /* padding */];
extern "C" extern u32 j2dDefaultTevKColor;
extern "C" extern u8 j2dDefaultTevSwapMode[4];
extern "C" extern u32 j2dDefaultTevSwapModeTable;
extern "C" extern u32 j2dDefaultBlendInfo;
extern "C" extern u8 data_804561A4[4];
extern "C" extern u32 j2dDefaultColorChanInfo;
extern "C" extern u8 struct_804561AC[4];

// 
// Declarations:
// 

/* 802EB394-802EB424 0090+00 s=0 e=1 z=0  None .text      initialize__13J2DColorBlockFv                                */
//	802EB39C: 8045617C (j2dDefaultColInfo)
//	802EB3F4: 804561A8 (j2dDefaultColorChanInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DColorBlock::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__13J2DColorBlockFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803A1C00-803A1C10 0010+00 s=1 e=0 z=0  None .rodata    @1463                                                        */
SECTION_RODATA static u8 const lit_1463[16] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03,
};

/* 802EB424-802EB510 00EC+00 s=0 e=1 z=0  None .text      setGX__13J2DColorBlockFv                                     */
//	802EB434: 803621D4 (_savegpr_27)
//	802EB454: 8035DA48 (GXSetChanMatColor)
//	802EB46C: 8035DB30 (GXSetNumChans)
//	802EB470: 803A1C00 (lit_1463)
//	802EB474: 803A1C00 (lit_1463)
//	802EB4D0: 8035DB6C (GXSetChanCtrl)
//	802EB4F4: 8035C984 (GXSetCullMode)
//	802EB4FC: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DColorBlock::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__13J2DColorBlockFv.s"
}
#pragma pop


/* 802EB510-802EB570 0060+00 s=0 e=1 z=0  None .text      initialize__14J2DTexGenBlockFv                               */
//	802EB518: 803A1B80 (j2dDefaultTexCoordInfo)
//	802EB51C: 803A1B80 (j2dDefaultTexCoordInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DTexGenBlock::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__14J2DTexGenBlockFv.s"
}
#pragma pop


/* 802EB570-802EB620 00B0+00 s=0 e=1 z=0  None .text      setGX__14J2DTexGenBlockFv                                    */
//	802EB580: 803621DC (_savegpr_29)
//	802EB590: 8035BDFC (GXSetNumTexGens)
//	802EB5BC: 8035BB7C (GXSetTexCoordGen2)
//	802EB5F4: 802E9C90 (load__9J2DTexMtxFUl)
//	802EB60C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DTexGenBlock::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__14J2DTexGenBlockFv.s"
}
#pragma pop


/* ############################################################################################## */
/* 803CCA90-803CCAC8 0038+00 s=1 e=1 z=0  None .data      __vt__15J2DIndBlockFull                                      */
SECTION_DATA void* __vt__15J2DIndBlockFull[14] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)initialize__15J2DIndBlockFullFv,
	(void*)setGX__15J2DIndBlockFullFv,
	(void*)getType__15J2DIndBlockFullFv,
	(void*)setIndTexStageNum__15J2DIndBlockFullFUc,
	(void*)getIndTexStageNum__15J2DIndBlockFullCFv,
	(void*)setIndTexOrder__15J2DIndBlockFullFUl14J2DIndTexOrder,
	(void*)getIndTexOrder__15J2DIndBlockFullFUl,
	(void*)setIndTexMtx__15J2DIndBlockFullFUl12J2DIndTexMtx,
	(void*)getIndTexMtx__15J2DIndBlockFullFUl,
	(void*)setIndTexCoordScale__15J2DIndBlockFullFUl19J2DIndTexCoordScale,
	(void*)getIndTexCoordScale__15J2DIndBlockFullFUl,
	(void*)__dt__15J2DIndBlockFullFv,
};

/* 803CCAC8-803CCB84 00BC+00 s=2 e=0 z=0  None .data      __vt__13J2DTevBlock16                                        */
SECTION_DATA void* __vt__13J2DTevBlock16[47] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)initialize__13J2DTevBlock16Fv,
	(void*)setGX__13J2DTevBlock16Fv,
	(void*)loadTexture__13J2DTevBlock16F11_GXTexMapIDUl,
	(void*)getType__13J2DTevBlock16Fv,
	(void*)getMaxStage__13J2DTevBlock16Fv,
	(void*)setTexNo__13J2DTevBlock16FUlUs,
	(void*)getTexNo__13J2DTevBlock16CFUl,
	(void*)setFontNo__13J2DTevBlock16FUs,
	(void*)getFontNo__13J2DTevBlock16CFv,
	(void*)setTevOrder__13J2DTevBlock16FUl11J2DTevOrder,
	(void*)getTevOrder__13J2DTevBlock16FUl,
	(void*)setTevColor__13J2DTevBlock16FUl13J2DGXColorS10,
	(void*)getTevColor__13J2DTevBlock16FUl,
	(void*)setTevKColor__13J2DTevBlock16FUlQ28JUtility6TColor,
	(void*)getTevKColor__13J2DTevBlock16FUl,
	(void*)setTevKColorSel__13J2DTevBlock16FUlUc,
	(void*)getTevKColorSel__13J2DTevBlock16FUl,
	(void*)setTevKAlphaSel__13J2DTevBlock16FUlUc,
	(void*)getTevKAlphaSel__13J2DTevBlock16FUl,
	(void*)setTevStageNum__13J2DTevBlock16FUc,
	(void*)getTevStageNum__13J2DTevBlock16CFv,
	(void*)setTevStage__13J2DTevBlock16FUl11J2DTevStage,
	(void*)getTevStage__13J2DTevBlock16FUl,
	(void*)setTevSwapModeInfo__13J2DTevBlock16FUl18J2DTevSwapModeInfo,
	(void*)setTevSwapModeTable__13J2DTevBlock16FUl19J2DTevSwapModeTable,
	(void*)getTevSwapModeTable__13J2DTevBlock16FUl,
	(void*)setIndTevStage__13J2DTevBlock16FUl14J2DIndTevStage,
	(void*)getIndTevStage__13J2DTevBlock16FUl,
	(void*)insertTexture__13J2DTevBlock16FUlPC7ResTIMG,
	(void*)insertTexture__13J2DTevBlock16FUlPC7ResTIMGP10JUTPalette,
	(void*)insertTexture__13J2DTevBlock16FUlP10JUTTexture,
	(void*)setTexture__13J2DTevBlock16FUlPC7ResTIMG,
	(void*)setTexture__13J2DTevBlock16FUlP10JUTTexture,
	(void*)removeTexture__13J2DTevBlock16FUl,
	(void*)setFont__13J2DTevBlock16FP7ResFONT,
	(void*)setFont__13J2DTevBlock16FP7JUTFont,
	(void*)setPalette__13J2DTevBlock16FUlPC7ResTLUT,
	(void*)prepareTexture__13J2DTevBlock16FUc,
	(void*)getTexture__13J2DTevBlock16FUl,
	(void*)getPalette__13J2DTevBlock16FUl,
	(void*)getFont__13J2DTevBlock16Fv,
	(void*)shiftDeleteFlag__13J2DTevBlock16FUcb,
	(void*)setUndeleteFlag__13J2DTevBlock16FUc,
	(void*)setFontUndeleteFlag__13J2DTevBlock16Fv,
	(void*)__dt__13J2DTevBlock16Fv,
};

/* 803CCB84-803CCC40 00BC+00 s=2 e=0 z=0  None .data      __vt__12J2DTevBlock8                                         */
SECTION_DATA void* __vt__12J2DTevBlock8[47] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)initialize__12J2DTevBlock8Fv,
	(void*)setGX__12J2DTevBlock8Fv,
	(void*)loadTexture__12J2DTevBlock8F11_GXTexMapIDUl,
	(void*)getType__12J2DTevBlock8Fv,
	(void*)getMaxStage__12J2DTevBlock8Fv,
	(void*)setTexNo__12J2DTevBlock8FUlUs,
	(void*)getTexNo__12J2DTevBlock8CFUl,
	(void*)setFontNo__12J2DTevBlock8FUs,
	(void*)getFontNo__12J2DTevBlock8CFv,
	(void*)setTevOrder__12J2DTevBlock8FUl11J2DTevOrder,
	(void*)getTevOrder__12J2DTevBlock8FUl,
	(void*)setTevColor__12J2DTevBlock8FUl13J2DGXColorS10,
	(void*)getTevColor__12J2DTevBlock8FUl,
	(void*)setTevKColor__12J2DTevBlock8FUlQ28JUtility6TColor,
	(void*)getTevKColor__12J2DTevBlock8FUl,
	(void*)setTevKColorSel__12J2DTevBlock8FUlUc,
	(void*)getTevKColorSel__12J2DTevBlock8FUl,
	(void*)setTevKAlphaSel__12J2DTevBlock8FUlUc,
	(void*)getTevKAlphaSel__12J2DTevBlock8FUl,
	(void*)setTevStageNum__12J2DTevBlock8FUc,
	(void*)getTevStageNum__12J2DTevBlock8CFv,
	(void*)setTevStage__12J2DTevBlock8FUl11J2DTevStage,
	(void*)getTevStage__12J2DTevBlock8FUl,
	(void*)setTevSwapModeInfo__12J2DTevBlock8FUl18J2DTevSwapModeInfo,
	(void*)setTevSwapModeTable__12J2DTevBlock8FUl19J2DTevSwapModeTable,
	(void*)getTevSwapModeTable__12J2DTevBlock8FUl,
	(void*)setIndTevStage__12J2DTevBlock8FUl14J2DIndTevStage,
	(void*)getIndTevStage__12J2DTevBlock8FUl,
	(void*)insertTexture__12J2DTevBlock8FUlPC7ResTIMG,
	(void*)insertTexture__12J2DTevBlock8FUlPC7ResTIMGP10JUTPalette,
	(void*)insertTexture__12J2DTevBlock8FUlP10JUTTexture,
	(void*)setTexture__12J2DTevBlock8FUlPC7ResTIMG,
	(void*)setTexture__12J2DTevBlock8FUlP10JUTTexture,
	(void*)removeTexture__12J2DTevBlock8FUl,
	(void*)setFont__12J2DTevBlock8FP7ResFONT,
	(void*)setFont__12J2DTevBlock8FP7JUTFont,
	(void*)setPalette__12J2DTevBlock8FUlPC7ResTLUT,
	(void*)prepareTexture__12J2DTevBlock8FUc,
	(void*)getTexture__12J2DTevBlock8FUl,
	(void*)getPalette__12J2DTevBlock8FUl,
	(void*)getFont__12J2DTevBlock8Fv,
	(void*)shiftDeleteFlag__12J2DTevBlock8FUcb,
	(void*)setUndeleteFlag__12J2DTevBlock8FUc,
	(void*)setFontUndeleteFlag__12J2DTevBlock8Fv,
	(void*)__dt__12J2DTevBlock8Fv,
};

/* 803CCC40-803CCCFC 00BC+00 s=2 e=0 z=0  None .data      __vt__12J2DTevBlock4                                         */
SECTION_DATA void* __vt__12J2DTevBlock4[47] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)initialize__12J2DTevBlock4Fv,
	(void*)setGX__12J2DTevBlock4Fv,
	(void*)loadTexture__12J2DTevBlock4F11_GXTexMapIDUl,
	(void*)getType__12J2DTevBlock4Fv,
	(void*)getMaxStage__12J2DTevBlock4Fv,
	(void*)setTexNo__12J2DTevBlock4FUlUs,
	(void*)getTexNo__12J2DTevBlock4CFUl,
	(void*)setFontNo__12J2DTevBlock4FUs,
	(void*)getFontNo__12J2DTevBlock4CFv,
	(void*)setTevOrder__12J2DTevBlock4FUl11J2DTevOrder,
	(void*)getTevOrder__12J2DTevBlock4FUl,
	(void*)setTevColor__12J2DTevBlock4FUl13J2DGXColorS10,
	(void*)getTevColor__12J2DTevBlock4FUl,
	(void*)setTevKColor__12J2DTevBlock4FUlQ28JUtility6TColor,
	(void*)getTevKColor__12J2DTevBlock4FUl,
	(void*)setTevKColorSel__12J2DTevBlock4FUlUc,
	(void*)getTevKColorSel__12J2DTevBlock4FUl,
	(void*)setTevKAlphaSel__12J2DTevBlock4FUlUc,
	(void*)getTevKAlphaSel__12J2DTevBlock4FUl,
	(void*)setTevStageNum__12J2DTevBlock4FUc,
	(void*)getTevStageNum__12J2DTevBlock4CFv,
	(void*)setTevStage__12J2DTevBlock4FUl11J2DTevStage,
	(void*)getTevStage__12J2DTevBlock4FUl,
	(void*)setTevSwapModeInfo__12J2DTevBlock4FUl18J2DTevSwapModeInfo,
	(void*)setTevSwapModeTable__12J2DTevBlock4FUl19J2DTevSwapModeTable,
	(void*)getTevSwapModeTable__12J2DTevBlock4FUl,
	(void*)setIndTevStage__12J2DTevBlock4FUl14J2DIndTevStage,
	(void*)getIndTevStage__12J2DTevBlock4FUl,
	(void*)insertTexture__12J2DTevBlock4FUlPC7ResTIMG,
	(void*)insertTexture__12J2DTevBlock4FUlPC7ResTIMGP10JUTPalette,
	(void*)insertTexture__12J2DTevBlock4FUlP10JUTTexture,
	(void*)setTexture__12J2DTevBlock4FUlPC7ResTIMG,
	(void*)setTexture__12J2DTevBlock4FUlP10JUTTexture,
	(void*)removeTexture__12J2DTevBlock4FUl,
	(void*)setFont__12J2DTevBlock4FP7ResFONT,
	(void*)setFont__12J2DTevBlock4FP7JUTFont,
	(void*)setPalette__12J2DTevBlock4FUlPC7ResTLUT,
	(void*)prepareTexture__12J2DTevBlock4FUc,
	(void*)getTexture__12J2DTevBlock4FUl,
	(void*)getPalette__12J2DTevBlock4FUl,
	(void*)getFont__12J2DTevBlock4Fv,
	(void*)shiftDeleteFlag__12J2DTevBlock4FUcb,
	(void*)setUndeleteFlag__12J2DTevBlock4FUc,
	(void*)setFontUndeleteFlag__12J2DTevBlock4Fv,
	(void*)__dt__12J2DTevBlock4Fv,
};

/* 803CCCFC-803CCDB8 00BC+00 s=2 e=0 z=0  None .data      __vt__12J2DTevBlock2                                         */
SECTION_DATA void* __vt__12J2DTevBlock2[47] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)initialize__12J2DTevBlock2Fv,
	(void*)setGX__12J2DTevBlock2Fv,
	(void*)loadTexture__12J2DTevBlock2F11_GXTexMapIDUl,
	(void*)getType__12J2DTevBlock2Fv,
	(void*)getMaxStage__12J2DTevBlock2Fv,
	(void*)setTexNo__12J2DTevBlock2FUlUs,
	(void*)getTexNo__12J2DTevBlock2CFUl,
	(void*)setFontNo__12J2DTevBlock2FUs,
	(void*)getFontNo__12J2DTevBlock2CFv,
	(void*)setTevOrder__12J2DTevBlock2FUl11J2DTevOrder,
	(void*)getTevOrder__12J2DTevBlock2FUl,
	(void*)setTevColor__12J2DTevBlock2FUl13J2DGXColorS10,
	(void*)getTevColor__12J2DTevBlock2FUl,
	(void*)setTevKColor__12J2DTevBlock2FUlQ28JUtility6TColor,
	(void*)getTevKColor__12J2DTevBlock2FUl,
	(void*)setTevKColorSel__12J2DTevBlock2FUlUc,
	(void*)getTevKColorSel__12J2DTevBlock2FUl,
	(void*)setTevKAlphaSel__12J2DTevBlock2FUlUc,
	(void*)getTevKAlphaSel__12J2DTevBlock2FUl,
	(void*)setTevStageNum__12J2DTevBlock2FUc,
	(void*)getTevStageNum__12J2DTevBlock2CFv,
	(void*)setTevStage__12J2DTevBlock2FUl11J2DTevStage,
	(void*)getTevStage__12J2DTevBlock2FUl,
	(void*)setTevSwapModeInfo__12J2DTevBlock2FUl18J2DTevSwapModeInfo,
	(void*)setTevSwapModeTable__12J2DTevBlock2FUl19J2DTevSwapModeTable,
	(void*)getTevSwapModeTable__12J2DTevBlock2FUl,
	(void*)setIndTevStage__12J2DTevBlock2FUl14J2DIndTevStage,
	(void*)getIndTevStage__12J2DTevBlock2FUl,
	(void*)insertTexture__12J2DTevBlock2FUlPC7ResTIMG,
	(void*)insertTexture__12J2DTevBlock2FUlPC7ResTIMGP10JUTPalette,
	(void*)insertTexture__12J2DTevBlock2FUlP10JUTTexture,
	(void*)setTexture__12J2DTevBlock2FUlPC7ResTIMG,
	(void*)setTexture__12J2DTevBlock2FUlP10JUTTexture,
	(void*)removeTexture__12J2DTevBlock2FUl,
	(void*)setFont__12J2DTevBlock2FP7ResFONT,
	(void*)setFont__12J2DTevBlock2FP7JUTFont,
	(void*)setPalette__12J2DTevBlock2FUlPC7ResTLUT,
	(void*)prepareTexture__12J2DTevBlock2FUc,
	(void*)getTexture__12J2DTevBlock2FUl,
	(void*)getPalette__12J2DTevBlock2FUl,
	(void*)getFont__12J2DTevBlock2Fv,
	(void*)shiftDeleteFlag__12J2DTevBlock2FUcb,
	(void*)setUndeleteFlag__12J2DTevBlock2FUc,
	(void*)setFontUndeleteFlag__12J2DTevBlock2Fv,
	(void*)__dt__12J2DTevBlock2Fv,
};

/* 803CCDB8-803CCE74 00BC+00 s=2 e=0 z=0  None .data      __vt__12J2DTevBlock1                                         */
SECTION_DATA void* __vt__12J2DTevBlock1[47] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)initialize__12J2DTevBlock1Fv,
	(void*)setGX__12J2DTevBlock1Fv,
	(void*)loadTexture__12J2DTevBlock1F11_GXTexMapIDUl,
	(void*)getType__12J2DTevBlock1Fv,
	(void*)getMaxStage__12J2DTevBlock1Fv,
	(void*)setTexNo__12J2DTevBlock1FUlUs,
	(void*)getTexNo__12J2DTevBlock1CFUl,
	(void*)setFontNo__12J2DTevBlock1FUs,
	(void*)getFontNo__12J2DTevBlock1CFv,
	(void*)setTevOrder__12J2DTevBlock1FUl11J2DTevOrder,
	(void*)getTevOrder__12J2DTevBlock1FUl,
	(void*)setTevColor__12J2DTevBlock1FUl13J2DGXColorS10,
	(void*)getTevColor__12J2DTevBlock1FUl,
	(void*)setTevKColor__12J2DTevBlock1FUlQ28JUtility6TColor,
	(void*)getTevKColor__12J2DTevBlock1FUl,
	(void*)setTevKColorSel__12J2DTevBlock1FUlUc,
	(void*)getTevKColorSel__12J2DTevBlock1FUl,
	(void*)setTevKAlphaSel__12J2DTevBlock1FUlUc,
	(void*)getTevKAlphaSel__12J2DTevBlock1FUl,
	(void*)setTevStageNum__12J2DTevBlock1FUc,
	(void*)getTevStageNum__12J2DTevBlock1CFv,
	(void*)setTevStage__12J2DTevBlock1FUl11J2DTevStage,
	(void*)getTevStage__12J2DTevBlock1FUl,
	(void*)setTevSwapModeInfo__12J2DTevBlock1FUl18J2DTevSwapModeInfo,
	(void*)setTevSwapModeTable__12J2DTevBlock1FUl19J2DTevSwapModeTable,
	(void*)getTevSwapModeTable__12J2DTevBlock1FUl,
	(void*)setIndTevStage__12J2DTevBlock1FUl14J2DIndTevStage,
	(void*)getIndTevStage__12J2DTevBlock1FUl,
	(void*)insertTexture__12J2DTevBlock1FUlPC7ResTIMG,
	(void*)insertTexture__12J2DTevBlock1FUlPC7ResTIMGP10JUTPalette,
	(void*)insertTexture__12J2DTevBlock1FUlP10JUTTexture,
	(void*)setTexture__12J2DTevBlock1FUlPC7ResTIMG,
	(void*)setTexture__12J2DTevBlock1FUlP10JUTTexture,
	(void*)removeTexture__12J2DTevBlock1FUl,
	(void*)setFont__12J2DTevBlock1FP7ResFONT,
	(void*)setFont__12J2DTevBlock1FP7JUTFont,
	(void*)setPalette__12J2DTevBlock1FUlPC7ResTLUT,
	(void*)prepareTexture__12J2DTevBlock1FUc,
	(void*)getTexture__12J2DTevBlock1FUl,
	(void*)getPalette__12J2DTevBlock1FUl,
	(void*)getFont__12J2DTevBlock1Fv,
	(void*)shiftDeleteFlag__12J2DTevBlock1FUcb,
	(void*)setUndeleteFlag__12J2DTevBlock1FUc,
	(void*)setFontUndeleteFlag__12J2DTevBlock1Fv,
	(void*)__dt__12J2DTevBlock1Fv,
};

/* 803CCE74-803CCF30 00BC+00 s=10 e=1 z=0  None .data      __vt__11J2DTevBlock                                          */
SECTION_DATA void* __vt__11J2DTevBlock[47] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)initialize__11J2DTevBlockFv,
	(void*)setGX__11J2DTevBlockFv,
	(void*)loadTexture__11J2DTevBlockF11_GXTexMapIDUl,
	(void*)NULL,
	(void*)NULL,
	(void*)setTexNo__11J2DTevBlockFUlUs,
	(void*)getTexNo__11J2DTevBlockCFUl,
	(void*)setFontNo__11J2DTevBlockFUs,
	(void*)getFontNo__11J2DTevBlockCFv,
	(void*)setTevOrder__11J2DTevBlockFUl11J2DTevOrder,
	(void*)getTevOrder__11J2DTevBlockFUl,
	(void*)setTevColor__11J2DTevBlockFUl13J2DGXColorS10,
	(void*)getTevColor__11J2DTevBlockFUl,
	(void*)setTevKColor__11J2DTevBlockFUlQ28JUtility6TColor,
	(void*)getTevKColor__11J2DTevBlockFUl,
	(void*)setTevKColorSel__11J2DTevBlockFUlUc,
	(void*)getTevKColorSel__11J2DTevBlockFUl,
	(void*)setTevKAlphaSel__11J2DTevBlockFUlUc,
	(void*)getTevKAlphaSel__11J2DTevBlockFUl,
	(void*)setTevStageNum__11J2DTevBlockFUc,
	(void*)getTevStageNum__11J2DTevBlockCFv,
	(void*)setTevStage__11J2DTevBlockFUl11J2DTevStage,
	(void*)getTevStage__11J2DTevBlockFUl,
	(void*)setTevSwapModeInfo__11J2DTevBlockFUl18J2DTevSwapModeInfo,
	(void*)setTevSwapModeTable__11J2DTevBlockFUl19J2DTevSwapModeTable,
	(void*)getTevSwapModeTable__11J2DTevBlockFUl,
	(void*)setIndTevStage__11J2DTevBlockFUl14J2DIndTevStage,
	(void*)getIndTevStage__11J2DTevBlockFUl,
	(void*)insertTexture__11J2DTevBlockFUlPC7ResTIMG,
	(void*)insertTexture__11J2DTevBlockFUlPC7ResTIMGP10JUTPalette,
	(void*)insertTexture__11J2DTevBlockFUlP10JUTTexture,
	(void*)setTexture__11J2DTevBlockFUlPC7ResTIMG,
	(void*)setTexture__11J2DTevBlockFUlP10JUTTexture,
	(void*)removeTexture__11J2DTevBlockFUl,
	(void*)setFont__11J2DTevBlockFP7ResFONT,
	(void*)setFont__11J2DTevBlockFP7JUTFont,
	(void*)setPalette__11J2DTevBlockFUlPC7ResTLUT,
	(void*)prepareTexture__11J2DTevBlockFUc,
	(void*)getTexture__11J2DTevBlockFUl,
	(void*)getPalette__11J2DTevBlockFUl,
	(void*)getFont__11J2DTevBlockFv,
	(void*)shiftDeleteFlag__11J2DTevBlockFUcb,
	(void*)setUndeleteFlag__11J2DTevBlockFUc,
	(void*)setFontUndeleteFlag__11J2DTevBlockFv,
	(void*)__dt__11J2DTevBlockFv,
};

/* 803CCF30-803CCF40 000C+04 s=1 e=1 z=0  None .data      __vt__14J2DTexGenBlock                                       */
SECTION_DATA void* __vt__14J2DTexGenBlock[3 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__14J2DTexGenBlockFv,
	/* padding */
	NULL,
};

/* 802EB620-802EB6A4 0084+00 s=1 e=1 z=0  None .text      __dt__14J2DTexGenBlockFv                                     */
//	802EB630: 803621D8 (_savegpr_28)
//	802EB640: 803CCF30 (__vt__14J2DTexGenBlock)
//	802EB644: 803CCF30 (__vt__14J2DTexGenBlock)
//	802EB664: 802CED3C (__dl__FPv)
//	802EB684: 802CED3C (__dl__FPv)
//	802EB690: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DTexGenBlock::~J2DTexGenBlock() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__dt__14J2DTexGenBlockFv.s"
}
#pragma pop


/* 802EB6A4-802EB7E0 013C+00 s=0 e=3 z=0  None .text      setTexMtx__14J2DTexGenBlockFUlR9J2DTexMtx                    */
//	802EB6D4: 802CEC4C (__nw__FUl)
//	802EB7C4: 802E9CC4 (calc__9J2DTexMtxFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  J2DTexMtx& False
// 	 J2DTexMtx False
asm void J2DTexGenBlock::setTexMtx(u32 param_0, J2DTexMtx& param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexMtx__14J2DTexGenBlockFUlR9J2DTexMtx.s"
}
#pragma pop


/* 802EB7E0-802EB87C 009C+00 s=0 e=1 z=0  None .text      getTexMtx__14J2DTexGenBlockFUlR9J2DTexMtx                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  J2DTexMtx& False
// 	 J2DTexMtx False
asm void J2DTexGenBlock::getTexMtx(u32 param_0, J2DTexMtx& param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexMtx__14J2DTexGenBlockFUlR9J2DTexMtx.s"
}
#pragma pop


/* 802EB87C-802EB884 0008+00 s=1 e=0 z=0  None .text      getTexture__11J2DTevBlockFUl                                 */
// True False
//  bool False
//  u32 False
bool J2DTevBlock::getTexture(u32 param_0) {
	return false;
}


/* 802EB884-802EB88C 0008+00 s=1 e=0 z=0  None .text      getPalette__11J2DTevBlockFUl                                 */
// True False
//  bool False
//  u32 False
bool J2DTevBlock::getPalette(u32 param_0) {
	return false;
}


/* 802EB88C-802EB998 010C+00 s=0 e=1 z=0  None .text      __ct__12J2DTevBlock1Fv                                       */
//	802EB8A0: 803CCE74 (__vt__11J2DTevBlock)
//	802EB8A4: 803CCE74 (__vt__11J2DTevBlock)
//	802EB8AC: 803CCDB8 (__vt__12J2DTevBlock1)
//	802EB8B0: 803CCDB8 (__vt__12J2DTevBlock1)
//	802EB8BC: 802F1B70 (__ct__11J2DTevOrderFv)
//	802EB8C0: 802F1B70 (__ct__11J2DTevOrderFv)
//	802EB8D0: 80361D60 (__construct_array)
//	802EB8D8: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802EB8DC: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802EB8EC: 80361D60 (__construct_array)
//	802EB8F4: 802F1940 (__ct__11J2DTevStageFv)
//	802EB8F8: 802F1940 (__ct__11J2DTevStageFv)
//	802EB908: 80361D60 (__construct_array)
//	802EB910: 80193960 (__ct__Q28JUtility6TColorFv)
//	802EB914: 80193960 (__ct__Q28JUtility6TColorFv)
//	802EB924: 80361D60 (__construct_array)
//	802EB92C: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802EB930: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802EB940: 80361D60 (__construct_array)
//	802EB948: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802EB94C: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802EB95C: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DTevBlock1::J2DTevBlock1() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__12J2DTevBlock1Fv.s"
}
#pragma pop


/* 802EB998-802EBA50 00B8+00 s=1 e=0 z=0  None .text      __dt__12J2DTevBlock1Fv                                       */
//	802EB9B8: 803CCDB8 (__vt__12J2DTevBlock1)
//	802EB9BC: 803CCDB8 (__vt__12J2DTevBlock1)
//	802EB9D8: 802DE234 (__dt__10JUTTextureFv)
//	802EB9E0: 802CED3C (__dl__FPv)
//	802EBA18: 803CCE74 (__vt__11J2DTevBlock)
//	802EBA1C: 803CCE74 (__vt__11J2DTevBlock)
//	802EBA30: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DTevBlock1::~J2DTevBlock1() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__dt__12J2DTevBlock1Fv.s"
}
#pragma pop


/* 802EBA50-802EBC0C 01BC+00 s=1 e=0 z=0  None .text      initialize__12J2DTevBlock1Fv                                 */
//	802EBA64: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EBA6C: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EBA84: 80456188 (j2dDefaultTevColor)
//	802EBA88: 80456188 (j2dDefaultTevColor)
//	802EBAD0: 80456194 (j2dDefaultTevKColor)
//	802EBB2C: 8045619C (j2dDefaultTevSwapModeTable)
//	802EBB48: 8045619C (j2dDefaultTevSwapModeTable)
//	802EBB70: 803A1BF4 (j2dDefaultIndTevStageInfo)
//	802EBB74: 803A1BF4 (j2dDefaultIndTevStageInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock1::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__12J2DTevBlock1Fv.s"
}
#pragma pop


/* 802EBC0C-802EBCC0 00B4+00 s=1 e=0 z=0  None .text      prepareTexture__12J2DTevBlock1FUc                            */
//	802EBC48: 802CEC4C (__nw__FUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock1::prepareTexture(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/prepareTexture__12J2DTevBlock1FUc.s"
}
#pragma pop


/* 802EBCC0-802EBDE4 0124+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock1FUlPC7ResTIMGP10JUTPalette      */
//	802EBCD0: 803621D8 (_savegpr_28)
//	802EBD24: 802CEC4C (__nw__FUl)
//	802EBD40: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EBD78: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802EBD90: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EBDA0: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802EBDD0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
asm void J2DTevBlock1::insertTexture(u32 param_0, ResTIMG const* param_1, JUTPalette* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock1FUlPC7ResTIMGP10JUTPalette.s"
}
#pragma pop


/* 802EBDE4-802EBE8C 00A8+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock1FUlP10JUTTexture                */
//	802EBE48: 802DE234 (__dt__10JUTTextureFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock1::insertTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock1FUlP10JUTTexture.s"
}
#pragma pop


/* 802EBE8C-802EC01C 0190+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock1FUlPC7ResTIMG                      */
//	802EBE9C: 803621DC (_savegpr_29)
//	802EBED0: 802CEC4C (__nw__FUl)
//	802EBEEC: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EBF54: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EBF60: 802DE234 (__dt__10JUTTextureFv)
//	802EBF90: 802CEC4C (__nw__FUl)
//	802EBFAC: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EBFE8: 802CED3C (__dl__FPv)
//	802EC008: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock1::setTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock1FUlPC7ResTIMG.s"
}
#pragma pop


/* 802EC01C-802EC0A8 008C+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock1FUlP10JUTTexture                   */
//	802EC05C: 802DE234 (__dt__10JUTTextureFv)
//	802EC074: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock1::setTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock1FUlP10JUTTexture.s"
}
#pragma pop


/* 802EC0A8-802EC124 007C+00 s=1 e=0 z=0  None .text      removeTexture__12J2DTevBlock1FUl                             */
//	802EC0E0: 802DE234 (__dt__10JUTTextureFv)
//	802EC0FC: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::removeTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/removeTexture__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802EC124-802EC1D8 00B4+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock1FP7ResFONT                            */
//	802EC134: 803621DC (_savegpr_29)
//	802EC150: 802CEC4C (__nw__FUl)
//	802EC164: 802DEF94 (__ct__10JUTResFontFPC7ResFONTP7JKRHeap)
//	802EC1C4: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  ResFONT* False
// 	 ResFONT False
asm void J2DTevBlock1::setFont(ResFONT* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock1FP7ResFONT.s"
}
#pragma pop


/* 802EC1D8-802EC258 0080+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock1FP7JUTFont                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTFont* False
// 	 JUTFont False
asm void J2DTevBlock1::setFont(JUTFont* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock1FP7JUTFont.s"
}
#pragma pop


/* 802EC258-802EC318 00C0+00 s=1 e=0 z=0  None .text      setPalette__12J2DTevBlock1FUlPC7ResTLUT                      */
//	802EC268: 803621DC (_savegpr_29)
//	802EC29C: 802CEC4C (__nw__FUl)
//	802EC2B0: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802EC2D0: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802EC2E4: 802DE5B0 (attachPalette__10JUTTextureFP10JUTPalette)
//	802EC2F0: 802CED3C (__dl__FPv)
//	802EC304: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
asm void J2DTevBlock1::setPalette(u32 param_0, ResTLUT const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setPalette__12J2DTevBlock1FUlPC7ResTLUT.s"
}
#pragma pop


/* 802EC318-802EC328 0010+00 s=1 e=0 z=0  None .text      shiftDeleteFlag__12J2DTevBlock1FUcb                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  bool False
asm void J2DTevBlock1::shiftDeleteFlag(u8 param_0, bool param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/shiftDeleteFlag__12J2DTevBlock1FUcb.s"
}
#pragma pop


/* 802EC328-802EC570 0248+00 s=1 e=0 z=0  None .text      setGX__12J2DTevBlock1Fv                                      */
//	802EC338: 803621D8 (_savegpr_28)
//	802EC368: 8035F6F4 (GXSetTevOrder)
//	802EC3A4: 8035F3DC (GXSetTevColorS10)
//	802EC3BC: 8035F890 (GXSetNumTevStages)
//	802EC3DC: 8035F224 (GXSetTevColorIn)
//	802EC40C: 8035F268 (GXSetTevAlphaIn)
//	802EC454: 8035F2AC (GXSetTevColorOp)
//	802EC49C: 8035F314 (GXSetTevAlphaOp)
//	802EC4B8: 8035F4A4 (GXSetTevKColorSel)
//	802EC4D4: 8035F500 (GXSetTevKAlphaSel)
//	802EC4F4: 8035F440 (GXSetTevKColor)
//	802EC518: 8035F55C (GXSetTevSwapMode)
//	802EC53C: 8035F5A4 (GXSetTevSwapModeTable)
//	802EC554: 802EA044 (load__14J2DIndTevStageFUc)
//	802EC55C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock1::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__12J2DTevBlock1Fv.s"
}
#pragma pop


/* 802EC570-802EC5B8 0048+00 s=1 e=0 z=0  None .text      loadTexture__12J2DTevBlock1F11_GXTexMapIDUl                  */
//	802EC5A4: 802DE840 (load__10JUTTextureF11_GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  _GXTexMapID False
//  u32 False
asm void J2DTevBlock1::loadTexture(_GXTexMapID param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/loadTexture__12J2DTevBlock1F11_GXTexMapIDUl.s"
}
#pragma pop


/* 802EC5B8-802EC6C8 0110+00 s=0 e=1 z=0  None .text      __ct__12J2DTevBlock2Fv                                       */
//	802EC5CC: 803CCE74 (__vt__11J2DTevBlock)
//	802EC5D0: 803CCE74 (__vt__11J2DTevBlock)
//	802EC5D8: 803CCCFC (__vt__12J2DTevBlock2)
//	802EC5DC: 803CCCFC (__vt__12J2DTevBlock2)
//	802EC5E8: 802F1B70 (__ct__11J2DTevOrderFv)
//	802EC5EC: 802F1B70 (__ct__11J2DTevOrderFv)
//	802EC5FC: 80361D60 (__construct_array)
//	802EC604: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802EC608: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802EC618: 80361D60 (__construct_array)
//	802EC620: 802F1940 (__ct__11J2DTevStageFv)
//	802EC624: 802F1940 (__ct__11J2DTevStageFv)
//	802EC634: 80361D60 (__construct_array)
//	802EC63C: 80193960 (__ct__Q28JUtility6TColorFv)
//	802EC640: 80193960 (__ct__Q28JUtility6TColorFv)
//	802EC650: 80361D60 (__construct_array)
//	802EC658: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802EC65C: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802EC66C: 80361D60 (__construct_array)
//	802EC674: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802EC678: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802EC688: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DTevBlock2::J2DTevBlock2() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__12J2DTevBlock2Fv.s"
}
#pragma pop


/* 802EC6C8-802EC7A0 00D8+00 s=1 e=0 z=0  None .text      __dt__12J2DTevBlock2Fv                                       */
//	802EC6E8: 803CCCFC (__vt__12J2DTevBlock2)
//	802EC6EC: 803CCCFC (__vt__12J2DTevBlock2)
//	802EC708: 802DE234 (__dt__10JUTTextureFv)
//	802EC720: 802DE234 (__dt__10JUTTextureFv)
//	802EC728: 802CED3C (__dl__FPv)
//	802EC730: 802CED3C (__dl__FPv)
//	802EC768: 803CCE74 (__vt__11J2DTevBlock)
//	802EC76C: 803CCE74 (__vt__11J2DTevBlock)
//	802EC780: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DTevBlock2::~J2DTevBlock2() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__dt__12J2DTevBlock2Fv.s"
}
#pragma pop


/* 802EC7A0-802ECA18 0278+00 s=1 e=0 z=0  None .text      initialize__12J2DTevBlock2Fv                                 */
//	802EC7B8: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EC7C0: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EC7D4: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EC7F0: 80456188 (j2dDefaultTevColor)
//	802EC7F4: 80456188 (j2dDefaultTevColor)
//	802EC854: 80456194 (j2dDefaultTevKColor)
//	802EC8B8: 8045619C (j2dDefaultTevSwapModeTable)
//	802EC8D4: 8045619C (j2dDefaultTevSwapModeTable)
//	802EC8FC: 803A1BF4 (j2dDefaultIndTevStageInfo)
//	802EC900: 803A1BF4 (j2dDefaultIndTevStageInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock2::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__12J2DTevBlock2Fv.s"
}
#pragma pop


/* 802ECA18-802ECAE8 00D0+00 s=1 e=0 z=0  None .text      prepareTexture__12J2DTevBlock2FUc                            */
//	802ECA28: 803621D8 (_savegpr_28)
//	802ECA68: 802CEC4C (__nw__FUl)
//	802ECAD4: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock2::prepareTexture(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/prepareTexture__12J2DTevBlock2FUc.s"
}
#pragma pop


/* 802ECAE8-802ECDE8 0300+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock2FUlPC7ResTIMGP10JUTPalette      */
//	802ECAF8: 803621CC (_savegpr_25)
//	802ECBEC: 802CEC4C (__nw__FUl)
//	802ECC08: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802ECC3C: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802ECCB4: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802ECCC8: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802ECDD4: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
asm void J2DTevBlock2::insertTexture(u32 param_0, ResTIMG const* param_1, JUTPalette* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock2FUlPC7ResTIMGP10JUTPalette.s"
}
#pragma pop


/* 802ECDE8-802ECF48 0160+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock2FUlP10JUTTexture                */
//	802ECDF8: 803621DC (_savegpr_29)
//	802ECEA4: 802DE234 (__dt__10JUTTextureFv)
//	802ECF34: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock2::insertTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock2FUlP10JUTTexture.s"
}
#pragma pop


/* 802ECF48-802ED16C 0224+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock2FUlPC7ResTIMG                      */
//	802ECF58: 803621CC (_savegpr_25)
//	802ED004: 802CEC4C (__nw__FUl)
//	802ED020: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802ED09C: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802ED0A8: 802DE234 (__dt__10JUTTextureFv)
//	802ED0D8: 802CEC4C (__nw__FUl)
//	802ED0F4: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802ED130: 802CED3C (__dl__FPv)
//	802ED158: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock2::setTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock2FUlPC7ResTIMG.s"
}
#pragma pop


/* 802ED16C-802ED21C 00B0+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock2FUlP10JUTTexture                   */
//	802ED17C: 803621D4 (_savegpr_27)
//	802ED1C0: 802DE234 (__dt__10JUTTextureFv)
//	802ED1E0: 802CED3C (__dl__FPv)
//	802ED208: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock2::setTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock2FUlP10JUTTexture.s"
}
#pragma pop


/* 802ED21C-802ED2F0 00D4+00 s=1 e=0 z=0  None .text      removeTexture__12J2DTevBlock2FUl                             */
//	802ED26C: 802DE234 (__dt__10JUTTextureFv)
//	802ED27C: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::removeTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/removeTexture__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802ED2F0-802ED3A4 00B4+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock2FP7ResFONT                            */
//	802ED300: 803621DC (_savegpr_29)
//	802ED31C: 802CEC4C (__nw__FUl)
//	802ED330: 802DEF94 (__ct__10JUTResFontFPC7ResFONTP7JKRHeap)
//	802ED390: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  ResFONT* False
// 	 ResFONT False
asm void J2DTevBlock2::setFont(ResFONT* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock2FP7ResFONT.s"
}
#pragma pop


/* 802ED3A4-802ED424 0080+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock2FP7JUTFont                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTFont* False
// 	 JUTFont False
asm void J2DTevBlock2::setFont(JUTFont* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock2FP7JUTFont.s"
}
#pragma pop


/* 802ED424-802ED4FC 00D8+00 s=1 e=0 z=0  None .text      setPalette__12J2DTevBlock2FUlPC7ResTLUT                      */
//	802ED434: 803621D0 (_savegpr_26)
//	802ED474: 802CEC4C (__nw__FUl)
//	802ED488: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802ED4A8: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802ED4C0: 802DE5B0 (attachPalette__10JUTTextureFP10JUTPalette)
//	802ED4D4: 802CED3C (__dl__FPv)
//	802ED4E8: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
asm void J2DTevBlock2::setPalette(u32 param_0, ResTLUT const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setPalette__12J2DTevBlock2FUlPC7ResTLUT.s"
}
#pragma pop


/* 802ED4FC-802ED584 0088+00 s=1 e=0 z=0  None .text      shiftDeleteFlag__12J2DTevBlock2FUcb                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  bool False
asm void J2DTevBlock2::shiftDeleteFlag(u8 param_0, bool param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/shiftDeleteFlag__12J2DTevBlock2FUcb.s"
}
#pragma pop


/* 802ED584-802ED874 02F0+00 s=1 e=0 z=0  None .text      setGX__12J2DTevBlock2Fv                                      */
//	802ED594: 803621D8 (_savegpr_28)
//	802ED5E8: 8035F6F4 (GXSetTevOrder)
//	802ED638: 8035F3DC (GXSetTevColorS10)
//	802ED650: 8035F890 (GXSetNumTevStages)
//	802ED680: 8035F224 (GXSetTevColorIn)
//	802ED6B0: 8035F268 (GXSetTevAlphaIn)
//	802ED6F8: 8035F2AC (GXSetTevColorOp)
//	802ED740: 8035F314 (GXSetTevAlphaOp)
//	802ED760: 8035F4A4 (GXSetTevKColorSel)
//	802ED77C: 8035F500 (GXSetTevKAlphaSel)
//	802ED7B0: 8035F440 (GXSetTevKColor)
//	802ED7E4: 8035F55C (GXSetTevSwapMode)
//	802ED81C: 8035F5A4 (GXSetTevSwapModeTable)
//	802ED844: 802EA044 (load__14J2DIndTevStageFUc)
//	802ED860: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock2::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__12J2DTevBlock2Fv.s"
}
#pragma pop


/* 802ED874-802ED8BC 0048+00 s=1 e=0 z=0  None .text      loadTexture__12J2DTevBlock2F11_GXTexMapIDUl                  */
//	802ED8A8: 802DE840 (load__10JUTTextureF11_GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  _GXTexMapID False
//  u32 False
asm void J2DTevBlock2::loadTexture(_GXTexMapID param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/loadTexture__12J2DTevBlock2F11_GXTexMapIDUl.s"
}
#pragma pop


/* 802ED8BC-802ED9E4 0128+00 s=0 e=1 z=0  None .text      __ct__12J2DTevBlock4Fv                                       */
//	802ED8D0: 803CCE74 (__vt__11J2DTevBlock)
//	802ED8D4: 803CCE74 (__vt__11J2DTevBlock)
//	802ED8DC: 803CCC40 (__vt__12J2DTevBlock4)
//	802ED8E0: 803CCC40 (__vt__12J2DTevBlock4)
//	802ED8EC: 802F1B70 (__ct__11J2DTevOrderFv)
//	802ED8F0: 802F1B70 (__ct__11J2DTevOrderFv)
//	802ED900: 80361D60 (__construct_array)
//	802ED908: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802ED90C: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802ED91C: 80361D60 (__construct_array)
//	802ED924: 802F1940 (__ct__11J2DTevStageFv)
//	802ED928: 802F1940 (__ct__11J2DTevStageFv)
//	802ED938: 80361D60 (__construct_array)
//	802ED940: 80193960 (__ct__Q28JUtility6TColorFv)
//	802ED944: 80193960 (__ct__Q28JUtility6TColorFv)
//	802ED954: 80361D60 (__construct_array)
//	802ED95C: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802ED960: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802ED970: 80361D60 (__construct_array)
//	802ED978: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802ED97C: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802ED98C: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DTevBlock4::J2DTevBlock4() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__12J2DTevBlock4Fv.s"
}
#pragma pop


/* 802ED9E4-802EDAC4 00E0+00 s=1 e=0 z=0  None .text      __dt__12J2DTevBlock4Fv                                       */
//	802ED9F4: 803621D4 (_savegpr_27)
//	802EDA04: 803CCC40 (__vt__12J2DTevBlock4)
//	802EDA08: 803CCC40 (__vt__12J2DTevBlock4)
//	802EDA38: 802DE234 (__dt__10JUTTextureFv)
//	802EDA44: 802CED3C (__dl__FPv)
//	802EDA8C: 803CCE74 (__vt__11J2DTevBlock)
//	802EDA90: 803CCE74 (__vt__11J2DTevBlock)
//	802EDAA4: 802CED3C (__dl__FPv)
//	802EDAB0: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DTevBlock4::~J2DTevBlock4() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__dt__12J2DTevBlock4Fv.s"
}
#pragma pop


/* 802EDAC4-802EDD34 0270+00 s=1 e=0 z=0  None .text      initialize__12J2DTevBlock4Fv                                 */
//	802EDB00: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EDB0C: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EDB34: 80456188 (j2dDefaultTevColor)
//	802EDB38: 80456188 (j2dDefaultTevColor)
//	802EDBA8: 80456194 (j2dDefaultTevKColor)
//	802EDC1C: 8045619C (j2dDefaultTevSwapModeTable)
//	802EDC38: 8045619C (j2dDefaultTevSwapModeTable)
//	802EDC64: 803A1BF4 (j2dDefaultIndTevStageInfo)
//	802EDC68: 803A1BF4 (j2dDefaultIndTevStageInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock4::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__12J2DTevBlock4Fv.s"
}
#pragma pop


/* 802EDD34-802EDE04 00D0+00 s=1 e=0 z=0  None .text      prepareTexture__12J2DTevBlock4FUc                            */
//	802EDD44: 803621D8 (_savegpr_28)
//	802EDD84: 802CEC4C (__nw__FUl)
//	802EDDF0: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock4::prepareTexture(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/prepareTexture__12J2DTevBlock4FUc.s"
}
#pragma pop


/* 802EDE04-802EE1D4 03D0+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock4FUlPC7ResTIMGP10JUTPalette      */
//	802EDE14: 803621CC (_savegpr_25)
//	802EDF78: 802CEC4C (__nw__FUl)
//	802EDF94: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EDFC8: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802EE070: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EE084: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802EE1C0: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
asm void J2DTevBlock4::insertTexture(u32 param_0, ResTIMG const* param_1, JUTPalette* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock4FUlPC7ResTIMGP10JUTPalette.s"
}
#pragma pop


/* 802EE1D4-802EE364 0190+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock4FUlP10JUTTexture                */
//	802EE1E4: 803621DC (_savegpr_29)
//	802EE290: 802DE234 (__dt__10JUTTextureFv)
//	802EE350: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock4::insertTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock4FUlP10JUTTexture.s"
}
#pragma pop


/* 802EE364-802EE5F0 028C+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock4FUlPC7ResTIMG                      */
//	802EE374: 803621CC (_savegpr_25)
//	802EE488: 802CEC4C (__nw__FUl)
//	802EE4A4: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EE520: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EE52C: 802DE234 (__dt__10JUTTextureFv)
//	802EE55C: 802CEC4C (__nw__FUl)
//	802EE578: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EE5B4: 802CED3C (__dl__FPv)
//	802EE5DC: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock4::setTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock4FUlPC7ResTIMG.s"
}
#pragma pop


/* 802EE5F0-802EE6A0 00B0+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock4FUlP10JUTTexture                   */
//	802EE600: 803621D4 (_savegpr_27)
//	802EE644: 802DE234 (__dt__10JUTTextureFv)
//	802EE664: 802CED3C (__dl__FPv)
//	802EE68C: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock4::setTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock4FUlP10JUTTexture.s"
}
#pragma pop


/* 802EE6A0-802EE798 00F8+00 s=1 e=0 z=0  None .text      removeTexture__12J2DTevBlock4FUl                             */
//	802EE6F0: 802DE234 (__dt__10JUTTextureFv)
//	802EE700: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::removeTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/removeTexture__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802EE798-802EE84C 00B4+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock4FP7ResFONT                            */
//	802EE7A8: 803621DC (_savegpr_29)
//	802EE7C4: 802CEC4C (__nw__FUl)
//	802EE7D8: 802DEF94 (__ct__10JUTResFontFPC7ResFONTP7JKRHeap)
//	802EE838: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  ResFONT* False
// 	 ResFONT False
asm void J2DTevBlock4::setFont(ResFONT* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock4FP7ResFONT.s"
}
#pragma pop


/* 802EE84C-802EE8CC 0080+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock4FP7JUTFont                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTFont* False
// 	 JUTFont False
asm void J2DTevBlock4::setFont(JUTFont* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock4FP7JUTFont.s"
}
#pragma pop


/* 802EE8CC-802EE9A4 00D8+00 s=1 e=0 z=0  None .text      setPalette__12J2DTevBlock4FUlPC7ResTLUT                      */
//	802EE8DC: 803621D0 (_savegpr_26)
//	802EE91C: 802CEC4C (__nw__FUl)
//	802EE930: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802EE950: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802EE968: 802DE5B0 (attachPalette__10JUTTextureFP10JUTPalette)
//	802EE97C: 802CED3C (__dl__FPv)
//	802EE990: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
asm void J2DTevBlock4::setPalette(u32 param_0, ResTLUT const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setPalette__12J2DTevBlock4FUlPC7ResTLUT.s"
}
#pragma pop


/* 802EE9A4-802EEA2C 0088+00 s=1 e=0 z=0  None .text      shiftDeleteFlag__12J2DTevBlock4FUcb                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  bool False
asm void J2DTevBlock4::shiftDeleteFlag(u8 param_0, bool param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/shiftDeleteFlag__12J2DTevBlock4FUcb.s"
}
#pragma pop


/* 802EEA2C-802EED1C 02F0+00 s=1 e=0 z=0  None .text      setGX__12J2DTevBlock4Fv                                      */
//	802EEA3C: 803621D8 (_savegpr_28)
//	802EEA90: 8035F6F4 (GXSetTevOrder)
//	802EEAE0: 8035F3DC (GXSetTevColorS10)
//	802EEAF8: 8035F890 (GXSetNumTevStages)
//	802EEB28: 8035F224 (GXSetTevColorIn)
//	802EEB58: 8035F268 (GXSetTevAlphaIn)
//	802EEBA0: 8035F2AC (GXSetTevColorOp)
//	802EEBE8: 8035F314 (GXSetTevAlphaOp)
//	802EEC08: 8035F4A4 (GXSetTevKColorSel)
//	802EEC24: 8035F500 (GXSetTevKAlphaSel)
//	802EEC58: 8035F440 (GXSetTevKColor)
//	802EEC8C: 8035F55C (GXSetTevSwapMode)
//	802EECC4: 8035F5A4 (GXSetTevSwapModeTable)
//	802EECEC: 802EA044 (load__14J2DIndTevStageFUc)
//	802EED08: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock4::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__12J2DTevBlock4Fv.s"
}
#pragma pop


/* 802EED1C-802EED64 0048+00 s=1 e=0 z=0  None .text      loadTexture__12J2DTevBlock4F11_GXTexMapIDUl                  */
//	802EED50: 802DE840 (load__10JUTTextureF11_GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  _GXTexMapID False
//  u32 False
asm void J2DTevBlock4::loadTexture(_GXTexMapID param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/loadTexture__12J2DTevBlock4F11_GXTexMapIDUl.s"
}
#pragma pop


/* 802EED64-802EEE8C 0128+00 s=0 e=1 z=0  None .text      __ct__12J2DTevBlock8Fv                                       */
//	802EED78: 803CCE74 (__vt__11J2DTevBlock)
//	802EED7C: 803CCE74 (__vt__11J2DTevBlock)
//	802EED84: 803CCB84 (__vt__12J2DTevBlock8)
//	802EED88: 803CCB84 (__vt__12J2DTevBlock8)
//	802EED94: 802F1B70 (__ct__11J2DTevOrderFv)
//	802EED98: 802F1B70 (__ct__11J2DTevOrderFv)
//	802EEDA8: 80361D60 (__construct_array)
//	802EEDB0: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802EEDB4: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802EEDC4: 80361D60 (__construct_array)
//	802EEDCC: 802F1940 (__ct__11J2DTevStageFv)
//	802EEDD0: 802F1940 (__ct__11J2DTevStageFv)
//	802EEDE0: 80361D60 (__construct_array)
//	802EEDE8: 80193960 (__ct__Q28JUtility6TColorFv)
//	802EEDEC: 80193960 (__ct__Q28JUtility6TColorFv)
//	802EEDFC: 80361D60 (__construct_array)
//	802EEE04: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802EEE08: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802EEE18: 80361D60 (__construct_array)
//	802EEE20: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802EEE24: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802EEE34: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DTevBlock8::J2DTevBlock8() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__12J2DTevBlock8Fv.s"
}
#pragma pop


/* 802EEE8C-802EEF6C 00E0+00 s=1 e=0 z=0  None .text      __dt__12J2DTevBlock8Fv                                       */
//	802EEE9C: 803621D4 (_savegpr_27)
//	802EEEAC: 803CCB84 (__vt__12J2DTevBlock8)
//	802EEEB0: 803CCB84 (__vt__12J2DTevBlock8)
//	802EEEE0: 802DE234 (__dt__10JUTTextureFv)
//	802EEEEC: 802CED3C (__dl__FPv)
//	802EEF34: 803CCE74 (__vt__11J2DTevBlock)
//	802EEF38: 803CCE74 (__vt__11J2DTevBlock)
//	802EEF4C: 802CED3C (__dl__FPv)
//	802EEF58: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DTevBlock8::~J2DTevBlock8() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__dt__12J2DTevBlock8Fv.s"
}
#pragma pop


/* 802EEF6C-802EF1E0 0274+00 s=1 e=0 z=0  None .text      initialize__12J2DTevBlock8Fv                                 */
//	802EEFA8: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EEFB4: 80456180 (j2dDefaultTevOrderInfoNull)
//	802EEFDC: 80456188 (j2dDefaultTevColor)
//	802EEFE0: 80456188 (j2dDefaultTevColor)
//	802EF050: 80456194 (j2dDefaultTevKColor)
//	802EF0C4: 8045619C (j2dDefaultTevSwapModeTable)
//	802EF0E0: 8045619C (j2dDefaultTevSwapModeTable)
//	802EF10C: 803A1BF4 (j2dDefaultIndTevStageInfo)
//	802EF110: 803A1BF4 (j2dDefaultIndTevStageInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock8::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__12J2DTevBlock8Fv.s"
}
#pragma pop


/* 802EF1E0-802EF2B0 00D0+00 s=1 e=0 z=0  None .text      prepareTexture__12J2DTevBlock8FUc                            */
//	802EF1F0: 803621D8 (_savegpr_28)
//	802EF230: 802CEC4C (__nw__FUl)
//	802EF29C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock8::prepareTexture(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/prepareTexture__12J2DTevBlock8FUc.s"
}
#pragma pop


/* 802EF2B0-802EF67C 03CC+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock8FUlPC7ResTIMGP10JUTPalette      */
//	802EF2C0: 803621CC (_savegpr_25)
//	802EF424: 802CEC4C (__nw__FUl)
//	802EF440: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EF474: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802EF51C: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EF530: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802EF668: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
asm void J2DTevBlock8::insertTexture(u32 param_0, ResTIMG const* param_1, JUTPalette* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock8FUlPC7ResTIMGP10JUTPalette.s"
}
#pragma pop


/* 802EF67C-802EF80C 0190+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock8FUlP10JUTTexture                */
//	802EF68C: 803621DC (_savegpr_29)
//	802EF738: 802DE234 (__dt__10JUTTextureFv)
//	802EF7F8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock8::insertTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock8FUlP10JUTTexture.s"
}
#pragma pop


/* 802EF80C-802EFA98 028C+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock8FUlPC7ResTIMG                      */
//	802EF81C: 803621CC (_savegpr_25)
//	802EF930: 802CEC4C (__nw__FUl)
//	802EF94C: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EF9C8: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EF9D4: 802DE234 (__dt__10JUTTextureFv)
//	802EFA04: 802CEC4C (__nw__FUl)
//	802EFA20: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802EFA5C: 802CED3C (__dl__FPv)
//	802EFA84: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock8::setTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock8FUlPC7ResTIMG.s"
}
#pragma pop


/* 802EFA98-802EFB48 00B0+00 s=1 e=0 z=0  None .text      setTexture__12J2DTevBlock8FUlP10JUTTexture                   */
//	802EFAA8: 803621D4 (_savegpr_27)
//	802EFAEC: 802DE234 (__dt__10JUTTextureFv)
//	802EFB0C: 802CED3C (__dl__FPv)
//	802EFB34: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock8::setTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__12J2DTevBlock8FUlP10JUTTexture.s"
}
#pragma pop


/* 802EFB48-802EFC40 00F8+00 s=1 e=0 z=0  None .text      removeTexture__12J2DTevBlock8FUl                             */
//	802EFB98: 802DE234 (__dt__10JUTTextureFv)
//	802EFBA8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::removeTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/removeTexture__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802EFC40-802EFCEC 00AC+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock8FP7ResFONT                            */
//	802EFC50: 803621DC (_savegpr_29)
//	802EFC6C: 802CEC4C (__nw__FUl)
//	802EFC80: 802DEF94 (__ct__10JUTResFontFPC7ResFONTP7JKRHeap)
//	802EFCD8: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  ResFONT* False
// 	 ResFONT False
asm void J2DTevBlock8::setFont(ResFONT* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock8FP7ResFONT.s"
}
#pragma pop


/* 802EFCEC-802EFD68 007C+00 s=1 e=0 z=0  None .text      setFont__12J2DTevBlock8FP7JUTFont                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTFont* False
// 	 JUTFont False
asm void J2DTevBlock8::setFont(JUTFont* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__12J2DTevBlock8FP7JUTFont.s"
}
#pragma pop


/* 802EFD68-802EFE40 00D8+00 s=1 e=0 z=0  None .text      setPalette__12J2DTevBlock8FUlPC7ResTLUT                      */
//	802EFD78: 803621D0 (_savegpr_26)
//	802EFDB8: 802CEC4C (__nw__FUl)
//	802EFDCC: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802EFDEC: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802EFE04: 802DE5B0 (attachPalette__10JUTTextureFP10JUTPalette)
//	802EFE18: 802CED3C (__dl__FPv)
//	802EFE2C: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
asm void J2DTevBlock8::setPalette(u32 param_0, ResTLUT const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setPalette__12J2DTevBlock8FUlPC7ResTLUT.s"
}
#pragma pop


/* 802EFE40-802EFEAC 006C+00 s=1 e=0 z=0  None .text      shiftDeleteFlag__12J2DTevBlock8FUcb                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  bool False
asm void J2DTevBlock8::shiftDeleteFlag(u8 param_0, bool param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/shiftDeleteFlag__12J2DTevBlock8FUcb.s"
}
#pragma pop


/* 802EFEAC-802F019C 02F0+00 s=1 e=0 z=0  None .text      setGX__12J2DTevBlock8Fv                                      */
//	802EFEBC: 803621D8 (_savegpr_28)
//	802EFF10: 8035F6F4 (GXSetTevOrder)
//	802EFF60: 8035F3DC (GXSetTevColorS10)
//	802EFF78: 8035F890 (GXSetNumTevStages)
//	802EFFA8: 8035F224 (GXSetTevColorIn)
//	802EFFD8: 8035F268 (GXSetTevAlphaIn)
//	802F0020: 8035F2AC (GXSetTevColorOp)
//	802F0068: 8035F314 (GXSetTevAlphaOp)
//	802F0088: 8035F4A4 (GXSetTevKColorSel)
//	802F00A4: 8035F500 (GXSetTevKAlphaSel)
//	802F00D8: 8035F440 (GXSetTevKColor)
//	802F010C: 8035F55C (GXSetTevSwapMode)
//	802F0144: 8035F5A4 (GXSetTevSwapModeTable)
//	802F016C: 802EA044 (load__14J2DIndTevStageFUc)
//	802F0188: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock8::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__12J2DTevBlock8Fv.s"
}
#pragma pop


/* 802F019C-802F01E4 0048+00 s=1 e=0 z=0  None .text      loadTexture__12J2DTevBlock8F11_GXTexMapIDUl                  */
//	802F01D0: 802DE840 (load__10JUTTextureF11_GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  _GXTexMapID False
//  u32 False
asm void J2DTevBlock8::loadTexture(_GXTexMapID param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/loadTexture__12J2DTevBlock8F11_GXTexMapIDUl.s"
}
#pragma pop


/* 802F01E4-802F030C 0128+00 s=0 e=1 z=0  None .text      __ct__13J2DTevBlock16Fv                                      */
//	802F01F8: 803CCE74 (__vt__11J2DTevBlock)
//	802F01FC: 803CCE74 (__vt__11J2DTevBlock)
//	802F0204: 803CCAC8 (__vt__13J2DTevBlock16)
//	802F0208: 803CCAC8 (__vt__13J2DTevBlock16)
//	802F0214: 802F1B70 (__ct__11J2DTevOrderFv)
//	802F0218: 802F1B70 (__ct__11J2DTevOrderFv)
//	802F0228: 80361D60 (__construct_array)
//	802F0230: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802F0234: 802F1B90 (__ct__13J2DGXColorS10Fv)
//	802F0244: 80361D60 (__construct_array)
//	802F024C: 802F1940 (__ct__11J2DTevStageFv)
//	802F0250: 802F1940 (__ct__11J2DTevStageFv)
//	802F0260: 80361D60 (__construct_array)
//	802F0268: 80193960 (__ct__Q28JUtility6TColorFv)
//	802F026C: 80193960 (__ct__Q28JUtility6TColorFv)
//	802F027C: 80361D60 (__construct_array)
//	802F0284: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802F0288: 802F1934 (__ct__19J2DTevSwapModeTableFv)
//	802F0298: 80361D60 (__construct_array)
//	802F02A0: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802F02A4: 802F18A0 (__ct__14J2DIndTevStageFv)
//	802F02B4: 80361D60 (__construct_array)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DTevBlock16::J2DTevBlock16() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__13J2DTevBlock16Fv.s"
}
#pragma pop


/* 802F030C-802F03EC 00E0+00 s=1 e=0 z=0  None .text      __dt__13J2DTevBlock16Fv                                      */
//	802F031C: 803621D4 (_savegpr_27)
//	802F032C: 803CCAC8 (__vt__13J2DTevBlock16)
//	802F0330: 803CCAC8 (__vt__13J2DTevBlock16)
//	802F0360: 802DE234 (__dt__10JUTTextureFv)
//	802F036C: 802CED3C (__dl__FPv)
//	802F03B4: 803CCE74 (__vt__11J2DTevBlock)
//	802F03B8: 803CCE74 (__vt__11J2DTevBlock)
//	802F03CC: 802CED3C (__dl__FPv)
//	802F03D8: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DTevBlock16::~J2DTevBlock16() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__dt__13J2DTevBlock16Fv.s"
}
#pragma pop


/* 802F03EC-802F0660 0274+00 s=1 e=0 z=0  None .text      initialize__13J2DTevBlock16Fv                                */
//	802F0428: 80456180 (j2dDefaultTevOrderInfoNull)
//	802F0434: 80456180 (j2dDefaultTevOrderInfoNull)
//	802F045C: 80456188 (j2dDefaultTevColor)
//	802F0460: 80456188 (j2dDefaultTevColor)
//	802F04D0: 80456194 (j2dDefaultTevKColor)
//	802F0544: 8045619C (j2dDefaultTevSwapModeTable)
//	802F0560: 8045619C (j2dDefaultTevSwapModeTable)
//	802F058C: 803A1BF4 (j2dDefaultIndTevStageInfo)
//	802F0590: 803A1BF4 (j2dDefaultIndTevStageInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock16::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__13J2DTevBlock16Fv.s"
}
#pragma pop


/* 802F0660-802F0730 00D0+00 s=1 e=0 z=0  None .text      prepareTexture__13J2DTevBlock16FUc                           */
//	802F0670: 803621D8 (_savegpr_28)
//	802F06B0: 802CEC4C (__nw__FUl)
//	802F071C: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock16::prepareTexture(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/prepareTexture__13J2DTevBlock16FUc.s"
}
#pragma pop


/* 802F0730-802F0AFC 03CC+00 s=1 e=0 z=0  None .text      insertTexture__13J2DTevBlock16FUlPC7ResTIMGP10JUTPalette     */
//	802F0740: 803621CC (_savegpr_25)
//	802F08A4: 802CEC4C (__nw__FUl)
//	802F08C0: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802F08F4: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802F099C: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802F09B0: 802DE44C (storeTIMG__10JUTTextureFPC7ResTIMGP10JUTPalette)
//	802F0AE8: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
asm void J2DTevBlock16::insertTexture(u32 param_0, ResTIMG const* param_1, JUTPalette* param_2) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__13J2DTevBlock16FUlPC7ResTIMGP10JUTPalette.s"
}
#pragma pop


/* 802F0AFC-802F0C8C 0190+00 s=1 e=0 z=0  None .text      insertTexture__13J2DTevBlock16FUlP10JUTTexture               */
//	802F0B0C: 803621DC (_savegpr_29)
//	802F0BB8: 802DE234 (__dt__10JUTTextureFv)
//	802F0C78: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock16::insertTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__13J2DTevBlock16FUlP10JUTTexture.s"
}
#pragma pop


/* 802F0C8C-802F0F18 028C+00 s=1 e=0 z=0  None .text      setTexture__13J2DTevBlock16FUlPC7ResTIMG                     */
//	802F0C9C: 803621CC (_savegpr_25)
//	802F0DB0: 802CEC4C (__nw__FUl)
//	802F0DCC: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802F0E48: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802F0E54: 802DE234 (__dt__10JUTTextureFv)
//	802F0E84: 802CEC4C (__nw__FUl)
//	802F0EA0: 802DE2A8 (storeTIMG__10JUTTextureFPC7ResTIMGUc)
//	802F0EDC: 802CED3C (__dl__FPv)
//	802F0F04: 80362218 (_restgpr_25)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock16::setTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__13J2DTevBlock16FUlPC7ResTIMG.s"
}
#pragma pop


/* 802F0F18-802F0FC8 00B0+00 s=1 e=0 z=0  None .text      setTexture__13J2DTevBlock16FUlP10JUTTexture                  */
//	802F0F28: 803621D4 (_savegpr_27)
//	802F0F6C: 802DE234 (__dt__10JUTTextureFv)
//	802F0F8C: 802CED3C (__dl__FPv)
//	802F0FB4: 80362220 (_restgpr_27)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
asm void J2DTevBlock16::setTexture(u32 param_0, JUTTexture* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexture__13J2DTevBlock16FUlP10JUTTexture.s"
}
#pragma pop


/* 802F0FC8-802F10C0 00F8+00 s=1 e=0 z=0  None .text      removeTexture__13J2DTevBlock16FUl                            */
//	802F1018: 802DE234 (__dt__10JUTTextureFv)
//	802F1028: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::removeTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/removeTexture__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F10C0-802F116C 00AC+00 s=1 e=0 z=0  None .text      setFont__13J2DTevBlock16FP7ResFONT                           */
//	802F10D0: 803621DC (_savegpr_29)
//	802F10EC: 802CEC4C (__nw__FUl)
//	802F1100: 802DEF94 (__ct__10JUTResFontFPC7ResFONTP7JKRHeap)
//	802F1158: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  ResFONT* False
// 	 ResFONT False
asm void J2DTevBlock16::setFont(ResFONT* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__13J2DTevBlock16FP7ResFONT.s"
}
#pragma pop


/* 802F116C-802F11E8 007C+00 s=1 e=0 z=0  None .text      setFont__13J2DTevBlock16FP7JUTFont                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JUTFont* False
// 	 JUTFont False
asm void J2DTevBlock16::setFont(JUTFont* param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFont__13J2DTevBlock16FP7JUTFont.s"
}
#pragma pop


/* 802F11E8-802F12C0 00D8+00 s=1 e=0 z=0  None .text      setPalette__13J2DTevBlock16FUlPC7ResTLUT                     */
//	802F11F8: 803621D0 (_savegpr_26)
//	802F1238: 802CEC4C (__nw__FUl)
//	802F124C: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802F126C: 802DE890 (storeTLUT__10JUTPaletteF7_GXTlutP7ResTLUT)
//	802F1284: 802DE5B0 (attachPalette__10JUTTextureFP10JUTPalette)
//	802F1298: 802CED3C (__dl__FPv)
//	802F12AC: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
asm void J2DTevBlock16::setPalette(u32 param_0, ResTLUT const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setPalette__13J2DTevBlock16FUlPC7ResTLUT.s"
}
#pragma pop


/* 802F12C0-802F132C 006C+00 s=1 e=0 z=0  None .text      shiftDeleteFlag__13J2DTevBlock16FUcb                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
//  bool False
asm void J2DTevBlock16::shiftDeleteFlag(u8 param_0, bool param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/shiftDeleteFlag__13J2DTevBlock16FUcb.s"
}
#pragma pop


/* 802F132C-802F161C 02F0+00 s=1 e=0 z=0  None .text      setGX__13J2DTevBlock16Fv                                     */
//	802F133C: 803621D8 (_savegpr_28)
//	802F1390: 8035F6F4 (GXSetTevOrder)
//	802F13E0: 8035F3DC (GXSetTevColorS10)
//	802F13F8: 8035F890 (GXSetNumTevStages)
//	802F1428: 8035F224 (GXSetTevColorIn)
//	802F1458: 8035F268 (GXSetTevAlphaIn)
//	802F14A0: 8035F2AC (GXSetTevColorOp)
//	802F14E8: 8035F314 (GXSetTevAlphaOp)
//	802F1508: 8035F4A4 (GXSetTevKColorSel)
//	802F1524: 8035F500 (GXSetTevKAlphaSel)
//	802F1558: 8035F440 (GXSetTevKColor)
//	802F158C: 8035F55C (GXSetTevSwapMode)
//	802F15C4: 8035F5A4 (GXSetTevSwapModeTable)
//	802F15EC: 802EA044 (load__14J2DIndTevStageFUc)
//	802F1608: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock16::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__13J2DTevBlock16Fv.s"
}
#pragma pop


/* 802F161C-802F1664 0048+00 s=1 e=0 z=0  None .text      loadTexture__13J2DTevBlock16F11_GXTexMapIDUl                 */
//	802F1650: 802DE840 (load__10JUTTextureF11_GXTexMapID)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  _GXTexMapID False
//  u32 False
asm void J2DTevBlock16::loadTexture(_GXTexMapID param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/loadTexture__13J2DTevBlock16F11_GXTexMapIDUl.s"
}
#pragma pop


/* 802F1664-802F1730 00CC+00 s=1 e=0 z=0  None .text      initialize__15J2DIndBlockFullFv                              */
//	802F166C: 80456184 (j2dDefaultIndTexOrderNull)
//	802F1678: 80456184 (j2dDefaultIndTexOrderNull)
//	802F169C: 803A1BC4 (j2dDefaultIndTexMtxInfo)
//	802F16A0: 803A1BC4 (j2dDefaultIndTexMtxInfo)
//	802F1704: 80456190 (j2dDefaultIndTexCoordScaleInfo)
//	802F1710: 80456190 (j2dDefaultIndTexCoordScaleInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DIndBlockFull::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__15J2DIndBlockFullFv.s"
}
#pragma pop


/* 802F1730-802F17FC 00CC+00 s=1 e=0 z=0  None .text      setGX__15J2DIndBlockFullFv                                   */
//	802F174C: 8035F0D4 (GXSetNumIndStages)
//	802F176C: 802EA098 (load__12J2DIndTexMtxFUc)
//	802F179C: 802EA0CC (load__19J2DIndTexCoordScaleFUc)
//	802F17CC: 802EA0FC (load__14J2DIndTexOrderFUc)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DIndBlockFull::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__15J2DIndBlockFullFv.s"
}
#pragma pop


/* 802F17FC-802F1840 0044+00 s=0 e=1 z=0  None .text      initialize__10J2DPEBlockFv                                   */
//	802F17FC: 804561AE (struct_804561AC)
//	802F1810: 804561A0 (j2dDefaultBlendInfo)
//	802F1818: 804561A0 (j2dDefaultBlendInfo)
//	802F1834: 804561A4 (data_804561A4)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPEBlock::initialize() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/initialize__10J2DPEBlockFv.s"
}
#pragma pop


/* 802F1840-802F18A0 0060+00 s=0 e=1 z=0  None .text      setGX__10J2DPEBlockFv                                        */
//	802F186C: 8035F624 (GXSetAlphaCompare)
//	802F1880: 8035FBF0 (GXSetBlendMode)
//	802F1888: 8035FDD8 (GXSetDither)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void J2DPEBlock::setGX() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setGX__10J2DPEBlockFv.s"
}
#pragma pop


/* 802F18A0-802F1934 0094+00 s=5 e=0 z=0  None .text      __ct__14J2DIndTevStageFv                                     */
//	802F18A4: 803A1BF4 (j2dDefaultIndTevStageInfo)
//	802F18A8: 803A1BF4 (j2dDefaultIndTevStageInfo)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DIndTevStage::J2DIndTevStage() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__14J2DIndTevStageFv.s"
}
#pragma pop


/* 802F1934-802F1940 000C+00 s=5 e=0 z=0  None .text      __ct__19J2DTevSwapModeTableFv                                */
//	802F1934: 804561AC (struct_804561AC)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DTevSwapModeTable::J2DTevSwapModeTable() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__19J2DTevSwapModeTableFv.s"
}
#pragma pop


/* 802F1940-802F19A8 0068+00 s=5 e=1 z=0  None .text      __ct__11J2DTevStageFv                                        */
//	802F1954: 803A1BE0 (j2dDefaultTevStageInfo)
//	802F1958: 803A1BE0 (j2dDefaultTevStageInfo)
//	802F195C: 802F19A8 (setTevStageInfo__11J2DTevStageFRC15J2DTevStageInfo)
//	802F1968: 80456198 (j2dDefaultTevSwapMode)
//	802F1984: 80456198 (j2dDefaultTevSwapMode)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm J2DTevStage::J2DTevStage() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__11J2DTevStageFv.s"
}
#pragma pop


/* 802F19A8-802F1B70 01C8+00 s=1 e=1 z=0  None .text      setTevStageInfo__11J2DTevStageFRC15J2DTevStageInfo           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  J2DTevStageInfo const& False
// 	 J2DTevStageInfo const False
// 		 J2DTevStageInfo False
asm void J2DTevStage::setTevStageInfo(J2DTevStageInfo const& param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStageInfo__11J2DTevStageFRC15J2DTevStageInfo.s"
}
#pragma pop


/* 802F1B70-802F1B90 0020+00 s=5 e=0 z=0  None .text      __ct__11J2DTevOrderFv                                        */
//	802F1B70: 80456180 (j2dDefaultTevOrderInfoNull)
//	802F1B78: 80456180 (j2dDefaultTevOrderInfoNull)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DTevOrder::J2DTevOrder() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__ct__11J2DTevOrderFv.s"
}
#pragma pop


/* 802F1B90-802F1B94 0004+00 s=5 e=0 z=0  None .text      __ct__13J2DGXColorS10Fv                                      */
// True False
J2DGXColorS10::J2DGXColorS10() {
	/* empty function */
}


/* 802F1B94-802F1BA0 000C+00 s=1 e=0 z=0  None .text      getType__15J2DIndBlockFullFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DIndBlockFull::getType() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getType__15J2DIndBlockFullFv.s"
}
#pragma pop


/* 802F1BA0-802F1BA8 0008+00 s=1 e=0 z=0  None .text      setIndTexStageNum__15J2DIndBlockFullFUc                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DIndBlockFull::setIndTexStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTexStageNum__15J2DIndBlockFullFUc.s"
}
#pragma pop


/* 802F1BA8-802F1BB0 0008+00 s=1 e=0 z=0  None .text      getIndTexStageNum__15J2DIndBlockFullCFv                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DIndBlockFull::getIndTexStageNum() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTexStageNum__15J2DIndBlockFullCFv.s"
}
#pragma pop


/* 802F1BB0-802F1BCC 001C+00 s=1 e=0 z=0  None .text      setIndTexOrder__15J2DIndBlockFullFUl14J2DIndTexOrder         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTexOrder False
asm void J2DIndBlockFull::setIndTexOrder(u32 param_0, J2DIndTexOrder param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTexOrder__15J2DIndBlockFullFUl14J2DIndTexOrder.s"
}
#pragma pop


/* 802F1BCC-802F1BE0 0014+00 s=1 e=0 z=0  None .text      getIndTexOrder__15J2DIndBlockFullFUl                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DIndBlockFull::getIndTexOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTexOrder__15J2DIndBlockFullFUl.s"
}
#pragma pop


/* 802F1BE0-802F1C38 0058+00 s=1 e=0 z=0  None .text      setIndTexMtx__15J2DIndBlockFullFUl12J2DIndTexMtx             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTexMtx False
asm void J2DIndBlockFull::setIndTexMtx(u32 param_0, J2DIndTexMtx param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTexMtx__15J2DIndBlockFullFUl12J2DIndTexMtx.s"
}
#pragma pop


/* 802F1C38-802F1C4C 0014+00 s=1 e=0 z=0  None .text      getIndTexMtx__15J2DIndBlockFullFUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DIndBlockFull::getIndTexMtx(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTexMtx__15J2DIndBlockFullFUl.s"
}
#pragma pop


/* 802F1C4C-802F1C68 001C+00 s=1 e=0 z=0  None .text      setIndTexCoordScale__15J2DIndBlockFullFUl19J2DIndTexCoordScale */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTexCoordScale False
asm void J2DIndBlockFull::setIndTexCoordScale(u32 param_0, J2DIndTexCoordScale param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTexCoordScale__15J2DIndBlockFullFUl19J2DIndTexCoordScale.s"
}
#pragma pop


/* 802F1C68-802F1C7C 0014+00 s=1 e=0 z=0  None .text      getIndTexCoordScale__15J2DIndBlockFullFUl                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DIndBlockFull::getIndTexCoordScale(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTexCoordScale__15J2DIndBlockFullFUl.s"
}
#pragma pop


/* 802F1C7C-802F1D18 009C+00 s=1 e=0 z=0  None .text      __dt__15J2DIndBlockFullFv                                    */
//	802F1C9C: 803CCA90 (__vt__15J2DIndBlockFull)
//	802F1CA0: 803CCA90 (__vt__15J2DIndBlockFull)
//	802F1CAC: 802EB290 (__dt__19J2DIndTexCoordScaleFv)
//	802F1CB0: 802EB290 (__dt__19J2DIndTexCoordScaleFv)
//	802F1CBC: 80361CE8 (__destroy_arr)
//	802F1CC4: 802EB2E4 (__dt__12J2DIndTexMtxFv)
//	802F1CC8: 802EB2E4 (__dt__12J2DIndTexMtxFv)
//	802F1CD4: 80361CE8 (__destroy_arr)
//	802F1CE0: 803CCA40 (__vt__11J2DIndBlock)
//	802F1CE4: 803CCA40 (__vt__11J2DIndBlock)
//	802F1CF8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm J2DIndBlockFull::~J2DIndBlockFull() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/__dt__15J2DIndBlockFullFv.s"
}
#pragma pop


/* 802F1D18-802F1D24 000C+00 s=1 e=0 z=0  None .text      getType__13J2DTevBlock16Fv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock16::getType() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getType__13J2DTevBlock16Fv.s"
}
#pragma pop


/* 802F1D24-802F1D2C 0008+00 s=1 e=0 z=0  None .text      getMaxStage__13J2DTevBlock16Fv                               */
// True False
//  s32 False
s32 J2DTevBlock16::getMaxStage() {
	return 16;
}


/* 802F1D2C-802F1D3C 0010+00 s=1 e=0 z=0  None .text      setTexNo__13J2DTevBlock16FUlUs                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
asm void J2DTevBlock16::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexNo__13J2DTevBlock16FUlUs.s"
}
#pragma pop


/* 802F1D3C-802F1D4C 0010+00 s=1 e=0 z=0  None .text      getTexNo__13J2DTevBlock16CFUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexNo__13J2DTevBlock16CFUl.s"
}
#pragma pop


/* 802F1D4C-802F1D54 0008+00 s=1 e=0 z=0  None .text      setFontNo__13J2DTevBlock16FUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void J2DTevBlock16::setFontNo(u16 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontNo__13J2DTevBlock16FUs.s"
}
#pragma pop


/* 802F1D54-802F1D5C 0008+00 s=1 e=0 z=0  None .text      getFontNo__13J2DTevBlock16CFv                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock16::getFontNo() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFontNo__13J2DTevBlock16CFv.s"
}
#pragma pop


/* 802F1D5C-802F1D80 0024+00 s=1 e=0 z=0  None .text      setTevOrder__13J2DTevBlock16FUl11J2DTevOrder                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevOrder False
asm void J2DTevBlock16::setTevOrder(u32 param_0, J2DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevOrder__13J2DTevBlock16FUl11J2DTevOrder.s"
}
#pragma pop


/* 802F1D80-802F1D94 0014+00 s=1 e=0 z=0  None .text      getTevOrder__13J2DTevBlock16FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevOrder__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1D94-802F1DC0 002C+00 s=1 e=0 z=0  None .text      setTevColor__13J2DTevBlock16FUl13J2DGXColorS10               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DGXColorS10 False
asm void J2DTevBlock16::setTevColor(u32 param_0, J2DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevColor__13J2DTevBlock16FUl13J2DGXColorS10.s"
}
#pragma pop


/* 802F1DC0-802F1DD4 0014+00 s=1 e=0 z=0  None .text      getTevColor__13J2DTevBlock16FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevColor__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1DD4-802F1E00 002C+00 s=1 e=0 z=0  None .text      setTevKColor__13J2DTevBlock16FUlQ28JUtility6TColor           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUtility::TColor False
asm void J2DTevBlock16::setTevKColor(u32 param_0, JUtility::TColor param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColor__13J2DTevBlock16FUlQ28JUtility6TColor.s"
}
#pragma pop


/* 802F1E00-802F1E14 0014+00 s=1 e=0 z=0  None .text      getTevKColor__13J2DTevBlock16FUl                             */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColor__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1E14-802F1E20 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__13J2DTevBlock16FUlUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock16::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColorSel__13J2DTevBlock16FUlUc.s"
}
#pragma pop


/* 802F1E20-802F1E2C 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__13J2DTevBlock16FUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColorSel__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1E2C-802F1E38 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__13J2DTevBlock16FUlUc                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock16::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKAlphaSel__13J2DTevBlock16FUlUc.s"
}
#pragma pop


/* 802F1E38-802F1E44 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__13J2DTevBlock16FUl                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKAlphaSel__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1E44-802F1E4C 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__13J2DTevBlock16FUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock16::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStageNum__13J2DTevBlock16FUc.s"
}
#pragma pop


/* 802F1E4C-802F1E54 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__13J2DTevBlock16CFv                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock16::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStageNum__13J2DTevBlock16CFv.s"
}
#pragma pop


/* 802F1E54-802F1E90 003C+00 s=1 e=0 z=0  None .text      setTevStage__13J2DTevBlock16FUl11J2DTevStage                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevStage False
asm void J2DTevBlock16::setTevStage(u32 param_0, J2DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStage__13J2DTevBlock16FUl11J2DTevStage.s"
}
#pragma pop


/* 802F1E90-802F1EA4 0014+00 s=1 e=0 z=0  None .text      getTevStage__13J2DTevBlock16FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStage__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1EA4-802F1EDC 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__13J2DTevBlock16FUl18J2DTevSwapModeInfo   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeInfo False
asm void J2DTevBlock16::setTevSwapModeInfo(u32 param_0, J2DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeInfo__13J2DTevBlock16FUl18J2DTevSwapModeInfo.s"
}
#pragma pop


/* 802F1EDC-802F1EEC 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__13J2DTevBlock16FUl19J2DTevSwapModeTable */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeTable False
asm void J2DTevBlock16::setTevSwapModeTable(u32 param_0, J2DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeTable__13J2DTevBlock16FUl19J2DTevSwapModeTable.s"
}
#pragma pop


/* 802F1EEC-802F1EFC 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__13J2DTevBlock16FUl                      */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevSwapModeTable__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1EFC-802F1F10 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__13J2DTevBlock16FUl14J2DIndTevStage           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTevStage False
asm void J2DTevBlock16::setIndTevStage(u32 param_0, J2DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTevStage__13J2DTevBlock16FUl14J2DIndTevStage.s"
}
#pragma pop


/* 802F1F10-802F1F24 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__13J2DTevBlock16FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTevStage__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1F24-802F1F54 0030+00 s=1 e=0 z=0  None .text      insertTexture__13J2DTevBlock16FUlPC7ResTIMG                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock16::insertTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__13J2DTevBlock16FUlPC7ResTIMG.s"
}
#pragma pop


/* 802F1F54-802F1F74 0020+00 s=1 e=0 z=0  None .text      getTexture__13J2DTevBlock16FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexture__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1F74-802F1F94 0020+00 s=1 e=0 z=0  None .text      getPalette__13J2DTevBlock16FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock16::getPalette(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getPalette__13J2DTevBlock16FUl.s"
}
#pragma pop


/* 802F1F94-802F1F9C 0008+00 s=1 e=0 z=0  None .text      getFont__13J2DTevBlock16Fv                                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock16::getFont() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFont__13J2DTevBlock16Fv.s"
}
#pragma pop


/* 802F1F9C-802F1FAC 0010+00 s=1 e=0 z=0  None .text      setUndeleteFlag__13J2DTevBlock16FUc                          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock16::setUndeleteFlag(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setUndeleteFlag__13J2DTevBlock16FUc.s"
}
#pragma pop


/* 802F1FAC-802F1FB8 000C+00 s=1 e=0 z=0  None .text      setFontUndeleteFlag__13J2DTevBlock16Fv                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock16::setFontUndeleteFlag() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontUndeleteFlag__13J2DTevBlock16Fv.s"
}
#pragma pop


/* 802F1FB8-802F1FC4 000C+00 s=1 e=0 z=0  None .text      getType__12J2DTevBlock8Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock8::getType() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getType__12J2DTevBlock8Fv.s"
}
#pragma pop


/* 802F1FC4-802F1FCC 0008+00 s=1 e=0 z=0  None .text      getMaxStage__12J2DTevBlock8Fv                                */
// True False
//  s32 False
s32 J2DTevBlock8::getMaxStage() {
	return 8;
}


/* 802F1FCC-802F1FDC 0010+00 s=1 e=0 z=0  None .text      setTexNo__12J2DTevBlock8FUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
asm void J2DTevBlock8::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexNo__12J2DTevBlock8FUlUs.s"
}
#pragma pop


/* 802F1FDC-802F1FEC 0010+00 s=1 e=0 z=0  None .text      getTexNo__12J2DTevBlock8CFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexNo__12J2DTevBlock8CFUl.s"
}
#pragma pop


/* 802F1FEC-802F1FF4 0008+00 s=1 e=0 z=0  None .text      setFontNo__12J2DTevBlock8FUs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void J2DTevBlock8::setFontNo(u16 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontNo__12J2DTevBlock8FUs.s"
}
#pragma pop


/* 802F1FF4-802F1FFC 0008+00 s=1 e=0 z=0  None .text      getFontNo__12J2DTevBlock8CFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock8::getFontNo() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFontNo__12J2DTevBlock8CFv.s"
}
#pragma pop


/* 802F1FFC-802F2020 0024+00 s=1 e=0 z=0  None .text      setTevOrder__12J2DTevBlock8FUl11J2DTevOrder                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevOrder False
asm void J2DTevBlock8::setTevOrder(u32 param_0, J2DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevOrder__12J2DTevBlock8FUl11J2DTevOrder.s"
}
#pragma pop


/* 802F2020-802F2034 0014+00 s=1 e=0 z=0  None .text      getTevOrder__12J2DTevBlock8FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevOrder__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F2034-802F2060 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J2DTevBlock8FUl13J2DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DGXColorS10 False
asm void J2DTevBlock8::setTevColor(u32 param_0, J2DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevColor__12J2DTevBlock8FUl13J2DGXColorS10.s"
}
#pragma pop


/* 802F2060-802F2074 0014+00 s=1 e=0 z=0  None .text      getTevColor__12J2DTevBlock8FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevColor__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F2074-802F20A0 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J2DTevBlock8FUlQ28JUtility6TColor            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUtility::TColor False
asm void J2DTevBlock8::setTevKColor(u32 param_0, JUtility::TColor param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColor__12J2DTevBlock8FUlQ28JUtility6TColor.s"
}
#pragma pop


/* 802F20A0-802F20B4 0014+00 s=1 e=0 z=0  None .text      getTevKColor__12J2DTevBlock8FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColor__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F20B4-802F20C0 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J2DTevBlock8FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock8::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColorSel__12J2DTevBlock8FUlUc.s"
}
#pragma pop


/* 802F20C0-802F20CC 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__12J2DTevBlock8FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColorSel__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F20CC-802F20D8 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J2DTevBlock8FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock8::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKAlphaSel__12J2DTevBlock8FUlUc.s"
}
#pragma pop


/* 802F20D8-802F20E4 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__12J2DTevBlock8FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKAlphaSel__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F20E4-802F20EC 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__12J2DTevBlock8FUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock8::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStageNum__12J2DTevBlock8FUc.s"
}
#pragma pop


/* 802F20EC-802F20F4 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__12J2DTevBlock8CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock8::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStageNum__12J2DTevBlock8CFv.s"
}
#pragma pop


/* 802F20F4-802F2130 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J2DTevBlock8FUl11J2DTevStage                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevStage False
asm void J2DTevBlock8::setTevStage(u32 param_0, J2DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStage__12J2DTevBlock8FUl11J2DTevStage.s"
}
#pragma pop


/* 802F2130-802F2144 0014+00 s=1 e=0 z=0  None .text      getTevStage__12J2DTevBlock8FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStage__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F2144-802F217C 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J2DTevBlock8FUl18J2DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeInfo False
asm void J2DTevBlock8::setTevSwapModeInfo(u32 param_0, J2DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeInfo__12J2DTevBlock8FUl18J2DTevSwapModeInfo.s"
}
#pragma pop


/* 802F217C-802F218C 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J2DTevBlock8FUl19J2DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeTable False
asm void J2DTevBlock8::setTevSwapModeTable(u32 param_0, J2DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeTable__12J2DTevBlock8FUl19J2DTevSwapModeTable.s"
}
#pragma pop


/* 802F218C-802F219C 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__12J2DTevBlock8FUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevSwapModeTable__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F219C-802F21B0 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J2DTevBlock8FUl14J2DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTevStage False
asm void J2DTevBlock8::setIndTevStage(u32 param_0, J2DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTevStage__12J2DTevBlock8FUl14J2DIndTevStage.s"
}
#pragma pop


/* 802F21B0-802F21C4 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__12J2DTevBlock8FUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTevStage__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F21C4-802F21F4 0030+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock8FUlPC7ResTIMG                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock8::insertTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock8FUlPC7ResTIMG.s"
}
#pragma pop


/* 802F21F4-802F2214 0020+00 s=1 e=0 z=0  None .text      getTexture__12J2DTevBlock8FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexture__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F2214-802F2234 0020+00 s=1 e=0 z=0  None .text      getPalette__12J2DTevBlock8FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock8::getPalette(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getPalette__12J2DTevBlock8FUl.s"
}
#pragma pop


/* 802F2234-802F223C 0008+00 s=1 e=0 z=0  None .text      getFont__12J2DTevBlock8Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock8::getFont() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFont__12J2DTevBlock8Fv.s"
}
#pragma pop


/* 802F223C-802F224C 0010+00 s=1 e=0 z=0  None .text      setUndeleteFlag__12J2DTevBlock8FUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock8::setUndeleteFlag(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setUndeleteFlag__12J2DTevBlock8FUc.s"
}
#pragma pop


/* 802F224C-802F2258 000C+00 s=1 e=0 z=0  None .text      setFontUndeleteFlag__12J2DTevBlock8Fv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock8::setFontUndeleteFlag() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontUndeleteFlag__12J2DTevBlock8Fv.s"
}
#pragma pop


/* 802F2258-802F2264 000C+00 s=1 e=0 z=0  None .text      getType__12J2DTevBlock4Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock4::getType() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getType__12J2DTevBlock4Fv.s"
}
#pragma pop


/* 802F2264-802F226C 0008+00 s=1 e=0 z=0  None .text      getMaxStage__12J2DTevBlock4Fv                                */
// True False
//  s32 False
s32 J2DTevBlock4::getMaxStage() {
	return 4;
}


/* 802F226C-802F227C 0010+00 s=1 e=0 z=0  None .text      setTexNo__12J2DTevBlock4FUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
asm void J2DTevBlock4::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexNo__12J2DTevBlock4FUlUs.s"
}
#pragma pop


/* 802F227C-802F228C 0010+00 s=1 e=0 z=0  None .text      getTexNo__12J2DTevBlock4CFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexNo__12J2DTevBlock4CFUl.s"
}
#pragma pop


/* 802F228C-802F2294 0008+00 s=1 e=0 z=0  None .text      setFontNo__12J2DTevBlock4FUs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void J2DTevBlock4::setFontNo(u16 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontNo__12J2DTevBlock4FUs.s"
}
#pragma pop


/* 802F2294-802F229C 0008+00 s=1 e=0 z=0  None .text      getFontNo__12J2DTevBlock4CFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock4::getFontNo() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFontNo__12J2DTevBlock4CFv.s"
}
#pragma pop


/* 802F229C-802F22C0 0024+00 s=1 e=0 z=0  None .text      setTevOrder__12J2DTevBlock4FUl11J2DTevOrder                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevOrder False
asm void J2DTevBlock4::setTevOrder(u32 param_0, J2DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevOrder__12J2DTevBlock4FUl11J2DTevOrder.s"
}
#pragma pop


/* 802F22C0-802F22D4 0014+00 s=1 e=0 z=0  None .text      getTevOrder__12J2DTevBlock4FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevOrder__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F22D4-802F2300 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J2DTevBlock4FUl13J2DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DGXColorS10 False
asm void J2DTevBlock4::setTevColor(u32 param_0, J2DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevColor__12J2DTevBlock4FUl13J2DGXColorS10.s"
}
#pragma pop


/* 802F2300-802F2314 0014+00 s=1 e=0 z=0  None .text      getTevColor__12J2DTevBlock4FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevColor__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F2314-802F2340 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J2DTevBlock4FUlQ28JUtility6TColor            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUtility::TColor False
asm void J2DTevBlock4::setTevKColor(u32 param_0, JUtility::TColor param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColor__12J2DTevBlock4FUlQ28JUtility6TColor.s"
}
#pragma pop


/* 802F2340-802F2354 0014+00 s=1 e=0 z=0  None .text      getTevKColor__12J2DTevBlock4FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColor__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F2354-802F2360 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J2DTevBlock4FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock4::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColorSel__12J2DTevBlock4FUlUc.s"
}
#pragma pop


/* 802F2360-802F236C 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__12J2DTevBlock4FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColorSel__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F236C-802F2378 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J2DTevBlock4FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock4::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKAlphaSel__12J2DTevBlock4FUlUc.s"
}
#pragma pop


/* 802F2378-802F2384 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__12J2DTevBlock4FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKAlphaSel__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F2384-802F238C 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__12J2DTevBlock4FUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock4::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStageNum__12J2DTevBlock4FUc.s"
}
#pragma pop


/* 802F238C-802F2394 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__12J2DTevBlock4CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock4::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStageNum__12J2DTevBlock4CFv.s"
}
#pragma pop


/* 802F2394-802F23D0 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J2DTevBlock4FUl11J2DTevStage                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevStage False
asm void J2DTevBlock4::setTevStage(u32 param_0, J2DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStage__12J2DTevBlock4FUl11J2DTevStage.s"
}
#pragma pop


/* 802F23D0-802F23E4 0014+00 s=1 e=0 z=0  None .text      getTevStage__12J2DTevBlock4FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStage__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F23E4-802F241C 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J2DTevBlock4FUl18J2DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeInfo False
asm void J2DTevBlock4::setTevSwapModeInfo(u32 param_0, J2DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeInfo__12J2DTevBlock4FUl18J2DTevSwapModeInfo.s"
}
#pragma pop


/* 802F241C-802F242C 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J2DTevBlock4FUl19J2DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeTable False
asm void J2DTevBlock4::setTevSwapModeTable(u32 param_0, J2DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeTable__12J2DTevBlock4FUl19J2DTevSwapModeTable.s"
}
#pragma pop


/* 802F242C-802F243C 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__12J2DTevBlock4FUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevSwapModeTable__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F243C-802F2450 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J2DTevBlock4FUl14J2DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTevStage False
asm void J2DTevBlock4::setIndTevStage(u32 param_0, J2DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTevStage__12J2DTevBlock4FUl14J2DIndTevStage.s"
}
#pragma pop


/* 802F2450-802F2464 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__12J2DTevBlock4FUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTevStage__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F2464-802F2494 0030+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock4FUlPC7ResTIMG                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock4::insertTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock4FUlPC7ResTIMG.s"
}
#pragma pop


/* 802F2494-802F24B4 0020+00 s=1 e=0 z=0  None .text      getTexture__12J2DTevBlock4FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexture__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F24B4-802F24D4 0020+00 s=1 e=0 z=0  None .text      getPalette__12J2DTevBlock4FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock4::getPalette(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getPalette__12J2DTevBlock4FUl.s"
}
#pragma pop


/* 802F24D4-802F24DC 0008+00 s=1 e=0 z=0  None .text      getFont__12J2DTevBlock4Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock4::getFont() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFont__12J2DTevBlock4Fv.s"
}
#pragma pop


/* 802F24DC-802F24EC 0010+00 s=1 e=0 z=0  None .text      setUndeleteFlag__12J2DTevBlock4FUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock4::setUndeleteFlag(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setUndeleteFlag__12J2DTevBlock4FUc.s"
}
#pragma pop


/* 802F24EC-802F24FC 0010+00 s=1 e=0 z=0  None .text      setFontUndeleteFlag__12J2DTevBlock4Fv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock4::setFontUndeleteFlag() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontUndeleteFlag__12J2DTevBlock4Fv.s"
}
#pragma pop


/* 802F24FC-802F2508 000C+00 s=1 e=0 z=0  None .text      getType__12J2DTevBlock2Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock2::getType() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getType__12J2DTevBlock2Fv.s"
}
#pragma pop


/* 802F2508-802F2510 0008+00 s=1 e=0 z=0  None .text      getMaxStage__12J2DTevBlock2Fv                                */
// True False
//  s32 False
s32 J2DTevBlock2::getMaxStage() {
	return 2;
}


/* 802F2510-802F2520 0010+00 s=1 e=0 z=0  None .text      setTexNo__12J2DTevBlock2FUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
asm void J2DTevBlock2::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexNo__12J2DTevBlock2FUlUs.s"
}
#pragma pop


/* 802F2520-802F2530 0010+00 s=1 e=0 z=0  None .text      getTexNo__12J2DTevBlock2CFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexNo__12J2DTevBlock2CFUl.s"
}
#pragma pop


/* 802F2530-802F2538 0008+00 s=1 e=0 z=0  None .text      setFontNo__12J2DTevBlock2FUs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void J2DTevBlock2::setFontNo(u16 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontNo__12J2DTevBlock2FUs.s"
}
#pragma pop


/* 802F2538-802F2540 0008+00 s=1 e=0 z=0  None .text      getFontNo__12J2DTevBlock2CFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock2::getFontNo() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFontNo__12J2DTevBlock2CFv.s"
}
#pragma pop


/* 802F2540-802F2564 0024+00 s=1 e=0 z=0  None .text      setTevOrder__12J2DTevBlock2FUl11J2DTevOrder                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevOrder False
asm void J2DTevBlock2::setTevOrder(u32 param_0, J2DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevOrder__12J2DTevBlock2FUl11J2DTevOrder.s"
}
#pragma pop


/* 802F2564-802F2578 0014+00 s=1 e=0 z=0  None .text      getTevOrder__12J2DTevBlock2FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevOrder__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F2578-802F25A4 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J2DTevBlock2FUl13J2DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DGXColorS10 False
asm void J2DTevBlock2::setTevColor(u32 param_0, J2DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevColor__12J2DTevBlock2FUl13J2DGXColorS10.s"
}
#pragma pop


/* 802F25A4-802F25B8 0014+00 s=1 e=0 z=0  None .text      getTevColor__12J2DTevBlock2FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevColor__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F25B8-802F25E4 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J2DTevBlock2FUlQ28JUtility6TColor            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUtility::TColor False
asm void J2DTevBlock2::setTevKColor(u32 param_0, JUtility::TColor param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColor__12J2DTevBlock2FUlQ28JUtility6TColor.s"
}
#pragma pop


/* 802F25E4-802F25F8 0014+00 s=1 e=0 z=0  None .text      getTevKColor__12J2DTevBlock2FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColor__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F25F8-802F2604 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J2DTevBlock2FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock2::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColorSel__12J2DTevBlock2FUlUc.s"
}
#pragma pop


/* 802F2604-802F2610 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__12J2DTevBlock2FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColorSel__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F2610-802F261C 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J2DTevBlock2FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock2::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKAlphaSel__12J2DTevBlock2FUlUc.s"
}
#pragma pop


/* 802F261C-802F2628 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__12J2DTevBlock2FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKAlphaSel__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F2628-802F2630 0008+00 s=1 e=0 z=0  None .text      setTevStageNum__12J2DTevBlock2FUc                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock2::setTevStageNum(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStageNum__12J2DTevBlock2FUc.s"
}
#pragma pop


/* 802F2630-802F2638 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__12J2DTevBlock2CFv                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock2::getTevStageNum() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStageNum__12J2DTevBlock2CFv.s"
}
#pragma pop


/* 802F2638-802F2674 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J2DTevBlock2FUl11J2DTevStage                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevStage False
asm void J2DTevBlock2::setTevStage(u32 param_0, J2DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStage__12J2DTevBlock2FUl11J2DTevStage.s"
}
#pragma pop


/* 802F2674-802F2688 0014+00 s=1 e=0 z=0  None .text      getTevStage__12J2DTevBlock2FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStage__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F2688-802F26C0 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J2DTevBlock2FUl18J2DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeInfo False
asm void J2DTevBlock2::setTevSwapModeInfo(u32 param_0, J2DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeInfo__12J2DTevBlock2FUl18J2DTevSwapModeInfo.s"
}
#pragma pop


/* 802F26C0-802F26D0 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J2DTevBlock2FUl19J2DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeTable False
asm void J2DTevBlock2::setTevSwapModeTable(u32 param_0, J2DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeTable__12J2DTevBlock2FUl19J2DTevSwapModeTable.s"
}
#pragma pop


/* 802F26D0-802F26E0 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__12J2DTevBlock2FUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevSwapModeTable__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F26E0-802F26F4 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J2DTevBlock2FUl14J2DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTevStage False
asm void J2DTevBlock2::setIndTevStage(u32 param_0, J2DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTevStage__12J2DTevBlock2FUl14J2DIndTevStage.s"
}
#pragma pop


/* 802F26F4-802F2708 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__12J2DTevBlock2FUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTevStage__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F2708-802F2738 0030+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock2FUlPC7ResTIMG                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock2::insertTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock2FUlPC7ResTIMG.s"
}
#pragma pop


/* 802F2738-802F2758 0020+00 s=1 e=0 z=0  None .text      getTexture__12J2DTevBlock2FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexture__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F2758-802F2778 0020+00 s=1 e=0 z=0  None .text      getPalette__12J2DTevBlock2FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock2::getPalette(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getPalette__12J2DTevBlock2FUl.s"
}
#pragma pop


/* 802F2778-802F2780 0008+00 s=1 e=0 z=0  None .text      getFont__12J2DTevBlock2Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock2::getFont() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFont__12J2DTevBlock2Fv.s"
}
#pragma pop


/* 802F2780-802F2790 0010+00 s=1 e=0 z=0  None .text      setUndeleteFlag__12J2DTevBlock2FUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock2::setUndeleteFlag(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setUndeleteFlag__12J2DTevBlock2FUc.s"
}
#pragma pop


/* 802F2790-802F27A0 0010+00 s=1 e=0 z=0  None .text      setFontUndeleteFlag__12J2DTevBlock2Fv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock2::setFontUndeleteFlag() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontUndeleteFlag__12J2DTevBlock2Fv.s"
}
#pragma pop


/* 802F27A0-802F27AC 000C+00 s=1 e=0 z=0  None .text      getType__12J2DTevBlock1Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock1::getType() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getType__12J2DTevBlock1Fv.s"
}
#pragma pop


/* 802F27AC-802F27B4 0008+00 s=1 e=0 z=0  None .text      getMaxStage__12J2DTevBlock1Fv                                */
// True False
//  bool False
bool J2DTevBlock1::getMaxStage() {
	return true;
}


/* 802F27B4-802F27C4 0010+00 s=1 e=0 z=0  None .text      setTexNo__12J2DTevBlock1FUlUs                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u16 False
asm void J2DTevBlock1::setTexNo(u32 param_0, u16 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTexNo__12J2DTevBlock1FUlUs.s"
}
#pragma pop


/* 802F27C4-802F27D4 0010+00 s=1 e=0 z=0  None .text      getTexNo__12J2DTevBlock1CFUl                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTexNo(u32 param_0) const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexNo__12J2DTevBlock1CFUl.s"
}
#pragma pop


/* 802F27D4-802F27DC 0008+00 s=1 e=0 z=0  None .text      setFontNo__12J2DTevBlock1FUs                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void J2DTevBlock1::setFontNo(u16 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontNo__12J2DTevBlock1FUs.s"
}
#pragma pop


/* 802F27DC-802F27E4 0008+00 s=1 e=0 z=0  None .text      getFontNo__12J2DTevBlock1CFv                                 */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock1::getFontNo() const {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFontNo__12J2DTevBlock1CFv.s"
}
#pragma pop


/* 802F27E4-802F2808 0024+00 s=1 e=0 z=0  None .text      setTevOrder__12J2DTevBlock1FUl11J2DTevOrder                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevOrder False
asm void J2DTevBlock1::setTevOrder(u32 param_0, J2DTevOrder param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevOrder__12J2DTevBlock1FUl11J2DTevOrder.s"
}
#pragma pop


/* 802F2808-802F281C 0014+00 s=1 e=0 z=0  None .text      getTevOrder__12J2DTevBlock1FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTevOrder(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevOrder__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F281C-802F2848 002C+00 s=1 e=0 z=0  None .text      setTevColor__12J2DTevBlock1FUl13J2DGXColorS10                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DGXColorS10 False
asm void J2DTevBlock1::setTevColor(u32 param_0, J2DGXColorS10 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevColor__12J2DTevBlock1FUl13J2DGXColorS10.s"
}
#pragma pop


/* 802F2848-802F285C 0014+00 s=1 e=0 z=0  None .text      getTevColor__12J2DTevBlock1FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTevColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevColor__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F285C-802F2888 002C+00 s=1 e=0 z=0  None .text      setTevKColor__12J2DTevBlock1FUlQ28JUtility6TColor            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  JUtility::TColor False
asm void J2DTevBlock1::setTevKColor(u32 param_0, JUtility::TColor param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColor__12J2DTevBlock1FUlQ28JUtility6TColor.s"
}
#pragma pop


/* 802F2888-802F289C 0014+00 s=1 e=0 z=0  None .text      getTevKColor__12J2DTevBlock1FUl                              */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTevKColor(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColor__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F289C-802F28A8 000C+00 s=1 e=0 z=0  None .text      setTevKColorSel__12J2DTevBlock1FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock1::setTevKColorSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKColorSel__12J2DTevBlock1FUlUc.s"
}
#pragma pop


/* 802F28A8-802F28B4 000C+00 s=1 e=0 z=0  None .text      getTevKColorSel__12J2DTevBlock1FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTevKColorSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKColorSel__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F28B4-802F28C0 000C+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__12J2DTevBlock1FUlUc                         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  u8 False
asm void J2DTevBlock1::setTevKAlphaSel(u32 param_0, u8 param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevKAlphaSel__12J2DTevBlock1FUlUc.s"
}
#pragma pop


/* 802F28C0-802F28CC 000C+00 s=1 e=0 z=0  None .text      getTevKAlphaSel__12J2DTevBlock1FUl                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTevKAlphaSel(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevKAlphaSel__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F28CC-802F28D0 0004+00 s=1 e=0 z=0  None .text      setTevStageNum__12J2DTevBlock1FUc                            */
// True False
//  void False
//  u8 False
void J2DTevBlock1::setTevStageNum(u8 param_0) {
	/* empty function */
}


/* 802F28D0-802F28D8 0008+00 s=1 e=0 z=0  None .text      getTevStageNum__12J2DTevBlock1CFv                            */
// True False
//  bool False
bool J2DTevBlock1::getTevStageNum() const {
	return true;
}


/* 802F28D8-802F2914 003C+00 s=1 e=0 z=0  None .text      setTevStage__12J2DTevBlock1FUl11J2DTevStage                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevStage False
asm void J2DTevBlock1::setTevStage(u32 param_0, J2DTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevStage__12J2DTevBlock1FUl11J2DTevStage.s"
}
#pragma pop


/* 802F2914-802F2928 0014+00 s=1 e=0 z=0  None .text      getTevStage__12J2DTevBlock1FUl                               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevStage__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F2928-802F2960 0038+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__12J2DTevBlock1FUl18J2DTevSwapModeInfo    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeInfo False
asm void J2DTevBlock1::setTevSwapModeInfo(u32 param_0, J2DTevSwapModeInfo param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeInfo__12J2DTevBlock1FUl18J2DTevSwapModeInfo.s"
}
#pragma pop


/* 802F2960-802F2970 0010+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__12J2DTevBlock1FUl19J2DTevSwapModeTable  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DTevSwapModeTable False
asm void J2DTevBlock1::setTevSwapModeTable(u32 param_0, J2DTevSwapModeTable param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setTevSwapModeTable__12J2DTevBlock1FUl19J2DTevSwapModeTable.s"
}
#pragma pop


/* 802F2970-802F2980 0010+00 s=1 e=0 z=0  None .text      getTevSwapModeTable__12J2DTevBlock1FUl                       */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTevSwapModeTable(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTevSwapModeTable__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F2980-802F2994 0014+00 s=1 e=0 z=0  None .text      setIndTevStage__12J2DTevBlock1FUl14J2DIndTevStage            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  J2DIndTevStage False
asm void J2DTevBlock1::setIndTevStage(u32 param_0, J2DIndTevStage param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setIndTevStage__12J2DTevBlock1FUl14J2DIndTevStage.s"
}
#pragma pop


/* 802F2994-802F29A8 0014+00 s=1 e=0 z=0  None .text      getIndTevStage__12J2DTevBlock1FUl                            */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getIndTevStage(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getIndTevStage__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F29A8-802F29D8 0030+00 s=1 e=0 z=0  None .text      insertTexture__12J2DTevBlock1FUlPC7ResTIMG                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
asm void J2DTevBlock1::insertTexture(u32 param_0, ResTIMG const* param_1) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/insertTexture__12J2DTevBlock1FUlPC7ResTIMG.s"
}
#pragma pop


/* 802F29D8-802F29F8 0020+00 s=1 e=0 z=0  None .text      getTexture__12J2DTevBlock1FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getTexture(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getTexture__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F29F8-802F2A18 0020+00 s=1 e=0 z=0  None .text      getPalette__12J2DTevBlock1FUl                                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void J2DTevBlock1::getPalette(u32 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getPalette__12J2DTevBlock1FUl.s"
}
#pragma pop


/* 802F2A18-802F2A20 0008+00 s=1 e=0 z=0  None .text      getFont__12J2DTevBlock1Fv                                    */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock1::getFont() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/getFont__12J2DTevBlock1Fv.s"
}
#pragma pop


/* 802F2A20-802F2A30 0010+00 s=1 e=0 z=0  None .text      setUndeleteFlag__12J2DTevBlock1FUc                           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u8 False
asm void J2DTevBlock1::setUndeleteFlag(u8 param_0) {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setUndeleteFlag__12J2DTevBlock1FUc.s"
}
#pragma pop


/* 802F2A30-802F2A40 0010+00 s=1 e=0 z=0  None .text      setFontUndeleteFlag__12J2DTevBlock1Fv                        */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void J2DTevBlock1::setFontUndeleteFlag() {
	nofralloc
#include "asm/JSystem/J2DGraph/J2DMatBlock/setFontUndeleteFlag__12J2DTevBlock1Fv.s"
}
#pragma pop


/* 802F2A40-802F2A44 0004+00 s=1 e=0 z=0  None .text      initialize__11J2DTevBlockFv                                  */
// True False
//  void False
void J2DTevBlock::initialize() {
	/* empty function */
}


/* 802F2A44-802F2A48 0004+00 s=1 e=0 z=0  None .text      loadTexture__11J2DTevBlockF11_GXTexMapIDUl                   */
// True False
//  void False
//  _GXTexMapID False
//  u32 False
void J2DTevBlock::loadTexture(_GXTexMapID param_0, u32 param_1) {
	/* empty function */
}


/* 802F2A48-802F2A4C 0004+00 s=1 e=0 z=0  None .text      setFontNo__11J2DTevBlockFUs                                  */
// True False
//  void False
//  u16 False
void J2DTevBlock::setFontNo(u16 param_0) {
	/* empty function */
}


/* 802F2A4C-802F2A50 0004+00 s=1 e=0 z=0  None .text      setTevOrder__11J2DTevBlockFUl11J2DTevOrder                   */
// True False
//  void False
//  u32 False
//  J2DTevOrder False
void J2DTevBlock::setTevOrder(u32 param_0, J2DTevOrder param_1) {
	/* empty function */
}


/* 802F2A50-802F2A54 0004+00 s=1 e=0 z=0  None .text      setTevKColorSel__11J2DTevBlockFUlUc                          */
// True False
//  void False
//  u32 False
//  u8 False
void J2DTevBlock::setTevKColorSel(u32 param_0, u8 param_1) {
	/* empty function */
}


/* 802F2A54-802F2A58 0004+00 s=1 e=0 z=0  None .text      setTevKAlphaSel__11J2DTevBlockFUlUc                          */
// True False
//  void False
//  u32 False
//  u8 False
void J2DTevBlock::setTevKAlphaSel(u32 param_0, u8 param_1) {
	/* empty function */
}


/* 802F2A58-802F2A5C 0004+00 s=1 e=0 z=0  None .text      setTevStageNum__11J2DTevBlockFUc                             */
// True False
//  void False
//  u8 False
void J2DTevBlock::setTevStageNum(u8 param_0) {
	/* empty function */
}


/* 802F2A5C-802F2A60 0004+00 s=1 e=0 z=0  None .text      setTevStage__11J2DTevBlockFUl11J2DTevStage                   */
// True False
//  void False
//  u32 False
//  J2DTevStage False
void J2DTevBlock::setTevStage(u32 param_0, J2DTevStage param_1) {
	/* empty function */
}


/* 802F2A60-802F2A64 0004+00 s=1 e=0 z=0  None .text      setTevSwapModeInfo__11J2DTevBlockFUl18J2DTevSwapModeInfo     */
// True False
//  void False
//  u32 False
//  J2DTevSwapModeInfo False
void J2DTevBlock::setTevSwapModeInfo(u32 param_0, J2DTevSwapModeInfo param_1) {
	/* empty function */
}


/* 802F2A64-802F2A68 0004+00 s=1 e=0 z=0  None .text      setTevSwapModeTable__11J2DTevBlockFUl19J2DTevSwapModeTable   */
// True False
//  void False
//  u32 False
//  J2DTevSwapModeTable False
void J2DTevBlock::setTevSwapModeTable(u32 param_0, J2DTevSwapModeTable param_1) {
	/* empty function */
}


/* 802F2A68-802F2A6C 0004+00 s=1 e=0 z=0  None .text      setIndTevStage__11J2DTevBlockFUl14J2DIndTevStage             */
// True False
//  void False
//  u32 False
//  J2DIndTevStage False
void J2DTevBlock::setIndTevStage(u32 param_0, J2DIndTevStage param_1) {
	/* empty function */
}


/* 802F2A6C-802F2A74 0008+00 s=1 e=0 z=0  None .text      insertTexture__11J2DTevBlockFUlP10JUTTexture                 */
// True False
//  bool False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
bool J2DTevBlock::insertTexture(u32 param_0, JUTTexture* param_1) {
	return false;
}


/* 802F2A74-802F2A7C 0008+00 s=1 e=0 z=0  None .text      insertTexture__11J2DTevBlockFUlPC7ResTIMGP10JUTPalette       */
// True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
//  JUTPalette* False
// 	 JUTPalette False
bool J2DTevBlock::insertTexture(u32 param_0, ResTIMG const* param_1, JUTPalette* param_2) {
	return false;
}


/* 802F2A7C-802F2A84 0008+00 s=1 e=0 z=0  None .text      insertTexture__11J2DTevBlockFUlPC7ResTIMG                    */
// True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
bool J2DTevBlock::insertTexture(u32 param_0, ResTIMG const* param_1) {
	return false;
}


/* 802F2A84-802F2A8C 0008+00 s=1 e=0 z=0  None .text      setTexture__11J2DTevBlockFUlP10JUTTexture                    */
// True False
//  bool False
//  u32 False
//  JUTTexture* False
// 	 JUTTexture False
bool J2DTevBlock::setTexture(u32 param_0, JUTTexture* param_1) {
	return false;
}


/* 802F2A8C-802F2A94 0008+00 s=1 e=0 z=0  None .text      setTexture__11J2DTevBlockFUlPC7ResTIMG                       */
// True False
//  bool False
//  u32 False
//  ResTIMG const* False
// 	 ResTIMG const False
// 		 ResTIMG False
bool J2DTevBlock::setTexture(u32 param_0, ResTIMG const* param_1) {
	return false;
}


/* 802F2A94-802F2A9C 0008+00 s=1 e=0 z=0  None .text      removeTexture__11J2DTevBlockFUl                              */
// True False
//  bool False
//  u32 False
bool J2DTevBlock::removeTexture(u32 param_0) {
	return false;
}


/* 802F2A9C-802F2AA4 0008+00 s=1 e=0 z=0  None .text      setFont__11J2DTevBlockFP7JUTFont                             */
// True False
//  bool False
//  JUTFont* False
// 	 JUTFont False
bool J2DTevBlock::setFont(JUTFont* param_0) {
	return false;
}


/* 802F2AA4-802F2AAC 0008+00 s=1 e=0 z=0  None .text      setFont__11J2DTevBlockFP7ResFONT                             */
// True False
//  bool False
//  ResFONT* False
// 	 ResFONT False
bool J2DTevBlock::setFont(ResFONT* param_0) {
	return false;
}


/* 802F2AAC-802F2AB4 0008+00 s=1 e=0 z=0  None .text      setPalette__11J2DTevBlockFUlPC7ResTLUT                       */
// True False
//  bool False
//  u32 False
//  ResTLUT const* False
// 	 ResTLUT const False
// 		 ResTLUT False
bool J2DTevBlock::setPalette(u32 param_0, ResTLUT const* param_1) {
	return false;
}


/* 802F2AB4-802F2ABC 0008+00 s=1 e=0 z=0  None .text      prepareTexture__11J2DTevBlockFUc                             */
// True False
//  bool False
//  u8 False
bool J2DTevBlock::prepareTexture(u8 param_0) {
	return false;
}


/* 802F2ABC-802F2AC4 0008+00 s=1 e=0 z=0  None .text      getFont__11J2DTevBlockFv                                     */
// True False
//  bool False
bool J2DTevBlock::getFont() {
	return false;
}


/* 802F2AC4-802F2AC8 0004+00 s=1 e=0 z=0  None .text      shiftDeleteFlag__11J2DTevBlockFUcb                           */
// True False
//  void False
//  u8 False
//  bool False
void J2DTevBlock::shiftDeleteFlag(u8 param_0, bool param_1) {
	/* empty function */
}


/* 802F2AC8-802F2ACC 0004+00 s=1 e=0 z=0  None .text      setUndeleteFlag__11J2DTevBlockFUc                            */
// True False
//  void False
//  u8 False
void J2DTevBlock::setUndeleteFlag(u8 param_0) {
	/* empty function */
}


/* 802F2ACC-802F2AD0 0004+00 s=1 e=0 z=0  None .text      setFontUndeleteFlag__11J2DTevBlockFv                         */
// True False
//  void False
void J2DTevBlock::setFontUndeleteFlag() {
	/* empty function */
}


