// 
// Generated By: dol2asm
// Translation Unit: processor
// 

#include "dol2asm.h"
#include "dolphin/types.h"
#include "JSystem/JMessage/processor.h"

// 
// Types:
// 

struct JMessage {
	struct TReference {
		/* 802A7AF8 */ // False False
~TReference();
		/* 802A7B40 */ // False False
//  bool False
//  u32 False
bool do_word(u32) const;
	};

	struct TProcessor {
		/* 802A7B48 */ // True False
~TProcessor();
		/* 802A7B90 */ // False False
void reset();
		/* 802A7BF8 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void stack_pushCurrent(char const*);
		/* 802A7C30 */ // True False
void stack_popCurrent();
		/* 802A7C54 */ // False False
//  u16 False
void getResource_groupID(u16) const;
		/* 802A7CD4 */ // False False
//  u32 False
//  u32 False
//  bool* False
// 	 bool False
void toMessageCode_messageID(u32, u32, bool*) const;
		/* 802A7E38 */ // True False
//  char const* (*)(JMessage::TProcessor*) False
// 	 * False
// 		  False
// 	 char const* False
// 		 char const False
// 			 char False
// 	 JMessage::TProcessor* False
// 		 JMessage::TProcessor False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
void on_select_begin(char const* (*)(JMessage::TProcessor*), void const*, char const*, u32);
		/* 802A7EDC */ // True False
void on_select_end();
		/* 802A7F34 */ // True False
void on_select_separate();
		/* 802A7FC0 */ // False False
//  void False
void do_reset();
		/* 802A7FC4 */ // True False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void do_begin(void const*, char const*);
		/* 802A7FC8 */ // True False
//  void False
void do_end();
		/* 802A7FCC */ // True False
//  void False
//  int False
void do_character(int);
		/* 802A7FD0 */ // True False
//  bool False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
bool do_tag(u32, void const*, u32);
		/* 802A7FD8 */ // False False
//  void False
//  u32 False
void do_select_begin(u32);
		/* 802A7FDC */ // False False
//  void False
void do_select_end();
		/* 802A7FE0 */ // False False
//  void False
void do_select_separate();
		/* 802A7FE4 */ // True False
void on_tag_();
		/* 802A8084 */ // False False
//  void False
//  char const* False
// 	 char const False
// 		 char False
void do_resetStatus_(char const*);
		/* 802A8088 */ // False False
//  bool False
bool do_setBegin_isReady_() const;
		/* 802A8090 */ // True False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
void do_tag_(u32, void const*, u32);
		/* 802A81EC */ // True False
void process_character_();
		/* 802A828C */ // False False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
void process_onCharacterEnd_normal_(JMessage::TProcessor*);
		/* 802A82F4 */ // True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
void process_onCharacterEnd_select_(JMessage::TProcessor*);
		/* 802A833C */ // True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
void process_onSelect_limited_(JMessage::TProcessor*);
		/* 802A8358 */ // True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
void process_onSelect_(JMessage::TProcessor*);
		/* 802A8C24 */ // True False
//  u32 False
void on_message(u32) const;
		/* 802A8C44 */ // True False
//  u32 False
void getMessageText_messageCode(u32) const;
	};

	struct TControl {
		/* 802A7A20 */ // False False
//  JMessage::TProcessor const* False
// 	 JMessage::TProcessor const False
// 		 JMessage::TProcessor False
//  u16 False
//  u16 False
void setMessageCode_inSequence_(JMessage::TProcessor const*, u16, u16);
	};

	struct TSequenceProcessor {
		/* 802A8374 */ // False False
//  JMessage::TReference const* False
// 	 JMessage::TReference const False
// 		 JMessage::TReference False
//  JMessage::TControl* False
// 	 JMessage::TControl False
TSequenceProcessor(JMessage::TReference const*, JMessage::TControl*);
		/* 802A83B8 */ // False False
~TSequenceProcessor();
		/* 802A8418 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void process(char const*);
		/* 802A85A4 */ // True False
void on_isReady();
		/* 802A85D0 */ // True False
//  void const* (*)(JMessage::TSequenceProcessor const*) False
// 	 * False
// 		  False
// 	 void const* False
// 		 void const False
// 			 void False
// 	 JMessage::TSequenceProcessor const* False
// 		 JMessage::TSequenceProcessor const False
// 			 JMessage::TSequenceProcessor False
//  u32 False
void on_jump_register(void const* (*)(JMessage::TSequenceProcessor const*), u32);
		/* 802A85E4 */ // True False
void on_jump_isReady();
		/* 802A8610 */ // True False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void on_jump(void const*, char const*);
		/* 802A8690 */ // True False
//  void const* (*)(JMessage::TSequenceProcessor const*, u32) False
// 	 * False
// 		  False
// 	 void const* False
// 		 void const False
// 			 void False
// 	 JMessage::TSequenceProcessor const* False
// 		 JMessage::TSequenceProcessor const False
// 			 JMessage::TSequenceProcessor False
// 	 u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
void on_branch_register(void const* (*)(JMessage::TSequenceProcessor const*, u32), void const*, u32);
		/* 802A86A0 */ // True False
//  u32 False
void on_branch_query(u32);
		/* 802A86D4 */ // True False
void on_branch_queryResult();
		/* 802A8700 */ // True False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void on_branch(void const*, char const*);
		/* 802A8780 */ // True False
//  bool False
bool do_isReady();
		/* 802A8788 */ // True False
//  bool False
bool do_jump_isReady();
		/* 802A8790 */ // True False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void do_jump(void const*, char const*);
		/* 802A8794 */ // False False
//  void False
//  u32 False
void do_branch_query(u32);
		/* 802A8798 */ // False False
//  s32 False
s32 do_branch_queryResult();
		/* 802A87A0 */ // False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void do_branch(void const*, char const*);
		/* 802A87A4 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void do_resetStatus_(char const*);
		/* 802A87C0 */ // False False
void do_setBegin_isReady_() const;
		/* 802A87D0 */ // False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void do_begin_(void const*, char const*);
		/* 802A87D4 */ // False False
void do_end_();
		/* 802A87E0 */ // False False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
void do_tag_(u32, void const*, u32);
		/* 802A892C */ // True False
//  u16 False
void process_setMessageIndex_reserved_(u16);
		/* 802A8944 */ // True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u16 False
//  u16 False
void process_setMessageCode_(JMessage::TSequenceProcessor const*, u16, u16);
		/* 802A89B8 */ // True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
void process_onJump_limited_(JMessage::TSequenceProcessor const*);
		/* 802A89EC */ // True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
void process_onJump_(JMessage::TSequenceProcessor const*);
		/* 802A8A18 */ // True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u32 False
void process_onBranch_limited_(JMessage::TSequenceProcessor const*, u32);
		/* 802A8A50 */ // True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u32 False
void process_onBranch_(JMessage::TSequenceProcessor const*, u32);
	};

	struct TRenderingProcessor {
		/* 802A8A84 */ // False False
//  JMessage::TReference const* False
// 	 JMessage::TReference const False
// 		 JMessage::TReference False
TRenderingProcessor(JMessage::TReference const*);
		/* 802A8AC0 */ // False False
~TRenderingProcessor();
		/* 802A8B20 */ // False False
//  char const* False
// 	 char const False
// 		 char False
void process(char const*);
		/* 802A8BA4 */ // False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void do_begin_(void const*, char const*);
		/* 802A8BA8 */ // False False
//  void False
void do_end_();
		/* 802A8BAC */ // False False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
void do_tag_(u32, void const*, u32);
	};

	struct TResource {
		/* 802A8CDC */ // False False
//  u32 False
//  u32 False
//  bool* False
// 	 bool False
void toMessageIndex_messageID(u32, u32, bool*) const;
	};

	struct TResourceContainer {
		struct TCResource {
			/* 802A8F6C */ // False False
//  u16 False
void Get_groupID(u16);
		};

	};

};

// 
// Forward References:
// 


// False False
extern "C" void __dt__Q28JMessage10TReferenceFv();
// False False
//  bool False
//  u32 False
extern "C" bool do_word__Q28JMessage10TReferenceCFUl();
// True False
extern "C" void __dt__Q28JMessage10TProcessorFv();
// False False
extern "C" void reset__Q28JMessage10TProcessorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void stack_pushCurrent__Q28JMessage10TProcessorFPCc();
// True False
extern "C" void stack_popCurrent__Q28JMessage10TProcessorFv();
// False False
//  u16 False
extern "C" void getResource_groupID__Q28JMessage10TProcessorCFUs();
// False False
//  u32 False
//  u32 False
//  bool* False
// 	 bool False
extern "C" void toMessageCode_messageID__Q28JMessage10TProcessorCFUlUlPb();
// True False
//  char const* (*)(JMessage::TProcessor*) False
// 	 * False
// 		  False
// 	 char const* False
// 		 char const False
// 			 char False
// 	 JMessage::TProcessor* False
// 		 JMessage::TProcessor False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
extern "C" void on_select_begin__Q28JMessage10TProcessorFPFPQ28JMessage10TProcessor_PCcPCvPCcUl();
// True False
extern "C" void on_select_end__Q28JMessage10TProcessorFv();
// True False
extern "C" void on_select_separate__Q28JMessage10TProcessorFv();
// False False
//  void False
extern "C" void do_reset__Q28JMessage10TProcessorFv();
// True False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void do_begin__Q28JMessage10TProcessorFPCvPCc();
// True False
//  void False
extern "C" void do_end__Q28JMessage10TProcessorFv();
// True False
//  void False
//  int False
extern "C" void do_character__Q28JMessage10TProcessorFi();
// True False
//  bool False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
extern "C" bool do_tag__Q28JMessage10TProcessorFUlPCvUl();
// False False
//  void False
//  u32 False
extern "C" void do_select_begin__Q28JMessage10TProcessorFUl();
// False False
//  void False
extern "C" void do_select_end__Q28JMessage10TProcessorFv();
// False False
//  void False
extern "C" void do_select_separate__Q28JMessage10TProcessorFv();
// True False
extern "C" void on_tag___Q28JMessage10TProcessorFv();
// False False
//  void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void do_resetStatus___Q28JMessage10TProcessorFPCc();
// False False
//  bool False
extern "C" bool do_setBegin_isReady___Q28JMessage10TProcessorCFv();
// True False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
extern "C" void do_tag___Q28JMessage10TProcessorFUlPCvUl();
// True False
extern "C" void process_character___Q28JMessage10TProcessorFv();
// False False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
extern "C" void process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor();
// True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
extern "C" void process_onCharacterEnd_select___Q28JMessage10TProcessorFPQ28JMessage10TProcessor();
// True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
extern "C" void process_onSelect_limited___Q28JMessage10TProcessorFPQ28JMessage10TProcessor();
// True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
extern "C" void process_onSelect___Q28JMessage10TProcessorFPQ28JMessage10TProcessor();
// False False
//  JMessage::TReference const* False
// 	 JMessage::TReference const False
// 		 JMessage::TReference False
//  JMessage::TControl* False
// 	 JMessage::TControl False
extern "C" void __ct__Q28JMessage18TSequenceProcessorFPCQ28JMessage10TReferencePQ28JMessage8TControl();
// False False
extern "C" void __dt__Q28JMessage18TSequenceProcessorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void process__Q28JMessage18TSequenceProcessorFPCc();
// True False
extern "C" void on_isReady__Q28JMessage18TSequenceProcessorFv();
// True False
//  void const* (*)(JMessage::TSequenceProcessor const*) False
// 	 * False
// 		  False
// 	 void const* False
// 		 void const False
// 			 void False
// 	 JMessage::TSequenceProcessor const* False
// 		 JMessage::TSequenceProcessor const False
// 			 JMessage::TSequenceProcessor False
//  u32 False
extern "C" void on_jump_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessor_PCvUl();
// True False
extern "C" void on_jump_isReady__Q28JMessage18TSequenceProcessorFv();
// True False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void on_jump__Q28JMessage18TSequenceProcessorFPCvPCc();
// True False
//  void const* (*)(JMessage::TSequenceProcessor const*, u32) False
// 	 * False
// 		  False
// 	 void const* False
// 		 void const False
// 			 void False
// 	 JMessage::TSequenceProcessor const* False
// 		 JMessage::TSequenceProcessor const False
// 			 JMessage::TSequenceProcessor False
// 	 u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
extern "C" void on_branch_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessorUl_PCvPCvUl();
// True False
//  u32 False
extern "C" void on_branch_query__Q28JMessage18TSequenceProcessorFUl();
// True False
extern "C" void on_branch_queryResult__Q28JMessage18TSequenceProcessorFv();
// True False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void on_branch__Q28JMessage18TSequenceProcessorFPCvPCc();
// True False
//  bool False
extern "C" bool do_isReady__Q28JMessage18TSequenceProcessorFv();
// True False
//  bool False
extern "C" bool do_jump_isReady__Q28JMessage18TSequenceProcessorFv();
// True False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void do_jump__Q28JMessage18TSequenceProcessorFPCvPCc();
// False False
//  void False
//  u32 False
extern "C" void do_branch_query__Q28JMessage18TSequenceProcessorFUl();
// False False
//  s32 False
extern "C" s32 do_branch_queryResult__Q28JMessage18TSequenceProcessorFv();
// False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void do_branch__Q28JMessage18TSequenceProcessorFPCvPCc();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void do_resetStatus___Q28JMessage18TSequenceProcessorFPCc();
// False False
extern "C" void do_setBegin_isReady___Q28JMessage18TSequenceProcessorCFv();
// False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void do_begin___Q28JMessage18TSequenceProcessorFPCvPCc();
// False False
extern "C" void do_end___Q28JMessage18TSequenceProcessorFv();
// False False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
extern "C" void do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl();
// True False
//  u16 False
extern "C" void process_setMessageIndex_reserved___Q28JMessage18TSequenceProcessorFUs();
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u16 False
//  u16 False
extern "C" void process_setMessageCode___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUsUs();
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
extern "C" void process_onJump_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor();
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
extern "C" void process_onJump___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor();
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u32 False
extern "C" void process_onBranch_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl();
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u32 False
extern "C" void process_onBranch___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl();
// False False
//  JMessage::TReference const* False
// 	 JMessage::TReference const False
// 		 JMessage::TReference False
extern "C" void __ct__Q28JMessage19TRenderingProcessorFPCQ28JMessage10TReference();
// False False
extern "C" void __dt__Q28JMessage19TRenderingProcessorFv();
// False False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void process__Q28JMessage19TRenderingProcessorFPCc();
// False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
extern "C" void do_begin___Q28JMessage19TRenderingProcessorFPCvPCc();
// False False
//  void False
extern "C" void do_end___Q28JMessage19TRenderingProcessorFv();
// False False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
extern "C" void do_tag___Q28JMessage19TRenderingProcessorFUlPCvUl();
// True False
//  u32 False
extern "C" void on_message__Q28JMessage10TProcessorCFUl();
// True False
//  u32 False
extern "C" void getMessageText_messageCode__Q28JMessage10TProcessorCFUl();
extern "C" extern void* __vt__Q28JMessage19TRenderingProcessor[16];
extern "C" extern void* __vt__Q28JMessage18TSequenceProcessor[22];
extern "C" extern void* __vt__Q28JMessage10TProcessor[16];
extern "C" extern void* __vt__Q28JMessage10TReference[4 + 1 /* padding */];

// 
// External References:
// 

// False False
//  void False
//  void* False
// 	 void False
void operator delete(void*);

// False False
//  JMessage::TProcessor const* False
// 	 JMessage::TProcessor const False
// 		 JMessage::TProcessor False
//  u16 False
//  u16 False
extern "C" void setMessageCode_inSequence___Q28JMessage8TControlFPCQ28JMessage10TProcessorUsUs();
// False False
//  u32 False
//  u32 False
//  bool* False
// 	 bool False
extern "C" void toMessageIndex_messageID__Q28JMessage9TResourceCFUlUlPb();
// False False
//  u16 False
extern "C" void Get_groupID__Q38JMessage18TResourceContainer10TCResourceFUs();
// False False
//  void False
//  void* False
// 	 void False
extern "C" void __dl__FPv();
// False False
extern "C" void _savegpr_26();
// False False
extern "C" void _savegpr_28();
// False False
extern "C" void _savegpr_29();
// False False
extern "C" void _restgpr_26();
// False False
extern "C" void _restgpr_28();
// False False
extern "C" void _restgpr_29();

// 
// Declarations:
// 

/* ############################################################################################## */
/* 803C9B70-803C9B94 0024+00 s=1 e=0 z=0  None .data      @1418                                                        */
SECTION_DATA static void* lit_1418[9] = {
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0x104),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0xE0),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0xD4),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0xC0),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0xAC),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0x98),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0x128),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0x128),
	(void*)(((char*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl)+0x48),
};

/* 803C9B94-803C9BD4 0040+00 s=2 e=0 z=0  None .data      __vt__Q28JMessage19TRenderingProcessor                       */
SECTION_DATA void* __vt__Q28JMessage19TRenderingProcessor[16] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__Q28JMessage19TRenderingProcessorFv,
	(void*)do_reset__Q28JMessage10TProcessorFv,
	(void*)do_begin__Q28JMessage10TProcessorFPCvPCc,
	(void*)do_end__Q28JMessage10TProcessorFv,
	(void*)do_character__Q28JMessage10TProcessorFi,
	(void*)do_tag__Q28JMessage10TProcessorFUlPCvUl,
	(void*)do_select_begin__Q28JMessage10TProcessorFUl,
	(void*)do_select_end__Q28JMessage10TProcessorFv,
	(void*)do_select_separate__Q28JMessage10TProcessorFv,
	(void*)do_resetStatus___Q28JMessage10TProcessorFPCc,
	(void*)do_setBegin_isReady___Q28JMessage10TProcessorCFv,
	(void*)do_begin___Q28JMessage19TRenderingProcessorFPCvPCc,
	(void*)do_end___Q28JMessage19TRenderingProcessorFv,
	(void*)do_tag___Q28JMessage19TRenderingProcessorFUlPCvUl,
};

/* 803C9BD4-803C9C2C 0058+00 s=2 e=0 z=0  None .data      __vt__Q28JMessage18TSequenceProcessor                        */
SECTION_DATA void* __vt__Q28JMessage18TSequenceProcessor[22] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__Q28JMessage18TSequenceProcessorFv,
	(void*)do_reset__Q28JMessage10TProcessorFv,
	(void*)do_begin__Q28JMessage10TProcessorFPCvPCc,
	(void*)do_end__Q28JMessage10TProcessorFv,
	(void*)do_character__Q28JMessage10TProcessorFi,
	(void*)do_tag__Q28JMessage10TProcessorFUlPCvUl,
	(void*)do_select_begin__Q28JMessage10TProcessorFUl,
	(void*)do_select_end__Q28JMessage10TProcessorFv,
	(void*)do_select_separate__Q28JMessage10TProcessorFv,
	(void*)do_resetStatus___Q28JMessage18TSequenceProcessorFPCc,
	(void*)do_setBegin_isReady___Q28JMessage18TSequenceProcessorCFv,
	(void*)do_begin___Q28JMessage18TSequenceProcessorFPCvPCc,
	(void*)do_end___Q28JMessage18TSequenceProcessorFv,
	(void*)do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl,
	(void*)do_isReady__Q28JMessage18TSequenceProcessorFv,
	(void*)do_jump_isReady__Q28JMessage18TSequenceProcessorFv,
	(void*)do_jump__Q28JMessage18TSequenceProcessorFPCvPCc,
	(void*)do_branch_query__Q28JMessage18TSequenceProcessorFUl,
	(void*)do_branch_queryResult__Q28JMessage18TSequenceProcessorFv,
	(void*)do_branch__Q28JMessage18TSequenceProcessorFPCvPCc,
};

/* 803C9C2C-803C9C6C 0040+00 s=3 e=0 z=0  None .data      __vt__Q28JMessage10TProcessor                                */
SECTION_DATA void* __vt__Q28JMessage10TProcessor[16] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__Q28JMessage10TProcessorFv,
	(void*)do_reset__Q28JMessage10TProcessorFv,
	(void*)do_begin__Q28JMessage10TProcessorFPCvPCc,
	(void*)do_end__Q28JMessage10TProcessorFv,
	(void*)do_character__Q28JMessage10TProcessorFi,
	(void*)do_tag__Q28JMessage10TProcessorFUlPCvUl,
	(void*)do_select_begin__Q28JMessage10TProcessorFUl,
	(void*)do_select_end__Q28JMessage10TProcessorFv,
	(void*)do_select_separate__Q28JMessage10TProcessorFv,
	(void*)do_resetStatus___Q28JMessage10TProcessorFPCc,
	(void*)do_setBegin_isReady___Q28JMessage10TProcessorCFv,
	(void*)NULL,
	(void*)NULL,
	(void*)NULL,
};

/* 803C9C6C-803C9C80 0010+04 s=1 e=2 z=0  None .data      __vt__Q28JMessage10TReference                                */
SECTION_DATA void* __vt__Q28JMessage10TReference[4 + 1 /* padding */] = {
	(void*)NULL /* RTTI */,
	(void*)NULL,
	(void*)__dt__Q28JMessage10TReferenceFv,
	(void*)do_word__Q28JMessage10TReferenceCFUl,
	/* padding */
	NULL,
};

/* 802A7AF8-802A7B40 0048+00 s=1 e=2 z=0  None .text      __dt__Q28JMessage10TReferenceFv                              */
//	802A7B10: 803C9C6C (__vt__Q28JMessage10TReference)
//	802A7B14: 803C9C6C (__vt__Q28JMessage10TReference)
//	802A7B24: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JMessage::TReference::~TReference() {
	nofralloc
#include "asm/JSystem/JMessage/processor/__dt__Q28JMessage10TReferenceFv.s"
}
#pragma pop


/* 802A7B40-802A7B48 0008+00 s=1 e=2 z=0  None .text      do_word__Q28JMessage10TReferenceCFUl                         */
// False False
//  bool False
//  u32 False
bool JMessage::TReference::do_word(u32 param_0) const {
	return false;
}


/* 802A7B48-802A7B90 0048+00 s=3 e=0 z=0  None .text      __dt__Q28JMessage10TProcessorFv                              */
//	802A7B60: 803C9C2C (__vt__Q28JMessage10TProcessor)
//	802A7B64: 803C9C2C (__vt__Q28JMessage10TProcessor)
//	802A7B74: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm JMessage::TProcessor::~TProcessor() {
	nofralloc
#include "asm/JSystem/JMessage/processor/__dt__Q28JMessage10TProcessorFv.s"
}
#pragma pop


/* 802A7B90-802A7BF8 0068+00 s=0 e=1 z=0  None .text      reset__Q28JMessage10TProcessorFv                             */
//	802A7BB0: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A7BB4: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JMessage::TProcessor::reset() {
	nofralloc
#include "asm/JSystem/JMessage/processor/reset__Q28JMessage10TProcessorFv.s"
}
#pragma pop


/* 802A7BF8-802A7C30 0038+00 s=1 e=8 z=0  None .text      stack_pushCurrent__Q28JMessage10TProcessorFPCc               */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JMessage::TProcessor::stack_pushCurrent(char const* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/stack_pushCurrent__Q28JMessage10TProcessorFPCc.s"
}
#pragma pop


/* 802A7C30-802A7C54 0024+00 s=1 e=0 z=0  None .text      stack_popCurrent__Q28JMessage10TProcessorFv                  */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TProcessor::stack_popCurrent() {
	nofralloc
#include "asm/JSystem/JMessage/processor/stack_popCurrent__Q28JMessage10TProcessorFv.s"
}
#pragma pop


/* 802A7C54-802A7CD4 0080+00 s=1 e=1 z=0  None .text      getResource_groupID__Q28JMessage10TProcessorCFUs             */
//	802A7CB8: 802A8F6C (Get_groupID__Q38JMessage18TResourceContainer10TCResourceFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u16 False
asm void JMessage::TProcessor::getResource_groupID(u16 param_0) const {
	nofralloc
#include "asm/JSystem/JMessage/processor/getResource_groupID__Q28JMessage10TProcessorCFUs.s"
}
#pragma pop


/* 802A7CD4-802A7E38 0164+00 s=0 e=1 z=0  None .text      toMessageCode_messageID__Q28JMessage10TProcessorCFUlUlPb     */
//	802A7CE4: 803621D0 (_savegpr_26)
//	802A7D08: 802A8CDC (toMessageIndex_messageID__Q28JMessage9TResourceCFUlUlPb)
//	802A7DC8: 802A8CDC (toMessageIndex_messageID__Q28JMessage9TResourceCFUlUlPb)
//	802A7E24: 8036221C (_restgpr_26)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  u32 False
//  bool* False
// 	 bool False
asm void JMessage::TProcessor::toMessageCode_messageID(u32 param_0, u32 param_1, bool* param_2) const {
	nofralloc
#include "asm/JSystem/JMessage/processor/toMessageCode_messageID__Q28JMessage10TProcessorCFUlUlPb.s"
}
#pragma pop


/* 802A7E38-802A7EDC 00A4+00 s=1 e=0 z=0  None .text      on_select_begin__Q28JMessage10TProcessorFPFPQ28JMessage10TProcessor_PCcPCvPCcUl */
//	802A7E60: 802A82F4 (process_onCharacterEnd_select___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A7E64: 802A82F4 (process_onCharacterEnd_select___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  char const* (*)(JMessage::TProcessor*) False
// 	 * False
// 		  False
// 	 char const* False
// 		 char const False
// 			 char False
// 	 JMessage::TProcessor* False
// 		 JMessage::TProcessor False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
//  u32 False
asm void JMessage::TProcessor::on_select_begin(char const* (*)(JMessage::TProcessor*), void const* param_1, char const* param_2, u32 param_3) {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_select_begin__Q28JMessage10TProcessorFPFPQ28JMessage10TProcessor_PCcPCvPCcUl.s"
}
#pragma pop


/* 802A7EDC-802A7F34 0058+00 s=1 e=0 z=0  None .text      on_select_end__Q28JMessage10TProcessorFv                     */
//	802A7EE8: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A7EEC: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TProcessor::on_select_end() {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_select_end__Q28JMessage10TProcessorFv.s"
}
#pragma pop


/* 802A7F34-802A7FC0 008C+00 s=1 e=0 z=0  None .text      on_select_separate__Q28JMessage10TProcessorFv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TProcessor::on_select_separate() {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_select_separate__Q28JMessage10TProcessorFv.s"
}
#pragma pop


/* 802A7FC0-802A7FC4 0004+00 s=3 e=2 z=0  None .text      do_reset__Q28JMessage10TProcessorFv                          */
// False False
//  void False
void JMessage::TProcessor::do_reset() {
	/* empty function */
}


/* 802A7FC4-802A7FC8 0004+00 s=3 e=0 z=0  None .text      do_begin__Q28JMessage10TProcessorFPCvPCc                     */
// True False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void JMessage::TProcessor::do_begin(void const* param_0, char const* param_1) {
	/* empty function */
}


/* 802A7FC8-802A7FCC 0004+00 s=3 e=0 z=0  None .text      do_end__Q28JMessage10TProcessorFv                            */
// True False
//  void False
void JMessage::TProcessor::do_end() {
	/* empty function */
}


/* 802A7FCC-802A7FD0 0004+00 s=3 e=0 z=0  None .text      do_character__Q28JMessage10TProcessorFi                      */
// True False
//  void False
//  int False
void JMessage::TProcessor::do_character(int param_0) {
	/* empty function */
}


/* 802A7FD0-802A7FD8 0008+00 s=3 e=0 z=0  None .text      do_tag__Q28JMessage10TProcessorFUlPCvUl                      */
// True False
//  bool False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
bool JMessage::TProcessor::do_tag(u32 param_0, void const* param_1, u32 param_2) {
	return false;
}


/* 802A7FD8-802A7FDC 0004+00 s=3 e=6 z=0  None .text      do_select_begin__Q28JMessage10TProcessorFUl                  */
// False False
//  void False
//  u32 False
void JMessage::TProcessor::do_select_begin(u32 param_0) {
	/* empty function */
}


/* 802A7FDC-802A7FE0 0004+00 s=3 e=6 z=0  None .text      do_select_end__Q28JMessage10TProcessorFv                     */
// False False
//  void False
void JMessage::TProcessor::do_select_end() {
	/* empty function */
}


/* 802A7FE0-802A7FE4 0004+00 s=3 e=6 z=0  None .text      do_select_separate__Q28JMessage10TProcessorFv                */
// False False
//  void False
void JMessage::TProcessor::do_select_separate() {
	/* empty function */
}


/* 802A7FE4-802A8084 00A0+00 s=1 e=0 z=0  None .text      on_tag___Q28JMessage10TProcessorFv                           */
//	802A7FF4: 803621D8 (_savegpr_28)
//	802A8070: 80362224 (_restgpr_28)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TProcessor::on_tag_() {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_tag___Q28JMessage10TProcessorFv.s"
}
#pragma pop


/* 802A8084-802A8088 0004+00 s=2 e=4 z=0  None .text      do_resetStatus___Q28JMessage10TProcessorFPCc                 */
// False False
//  void False
//  char const* False
// 	 char const False
// 		 char False
void JMessage::TProcessor::do_resetStatus_(char const* param_0) {
	/* empty function */
}


/* 802A8088-802A8090 0008+00 s=2 e=4 z=0  None .text      do_setBegin_isReady___Q28JMessage10TProcessorCFv             */
// False False
//  bool False
bool JMessage::TProcessor::do_setBegin_isReady_() const {
	return true;
}


/* 802A8090-802A81EC 015C+00 s=2 e=0 z=0  None .text      do_tag___Q28JMessage10TProcessorFUlPCvUl                     */
//	802A8118: 802A7BF8 (stack_pushCurrent__Q28JMessage10TProcessorFPCc)
//	802A8124: 802A8C24 (on_message__Q28JMessage10TProcessorCFUl)
//	802A8130: 802A7BF8 (stack_pushCurrent__Q28JMessage10TProcessorFPCc)
//	802A8158: 802A7BF8 (stack_pushCurrent__Q28JMessage10TProcessorFPCc)
//	802A81AC: 802A7BF8 (stack_pushCurrent__Q28JMessage10TProcessorFPCc)
//	802A81B4: 802A833C (process_onSelect_limited___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A81B8: 802A833C (process_onSelect_limited___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A81C0: 802A7E38 (on_select_begin__Q28JMessage10TProcessorFPFPQ28JMessage10TProcessor_PCcPCvPCcUl)
//	802A81C8: 802A8358 (process_onSelect___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A81CC: 802A8358 (process_onSelect___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A81D4: 802A7E38 (on_select_begin__Q28JMessage10TProcessorFPFPQ28JMessage10TProcessor_PCcPCvPCcUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
asm void JMessage::TProcessor::do_tag_(u32 param_0, void const* param_1, u32 param_2) {
	nofralloc
#include "asm/JSystem/JMessage/processor/do_tag___Q28JMessage10TProcessorFUlPCvUl.s"
}
#pragma pop


/* 802A81EC-802A828C 00A0+00 s=2 e=0 z=0  None .text      process_character___Q28JMessage10TProcessorFv                */
//	802A8258: 802A7FE4 (on_tag___Q28JMessage10TProcessorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TProcessor::process_character_() {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_character___Q28JMessage10TProcessorFv.s"
}
#pragma pop


/* 802A828C-802A82F4 0068+00 s=6 e=6 z=0  None .text      process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor */
//	802A82AC: 802A7C30 (stack_popCurrent__Q28JMessage10TProcessorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
asm void JMessage::TProcessor::process_onCharacterEnd_normal_(JMessage::TProcessor* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor.s"
}
#pragma pop


/* 802A82F4-802A833C 0048+00 s=1 e=0 z=0  None .text      process_onCharacterEnd_select___Q28JMessage10TProcessorFPQ28JMessage10TProcessor */
//	802A8318: 802A7F34 (on_select_separate__Q28JMessage10TProcessorFv)
//	802A8324: 802A7EDC (on_select_end__Q28JMessage10TProcessorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
asm void JMessage::TProcessor::process_onCharacterEnd_select_(JMessage::TProcessor* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_onCharacterEnd_select___Q28JMessage10TProcessorFPQ28JMessage10TProcessor.s"
}
#pragma pop


/* 802A833C-802A8358 001C+00 s=1 e=0 z=0  None .text      process_onSelect_limited___Q28JMessage10TProcessorFPQ28JMessage10TProcessor */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
asm void JMessage::TProcessor::process_onSelect_limited_(JMessage::TProcessor* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_onSelect_limited___Q28JMessage10TProcessorFPQ28JMessage10TProcessor.s"
}
#pragma pop


/* 802A8358-802A8374 001C+00 s=1 e=0 z=0  None .text      process_onSelect___Q28JMessage10TProcessorFPQ28JMessage10TProcessor */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TProcessor* False
// 	 JMessage::TProcessor False
asm void JMessage::TProcessor::process_onSelect_(JMessage::TProcessor* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_onSelect___Q28JMessage10TProcessorFPQ28JMessage10TProcessor.s"
}
#pragma pop


/* 802A8374-802A83B8 0044+00 s=0 e=2 z=0  None .text      __ct__Q28JMessage18TSequenceProcessorFPCQ28JMessage10TReferencePQ28JMessage8TControl */
//	802A8374: 803C9C2C (__vt__Q28JMessage10TProcessor)
//	802A8378: 803C9C2C (__vt__Q28JMessage10TProcessor)
//	802A8394: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A8398: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A83A0: 803C9BD4 (__vt__Q28JMessage18TSequenceProcessor)
//	802A83A4: 803C9BD4 (__vt__Q28JMessage18TSequenceProcessor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JMessage::TReference const* False
// 	 JMessage::TReference const False
// 		 JMessage::TReference False
//  JMessage::TControl* False
// 	 JMessage::TControl False
asm JMessage::TSequenceProcessor::TSequenceProcessor(JMessage::TReference const* param_0, JMessage::TControl* param_1) {
	nofralloc
#include "asm/JSystem/JMessage/processor/__ct__Q28JMessage18TSequenceProcessorFPCQ28JMessage10TReferencePQ28JMessage8TControl.s"
}
#pragma pop


/* 802A83B8-802A8418 0060+00 s=1 e=2 z=0  None .text      __dt__Q28JMessage18TSequenceProcessorFv                      */
//	802A83D8: 803C9BD4 (__vt__Q28JMessage18TSequenceProcessor)
//	802A83DC: 803C9BD4 (__vt__Q28JMessage18TSequenceProcessor)
//	802A83E8: 802A7B48 (__dt__Q28JMessage10TProcessorFv)
//	802A83F8: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JMessage::TSequenceProcessor::~TSequenceProcessor() {
	nofralloc
#include "asm/JSystem/JMessage/processor/__dt__Q28JMessage18TSequenceProcessorFv.s"
}
#pragma pop


/* 802A8418-802A85A4 018C+00 s=0 e=1 z=0  None .text      process__Q28JMessage18TSequenceProcessorFPCc                 */
//	802A8458: 802A85E4 (on_jump_isReady__Q28JMessage18TSequenceProcessorFv)
//	802A8498: 802A8610 (on_jump__Q28JMessage18TSequenceProcessorFPCvPCc)
//	802A84A4: 802A86D4 (on_branch_queryResult__Q28JMessage18TSequenceProcessorFv)
//	802A8520: 802A8700 (on_branch__Q28JMessage18TSequenceProcessorFPCvPCc)
//	802A8564: 802A85A4 (on_isReady__Q28JMessage18TSequenceProcessorFv)
//	802A857C: 802A81EC (process_character___Q28JMessage10TProcessorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JMessage::TSequenceProcessor::process(char const* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process__Q28JMessage18TSequenceProcessorFPCc.s"
}
#pragma pop


/* 802A85A4-802A85D0 002C+00 s=1 e=0 z=0  None .text      on_isReady__Q28JMessage18TSequenceProcessorFv                */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TSequenceProcessor::on_isReady() {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_isReady__Q28JMessage18TSequenceProcessorFv.s"
}
#pragma pop


/* 802A85D0-802A85E4 0014+00 s=1 e=0 z=0  None .text      on_jump_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessor_PCvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void const* (*)(JMessage::TSequenceProcessor const*) False
// 	 * False
// 		  False
// 	 void const* False
// 		 void const False
// 			 void False
// 	 JMessage::TSequenceProcessor const* False
// 		 JMessage::TSequenceProcessor const False
// 			 JMessage::TSequenceProcessor False
//  u32 False
asm void JMessage::TSequenceProcessor::on_jump_register(void const* (*)(JMessage::TSequenceProcessor const*), u32 param_1) {
	nofralloc
#include "asm/JSystem/JMessage/processor/func_802A85D0.s"
}
#pragma pop


/* 802A85E4-802A8610 002C+00 s=1 e=0 z=0  None .text      on_jump_isReady__Q28JMessage18TSequenceProcessorFv           */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TSequenceProcessor::on_jump_isReady() {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_jump_isReady__Q28JMessage18TSequenceProcessorFv.s"
}
#pragma pop


/* 802A8610-802A8690 0080+00 s=1 e=0 z=0  None .text      on_jump__Q28JMessage18TSequenceProcessorFPCvPCc              */
//	802A8620: 803621DC (_savegpr_29)
//	802A863C: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A8640: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A867C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
asm void JMessage::TSequenceProcessor::on_jump(void const* param_0, char const* param_1) {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_jump__Q28JMessage18TSequenceProcessorFPCvPCc.s"
}
#pragma pop


/* 802A8690-802A86A0 0010+00 s=1 e=0 z=0  None .text      on_branch_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessorUl_PCvPCvUl */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void const* (*)(JMessage::TSequenceProcessor const*, u32) False
// 	 * False
// 		  False
// 	 void const* False
// 		 void const False
// 			 void False
// 	 JMessage::TSequenceProcessor const* False
// 		 JMessage::TSequenceProcessor const False
// 			 JMessage::TSequenceProcessor False
// 	 u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
asm void JMessage::TSequenceProcessor::on_branch_register(void const* (*)(JMessage::TSequenceProcessor const*, u32), void const* param_1, u32 param_2) {
	nofralloc
#include "asm/JSystem/JMessage/processor/func_802A8690.s"
}
#pragma pop


/* 802A86A0-802A86D4 0034+00 s=1 e=0 z=0  None .text      on_branch_query__Q28JMessage18TSequenceProcessorFUl          */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void JMessage::TSequenceProcessor::on_branch_query(u32 param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_branch_query__Q28JMessage18TSequenceProcessorFUl.s"
}
#pragma pop


/* 802A86D4-802A8700 002C+00 s=1 e=0 z=0  None .text      on_branch_queryResult__Q28JMessage18TSequenceProcessorFv     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
asm void JMessage::TSequenceProcessor::on_branch_queryResult() {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_branch_queryResult__Q28JMessage18TSequenceProcessorFv.s"
}
#pragma pop


/* 802A8700-802A8780 0080+00 s=1 e=0 z=0  None .text      on_branch__Q28JMessage18TSequenceProcessorFPCvPCc            */
//	802A8710: 803621DC (_savegpr_29)
//	802A872C: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A8730: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A876C: 80362228 (_restgpr_29)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
asm void JMessage::TSequenceProcessor::on_branch(void const* param_0, char const* param_1) {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_branch__Q28JMessage18TSequenceProcessorFPCvPCc.s"
}
#pragma pop


/* 802A8780-802A8788 0008+00 s=1 e=0 z=0  None .text      do_isReady__Q28JMessage18TSequenceProcessorFv                */
// True False
//  bool False
bool JMessage::TSequenceProcessor::do_isReady() {
	return true;
}


/* 802A8788-802A8790 0008+00 s=1 e=0 z=0  None .text      do_jump_isReady__Q28JMessage18TSequenceProcessorFv           */
// True False
//  bool False
bool JMessage::TSequenceProcessor::do_jump_isReady() {
	return true;
}


/* 802A8790-802A8794 0004+00 s=1 e=0 z=0  None .text      do_jump__Q28JMessage18TSequenceProcessorFPCvPCc              */
// True False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void JMessage::TSequenceProcessor::do_jump(void const* param_0, char const* param_1) {
	/* empty function */
}


/* 802A8794-802A8798 0004+00 s=1 e=2 z=0  None .text      do_branch_query__Q28JMessage18TSequenceProcessorFUl          */
// False False
//  void False
//  u32 False
void JMessage::TSequenceProcessor::do_branch_query(u32 param_0) {
	/* empty function */
}


/* 802A8798-802A87A0 0008+00 s=1 e=2 z=0  None .text      do_branch_queryResult__Q28JMessage18TSequenceProcessorFv     */
// False False
//  s32 False
s32 JMessage::TSequenceProcessor::do_branch_queryResult() {
	return -2;
}


/* 802A87A0-802A87A4 0004+00 s=1 e=2 z=0  None .text      do_branch__Q28JMessage18TSequenceProcessorFPCvPCc            */
// False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void JMessage::TSequenceProcessor::do_branch(void const* param_0, char const* param_1) {
	/* empty function */
}


/* 802A87A4-802A87C0 001C+00 s=1 e=2 z=0  None .text      do_resetStatus___Q28JMessage18TSequenceProcessorFPCc         */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JMessage::TSequenceProcessor::do_resetStatus_(char const* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/do_resetStatus___Q28JMessage18TSequenceProcessorFPCc.s"
}
#pragma pop


/* 802A87C0-802A87D0 0010+00 s=1 e=2 z=0  None .text      do_setBegin_isReady___Q28JMessage18TSequenceProcessorCFv     */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JMessage::TSequenceProcessor::do_setBegin_isReady_() const {
	nofralloc
#include "asm/JSystem/JMessage/processor/do_setBegin_isReady___Q28JMessage18TSequenceProcessorCFv.s"
}
#pragma pop


/* 802A87D0-802A87D4 0004+00 s=1 e=2 z=0  None .text      do_begin___Q28JMessage18TSequenceProcessorFPCvPCc            */
// False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void JMessage::TSequenceProcessor::do_begin_(void const* param_0, char const* param_1) {
	/* empty function */
}


/* 802A87D4-802A87E0 000C+00 s=1 e=2 z=0  None .text      do_end___Q28JMessage18TSequenceProcessorFv                   */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm void JMessage::TSequenceProcessor::do_end_() {
	nofralloc
#include "asm/JSystem/JMessage/processor/do_end___Q28JMessage18TSequenceProcessorFv.s"
}
#pragma pop


/* 802A87E0-802A892C 014C+00 s=2 e=2 z=0  None .text      do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl             */
//	802A8810: 803C9B70 (lit_1418)
//	802A8814: 803C9B70 (lit_1418)
//	802A8858: 802A89EC (process_onJump___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor)
//	802A885C: 802A89EC (process_onJump___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor)
//	802A8860: 802A85D0 (on_jump_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessor_PCvUl)
//	802A8870: 802A8090 (do_tag___Q28JMessage10TProcessorFUlPCvUl)
//	802A8878: 802A89B8 (process_onJump_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor)
//	802A887C: 802A89B8 (process_onJump_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor)
//	802A8884: 802A85D0 (on_jump_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessor_PCvUl)
//	802A888C: 802A8A18 (process_onBranch_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A8890: 802A8A18 (process_onBranch_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A8898: 802A8690 (on_branch_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessorUl_PCvPCvUl)
//	802A88A0: 802A8A50 (process_onBranch___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A88A4: 802A8A50 (process_onBranch___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A88AC: 802A8690 (on_branch_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessorUl_PCvPCvUl)
//	802A88B8: 802A86A0 (on_branch_query__Q28JMessage18TSequenceProcessorFUl)
//	802A88C0: 802A8A18 (process_onBranch_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A88C4: 802A8A18 (process_onBranch_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A88D0: 802A8690 (on_branch_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessorUl_PCvPCvUl)
//	802A88DC: 802A86A0 (on_branch_query__Q28JMessage18TSequenceProcessorFUl)
//	802A88E4: 802A8A50 (process_onBranch___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A88E8: 802A8A50 (process_onBranch___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl)
//	802A88F4: 802A8690 (on_branch_register__Q28JMessage18TSequenceProcessorFPFPCQ28JMessage18TSequenceProcessorUl_PCvPCvUl)
//	802A8900: 802A86A0 (on_branch_query__Q28JMessage18TSequenceProcessorFUl)
//	802A8910: 802A8090 (do_tag___Q28JMessage10TProcessorFUlPCvUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
asm void JMessage::TSequenceProcessor::do_tag_(u32 param_0, void const* param_1, u32 param_2) {
	nofralloc
#include "asm/JSystem/JMessage/processor/do_tag___Q28JMessage18TSequenceProcessorFUlPCvUl.s"
}
#pragma pop


/* 802A892C-802A8944 0018+00 s=1 e=0 z=0  None .text      process_setMessageIndex_reserved___Q28JMessage18TSequenceProcessorFUs */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u16 False
asm void JMessage::TSequenceProcessor::process_setMessageIndex_reserved_(u16 param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_setMessageIndex_reserved___Q28JMessage18TSequenceProcessorFUs.s"
}
#pragma pop


/* 802A8944-802A89B8 0074+00 s=4 e=0 z=0  None .text      process_setMessageCode___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUsUs */
//	802A8970: 802A892C (process_setMessageIndex_reserved___Q28JMessage18TSequenceProcessorFUs)
//	802A898C: 802A7A20 (setMessageCode_inSequence___Q28JMessage8TControlFPCQ28JMessage10TProcessorUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u16 False
//  u16 False
asm void JMessage::TSequenceProcessor::process_setMessageCode_(JMessage::TSequenceProcessor const* param_0, u16 param_1, u16 param_2) {
	nofralloc
#include "asm/JSystem/JMessage/processor/func_802A8944.s"
}
#pragma pop


/* 802A89B8-802A89EC 0034+00 s=1 e=0 z=0  None .text      process_onJump_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor */
//	802A89D8: 802A8944 (process_setMessageCode___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
asm void JMessage::TSequenceProcessor::process_onJump_limited_(JMessage::TSequenceProcessor const* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/func_802A89B8.s"
}
#pragma pop


/* 802A89EC-802A8A18 002C+00 s=1 e=0 z=0  None .text      process_onJump___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor */
//	802A8A04: 802A8944 (process_setMessageCode___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
asm void JMessage::TSequenceProcessor::process_onJump_(JMessage::TSequenceProcessor const* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_onJump___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessor.s"
}
#pragma pop


/* 802A8A18-802A8A50 0038+00 s=1 e=0 z=0  None .text      process_onBranch_limited___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl */
//	802A8A3C: 802A8944 (process_setMessageCode___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u32 False
asm void JMessage::TSequenceProcessor::process_onBranch_limited_(JMessage::TSequenceProcessor const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JMessage/processor/func_802A8A18.s"
}
#pragma pop


/* 802A8A50-802A8A84 0034+00 s=1 e=0 z=0  None .text      process_onBranch___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl */
//	802A8A70: 802A8944 (process_setMessageCode___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUsUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  JMessage::TSequenceProcessor const* False
// 	 JMessage::TSequenceProcessor const False
// 		 JMessage::TSequenceProcessor False
//  u32 False
asm void JMessage::TSequenceProcessor::process_onBranch_(JMessage::TSequenceProcessor const* param_0, u32 param_1) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process_onBranch___Q28JMessage18TSequenceProcessorFPCQ28JMessage18TSequenceProcessorUl.s"
}
#pragma pop


/* 802A8A84-802A8AC0 003C+00 s=0 e=4 z=0  None .text      __ct__Q28JMessage19TRenderingProcessorFPCQ28JMessage10TReference */
//	802A8A84: 803C9C2C (__vt__Q28JMessage10TProcessor)
//	802A8A88: 803C9C2C (__vt__Q28JMessage10TProcessor)
//	802A8AA4: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A8AA8: 802A828C (process_onCharacterEnd_normal___Q28JMessage10TProcessorFPQ28JMessage10TProcessor)
//	802A8AB0: 803C9B94 (__vt__Q28JMessage19TRenderingProcessor)
//	802A8AB4: 803C9B94 (__vt__Q28JMessage19TRenderingProcessor)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  JMessage::TReference const* False
// 	 JMessage::TReference const False
// 		 JMessage::TReference False
asm JMessage::TRenderingProcessor::TRenderingProcessor(JMessage::TReference const* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/__ct__Q28JMessage19TRenderingProcessorFPCQ28JMessage10TReference.s"
}
#pragma pop


/* 802A8AC0-802A8B20 0060+00 s=1 e=6 z=0  None .text      __dt__Q28JMessage19TRenderingProcessorFv                     */
//	802A8AE0: 803C9B94 (__vt__Q28JMessage19TRenderingProcessor)
//	802A8AE4: 803C9B94 (__vt__Q28JMessage19TRenderingProcessor)
//	802A8AF0: 802A7B48 (__dt__Q28JMessage10TProcessorFv)
//	802A8B00: 802CED3C (__dl__FPv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
asm JMessage::TRenderingProcessor::~TRenderingProcessor() {
	nofralloc
#include "asm/JSystem/JMessage/processor/__dt__Q28JMessage19TRenderingProcessorFv.s"
}
#pragma pop


/* 802A8B20-802A8BA4 0084+00 s=0 e=4 z=0  None .text      process__Q28JMessage19TRenderingProcessorFPCc                */
//	802A8B7C: 802A81EC (process_character___Q28JMessage10TProcessorFv)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  char const* False
// 	 char const False
// 		 char False
asm void JMessage::TRenderingProcessor::process(char const* param_0) {
	nofralloc
#include "asm/JSystem/JMessage/processor/process__Q28JMessage19TRenderingProcessorFPCc.s"
}
#pragma pop


/* 802A8BA4-802A8BA8 0004+00 s=1 e=4 z=0  None .text      do_begin___Q28JMessage19TRenderingProcessorFPCvPCc           */
// False False
//  void False
//  void const* False
// 	 void const False
// 		 void False
//  char const* False
// 	 char const False
// 		 char False
void JMessage::TRenderingProcessor::do_begin_(void const* param_0, char const* param_1) {
	/* empty function */
}


/* 802A8BA8-802A8BAC 0004+00 s=1 e=4 z=0  None .text      do_end___Q28JMessage19TRenderingProcessorFv                  */
// False False
//  void False
void JMessage::TRenderingProcessor::do_end_() {
	/* empty function */
}


/* 802A8BAC-802A8C24 0078+00 s=1 e=4 z=0  None .text      do_tag___Q28JMessage19TRenderingProcessorFUlPCvUl            */
//	802A8C08: 802A8090 (do_tag___Q28JMessage10TProcessorFUlPCvUl)
//	802A8C10: 802A8090 (do_tag___Q28JMessage10TProcessorFUlPCvUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// False False
//  u32 False
//  void const* False
// 	 void const False
// 		 void False
//  u32 False
asm void JMessage::TRenderingProcessor::do_tag_(u32 param_0, void const* param_1, u32 param_2) {
	nofralloc
#include "asm/JSystem/JMessage/processor/do_tag___Q28JMessage19TRenderingProcessorFUlPCvUl.s"
}
#pragma pop


/* 802A8C24-802A8C44 0020+00 s=1 e=0 z=0  None .text      on_message__Q28JMessage10TProcessorCFUl                      */
//	802A8C30: 802A8C44 (getMessageText_messageCode__Q28JMessage10TProcessorCFUl)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void JMessage::TProcessor::on_message(u32 param_0) const {
	nofralloc
#include "asm/JSystem/JMessage/processor/on_message__Q28JMessage10TProcessorCFUl.s"
}
#pragma pop


/* 802A8C44-802A8CDC 0098+00 s=1 e=0 z=0  None .text      getMessageText_messageCode__Q28JMessage10TProcessorCFUl      */
//	802A8C64: 802A7C54 (getResource_groupID__Q28JMessage10TProcessorCFUs)
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
// True False
//  u32 False
asm void JMessage::TProcessor::getMessageText_messageCode(u32 param_0) const {
	nofralloc
#include "asm/JSystem/JMessage/processor/getMessageText_messageCode__Q28JMessage10TProcessorCFUl.s"
}
#pragma pop


